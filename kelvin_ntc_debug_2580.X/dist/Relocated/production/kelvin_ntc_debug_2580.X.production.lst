

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Feb 12 22:48:36 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F2580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   110                           	psect	text96,global,reloc=2,class=CODE,delta=1
   111                           	psect	text97,global,reloc=2,class=CODE,delta=1
   112                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   113                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   114  0000                     
   115                           	psect	smallconst
   116  000600                     __psmallconst:
   117                           	opt stack 0
   118  000600  00                 	db	0
   119  000601                     _vscp_deviceURL:
   120                           	opt stack 0
   121  000601  77                 	db	119
   122  000602  77                 	db	119
   123  000603  77                 	db	119
   124  000604  2E                 	db	46
   125  000605  65                 	db	101
   126  000606  75                 	db	117
   127  000607  72                 	db	114
   128  000608  6F                 	db	111
   129  000609  73                 	db	115
   130  00060A  6F                 	db	111
   131  00060B  75                 	db	117
   132  00060C  72                 	db	114
   133  00060D  63                 	db	99
   134  00060E  65                 	db	101
   135  00060F  2E                 	db	46
   136  000610  73                 	db	115
   137  000611  65                 	db	101
   138  000612  2F                 	db	47
   139  000613  6E                 	db	110
   140  000614  74                 	db	116
   141  000615  63                 	db	99
   142  000616  31                 	db	49
   143  000617  30                 	db	48
   144  000618  4B                 	db	75
   145  000619  41                 	db	65
   146  00061A  5F                 	db	95
   147  00061B  32                 	db	50
   148  00061C  2E                 	db	46
   149  00061D  78                 	db	120
   150  00061E  6D                 	db	109
   151  00061F  6C                 	db	108
   152  000620  00                 	db	0
   153  000621                     __end_of_vscp_deviceURL:
   154                           	opt stack 0
   155  000621                     exp@coeff:
   156                           	opt stack 0
   157  000621  0000               	dw	0
   158  000623  3F80               	dw	16256
   159  000625  7218               	dw	29208
   160  000627  3F31               	dw	16177
   161  000629  FDF0               	dw	65008
   162  00062B  3E75               	dw	15989
   163  00062D  5847               	dw	22599
   164  00062F  3D63               	dw	15715
   165  000631  9558               	dw	38232
   166  000633  3C1D               	dw	15389
   167  000635  C482               	dw	50306
   168  000637  3AAE               	dw	15022
   169  000639  78A8               	dw	30888
   170  00063B  3921               	dw	14625
   171  00063D  93EF               	dw	37871
   172  00063F  3780               	dw	14208
   173  000641  92A0               	dw	37536
   174  000643  35A7               	dw	13735
   175  000645  5646               	dw	22086
   176  000647  3415               	dw	13333
   177  000649                     __end_ofexp@coeff:
   178                           	opt stack 0
   179  000649                     log@coeff:
   180                           	opt stack 0
   181  000649  0000               	dw	0
   182  00064B  0000               	dw	0
   183  00064D  FFC4               	dw	65476
   184  00064F  3F7F               	dw	16255
   185  000651  EF80               	dw	61312
   186  000653  BEFF               	dw	48895
   187  000655  E190               	dw	57744
   188  000657  3EA9               	dw	16041
   189  000659  82EC               	dw	33516
   190  00065B  BE76               	dw	48758
   191  00065D  AD82               	dw	44418
   192  00065F  3E2B               	dw	15915
   193  000661  3C0E               	dw	15374
   194  000663  BDC3               	dw	48579
   195  000665  D187               	dw	53639
   196  000667  3D13               	dw	15635
   197  000669  7841               	dw	30785
   198  00066B  BBD3               	dw	48083
   199  00066D                     __end_oflog@coeff:
   200                           	opt stack 0
   201  0000                     _ADCON0	set	4034
   202  0000                     _ADCON0bits	set	4034
   203  0000                     _ADCON1	set	4033
   204  0000                     _ADCON2	set	4032
   205  0000                     _ADRESH	set	4036
   206  0000                     _ADRESL	set	4035
   207  0000                     _BRGCON1	set	3952
   208  0000                     _BRGCON2	set	3953
   209  0000                     _BRGCON3	set	3954
   210  0000                     _BSEL0	set	3576
   211  0000                     _CANCON	set	3951
   212  0000                     _CIOCON	set	3955
   213  0000                     _ECANCON	set	3959
   214  0000                     _EEADR	set	4009
   215  0000                     _EECON1bits	set	4006
   216  0000                     _EECON2	set	4007
   217  0000                     _EEDATA	set	4008
   218  0000                     _INTCONbits	set	4082
   219  0000                     _MSEL0	set	3568
   220  0000                     _MSEL1	set	3569
   221  0000                     _MSEL2	set	3570
   222  0000                     _PIE1bits	set	3997
   223  0000                     _PIR1bits	set	3998
   224  0000                     _PIR2bits	set	4001
   225  0000                     _PORTC	set	3970
   226  0000                     _RXB1CONbits	set	3920
   227  0000                     _RXF0EIDH	set	3842
   228  0000                     _RXF0EIDL	set	3843
   229  0000                     _RXF0SIDH	set	3840
   230  0000                     _RXF0SIDL	set	3841
   231  0000                     _RXF1EIDH	set	3846
   232  0000                     _RXF1EIDL	set	3847
   233  0000                     _RXF1SIDH	set	3844
   234  0000                     _RXF1SIDL	set	3845
   235  0000                     _RXFBCON0	set	3552
   236  0000                     _RXFBCON1	set	3553
   237  0000                     _RXFBCON2	set	3554
   238  0000                     _RXFBCON3	set	3555
   239  0000                     _RXFBCON4	set	3556
   240  0000                     _RXFBCON5	set	3557
   241  0000                     _RXFBCON6	set	3558
   242  0000                     _RXFBCON7	set	3559
   243  0000                     _RXFCON0	set	3540
   244  0000                     _RXFCON1	set	3541
   245  0000                     _RXM0EIDH	set	3866
   246  0000                     _RXM0EIDL	set	3867
   247  0000                     _RXM0SIDH	set	3864
   248  0000                     _RXM0SIDL	set	3865
   249  0000                     _RXM1EIDH	set	3870
   250  0000                     _RXM1EIDL	set	3871
   251  0000                     _RXM1SIDH	set	3868
   252  0000                     _RXM1SIDL	set	3869
   253  0000                     _T0CON	set	4053
   254  0000                     _T0CONbits	set	4053
   255  0000                     _TMR0H	set	4055
   256  0000                     _TMR0L	set	4054
   257  0000                     _TRISA	set	3986
   258  0000                     _TRISB	set	3987
   259  0000                     _TRISC	set	3988
   260  0000                     _B0RXFUL	set	28935
   261  0000                     _B0TXEN	set	28610
   262  0000                     _B1RXFUL	set	29063
   263  0000                     _B1TXEN	set	28611
   264  0000                     _B2RXFUL	set	29191
   265  0000                     _B2TXEN	set	28612
   266  0000                     _B3RXFUL	set	29319
   267  0000                     _B3TXEN	set	28613
   268  0000                     _B4RXFUL	set	29447
   269  0000                     _B4TXEN	set	28614
   270  0000                     _B5RXFUL	set	29575
   271  0000                     _B5TXEN	set	28615
   272  0000                     _FIFOEMPTY	set	31655
   273  0000                     _IRXIF	set	32039
   274  0000                     _MDSEL0	set	31678
   275  0000                     _MDSEL1	set	31679
   276  0000                     _RXB0FILHIT0	set	31488
   277  0000                     _RXB0FUL	set	31495
   278  0000                     _RXB0IF	set	32032
   279  0000                     _RXB0OVFL	set	31655
   280  0000                     _RXB1IF	set	32033
   281  0000                     _RXB1OVFL	set	31654
   282  0000                     _RXM0EXIDM	set	30923
   283  0000                     _RXM1EXIDEN	set	30955
   284  0000                     _B0CON	set	3616
   285  0000                     _B1CON	set	3632
   286  0000                     _B2CON	set	3648
   287  0000                     _B3CON	set	3664
   288  0000                     _B4CON	set	3680
   289  0000                     _B5CON	set	3696
   290  0000                     _RXB0CON	set	3936
   291  0000                     _RXB1CON	set	3920
   292  0000                     _TXB0CON	set	3904
   293  0000                     _TXB1CON	set	3888
   294  0000                     _TXB2CON	set	3872
   295                           
   296                           ; #config settings
   297  00066D  00                 	db	0	; dummy byte at the end
   298  0000                     
   299                           	psect	cinit
   300  007072                     __pcinit:
   301                           	opt stack 0
   302  007072                     start_initialization:
   303                           	opt stack 0
   304  007072                     __initialization:
   305                           	opt stack 0
   306                           
   307                           ; Clear objects allocated to BIGRAM (960 bytes)
   308  007072  EE01  F0A4         	lfsr	0,__pbssBIGRAM
   309  007076  EE13 F0C0          	lfsr	1,960
   310  00707A                     clear_0:
   311  00707A  6AEE               	clrf	postinc0,c
   312  00707C  50E5               	movf	postdec1,w,c
   313  00707E  50E1               	movf	fsr1l,w,c
   314  007080  E1FC               	bnz	clear_0
   315  007082  50E2               	movf	fsr1h,w,c
   316  007084  E1FA               	bnz	clear_0
   317                           
   318                           ; Clear objects allocated to BANK1 (110 bytes)
   319  007086  EE01  F000         	lfsr	0,__pbssBANK1
   320  00708A  0E6E               	movlw	110
   321  00708C                     clear_1:
   322  00708C  6AEE               	clrf	postinc0,c
   323  00708E  06E8               	decf	wreg,f,c
   324  007090  E1FD               	bnz	clear_1
   325                           
   326                           ; Clear objects allocated to BANK0 (22 bytes)
   327  007092  EE00  F0CB         	lfsr	0,__pbssBANK0
   328  007096  0E16               	movlw	22
   329  007098                     clear_2:
   330  007098  6AEE               	clrf	postinc0,c
   331  00709A  06E8               	decf	wreg,f,c
   332  00709C  E1FD               	bnz	clear_2
   333                           
   334                           ; Clear objects allocated to COMRAM (23 bytes)
   335  00709E  EE00  F032         	lfsr	0,__pbssCOMRAM
   336  0070A2  0E17               	movlw	23
   337  0070A4                     clear_3:
   338  0070A4  6AEE               	clrf	postinc0,c
   339  0070A6  06E8               	decf	wreg,f,c
   340  0070A8  E1FD               	bnz	clear_3
   341  0070AA                     end_of_initialization:
   342                           	opt stack 0
   343  0070AA                     __end_of__initialization:
   344                           	opt stack 0
   345  0070AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   346  0070AC  6EF8               	movwf	tblptru,c
   347  0070AE  0100               	movlb	0
   348  0070B0  EFF3  F02B         	goto	_main	;jump to C main() function
   349                           tblptru	equ	0xFF8
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1h	equ	0xFE2
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	bssCOMRAM
   357  000032                     __pbssCOMRAM:
   358                           	opt stack 0
   359  000032                     _vscp_page_select:
   360                           	opt stack 0
   361  000032                     	ds	2
   362  000034                     _vscp_timer:
   363                           	opt stack 0
   364  000034                     	ds	2
   365  000036                     _adc_series_counter:
   366                           	opt stack 0
   367  000036                     	ds	1
   368  000037                     _calibration_index:
   369                           	opt stack 0
   370  000037                     	ds	1
   371  000038                     _vscp_initledfunc:
   372                           	opt stack 0
   373  000038                     	ds	1
   374  000039                     _vscp_probe_address:
   375                           	opt stack 0
   376  000039                     	ds	1
   377  00003A                     _vscp_statuscnt:
   378                           	opt stack 0
   379  00003A                     	ds	1
   380  00003B                     _vscp_imsg:
   381                           	opt stack 0
   382  00003B                     	ds	14
   383                           tblptru	equ	0xFF8
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           postdec1	equ	0xFE5
   387                           fsr1h	equ	0xFE2
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	bssBANK0
   391  0000CB                     __pbssBANK0:
   392                           	opt stack 0
   393  0000CB                     _adc_conversion_flags:
   394                           	opt stack 0
   395  0000CB                     	ds	1
   396  0000CC                     _high_alarm:
   397                           	opt stack 0
   398  0000CC                     	ds	1
   399  0000CD                     _low_alarm:
   400                           	opt stack 0
   401  0000CD                     	ds	1
   402  0000CE                     _sendTimer:
   403                           	opt stack 0
   404  0000CE                     	ds	1
   405  0000CF                     _vscp_alarmstatus:
   406                           	opt stack 0
   407  0000CF                     	ds	1
   408  0000D0                     _vscp_guid_reset:
   409                           	opt stack 0
   410  0000D0                     	ds	1
   411  0000D1                     _vscp_initbtncnt:
   412                           	opt stack 0
   413  0000D1                     	ds	1
   414  0000D2                     _vscp_nickname:
   415                           	opt stack 0
   416  0000D2                     	ds	1
   417  0000D3                     _vscp_node_state:
   418                           	opt stack 0
   419  0000D3                     	ds	1
   420  0000D4                     _vscp_omsg:
   421                           	opt stack 0
   422  0000D4                     	ds	13
   423                           tblptru	equ	0xFF8
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1h	equ	0xFE2
   428                           fsr1l	equ	0xFE1
   429                           
   430                           	psect	bssBANK1
   431  000100                     __pbssBANK1:
   432                           	opt stack 0
   433  000100                     _current_temp:
   434                           	opt stack 0
   435  000100                     	ds	12
   436  00010C                     _seconds_temp:
   437                           	opt stack 0
   438  00010C                     	ds	6
   439  000112                     _measurement_clock:
   440                           	opt stack 0
   441  000112                     	ds	4
   442  000116                     _timeout_clock:
   443                           	opt stack 0
   444  000116                     	ds	4
   445  00011A                     _errno:
   446                           	opt stack 0
   447  00011A                     	ds	2
   448  00011C                     _vscp_configtimer:
   449                           	opt stack 0
   450  00011C                     	ds	2
   451  00011E                     __ECANRxFilterHitInfo:
   452                           	opt stack 0
   453  00011E                     	ds	1
   454  00011F                     _seconds:
   455                           	opt stack 0
   456  00011F                     	ds	1
   457  000120                     _vscp_errorcnt:
   458                           	opt stack 0
   459  000120                     	ds	1
   460  000121                     _vscp_hour:
   461                           	opt stack 0
   462  000121                     	ds	1
   463  000122                     _vscp_minute:
   464                           	opt stack 0
   465  000122                     	ds	1
   466  000123                     _vscp_node_substate:
   467                           	opt stack 0
   468  000123                     	ds	1
   469  000124                     _vscp_probe_cnt:
   470                           	opt stack 0
   471  000124                     	ds	1
   472  000125                     _vscp_second:
   473                           	opt stack 0
   474  000125                     	ds	1
   475  000126                     _sh_coefficients:
   476                           	opt stack 0
   477  000126                     	ds	72
   478                           tblptru	equ	0xFF8
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           postdec1	equ	0xFE5
   482                           fsr1h	equ	0xFE2
   483                           fsr1l	equ	0xFE1
   484                           
   485                           	psect	bssBIGRAM
   486  0001A4                     __pbssBIGRAM:
   487                           	opt stack 0
   488  0001A4                     _adc:
   489                           	opt stack 0
   490  0001A4                     	ds	960
   491                           tblptru	equ	0xFF8
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1h	equ	0xFE2
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	cstackBANK1
   499  00016E                     __pcstackBANK1:
   500                           	opt stack 0
   501  00016E                     doWork@Rinf:
   502                           	opt stack 0
   503                           
   504                           ; 4 bytes @ 0x0
   505  00016E                     	ds	4
   506  000172                     doWork@calVoltage:
   507                           	opt stack 0
   508                           
   509                           ; 4 bytes @ 0x4
   510  000172                     	ds	4
   511  000176                     _doWork$2193:
   512                           	opt stack 0
   513                           
   514                           ; 4 bytes @ 0x8
   515  000176                     	ds	4
   516  00017A                     _doWork$2194:
   517                           	opt stack 0
   518                           
   519                           ; 4 bytes @ 0xC
   520  00017A                     	ds	4
   521  00017E                     _doWork$2195:
   522                           	opt stack 0
   523                           
   524                           ; 4 bytes @ 0x10
   525  00017E                     	ds	4
   526  000182                     _doWork$2196:
   527                           	opt stack 0
   528                           
   529                           ; 4 bytes @ 0x14
   530  000182                     	ds	4
   531  000186                     _doWork$2197:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x18
   535  000186                     	ds	4
   536  00018A                     _doWork$2198:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x1C
   540  00018A                     	ds	4
   541  00018E                     doWork@v:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0x20
   545  00018E                     	ds	4
   546  000192                     doWork@B:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x24
   550  000192                     	ds	2
   551  000194                     doWork@resistance:
   552                           	opt stack 0
   553                           
   554                           ; 4 bytes @ 0x26
   555  000194                     	ds	4
   556  000198                     doWork@avarage:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x2A
   560  000198                     	ds	4
   561  00019C                     doWork@j:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x2E
   565  00019C                     	ds	1
   566  00019D                     doWork@setpoint:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x2F
   570  00019D                     	ds	2
   571  00019F                     doWork@temp:
   572                           	opt stack 0
   573                           
   574                           ; 4 bytes @ 0x31
   575  00019F                     	ds	4
   576  0001A3                     doWork@i:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x35
   580  0001A3                     	ds	1
   581                           tblptru	equ	0xFF8
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           postdec1	equ	0xFE5
   585                           fsr1h	equ	0xFE2
   586                           fsr1l	equ	0xFE1
   587                           
   588                           	psect	cstackBANK0
   589  000060                     __pcstackBANK0:
   590                           	opt stack 0
   591  000060                     getCANFrame@pid:
   592                           	opt stack 0
   593  000060                     vscp_writeStdReg@code:
   594                           	opt stack 0
   595  000060                     ___fldiv@f3:
   596                           	opt stack 0
   597  000060                     ECANSendMessage@pb:
   598                           	opt stack 0
   599                           
   600                           ; 18 bytes @ 0x0
   601  000060                     	ds	2
   602  000062                     getCANFrame@pdlc:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x2
   606  000062                     	ds	2
   607  000064                     ___fldiv@cntr:
   608                           	opt stack 0
   609  000064                     getCANFrame@pdata:
   610                           	opt stack 0
   611  000064                     vscp_writeStdReg@code_1042:
   612                           	opt stack 0
   613                           
   614                           ; 4 bytes @ 0x4
   615  000064                     	ds	1
   616  000065                     ___fldiv@exp:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x5
   620  000065                     	ds	1
   621  000066                     ___fldiv@sign:
   622                           	opt stack 0
   623  000066                     getVSCPFrame@pvscpclass:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x6
   627  000066                     	ds	1
   628  000067                     ?___flmul:
   629                           	opt stack 0
   630  000067                     ___flmul@f1:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x7
   634  000067                     	ds	1
   635  000068                     vscp_writeStdReg@idx:
   636                           	opt stack 0
   637  000068                     getVSCPFrame@pvscptype:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x8
   641  000068                     	ds	1
   642  000069                     vscp_writeStdReg@idx_1044:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x9
   646  000069                     	ds	1
   647  00006A                     vscp_writeStdReg@rv:
   648                           	opt stack 0
   649  00006A                     getVSCPFrame@pNodeId:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0xA
   653  00006A                     	ds	1
   654  00006B                     vscp_writeStdReg@reg:
   655                           	opt stack 0
   656  00006B                     ___flmul@f2:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0xB
   660  00006B                     	ds	1
   661  00006C                     vscp_writeRegister@reg:
   662                           	opt stack 0
   663  00006C                     getVSCPFrame@pPriority:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0xC
   667  00006C                     	ds	2
   668  00006E                     getVSCPFrame@pSize:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0xE
   672  00006E                     	ds	1
   673  00006F                     ??___flmul:
   674                           
   675                           ; 0 bytes @ 0xF
   676  00006F                     	ds	1
   677  000070                     getVSCPFrame@pData:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x10
   681  000070                     	ds	2
   682  000072                     ??_getVSCPFrame:
   683  000072                     ECANSendMessage@mode:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x12
   687  000072                     	ds	1
   688  000073                     ECANSendMessage@buffers:
   689                           	opt stack 0
   690  000073                     ___flmul@exp:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x13
   694  000073                     	ds	1
   695  000074                     ECANSendMessage@j:
   696                           	opt stack 0
   697  000074                     ___flmul@f3_as_product:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x14
   701  000074                     	ds	1
   702  000075                     ECANSendMessage@tempBSEL0:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x15
   706  000075                     	ds	1
   707  000076                     ECANSendMessage@tempPtr:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x16
   711  000076                     	ds	2
   712  000078                     ECANSendMessage@temp:
   713                           	opt stack 0
   714  000078                     ___flmul@cntr:
   715                           	opt stack 0
   716  000078                     getVSCPFrame@id:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0x18
   720  000078                     	ds	1
   721  000079                     ECANSendMessage@i:
   722                           	opt stack 0
   723  000079                     ___flmul@sign:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x19
   727  000079                     	ds	1
   728  00007A                     ?___flneg:
   729                           	opt stack 0
   730  00007A                     ?___fltol:
   731                           	opt stack 0
   732  00007A                     ECANSendMessage@ptr:
   733                           	opt stack 0
   734  00007A                     ___flneg@f1:
   735                           	opt stack 0
   736  00007A                     ___fltol@f1:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x1A
   740  00007A                     	ds	2
   741  00007C                     sendCANFrame@id:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x1C
   745  00007C                     	ds	2
   746  00007E                     ??___fltol:
   747  00007E                     ?___fladd:
   748                           	opt stack 0
   749  00007E                     ___fladd@f1:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x1E
   753  00007E                     	ds	2
   754  000080                     sendCANFrame@dlc:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x20
   758  000080                     	ds	1
   759  000081                     sendCANFrame@pdata:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x21
   763  000081                     	ds	1
   764  000082                     ___fltol@sign1:
   765                           	opt stack 0
   766  000082                     ___fladd@f2:
   767                           	opt stack 0
   768                           
   769                           ; 4 bytes @ 0x22
   770  000082                     	ds	1
   771  000083                     ___fltol@exp1:
   772                           	opt stack 0
   773  000083                     sendVSCPFrame@vscpclass:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x23
   777  000083                     	ds	1
   778  000084                     ?___aldiv:
   779                           	opt stack 0
   780  000084                     ___aldiv@dividend:
   781                           	opt stack 0
   782                           
   783                           ; 4 bytes @ 0x24
   784  000084                     	ds	1
   785  000085                     sendVSCPFrame@vscptype:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x25
   789  000085                     	ds	1
   790  000086                     ??___fladd:
   791  000086                     sendVSCPFrame@nodeid:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x26
   795  000086                     	ds	1
   796  000087                     sendVSCPFrame@priority:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x27
   800  000087                     	ds	1
   801  000088                     sendVSCPFrame@size:
   802                           	opt stack 0
   803  000088                     ___aldiv@divisor:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0x28
   807  000088                     	ds	1
   808  000089                     sendVSCPFrame@pData:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x29
   812  000089                     	ds	1
   813  00008A                     ___fladd@sign:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x2A
   817  00008A                     	ds	1
   818  00008B                     ??_sendVSCPFrame:
   819  00008B                     ___fladd@exp2:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x2B
   823  00008B                     	ds	1
   824  00008C                     ___aldiv@counter:
   825                           	opt stack 0
   826  00008C                     ___fladd@exp1:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x2C
   830  00008C                     	ds	1
   831  00008D                     ?_Celsius2Kelvin:
   832                           	opt stack 0
   833  00008D                     ?_Celsius2Fahrenheit:
   834                           	opt stack 0
   835  00008D                     ?___flsub:
   836                           	opt stack 0
   837  00008D                     ?_eval_poly:
   838                           	opt stack 0
   839  00008D                     ___aldiv@sign:
   840                           	opt stack 0
   841  00008D                     Celsius2Fahrenheit@tc:
   842                           	opt stack 0
   843  00008D                     Celsius2Kelvin@tc:
   844                           	opt stack 0
   845  00008D                     ___flsub@f1:
   846                           	opt stack 0
   847  00008D                     eval_poly@x:
   848                           	opt stack 0
   849                           
   850                           ; 4 bytes @ 0x2D
   851  00008D                     	ds	1
   852  00008E                     ___aldiv@quotient:
   853                           	opt stack 0
   854                           
   855                           ; 4 bytes @ 0x2E
   856  00008E                     	ds	3
   857  000091                     setEventData@v:
   858                           	opt stack 0
   859  000091                     eval_poly@d:
   860                           	opt stack 0
   861  000091                     ___flsub@f2:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x31
   865  000091                     	ds	1
   866  000092                     ?___altofl:
   867                           	opt stack 0
   868  000092                     ___altofl@c:
   869                           	opt stack 0
   870                           
   871                           ; 4 bytes @ 0x32
   872  000092                     	ds	1
   873  000093                     setEventData@unit:
   874                           	opt stack 0
   875  000093                     eval_poly@n:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x33
   879  000093                     	ds	1
   880  000094                     ??_setEventData:
   881                           
   882                           ; 0 bytes @ 0x34
   883  000094                     	ds	1
   884  000095                     ??_eval_poly:
   885                           
   886                           ; 0 bytes @ 0x35
   887  000095                     	ds	1
   888  000096                     ___altofl@sign:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x36
   892  000096                     	ds	1
   893  000097                     ?_floor:
   894                           	opt stack 0
   895  000097                     floor@x:
   896                           	opt stack 0
   897                           
   898                           ; 4 bytes @ 0x37
   899  000097                     	ds	1
   900  000098                     setEventData@newval:
   901                           	opt stack 0
   902                           
   903                           ; 4 bytes @ 0x38
   904  000098                     	ds	1
   905  000099                     eval_poly@res:
   906                           	opt stack 0
   907                           
   908                           ; 4 bytes @ 0x39
   909  000099                     	ds	2
   910  00009B                     floor@i:
   911                           	opt stack 0
   912                           
   913                           ; 4 bytes @ 0x3B
   914  00009B                     	ds	1
   915  00009C                     setEventData@ival:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x3C
   919  00009C                     	ds	1
   920  00009D                     ?_log:
   921                           	opt stack 0
   922  00009D                     ?_ldexp:
   923                           	opt stack 0
   924  00009D                     ldexp@value:
   925                           	opt stack 0
   926  00009D                     log@x:
   927                           	opt stack 0
   928                           
   929                           ; 4 bytes @ 0x3D
   930  00009D                     	ds	2
   931  00009F                     ??_sendTempEvent:
   932  00009F                     ??_vscp_newNodeOnline:
   933  00009F                     vscp_sendHeartBeat@subzone:
   934                           	opt stack 0
   935  00009F                     floor@expon:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x3F
   939  00009F                     	ds	1
   940  0000A0                     ??_vscp_handleProtocolEvent:
   941  0000A0                     sendTempEvent@i:
   942                           	opt stack 0
   943  0000A0                     vscp_sendHeartBeat@zone:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x40
   947  0000A0                     	ds	1
   948  0000A1                     ??_handle_sync:
   949  0000A1                     ??_doOneSecondWork:
   950  0000A1                     ??_vscp_doOneSecondWork:
   951  0000A1                     ldexp@newexp:
   952                           	opt stack 0
   953  0000A1                     log@exponent:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x41
   957  0000A1                     	ds	2
   958  0000A3                     ??_ldexp:
   959  0000A3                     doOneSecondWork@tmp:
   960                           	opt stack 0
   961  0000A3                     handle_sync@i:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x43
   965  0000A3                     	ds	1
   966  0000A4                     doOneSecondWork@i:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x44
   970  0000A4                     	ds	1
   971  0000A5                     ?_exp:
   972                           	opt stack 0
   973  0000A5                     exp@x:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0x45
   977  0000A5                     	ds	4
   978  0000A9                     ??_exp:
   979  0000A9                     vscp_handleProtocolEvent@page_save:
   980                           	opt stack 0
   981                           
   982                           ; 2 bytes @ 0x49
   983  0000A9                     	ds	2
   984  0000AB                     vscp_handleProtocolEvent@page_save_1072:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x4B
   988  0000AB                     	ds	2
   989  0000AD                     vscp_handleProtocolEvent@offset:
   990                           	opt stack 0
   991  0000AD                     _exp$2199:
   992                           	opt stack 0
   993                           
   994                           ; 4 bytes @ 0x4D
   995  0000AD                     	ds	1
   996  0000AE                     vscp_handleProtocolEvent@pos:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x4E
  1000  0000AE                     	ds	1
  1001  0000AF                     vscp_handleProtocolEvent@bytes:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x4F
  1005  0000AF                     	ds	1
  1006  0000B0                     vscp_handleProtocolEvent@len:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x50
  1010  0000B0                     	ds	1
  1011  0000B1                     vscp_handleProtocolEvent@pos_1059:
  1012                           	opt stack 0
  1013  0000B1                     exp@exponent:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x51
  1017  0000B1                     	ds	1
  1018  0000B2                     vscp_handleProtocolEvent@len_1060:
  1019                           	opt stack 0
  1020                           
  1021                           ; 1 bytes @ 0x52
  1022  0000B2                     	ds	1
  1023  0000B3                     vscp_handleProtocolEvent@bytes_this_time:
  1024                           	opt stack 0
  1025  0000B3                     exp@sign:
  1026                           	opt stack 0
  1027                           
  1028                           ; 1 bytes @ 0x53
  1029  0000B3                     	ds	1
  1030  0000B4                     ??_doWork:
  1031  0000B4                     vscp_handleProtocolEvent@cb:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0x54
  1035  0000B4                     	ds	1
  1036  0000B5                     vscp_handleProtocolEvent@i_1071:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x55
  1040  0000B5                     	ds	1
  1041  0000B6                     vscp_handleProtocolEvent@k:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0x56
  1045  0000B6                     	ds	1
  1046  0000B7                     vscp_handleProtocolEvent@bytes_1068:
  1047                           	opt stack 0
  1048                           
  1049                           ; 1 bytes @ 0x57
  1050  0000B7                     	ds	1
  1051  0000B8                     vscp_handleProtocolEvent@i_1058:
  1052                           	opt stack 0
  1053                           
  1054                           ; 1 bytes @ 0x58
  1055  0000B8                     	ds	1
  1056  0000B9                     vscp_handleProtocolEvent@byte:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x59
  1060  0000B9                     	ds	1
  1061  0000BA                     vscp_handleProtocolEvent@i_1062:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x5A
  1065  0000BA                     	ds	1
  1066  0000BB                     vscp_handleProtocolEvent@i:
  1067                           	opt stack 0
  1068                           
  1069                           ; 1 bytes @ 0x5B
  1070  0000BB                     	ds	1
  1071  0000BC                     vscp_handleProtocolEvent@j:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x5C
  1075  0000BC                     	ds	14
  1076  0000CA                     main@i:
  1077                           	opt stack 0
  1078                           
  1079                           ; 1 bytes @ 0x6A
  1080  0000CA                     	ds	1
  1081                           tblptru	equ	0xFF8
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1h	equ	0xFE2
  1086                           fsr1l	equ	0xFE1
  1087                           
  1088                           	psect	cstackCOMRAM
  1089  000001                     __pcstackCOMRAM:
  1090                           	opt stack 0
  1091  000001                     i1WriteTimer0@timer0:
  1092                           	opt stack 0
  1093                           
  1094                           ; 2 bytes @ 0x0
  1095  000001                     	ds	2
  1096  000003                     i1WriteTimer0@timer:
  1097                           	opt stack 0
  1098                           
  1099                           ; 2 bytes @ 0x2
  1100  000003                     	ds	2
  1101  000005                     ??_interrupt_at_low_vector:
  1102                           
  1103                           ; 0 bytes @ 0x4
  1104  000005                     	ds	19
  1105  000018                     ?__ECANPointBuffer:
  1106                           	opt stack 0
  1107  000018                     ?___wmul:
  1108                           	opt stack 0
  1109  000018                     ?___awmod:
  1110                           	opt stack 0
  1111  000018                     ?___flpack:
  1112                           	opt stack 0
  1113  000018                     ?_frexp:
  1114                           	opt stack 0
  1115  000018                     ?_vscp_getFamilyCode:
  1116                           	opt stack 0
  1117  000018                     ?_vscp_getFamilyType:
  1118                           	opt stack 0
  1119  000018                     vscp_getMDF_URL@idx:
  1120                           	opt stack 0
  1121  000018                     ECANSetOperationMode@mode:
  1122                           	opt stack 0
  1123  000018                     OpenADC@config2:
  1124                           	opt stack 0
  1125  000018                     OpenTimer0@config:
  1126                           	opt stack 0
  1127  000018                     vscp_getMatrixInfo@pData:
  1128                           	opt stack 0
  1129  000018                     __CANIDToRegs@ptr:
  1130                           	opt stack 0
  1131  000018                     __RegsToCANID@ptr:
  1132                           	opt stack 0
  1133  000018                     writeEEPROM@address:
  1134                           	opt stack 0
  1135  000018                     WriteTimer0@timer0:
  1136                           	opt stack 0
  1137  000018                     ___wmul@multiplier:
  1138                           	opt stack 0
  1139  000018                     ___awmod@dividend:
  1140                           	opt stack 0
  1141  000018                     ___flpack@arg:
  1142                           	opt stack 0
  1143  000018                     ___flge@ff1:
  1144                           	opt stack 0
  1145  000018                     frexp@value:
  1146                           	opt stack 0
  1147                           
  1148                           ; 4 bytes @ 0x17
  1149  000018                     	ds	1
  1150  000019                     OpenADC@portconfig:
  1151                           	opt stack 0
  1152                           
  1153                           ; 1 bytes @ 0x18
  1154  000019                     	ds	1
  1155  00001A                     ??_OpenADC:
  1156  00001A                     vscp_getMatrixInfo@i:
  1157                           	opt stack 0
  1158  00001A                     __ECANPointBuffer@b:
  1159                           	opt stack 0
  1160  00001A                     writeEEPROM@data:
  1161                           	opt stack 0
  1162  00001A                     __RegsToCANID@val:
  1163                           	opt stack 0
  1164  00001A                     WriteTimer0@timer:
  1165                           	opt stack 0
  1166  00001A                     ___wmul@multiplicand:
  1167                           	opt stack 0
  1168  00001A                     ___awmod@divisor:
  1169                           	opt stack 0
  1170  00001A                     __CANIDToRegs@val:
  1171                           	opt stack 0
  1172                           
  1173                           ; 4 bytes @ 0x19
  1174  00001A                     	ds	1
  1175  00001B                     init_app_eeprom@i:
  1176                           	opt stack 0
  1177  00001B                     vscp_setGUID@data:
  1178                           	opt stack 0
  1179  00001B                     vscp_setUserID@data:
  1180                           	opt stack 0
  1181  00001B                     vscp_setManufacturerId@data:
  1182                           	opt stack 0
  1183  00001B                     vscp_writeNicknamePermanent@nickname:
  1184                           	opt stack 0
  1185  00001B                     vscp_setSegmentCRC@crc:
  1186                           	opt stack 0
  1187  00001B                     vscp_setControlByte@ctrl:
  1188                           	opt stack 0
  1189  00001B                     __ECANPointBuffer@pt:
  1190                           	opt stack 0
  1191                           
  1192                           ; 2 bytes @ 0x1A
  1193  00001B                     	ds	1
  1194  00001C                     ??_vscp_handleSetNickname:
  1195  00001C                     vscp_setGUID@idx:
  1196                           	opt stack 0
  1197  00001C                     vscp_setUserID@idx:
  1198                           	opt stack 0
  1199  00001C                     vscp_setManufacturerId@idx:
  1200                           	opt stack 0
  1201  00001C                     __RegsToCANID@type:
  1202                           	opt stack 0
  1203  00001C                     OpenADC@config:
  1204                           	opt stack 0
  1205  00001C                     ___awmod@counter:
  1206                           	opt stack 0
  1207  00001C                     ___flpack@exp:
  1208                           	opt stack 0
  1209  00001C                     ___wmul@product:
  1210                           	opt stack 0
  1211  00001C                     frexp@eptr:
  1212                           	opt stack 0
  1213  00001C                     ___flge@ff2:
  1214                           	opt stack 0
  1215                           
  1216                           ; 4 bytes @ 0x1B
  1217  00001C                     	ds	1
  1218  00001D                     ??__RegsToCANID:
  1219  00001D                     ___awmod@sign:
  1220                           	opt stack 0
  1221  00001D                     ___flpack@sign:
  1222                           	opt stack 0
  1223                           
  1224                           ; 1 bytes @ 0x1C
  1225  00001D                     	ds	1
  1226  00001E                     ??___flpack:
  1227  00001E                     ??_frexp:
  1228  00001E                     __CANIDToRegs@type:
  1229                           	opt stack 0
  1230  00001E                     readEEPROM@address:
  1231                           	opt stack 0
  1232                           
  1233                           ; 2 bytes @ 0x1D
  1234  00001E                     	ds	1
  1235  00001F                     ??__CANIDToRegs:
  1236  00001F                     __RegsToCANID@Value:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x1E
  1240  00001F                     	ds	1
  1241  000020                     ??___flge:
  1242  000020                     readEEPROM@data:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x1F
  1246  000020                     	ds	1
  1247  000021                     ??_vscp_check_pstorage:
  1248  000021                     ??_writeCoeffs2Ram:
  1249  000021                     ??_vscp_readAppReg:
  1250  000021                     ??_vscp_handleHeartbeat:
  1251  000021                     ?_getCalibrationValue:
  1252                           	opt stack 0
  1253  000021                     vscp_getGUID@idx:
  1254                           	opt stack 0
  1255  000021                     vscp_getUserID@idx:
  1256                           	opt stack 0
  1257  000021                     vscp_getManufacturerId@idx:
  1258                           	opt stack 0
  1259  000021                     vscp_handleDropNickname@bytes:
  1260                           	opt stack 0
  1261  000021                     ECANReceiveMessage@id:
  1262                           	opt stack 0
  1263  000021                     __CANIDToRegs@Value:
  1264                           	opt stack 0
  1265                           
  1266                           ; 2 bytes @ 0x20
  1267  000021                     	ds	1
  1268  000022                     ??_vscp_readStdReg:
  1269  000022                     ?___awtofl:
  1270                           	opt stack 0
  1271  000022                     ?___lwtofl:
  1272                           	opt stack 0
  1273  000022                     ___awtofl@c:
  1274                           	opt stack 0
  1275  000022                     ___lwtofl@c:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x21
  1279  000022                     	ds	1
  1280  000023                     ??_getCalibrationValue:
  1281  000023                     ECANReceiveMessage@data:
  1282                           	opt stack 0
  1283  000023                     writeCoeffs2Ram@c:
  1284                           	opt stack 0
  1285  000023                     ECANSendMessage@id:
  1286                           	opt stack 0
  1287                           
  1288                           ; 4 bytes @ 0x22
  1289  000023                     	ds	2
  1290  000025                     vscp_readAppReg@pos:
  1291                           	opt stack 0
  1292  000025                     vscp_readStdReg@rv:
  1293                           	opt stack 0
  1294  000025                     ECANReceiveMessage@dataLen:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x24
  1298  000025                     	ds	1
  1299  000026                     ?___fldiv:
  1300                           	opt stack 0
  1301  000026                     vscp_readAppReg@reg:
  1302                           	opt stack 0
  1303  000026                     vscp_readStdReg@reg:
  1304                           	opt stack 0
  1305  000026                     ___awtofl@sign:
  1306                           	opt stack 0
  1307  000026                     writeCoeffs2Ram@i:
  1308                           	opt stack 0
  1309  000026                     ___fldiv@f1:
  1310                           	opt stack 0
  1311                           
  1312                           ; 4 bytes @ 0x25
  1313  000026                     	ds	1
  1314  000027                     vscp_readAppReg@rv:
  1315                           	opt stack 0
  1316  000027                     ECANSendMessage@data:
  1317                           	opt stack 0
  1318  000027                     ECANReceiveMessage@msgFlags:
  1319                           	opt stack 0
  1320                           
  1321                           ; 2 bytes @ 0x26
  1322  000027                     	ds	1
  1323  000028                     vscp_readRegister@reg:
  1324                           	opt stack 0
  1325  000028                     writeCoeffs2Ram@j:
  1326                           	opt stack 0
  1327                           
  1328                           ; 2 bytes @ 0x27
  1329  000028                     	ds	1
  1330  000029                     ECANSendMessage@dataLen:
  1331                           	opt stack 0
  1332  000029                     ECANReceiveMessage@savedPtr:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x28
  1336  000029                     	ds	1
  1337  00002A                     init_app_ram@i:
  1338                           	opt stack 0
  1339  00002A                     vscp_writeAppReg@val:
  1340                           	opt stack 0
  1341  00002A                     ECANSendMessage@msgFlags:
  1342                           	opt stack 0
  1343  00002A                     ___fldiv@f2:
  1344                           	opt stack 0
  1345                           
  1346                           ; 4 bytes @ 0x29
  1347  00002A                     	ds	1
  1348  00002B                     ??_ECANSendMessage:
  1349  00002B                     vscp_writeAppReg@reg:
  1350                           	opt stack 0
  1351  00002B                     ECANReceiveMessage@i:
  1352                           	opt stack 0
  1353  00002B                     vscp_writeStdReg@value:
  1354                           	opt stack 0
  1355  00002B                     getCalibrationValue@cal:
  1356                           	opt stack 0
  1357                           
  1358                           ; 2 bytes @ 0x2A
  1359  00002B                     	ds	1
  1360  00002C                     ??_vscp_writeStdReg:
  1361  00002C                     vscp_writeAppReg@rv:
  1362                           	opt stack 0
  1363  00002C                     sendCANFrame@rv:
  1364                           	opt stack 0
  1365  00002C                     ECANReceiveMessage@mode:
  1366                           	opt stack 0
  1367                           
  1368                           ; 1 bytes @ 0x2B
  1369  00002C                     	ds	1
  1370  00002D                     getCalibrationValue@i:
  1371                           	opt stack 0
  1372  00002D                     ECANReceiveMessage@temp:
  1373                           	opt stack 0
  1374  00002D                     sendVSCPFrame@id:
  1375                           	opt stack 0
  1376                           
  1377                           ; 4 bytes @ 0x2C
  1378  00002D                     	ds	1
  1379  00002E                     ??___fldiv:
  1380  00002E                     ECANReceiveMessage@ptr:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0x2D
  1384  00002E                     	ds	2
  1385  000030                     getCANFrame@flags:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0x2F
  1389  000030                     	ds	1
  1390  000031                     vscp_writeRegister@value:
  1391                           	opt stack 0
  1392  000031                     vscp_sendEvent@rv:
  1393                           	opt stack 0
  1394  000031                     vscp_getEvent@rv:
  1395                           	opt stack 0
  1396                           
  1397                           ; 1 bytes @ 0x30
  1398  000031                     	ds	1
  1399  000032                     tblptru	equ	0xFF8
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           postdec1	equ	0xFE5
  1403                           fsr1h	equ	0xFE2
  1404                           fsr1l	equ	0xFE1
  1405                           
  1406                           ; 0 bytes @ 0x31
  1407 ;;
  1408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1409 ;;
  1410 ;; *************** function _main *****************
  1411 ;; Defined at:
  1412 ;;		line 297 in file "../main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  i               1  106[BANK0 ] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;		None               void
  1419 ;; Registers used:
  1420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       1       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       1       0       0       0       0       0
  1430 ;;Total ram usage:        1 bytes
  1431 ;; Hardware stack levels required when called:    9
  1432 ;; This function calls:
  1433 ;;		_doOneSecondWork
  1434 ;;		_doWork
  1435 ;;		_handle_sync
  1436 ;;		_init
  1437 ;;		_init_app_eeprom
  1438 ;;		_vscp_check_pstorage
  1439 ;;		_vscp_doOneSecondWork
  1440 ;;		_vscp_error
  1441 ;;		_vscp_getEvent
  1442 ;;		_vscp_goActiveState
  1443 ;;		_vscp_handleProbeState
  1444 ;;		_vscp_handleProtocolEvent
  1445 ;;		_vscp_init
  1446 ;;		_writeEEPROM
  1447 ;; This function is called by:
  1448 ;;		Startup code after reset
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text0
  1453  0057E6                     __ptext0:
  1454                           	opt stack 0
  1455  0057E6                     _main:
  1456                           	opt stack 22
  1457                           
  1458                           ;main.c: 299: unsigned char i;
  1459                           ;main.c: 301: init();
  1460                           
  1461                           ;incstack = 0
  1462  0057E6  EC5A  F038         	call	_init	;wreg free
  1463                           
  1464                           ;main.c: 305: if (!vscp_check_pstorage()) {
  1465  0057EA  EC3C  F039         	call	_vscp_check_pstorage	;wreg free
  1466  0057EE  0900               	iorlw	0
  1467  0057F0  B4D8               	btfsc	status,2,c
  1468                           
  1469                           ;main.c: 308: init_app_eeprom();
  1470  0057F2  EC3D  F01C         	call	_init_app_eeprom	;wreg free
  1471                           
  1472                           ;main.c: 310: }
  1473                           ;main.c: 312: vscp_init();
  1474  0057F6  ECF2  F034         	call	_vscp_init	;wreg free
  1475  0057FA                     l168:
  1476  0057FA  0004               	clrwdt		;# 
  1477                           
  1478                           ;main.c: 318: if ((vscp_initbtncnt > 250) &&
  1479                           ;main.c: 319: (0x01 != vscp_node_state)) {
  1480  0057FC  0EFA               	movlw	250
  1481  0057FE  0100               	movlb	0	; () banked
  1482  005800  65D1               	cpfsgt	_vscp_initbtncnt& (0+255),b	;volatile
  1483  005802  D010               	goto	l10710
  1484                           
  1485                           ; BSR set to: 0
  1486  005804  0100               	movlb	0	; () banked
  1487  005806  05D3               	decf	_vscp_node_state& (0+255),w,b
  1488  005808  B4D8               	btfsc	status,2,c
  1489  00580A  D00C               	goto	l10710
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;main.c: 322: vscp_nickname = 0xff;
  1493  00580C  0100               	movlb	0	; () banked
  1494  00580E  69D2               	setf	_vscp_nickname& (0+255),b
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;main.c: 323: writeEEPROM(0x01, 0xff);
  1498  005810  0E00               	movlw	0
  1499  005812  6E19               	movwf	writeEEPROM@address+1,c
  1500  005814  0E01               	movlw	1
  1501  005816  6E18               	movwf	writeEEPROM@address,c
  1502  005818  0EFF               	movlw	255
  1503  00581A  6E1A               	movwf	writeEEPROM@data,c
  1504  00581C  EC8E  F039         	call	_writeEEPROM	;wreg free
  1505                           
  1506                           ;main.c: 324: vscp_init();
  1507  005820  ECF2  F034         	call	_vscp_init	;wreg free
  1508  005824                     l10710:
  1509                           
  1510                           ;main.c: 326: }
  1511                           ;main.c: 330: vscp_imsg.flags = 0;
  1512  005824  0E00               	movlw	0
  1513  005826  6E3B               	movwf	_vscp_imsg,c
  1514                           
  1515                           ;main.c: 331: vscp_getEvent();
  1516  005828  EC01  F037         	call	_vscp_getEvent	;wreg free
  1517                           
  1518                           ;main.c: 334: switch (vscp_node_state) {
  1519  00582C  D02E               	goto	l10742
  1520  00582E                     l10714:
  1521                           
  1522                           ;main.c: 339: if (0xff == vscp_nickname) {
  1523  00582E  0100               	movlb	0	; () banked
  1524  005830  29D2               	incf	_vscp_nickname& (0+255),w,b
  1525  005832  A4D8               	btfss	status,2,c
  1526  005834  D002               	goto	l10718
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;main.c: 341: vscp_node_state = 0x01;
  1530  005836  0E01               	movlw	1
  1531  005838  D025               	goto	L1
  1532  00583A                     l10718:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;main.c: 344: vscp_node_state = 0x03;
  1536  00583A  0E03               	movlw	3
  1537  00583C  0100               	movlb	0	; () banked
  1538  00583E  6FD3               	movwf	_vscp_node_state& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;main.c: 345: vscp_goActiveState();
  1542  005840  EC26  F039         	call	_vscp_goActiveState	;wreg free
  1543  005844  D034               	goto	l10744
  1544  005846                     l10722:
  1545                           
  1546                           ;main.c: 350: vscp_handleProbeState();
  1547  005846  ECA8  F02F         	call	_vscp_handleProbeState	;wreg free
  1548                           
  1549                           ;main.c: 351: break;
  1550  00584A  D031               	goto	l10744
  1551  00584C                     l10724:
  1552                           
  1553                           ;main.c: 354: vscp_goActiveState();
  1554  00584C  EC26  F039         	call	_vscp_goActiveState	;wreg free
  1555                           
  1556                           ;main.c: 355: break;
  1557  005850  D02E               	goto	l10744
  1558  005852                     l177:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;main.c: 360: if (vscp_imsg.flags & 0x80) {
  1562  005852  AE3B               	btfss	_vscp_imsg,7,c
  1563  005854  D02C               	goto	l10744
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;main.c: 362: if (0 == vscp_imsg.vscp_class) {
  1567  005856  503E               	movf	_vscp_imsg+3,w,c
  1568  005858  103D               	iorwf	_vscp_imsg+2,w,c
  1569  00585A  A4D8               	btfss	status,2,c
  1570  00585C  D003               	goto	l10730
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;main.c: 365: vscp_handleProtocolEvent();
  1574  00585E  EC86  F012         	call	_vscp_handleProtocolEvent	;wreg free
  1575                           
  1576                           ;main.c: 367: } else if ((30 == vscp_imsg.vscp_class) &&
  1577  005862  D025               	goto	l10744
  1578  005864                     l10730:
  1579                           
  1580                           ;main.c: 368: (26 == vscp_imsg.vscp_type)) {
  1581  005864  503D               	movf	_vscp_imsg+2,w,c
  1582  005866  0A1E               	xorlw	30
  1583  005868  103E               	iorwf	_vscp_imsg+3,w,c
  1584  00586A  A4D8               	btfss	status,2,c
  1585  00586C  D020               	goto	l10744
  1586  00586E  503F               	movf	_vscp_imsg+4,w,c
  1587  005870  0A1A               	xorlw	26
  1588  005872  A4D8               	btfss	status,2,c
  1589  005874  D01C               	goto	l10744
  1590                           
  1591                           ;main.c: 369: handle_sync();
  1592  005876  EC90  F033         	call	_handle_sync	;wreg free
  1593  00587A  D019               	goto	l10744
  1594  00587C                     l10736:
  1595                           
  1596                           ;main.c: 376: vscp_error();
  1597  00587C  ECA2  F03A         	call	_vscp_error	;wreg free
  1598                           
  1599                           ;main.c: 377: break;
  1600  005880  D016               	goto	l10744
  1601  005882                     l10738:
  1602                           
  1603                           ;main.c: 380: vscp_node_state = 0x00;
  1604  005882  0E00               	movlw	0
  1605  005884                     L1:
  1606  005884  0100               	movlb	0	; () banked
  1607  005886  6FD3               	movwf	_vscp_node_state& (0+255),b
  1608                           
  1609                           ;main.c: 381: break;
  1610  005888  D012               	goto	l10744
  1611  00588A                     l10742:
  1612  00588A  0100               	movlb	0	; () banked
  1613  00588C  51D3               	movf	_vscp_node_state& (0+255),w,b
  1614                           
  1615                           ; Switch size 1, requested type "space"
  1616                           ; Number of cases is 5, Range of values is 0 to 4
  1617                           ; switch strategies available:
  1618                           ; Name         Instructions Cycles
  1619                           ; simple_byte           16     9 (average)
  1620                           ;	Chosen strategy is simple_byte
  1621  00588E  0A00               	xorlw	0	; case 0
  1622  005890  B4D8               	btfsc	status,2,c
  1623  005892  D7CD               	goto	l10714
  1624  005894  0A01               	xorlw	1	; case 1
  1625  005896  B4D8               	btfsc	status,2,c
  1626  005898  D7D6               	goto	l10722
  1627  00589A  0A03               	xorlw	3	; case 2
  1628  00589C  B4D8               	btfsc	status,2,c
  1629  00589E  D7D6               	goto	l10724
  1630  0058A0  0A01               	xorlw	1	; case 3
  1631  0058A2  B4D8               	btfsc	status,2,c
  1632  0058A4  D7D6               	goto	l177
  1633  0058A6  0A07               	xorlw	7	; case 4
  1634  0058A8  B4D8               	btfsc	status,2,c
  1635  0058AA  D7E8               	goto	l10736
  1636  0058AC  D7EA               	goto	l10738
  1637  0058AE                     l10744:
  1638                           
  1639                           ;main.c: 387: if (measurement_clock > 1000) {
  1640  0058AE  0EE9               	movlw	233
  1641  0058B0  0101               	movlb	1	; () banked
  1642  0058B2  5D12               	subwf	_measurement_clock& (0+255),w,b
  1643  0058B4  0E03               	movlw	3
  1644  0058B6  0101               	movlb	1	; () banked
  1645  0058B8  5913               	subwfb	(_measurement_clock+1)& (0+255),w,b
  1646  0058BA  0E00               	movlw	0
  1647  0058BC  0101               	movlb	1	; () banked
  1648  0058BE  5914               	subwfb	(_measurement_clock+2)& (0+255),w,b
  1649  0058C0  0E00               	movlw	0
  1650  0058C2  0101               	movlb	1	; () banked
  1651  0058C4  5915               	subwfb	(_measurement_clock+3)& (0+255),w,b
  1652  0058C6  A0D8               	btfss	status,0,c
  1653  0058C8  D798               	goto	l168
  1654                           
  1655                           ; BSR set to: 1
  1656                           ;main.c: 389: measurement_clock = 0;
  1657  0058CA  0E00               	movlw	0
  1658  0058CC  0101               	movlb	1	; () banked
  1659  0058CE  6F12               	movwf	_measurement_clock& (0+255),b
  1660  0058D0  0E00               	movlw	0
  1661  0058D2  0101               	movlb	1	; () banked
  1662  0058D4  6F13               	movwf	(_measurement_clock+1)& (0+255),b
  1663  0058D6  0E00               	movlw	0
  1664  0058D8  0101               	movlb	1	; () banked
  1665  0058DA  6F14               	movwf	(_measurement_clock+2)& (0+255),b
  1666  0058DC  0E00               	movlw	0
  1667  0058DE  0101               	movlb	1	; () banked
  1668  0058E0  6F15               	movwf	(_measurement_clock+3)& (0+255),b
  1669                           
  1670                           ; BSR set to: 1
  1671                           ;main.c: 390: doOneSecondWork();
  1672  0058E2  ECEF  F021         	call	_doOneSecondWork	;wreg free
  1673                           
  1674                           ;main.c: 391: seconds++;
  1675  0058E6  0101               	movlb	1	; () banked
  1676  0058E8  2B1F               	incf	_seconds& (0+255),f,b
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;main.c: 392: sendTimer++;
  1680  0058EA  0100               	movlb	0	; () banked
  1681  0058EC  2BCE               	incf	_sendTimer& (0+255),f,b
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;main.c: 396: if (0x03 == vscp_node_state) {
  1685  0058EE  0100               	movlb	0	; () banked
  1686  0058F0  51D3               	movf	_vscp_node_state& (0+255),w,b
  1687  0058F2  0A03               	xorlw	3
  1688  0058F4  A4D8               	btfss	status,2,c
  1689  0058F6  D016               	goto	l10768
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;main.c: 397: for (i = 0; i < 6; i++) {
  1693  0058F8  0E00               	movlw	0
  1694  0058FA  0100               	movlb	0	; () banked
  1695  0058FC  6FCA               	movwf	main@i& (0+255),b
  1696  0058FE  D00E               	goto	L3
  1697  005900                     l10762:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;main.c: 398: seconds_temp[i]++;
  1701  005900  0100               	movlb	0	; () banked
  1702  005902  51CA               	movf	main@i& (0+255),w,b
  1703  005904  0D01               	mullw	1
  1704  005906  0101               	movlb	1	; () banked
  1705  005908  0E0C               	movlw	low _seconds_temp
  1706  00590A  24F3               	addwf	prodl,w,c
  1707  00590C  6ED9               	movwf	fsr2l,c
  1708  00590E  0101               	movlb	1	; () banked
  1709  005910  0E01               	movlw	high _seconds_temp
  1710  005912  20F4               	addwfc	prodh,w,c
  1711  005914  6EDA               	movwf	fsr2h,c
  1712  005916  2ADF               	incf	indf2,f,c
  1713                           
  1714                           ; BSR set to: 1
  1715  005918  0100               	movlb	0	; () banked
  1716  00591A  2BCA               	incf	main@i& (0+255),f,b
  1717  00591C                     L3:
  1718                           
  1719                           ; BSR set to: 0
  1720  00591C  0E05               	movlw	5
  1721  00591E  0100               	movlb	0	; () banked
  1722  005920  65CA               	cpfsgt	main@i& (0+255),b
  1723  005922  D7EE               	goto	l10762
  1724  005924                     l10768:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;main.c: 399: }
  1728                           ;main.c: 400: }
  1729                           ;main.c: 402: if (seconds > 60) {
  1730  005924  0E3C               	movlw	60
  1731  005926  0101               	movlb	1	; () banked
  1732  005928  651F               	cpfsgt	_seconds& (0+255),b
  1733  00592A  D003               	goto	l10772
  1734                           
  1735                           ; BSR set to: 1
  1736                           ;main.c: 403: seconds = 0;
  1737  00592C  0E00               	movlw	0
  1738  00592E  0101               	movlb	1	; () banked
  1739  005930  6F1F               	movwf	_seconds& (0+255),b
  1740  005932                     l10772:
  1741                           
  1742                           ; BSR set to: 1
  1743                           ;main.c: 404: }
  1744                           ;main.c: 407: vscp_doOneSecondWork();
  1745  005932  EC95  F036         	call	_vscp_doOneSecondWork	;wreg free
  1746                           
  1747                           ;main.c: 410: doWork();
  1748  005936  EC45  F00B         	call	_doWork	;wreg free
  1749  00593A  D75F               	goto	l168
  1750  00593C                     __end_of_main:
  1751                           	opt stack 0
  1752                           tblptru	equ	0xFF8
  1753                           prodh	equ	0xFF4
  1754                           prodl	equ	0xFF3
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postdec1	equ	0xFE5
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           indf2	equ	0xFDF
  1761                           fsr2h	equ	0xFDA
  1762                           fsr2l	equ	0xFD9
  1763                           status	equ	0xFD8
  1764                           
  1765 ;; *************** function _vscp_handleProtocolEvent *****************
  1766 ;; Defined at:
  1767 ;;		line 781 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  bytes           1   79[BANK0 ] unsigned char 
  1772 ;;  page_save       2   75[BANK0 ] unsigned short 
  1773 ;;  i               1   85[BANK0 ] unsigned char 
  1774 ;;  page_save       2   73[BANK0 ] unsigned short 
  1775 ;;  byte            1   89[BANK0 ] unsigned char 
  1776 ;;  bytes           1   87[BANK0 ] unsigned char 
  1777 ;;  cb              1   84[BANK0 ] unsigned char 
  1778 ;;  bytes_this_t    1   83[BANK0 ] unsigned char 
  1779 ;;  j               1   92[BANK0 ] unsigned char 
  1780 ;;  i               1   90[BANK0 ] unsigned char 
  1781 ;;  k               1   86[BANK0 ] unsigned char 
  1782 ;;  i               1   88[BANK0 ] unsigned char 
  1783 ;;  len             1   82[BANK0 ] unsigned char 
  1784 ;;  pos             1   81[BANK0 ] unsigned char 
  1785 ;;  i               1   91[BANK0 ] unsigned char 
  1786 ;;  len             1   80[BANK0 ] unsigned char 
  1787 ;;  pos             1   78[BANK0 ] unsigned char 
  1788 ;;  offset          1   77[BANK0 ] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;		None               void
  1791 ;; Registers used:
  1792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1798 ;;      Params:         0       0       0       0       0       0       0
  1799 ;;      Locals:         0      20       0       0       0       0       0
  1800 ;;      Temps:          0       9       0       0       0       0       0
  1801 ;;      Totals:         0      29       0       0       0       0       0
  1802 ;;Total ram usage:       29 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    8
  1805 ;; This function calls:
  1806 ;;		___awmod
  1807 ;;		_vscp_getGUID
  1808 ;;		_vscp_getMDF_URL
  1809 ;;		_vscp_getMatrixInfo
  1810 ;;		_vscp_goBootloaderMode
  1811 ;;		_vscp_handleDropNickname
  1812 ;;		_vscp_handleHeartbeat
  1813 ;;		_vscp_handleSetNickname
  1814 ;;		_vscp_init
  1815 ;;		_vscp_newNodeOnline
  1816 ;;		_vscp_readAppReg
  1817 ;;		_vscp_readRegister
  1818 ;;		_vscp_readStdReg
  1819 ;;		_vscp_sendEvent
  1820 ;;		_vscp_writeAppReg
  1821 ;;		_vscp_writeRegister
  1822 ;;		_vscp_writeStdReg
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text1
  1829  00250C                     __ptext1:
  1830                           	opt stack 0
  1831  00250C                     _vscp_handleProtocolEvent:
  1832                           	opt stack 22
  1833                           
  1834                           ;vscp_firmware.c: 784: if (0 == vscp_imsg.vscp_class) {
  1835                           
  1836                           ;incstack = 0
  1837  00250C  503E               	movf	_vscp_imsg+3,w,c
  1838  00250E  103D               	iorwf	_vscp_imsg+2,w,c
  1839  002510  B4D8               	btfsc	status,2,c
  1840  002512  EFB6  F017         	goto	l10406
  1841  002516  EFEE  F017         	goto	l1241
  1842  00251A                     l9988:
  1843                           
  1844                           ;vscp_firmware.c: 791: vscp_handleHeartbeat();
  1845  00251A  EC17  F038         	call	_vscp_handleHeartbeat	;wreg free
  1846                           
  1847                           ;vscp_firmware.c: 792: break;
  1848  00251E  EFEE  F017         	goto	l1241
  1849  002522                     l9990:
  1850                           
  1851                           ;vscp_firmware.c: 796: vscp_newNodeOnline();
  1852  002522  ECF5  F037         	call	_vscp_newNodeOnline	;wreg free
  1853                           
  1854                           ;vscp_firmware.c: 797: break;
  1855  002526  EFEE  F017         	goto	l1241
  1856  00252A                     l9992:
  1857                           
  1858                           ;vscp_firmware.c: 801: vscp_handleSetNickname();
  1859  00252A  EC0E  F039         	call	_vscp_handleSetNickname	;wreg free
  1860                           
  1861                           ;vscp_firmware.c: 802: break;
  1862  00252E  EFEE  F017         	goto	l1241
  1863  002532                     l9994:
  1864                           
  1865                           ;vscp_firmware.c: 806: vscp_handleDropNickname();
  1866  002532  ECD7  F038         	call	_vscp_handleDropNickname	;wreg free
  1867                           
  1868                           ;vscp_firmware.c: 807: break;
  1869  002536  EFEE  F017         	goto	l1241
  1870  00253A                     l9996:
  1871                           
  1872                           ;vscp_firmware.c: 811: if ((2 == (vscp_imsg.flags & 0x0f)) &&
  1873                           ;vscp_firmware.c: 812: (vscp_nickname == vscp_imsg.data[ 0 ])) {
  1874  00253A  C03B  F0A0         	movff	_vscp_imsg,??_vscp_handleProtocolEvent
  1875  00253E  0E0F               	movlw	15
  1876  002540  0100               	movlb	0	; () banked
  1877  002542  17A0               	andwf	??_vscp_handleProtocolEvent& (0+255),f,b
  1878  002544  0100               	movlb	0	; () banked
  1879  002546  51A0               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  1880  002548  0A02               	xorlw	2
  1881  00254A  A4D8               	btfss	status,2,c
  1882  00254C  EFEE  F017         	goto	l1241
  1883                           
  1884                           ; BSR set to: 0
  1885  002550  0100               	movlb	0	; () banked
  1886  002552  51D2               	movf	_vscp_nickname& (0+255),w,b
  1887  002554  EE20  F041         	lfsr	2,_vscp_imsg+6
  1888  002558  62DF               	cpfseq	indf2,c
  1889  00255A  EFEE  F017         	goto	l1241
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;vscp_firmware.c: 814: if (vscp_imsg.data[ 1 ] < 0x80) {
  1893  00255E  0E80               	movlw	128
  1894  002560  5C42               	subwf	_vscp_imsg+7,w,c
  1895  002562  B0D8               	btfsc	status,0,c
  1896  002564  D01A               	goto	l10016
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;vscp_firmware.c: 817: vscp_omsg.data[ 1 ] = vscp_readAppReg(vscp_imsg.data[ 1 ]);
  1900  002566  5042               	movf	_vscp_imsg+7,w,c
  1901  002568  ECEF  F017         	call	_vscp_readAppReg
  1902  00256C  0100               	movlb	0	; () banked
  1903  00256E  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;vscp_firmware.c: 820: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  1907  002570  C042  F0D9         	movff	_vscp_imsg+7,_vscp_omsg+5
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;vscp_firmware.c: 822: vscp_omsg.priority = 0x03;
  1911  002574  0E03               	movlw	3
  1912  002576  0100               	movlb	0	; () banked
  1913  002578  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;vscp_firmware.c: 823: vscp_omsg.flags = 0x80 + 2;
  1917  00257A  0E82               	movlw	130
  1918  00257C  0100               	movlb	0	; () banked
  1919  00257E  6FD4               	movwf	_vscp_omsg& (0+255),b
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;vscp_firmware.c: 824: vscp_omsg.vscp_class = 0;
  1923  002580  0E00               	movlw	0
  1924  002582  0100               	movlb	0	; () banked
  1925  002584  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  1926  002586  0E00               	movlw	0
  1927  002588  0100               	movlb	0	; () banked
  1928  00258A  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;vscp_firmware.c: 825: vscp_omsg.vscp_type = 10;
  1932  00258C  0E0A               	movlw	10
  1933  00258E  0100               	movlb	0	; () banked
  1934  002590  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;vscp_firmware.c: 828: vscp_sendEvent();
  1938  002592  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  1939                           
  1940                           ;vscp_firmware.c: 829: } else {
  1941  002596  EFEE  F017         	goto	l1241
  1942  00259A                     l10016:
  1943                           
  1944                           ;vscp_firmware.c: 832: vscp_omsg.data[ 1 ] =
  1945                           ;vscp_firmware.c: 833: vscp_readStdReg(vscp_imsg.data[ 1 ]);
  1946  00259A  5042               	movf	_vscp_imsg+7,w,c
  1947  00259C  ECBF  F030         	call	_vscp_readStdReg
  1948  0025A0  0100               	movlb	0	; () banked
  1949  0025A2  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;vscp_firmware.c: 836: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  1953  0025A4  C042  F0D9         	movff	_vscp_imsg+7,_vscp_omsg+5
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;vscp_firmware.c: 838: vscp_omsg.priority = 0x03;
  1957  0025A8  0E03               	movlw	3
  1958  0025AA  0100               	movlb	0	; () banked
  1959  0025AC  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;vscp_firmware.c: 839: vscp_omsg.flags = 0x80 + 2;
  1963  0025AE  0E82               	movlw	130
  1964  0025B0  0100               	movlb	0	; () banked
  1965  0025B2  6FD4               	movwf	_vscp_omsg& (0+255),b
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;vscp_firmware.c: 840: vscp_omsg.vscp_class = 0;
  1969  0025B4  0E00               	movlw	0
  1970  0025B6  0100               	movlb	0	; () banked
  1971  0025B8  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  1972  0025BA  0E00               	movlw	0
  1973  0025BC  0100               	movlb	0	; () banked
  1974  0025BE  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;vscp_firmware.c: 841: vscp_omsg.vscp_type = 10;
  1978  0025C0  0E0A               	movlw	10
  1979  0025C2  0100               	movlb	0	; () banked
  1980  0025C4  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;vscp_firmware.c: 844: vscp_sendEvent();
  1984  0025C6  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  1985  0025CA  EFEE  F017         	goto	l1241
  1986  0025CE                     l10030:
  1987                           
  1988                           ;vscp_firmware.c: 851: if ((3 == (vscp_imsg.flags & 0x0f)) &&
  1989                           ;vscp_firmware.c: 852: (vscp_nickname == vscp_imsg.data[ 0 ])) {
  1990  0025CE  C03B  F0A0         	movff	_vscp_imsg,??_vscp_handleProtocolEvent
  1991  0025D2  0E0F               	movlw	15
  1992  0025D4  0100               	movlb	0	; () banked
  1993  0025D6  17A0               	andwf	??_vscp_handleProtocolEvent& (0+255),f,b
  1994  0025D8  0100               	movlb	0	; () banked
  1995  0025DA  51A0               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  1996  0025DC  0A03               	xorlw	3
  1997  0025DE  A4D8               	btfss	status,2,c
  1998  0025E0  EFEE  F017         	goto	l1241
  1999                           
  2000                           ; BSR set to: 0
  2001  0025E4  0100               	movlb	0	; () banked
  2002  0025E6  51D2               	movf	_vscp_nickname& (0+255),w,b
  2003  0025E8  EE20  F041         	lfsr	2,_vscp_imsg+6
  2004  0025EC  62DF               	cpfseq	indf2,c
  2005  0025EE  EFEE  F017         	goto	l1241
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;vscp_firmware.c: 854: if (vscp_imsg.data[ 1 ] < 0x80) {
  2009  0025F2  0E80               	movlw	128
  2010  0025F4  5C42               	subwf	_vscp_imsg+7,w,c
  2011  0025F6  B0D8               	btfsc	status,0,c
  2012  0025F8  D01C               	goto	l10050
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;vscp_firmware.c: 857: vscp_omsg.data[ 1 ] =
  2016                           ;vscp_firmware.c: 858: vscp_writeAppReg(vscp_imsg.data[ 1 ], vscp_imsg.data[ 2 ]);
  2017  0025FA  C043  F02A         	movff	_vscp_imsg+8,vscp_writeAppReg@val
  2018  0025FE  5042               	movf	_vscp_imsg+7,w,c
  2019  002600  EC37  F003         	call	_vscp_writeAppReg
  2020  002604  0100               	movlb	0	; () banked
  2021  002606  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;vscp_firmware.c: 861: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  2025  002608  C042  F0D9         	movff	_vscp_imsg+7,_vscp_omsg+5
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;vscp_firmware.c: 863: vscp_omsg.priority = 0x03;
  2029  00260C  0E03               	movlw	3
  2030  00260E  0100               	movlb	0	; () banked
  2031  002610  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;vscp_firmware.c: 864: vscp_omsg.flags = 0x80 + 2;
  2035  002612  0E82               	movlw	130
  2036  002614  0100               	movlb	0	; () banked
  2037  002616  6FD4               	movwf	_vscp_omsg& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;vscp_firmware.c: 865: vscp_omsg.vscp_class = 0;
  2041  002618  0E00               	movlw	0
  2042  00261A  0100               	movlb	0	; () banked
  2043  00261C  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  2044  00261E  0E00               	movlw	0
  2045  002620  0100               	movlb	0	; () banked
  2046  002622  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;vscp_firmware.c: 866: vscp_omsg.vscp_type = 10;
  2050  002624  0E0A               	movlw	10
  2051  002626  0100               	movlb	0	; () banked
  2052  002628  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;vscp_firmware.c: 869: vscp_sendEvent();
  2056  00262A  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  2057                           
  2058                           ;vscp_firmware.c: 871: } else {
  2059  00262E  EFEE  F017         	goto	l1241
  2060  002632                     l10050:
  2061                           
  2062                           ;vscp_firmware.c: 874: vscp_omsg.data[ 1 ] =
  2063                           ;vscp_firmware.c: 875: vscp_writeStdReg(vscp_imsg.data[ 1 ], vscp_imsg.data[ 2 ]);
  2064  002632  C043  F02B         	movff	_vscp_imsg+8,vscp_writeStdReg@value
  2065  002636  5042               	movf	_vscp_imsg+7,w,c
  2066  002638  ECA2  F024         	call	_vscp_writeStdReg
  2067  00263C  0100               	movlb	0	; () banked
  2068  00263E  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;vscp_firmware.c: 878: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  2072  002640  C042  F0D9         	movff	_vscp_imsg+7,_vscp_omsg+5
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;vscp_firmware.c: 880: vscp_omsg.priority = 0x03;
  2076  002644  0E03               	movlw	3
  2077  002646  0100               	movlb	0	; () banked
  2078  002648  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;vscp_firmware.c: 881: vscp_omsg.flags = 0x80 + 2;
  2082  00264A  0E82               	movlw	130
  2083  00264C  0100               	movlb	0	; () banked
  2084  00264E  6FD4               	movwf	_vscp_omsg& (0+255),b
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;vscp_firmware.c: 882: vscp_omsg.vscp_class = 0;
  2088  002650  0E00               	movlw	0
  2089  002652  0100               	movlb	0	; () banked
  2090  002654  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  2091  002656  0E00               	movlw	0
  2092  002658  0100               	movlb	0	; () banked
  2093  00265A  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;vscp_firmware.c: 883: vscp_omsg.vscp_type = 10;
  2097  00265C  0E0A               	movlw	10
  2098  00265E  0100               	movlb	0	; () banked
  2099  002660  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;vscp_firmware.c: 886: vscp_sendEvent();
  2103  002662  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  2104  002666  EFEE  F017         	goto	l1241
  2105  00266A                     l10064:
  2106                           
  2107                           ;vscp_firmware.c: 892: if ((vscp_nickname == vscp_imsg.data[ 0 ]) &&
  2108                           ;vscp_firmware.c: 893: (9 == vscp_imsg.data[ 1 ]))
  2109  00266A  0100               	movlb	0	; () banked
  2110  00266C  51D2               	movf	_vscp_nickname& (0+255),w,b
  2111  00266E  EE20  F041         	lfsr	2,_vscp_imsg+6
  2112  002672  62DF               	cpfseq	indf2,c
  2113  002674  D005               	goto	l10070
  2114                           
  2115                           ; BSR set to: 0
  2116  002676  5042               	movf	_vscp_imsg+7,w,c
  2117  002678  0A09               	xorlw	9
  2118  00267A  B4D8               	btfsc	status,2,c
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;vscp_firmware.c: 894: {
  2122                           ;vscp_firmware.c: 895: vscp_goBootloaderMode();
  2123  00267C  EC2C  F03A         	call	_vscp_goBootloaderMode	;wreg free
  2124  002680                     l10070:
  2125                           
  2126                           ;vscp_firmware.c: 896: }
  2127                           ;vscp_firmware.c: 898: if ((vscp_nickname == vscp_imsg.data[ 0 ]) &&
  2128                           ;vscp_firmware.c: 899: (1 == vscp_imsg.data[ 1 ]) &&
  2129                           ;vscp_firmware.c: 900: (vscp_getGUID(0) == vscp_imsg.data[ 2 ]) &&
  2130                           ;vscp_firmware.c: 901: (vscp_getGUID(3) == vscp_imsg.data[ 3 ]) &&
  2131                           ;vscp_firmware.c: 902: (vscp_getGUID(5) == vscp_imsg.data[ 4 ]) &&
  2132                           ;vscp_firmware.c: 903: (vscp_getGUID(7) == vscp_imsg.data[ 5 ]) &&
  2133                           ;vscp_firmware.c: 904: ((vscp_page_select >> 8) == vscp_imsg.data[ 6 ]) &&
  2134                           ;vscp_firmware.c: 905: ((vscp_page_select & 0xff) == vscp_imsg.data[ 7 ])) {
  2135  002680  0100               	movlb	0	; () banked
  2136  002682  51D2               	movf	_vscp_nickname& (0+255),w,b
  2137  002684  EE20  F041         	lfsr	2,_vscp_imsg+6
  2138  002688  62DF               	cpfseq	indf2,c
  2139  00268A  EFEE  F017         	goto	l1241
  2140                           
  2141                           ; BSR set to: 0
  2142  00268E  0442               	decf	_vscp_imsg+7,w,c
  2143  002690  A4D8               	btfss	status,2,c
  2144  002692  EFEE  F017         	goto	l1241
  2145                           
  2146                           ; BSR set to: 0
  2147  002696  0E00               	movlw	0
  2148  002698  EC22  F03A         	call	_vscp_getGUID
  2149  00269C  1843               	xorwf	_vscp_imsg+8,w,c
  2150  00269E  A4D8               	btfss	status,2,c
  2151  0026A0  EFEE  F017         	goto	l1241
  2152  0026A4  0E03               	movlw	3
  2153  0026A6  EC22  F03A         	call	_vscp_getGUID
  2154  0026AA  1844               	xorwf	_vscp_imsg+9,w,c
  2155  0026AC  A4D8               	btfss	status,2,c
  2156  0026AE  EFEE  F017         	goto	l1241
  2157  0026B2  0E05               	movlw	5
  2158  0026B4  EC22  F03A         	call	_vscp_getGUID
  2159  0026B8  1845               	xorwf	_vscp_imsg+10,w,c
  2160  0026BA  A4D8               	btfss	status,2,c
  2161  0026BC  EFEE  F017         	goto	l1241
  2162  0026C0  0E07               	movlw	7
  2163  0026C2  EC22  F03A         	call	_vscp_getGUID
  2164  0026C6  1846               	xorwf	_vscp_imsg+11,w,c
  2165  0026C8  A4D8               	btfss	status,2,c
  2166  0026CA  EFEE  F017         	goto	l1241
  2167  0026CE  5047               	movf	_vscp_imsg+12,w,c
  2168  0026D0  C033  F0A0         	movff	_vscp_page_select+1,??_vscp_handleProtocolEvent
  2169  0026D4  0100               	movlb	0	; () banked
  2170  0026D6  19A0               	xorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  2171  0026D8  A4D8               	btfss	status,2,c
  2172  0026DA  EFEE  F017         	goto	l1241
  2173                           
  2174                           ; BSR set to: 0
  2175  0026DE  0EFF               	movlw	255
  2176  0026E0  1432               	andwf	_vscp_page_select,w,c
  2177  0026E2  0100               	movlb	0	; () banked
  2178  0026E4  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  2179  0026E6  0E00               	movlw	0
  2180  0026E8  1433               	andwf	_vscp_page_select+1,w,c
  2181  0026EA  0100               	movlb	0	; () banked
  2182  0026EC  6FA1               	movwf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  2183  0026EE  5048               	movf	_vscp_imsg+13,w,c
  2184  0026F0  0100               	movlb	0	; () banked
  2185  0026F2  19A0               	xorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  2186  0026F4  11A1               	iorwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  2187  0026F6  A4D8               	btfss	status,2,c
  2188  0026F8  EFEE  F017         	goto	l1241
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;vscp_firmware.c: 907: vscp_goBootloaderMode();
  2192  0026FC  EC2C  F03A         	call	_vscp_goBootloaderMode	;wreg free
  2193  002700  EFEE  F017         	goto	l1241
  2194  002704                     l10088:
  2195                           
  2196                           ;vscp_firmware.c: 917: if ((vscp_getGUID(0) == vscp_imsg.data[ 1 ]) &&
  2197                           ;vscp_firmware.c: 918: (vscp_getGUID(1) == vscp_imsg.data[ 2 ]) &&
  2198                           ;vscp_firmware.c: 919: (vscp_getGUID(2) == vscp_imsg.data[ 3 ]) &&
  2199                           ;vscp_firmware.c: 920: (vscp_getGUID(3) == vscp_imsg.data[ 4 ])) {
  2200  002704  0E00               	movlw	0
  2201  002706  EC22  F03A         	call	_vscp_getGUID
  2202  00270A  1842               	xorwf	_vscp_imsg+7,w,c
  2203  00270C  A4D8               	btfss	status,2,c
  2204  00270E  D083               	goto	l10134
  2205  002710  0E01               	movlw	1
  2206  002712  EC22  F03A         	call	_vscp_getGUID
  2207  002716  1843               	xorwf	_vscp_imsg+8,w,c
  2208  002718  A4D8               	btfss	status,2,c
  2209  00271A  D07D               	goto	l10134
  2210  00271C  0E02               	movlw	2
  2211  00271E  EC22  F03A         	call	_vscp_getGUID
  2212  002722  1844               	xorwf	_vscp_imsg+9,w,c
  2213  002724  A4D8               	btfss	status,2,c
  2214  002726  D077               	goto	l10134
  2215  002728  0E03               	movlw	3
  2216  00272A  EC22  F03A         	call	_vscp_getGUID
  2217  00272E  1845               	xorwf	_vscp_imsg+10,w,c
  2218  002730  A4D8               	btfss	status,2,c
  2219  002732  D071               	goto	l10134
  2220                           
  2221                           ;vscp_firmware.c: 921: vscp_guid_reset |= 0x10;
  2222  002734  0100               	movlb	0	; () banked
  2223  002736  89D0               	bsf	_vscp_guid_reset& (0+255),4,b
  2224  002738  D06E               	goto	l10134
  2225  00273A                     l10098:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;vscp_firmware.c: 926: if ((vscp_getGUID(4) == vscp_imsg.data[ 1 ]) &&
  2229                           ;vscp_firmware.c: 927: (vscp_getGUID(5) == vscp_imsg.data[ 2 ]) &&
  2230                           ;vscp_firmware.c: 928: (vscp_getGUID(6) == vscp_imsg.data[ 3 ]) &&
  2231                           ;vscp_firmware.c: 929: (vscp_getGUID(7) == vscp_imsg.data[ 4 ])) {
  2232  00273A  0E04               	movlw	4
  2233  00273C  EC22  F03A         	call	_vscp_getGUID
  2234  002740  1842               	xorwf	_vscp_imsg+7,w,c
  2235  002742  A4D8               	btfss	status,2,c
  2236  002744  D068               	goto	l10134
  2237  002746  0E05               	movlw	5
  2238  002748  EC22  F03A         	call	_vscp_getGUID
  2239  00274C  1843               	xorwf	_vscp_imsg+8,w,c
  2240  00274E  A4D8               	btfss	status,2,c
  2241  002750  D062               	goto	l10134
  2242  002752  0E06               	movlw	6
  2243  002754  EC22  F03A         	call	_vscp_getGUID
  2244  002758  1844               	xorwf	_vscp_imsg+9,w,c
  2245  00275A  A4D8               	btfss	status,2,c
  2246  00275C  D05C               	goto	l10134
  2247  00275E  0E07               	movlw	7
  2248  002760  EC22  F03A         	call	_vscp_getGUID
  2249  002764  1845               	xorwf	_vscp_imsg+10,w,c
  2250  002766  A4D8               	btfss	status,2,c
  2251  002768  D056               	goto	l10134
  2252                           
  2253                           ;vscp_firmware.c: 930: vscp_guid_reset |= 0x20;
  2254  00276A  0100               	movlb	0	; () banked
  2255  00276C  8BD0               	bsf	_vscp_guid_reset& (0+255),5,b
  2256  00276E  D053               	goto	l10134
  2257  002770                     l10108:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;vscp_firmware.c: 935: if ((vscp_getGUID(8) == vscp_imsg.data[ 1 ]) &&
  2261                           ;vscp_firmware.c: 936: (vscp_getGUID(9) == vscp_imsg.data[ 2 ]) &&
  2262                           ;vscp_firmware.c: 937: (vscp_getGUID(10) == vscp_imsg.data[ 3 ]) &&
  2263                           ;vscp_firmware.c: 938: (vscp_getGUID(11) == vscp_imsg.data[ 4 ])) {
  2264  002770  0E08               	movlw	8
  2265  002772  EC22  F03A         	call	_vscp_getGUID
  2266  002776  1842               	xorwf	_vscp_imsg+7,w,c
  2267  002778  A4D8               	btfss	status,2,c
  2268  00277A  D04D               	goto	l10134
  2269  00277C  0E09               	movlw	9
  2270  00277E  EC22  F03A         	call	_vscp_getGUID
  2271  002782  1843               	xorwf	_vscp_imsg+8,w,c
  2272  002784  A4D8               	btfss	status,2,c
  2273  002786  D047               	goto	l10134
  2274  002788  0E0A               	movlw	10
  2275  00278A  EC22  F03A         	call	_vscp_getGUID
  2276  00278E  1844               	xorwf	_vscp_imsg+9,w,c
  2277  002790  A4D8               	btfss	status,2,c
  2278  002792  D041               	goto	l10134
  2279  002794  0E0B               	movlw	11
  2280  002796  EC22  F03A         	call	_vscp_getGUID
  2281  00279A  1845               	xorwf	_vscp_imsg+10,w,c
  2282  00279C  A4D8               	btfss	status,2,c
  2283  00279E  D03B               	goto	l10134
  2284                           
  2285                           ;vscp_firmware.c: 939: vscp_guid_reset |= 0x40;
  2286  0027A0  0100               	movlb	0	; () banked
  2287  0027A2  8DD0               	bsf	_vscp_guid_reset& (0+255),6,b
  2288  0027A4  D038               	goto	l10134
  2289  0027A6                     l10118:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;vscp_firmware.c: 944: if ((vscp_getGUID(12) == vscp_imsg.data[ 1 ]) &&
  2293                           ;vscp_firmware.c: 945: (vscp_getGUID(13) == vscp_imsg.data[ 2 ]) &&
  2294                           ;vscp_firmware.c: 946: (vscp_getGUID(14) == vscp_imsg.data[ 3 ]) &&
  2295                           ;vscp_firmware.c: 947: (vscp_getGUID(15) == vscp_imsg.data[ 4 ])) {
  2296  0027A6  0E0C               	movlw	12
  2297  0027A8  EC22  F03A         	call	_vscp_getGUID
  2298  0027AC  1842               	xorwf	_vscp_imsg+7,w,c
  2299  0027AE  A4D8               	btfss	status,2,c
  2300  0027B0  D032               	goto	l10134
  2301  0027B2  0E0D               	movlw	13
  2302  0027B4  EC22  F03A         	call	_vscp_getGUID
  2303  0027B8  1843               	xorwf	_vscp_imsg+8,w,c
  2304  0027BA  A4D8               	btfss	status,2,c
  2305  0027BC  D02C               	goto	l10134
  2306  0027BE  0E0E               	movlw	14
  2307  0027C0  EC22  F03A         	call	_vscp_getGUID
  2308  0027C4  1844               	xorwf	_vscp_imsg+9,w,c
  2309  0027C6  A4D8               	btfss	status,2,c
  2310  0027C8  D026               	goto	l10134
  2311  0027CA  0E0F               	movlw	15
  2312  0027CC  EC22  F03A         	call	_vscp_getGUID
  2313  0027D0  1845               	xorwf	_vscp_imsg+10,w,c
  2314  0027D2  A4D8               	btfss	status,2,c
  2315  0027D4  D020               	goto	l10134
  2316                           
  2317                           ;vscp_firmware.c: 948: vscp_guid_reset |= 0x80;
  2318  0027D6  0100               	movlb	0	; () banked
  2319  0027D8  8FD0               	bsf	_vscp_guid_reset& (0+255),7,b
  2320  0027DA  D01D               	goto	l10134
  2321  0027DC                     l10128:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;vscp_firmware.c: 953: vscp_guid_reset = 0;
  2325  0027DC  0E00               	movlw	0
  2326  0027DE  0100               	movlb	0	; () banked
  2327  0027E0  6FD0               	movwf	_vscp_guid_reset& (0+255),b
  2328                           
  2329                           ;vscp_firmware.c: 954: break;
  2330  0027E2  D019               	goto	l10134
  2331  0027E4                     l10132:
  2332  0027E4  3841               	swapf	_vscp_imsg+6,w,c
  2333  0027E6  0B0F               	andlw	15
  2334  0027E8  0100               	movlb	0	; () banked
  2335  0027EA  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  2336  0027EC  6BA1               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  2337                           
  2338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2339                           ; Switch size 1, requested type "space"
  2340                           ; Number of cases is 1, Range of values is 0 to 0
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte            4     3 (average)
  2344                           ;	Chosen strategy is simple_byte
  2345  0027EE  0100               	movlb	0	; () banked
  2346  0027F0  51A1               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  2347  0027F2  0A00               	xorlw	0	; case 0
  2348  0027F4  A4D8               	btfss	status,2,c
  2349  0027F6  D7F2               	goto	l10128
  2350                           
  2351                           ; BSR set to: 0
  2352                           ; Switch size 1, requested type "space"
  2353                           ; Number of cases is 4, Range of values is 0 to 3
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte           13     7 (average)
  2357                           ;	Chosen strategy is simple_byte
  2358  0027F8  0100               	movlb	0	; () banked
  2359  0027FA  51A0               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  2360  0027FC  0A00               	xorlw	0	; case 0
  2361  0027FE  B4D8               	btfsc	status,2,c
  2362  002800  D781               	goto	l10088
  2363  002802  0A01               	xorlw	1	; case 1
  2364  002804  B4D8               	btfsc	status,2,c
  2365  002806  D799               	goto	l10098
  2366  002808  0A03               	xorlw	3	; case 2
  2367  00280A  B4D8               	btfsc	status,2,c
  2368  00280C  D7B1               	goto	l10108
  2369  00280E  0A01               	xorlw	1	; case 3
  2370  002810  B4D8               	btfsc	status,2,c
  2371  002812  D7C9               	goto	l10118
  2372  002814  D7E3               	goto	l10128
  2373  002816                     l10134:
  2374                           
  2375                           ;vscp_firmware.c: 957: if (0xf0 == (vscp_guid_reset & 0xf0)) {
  2376  002816  C0D0  F0A0         	movff	_vscp_guid_reset,??_vscp_handleProtocolEvent
  2377  00281A  0EF0               	movlw	240
  2378  00281C  0100               	movlb	0	; () banked
  2379  00281E  17A0               	andwf	??_vscp_handleProtocolEvent& (0+255),f,b
  2380  002820  0100               	movlb	0	; () banked
  2381  002822  51A0               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  2382  002824  0AF0               	xorlw	240
  2383  002826  A4D8               	btfss	status,2,c
  2384  002828  D3D9               	goto	l1241
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;vscp_firmware.c: 959: vscp_init();
  2388  00282A  ECF2  F034         	call	_vscp_init	;wreg free
  2389  00282E  D3D6               	goto	l1241
  2390  002830                     l10138:
  2391                           
  2392                           ;vscp_firmware.c: 965: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  2393  002830  0100               	movlb	0	; () banked
  2394  002832  51D2               	movf	_vscp_nickname& (0+255),w,b
  2395  002834  EE20  F041         	lfsr	2,_vscp_imsg+6
  2396  002838  62DF               	cpfseq	indf2,c
  2397  00283A  D3D0               	goto	l1241
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;vscp_firmware.c: 967: uint8_t i;
  2401                           ;vscp_firmware.c: 968: uint8_t pos = 0;
  2402  00283C  0E00               	movlw	0
  2403  00283E  0100               	movlb	0	; () banked
  2404  002840  6FAE               	movwf	vscp_handleProtocolEvent@pos& (0+255),b
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;vscp_firmware.c: 969: uint8_t offset = vscp_imsg.data[ 1 ];
  2408  002842  C042  F0AD         	movff	_vscp_imsg+7,vscp_handleProtocolEvent@offset
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;vscp_firmware.c: 970: uint8_t len = vscp_imsg.data[ 2 ];
  2412  002846  C043  F0B0         	movff	_vscp_imsg+8,vscp_handleProtocolEvent@len
  2413                           
  2414                           ;vscp_firmware.c: 972: for (i = 0; i < len; i++) {
  2415  00284A  0E00               	movlw	0
  2416  00284C  0100               	movlb	0	; () banked
  2417  00284E  6FBB               	movwf	vscp_handleProtocolEvent@i& (0+255),b
  2418  002850  D07F               	goto	l10174
  2419  002852                     l10146:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;vscp_firmware.c: 973: vscp_omsg.data[ (i % 7) + 1 ] = vscp_readRegister(offset + i);
  2423  002852  0100               	movlb	0	; () banked
  2424  002854  51AD               	movf	vscp_handleProtocolEvent@offset& (0+255),w,b
  2425  002856  0100               	movlb	0	; () banked
  2426  002858  25BB               	addwf	vscp_handleProtocolEvent@i& (0+255),w,b
  2427  00285A  ECEB  F039         	call	_vscp_readRegister
  2428  00285E  0100               	movlb	0	; () banked
  2429  002860  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  2430  002862  0100               	movlb	0	; () banked
  2431  002864  C0BB  F018         	movff	vscp_handleProtocolEvent@i,___awmod@dividend
  2432  002868  6A19               	clrf	___awmod@dividend+1,c
  2433  00286A  0E00               	movlw	0
  2434  00286C  6E1B               	movwf	___awmod@divisor+1,c
  2435  00286E  0E07               	movlw	7
  2436  002870  6E1A               	movwf	___awmod@divisor,c
  2437  002872  EC8A  F035         	call	___awmod	;wreg free
  2438  002876  0E01               	movlw	1
  2439  002878  2618               	addwf	?___awmod,f,c
  2440  00287A  0E00               	movlw	0
  2441  00287C  2219               	addwfc	?___awmod+1,f,c
  2442  00287E  0100               	movlb	0	; () banked
  2443  002880  0ED9               	movlw	low (_vscp_omsg+5)
  2444  002882  2418               	addwf	?___awmod,w,c
  2445  002884  6ED9               	movwf	fsr2l,c
  2446  002886  0100               	movlb	0	; () banked
  2447  002888  0E00               	movlw	high (_vscp_omsg+5)
  2448  00288A  2019               	addwfc	?___awmod+1,w,c
  2449  00288C  6EDA               	movwf	fsr2h,c
  2450  00288E  C0A0  FFDF         	movff	??_vscp_handleProtocolEvent,indf2
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;vscp_firmware.c: 975: if ((i % 7) == 6 || i == (len - 1)) {
  2454  002892  0100               	movlb	0	; () banked
  2455  002894  C0BB  F018         	movff	vscp_handleProtocolEvent@i,___awmod@dividend
  2456  002898  6A19               	clrf	___awmod@dividend+1,c
  2457  00289A  0E00               	movlw	0
  2458  00289C  6E1B               	movwf	___awmod@divisor+1,c
  2459  00289E  0E07               	movlw	7
  2460  0028A0  6E1A               	movwf	___awmod@divisor,c
  2461  0028A2  EC8A  F035         	call	___awmod	;wreg free
  2462  0028A6  5018               	movf	?___awmod,w,c
  2463  0028A8  0A06               	xorlw	6
  2464  0028AA  1019               	iorwf	?___awmod+1,w,c
  2465  0028AC  B4D8               	btfsc	status,2,c
  2466  0028AE  D019               	goto	l10152
  2467  0028B0  0EFF               	movlw	255
  2468  0028B2  0100               	movlb	0	; () banked
  2469  0028B4  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  2470  0028B6  0EFF               	movlw	255
  2471  0028B8  6FA1               	movwf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  2472  0028BA  0100               	movlb	0	; () banked
  2473  0028BC  51B0               	movf	vscp_handleProtocolEvent@len& (0+255),w,b
  2474  0028BE  0100               	movlb	0	; () banked
  2475  0028C0  6FA2               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  2476  0028C2  6BA3               	clrf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  2477  0028C4  0100               	movlb	0	; () banked
  2478  0028C6  51A0               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  2479  0028C8  0100               	movlb	0	; () banked
  2480  0028CA  27A2               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  2481  0028CC  0100               	movlb	0	; () banked
  2482  0028CE  51A1               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  2483  0028D0  0100               	movlb	0	; () banked
  2484  0028D2  23A3               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),f,b
  2485  0028D4  0100               	movlb	0	; () banked
  2486  0028D6  51BB               	movf	vscp_handleProtocolEvent@i& (0+255),w,b
  2487  0028D8  0100               	movlb	0	; () banked
  2488  0028DA  19A2               	xorwf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  2489  0028DC  11A3               	iorwf	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  2490  0028DE  A4D8               	btfss	status,2,c
  2491  0028E0  D035               	goto	l10172
  2492  0028E2                     l10152:
  2493                           
  2494                           ;vscp_firmware.c: 976: uint8_t bytes;
  2495                           ;vscp_firmware.c: 978: if ((i % 7) == 6) bytes = 7;
  2496  0028E2  0100               	movlb	0	; () banked
  2497  0028E4  C0BB  F018         	movff	vscp_handleProtocolEvent@i,___awmod@dividend
  2498  0028E8  6A19               	clrf	___awmod@dividend+1,c
  2499  0028EA  0E00               	movlw	0
  2500  0028EC  6E1B               	movwf	___awmod@divisor+1,c
  2501  0028EE  0E07               	movlw	7
  2502  0028F0  6E1A               	movwf	___awmod@divisor,c
  2503  0028F2  EC8A  F035         	call	___awmod	;wreg free
  2504  0028F6  5018               	movf	?___awmod,w,c
  2505  0028F8  0A06               	xorlw	6
  2506  0028FA  1019               	iorwf	?___awmod+1,w,c
  2507  0028FC  A4D8               	btfss	status,2,c
  2508  0028FE  D002               	goto	l10156
  2509  002900  0E07               	movlw	7
  2510  002902  D00B               	goto	L4
  2511  002904                     l10156:
  2512                           
  2513                           ;vscp_firmware.c: 979: else bytes = (i % 7) + 1;
  2514  002904  0100               	movlb	0	; () banked
  2515  002906  C0BB  F018         	movff	vscp_handleProtocolEvent@i,___awmod@dividend
  2516  00290A  6A19               	clrf	___awmod@dividend+1,c
  2517  00290C  0E00               	movlw	0
  2518  00290E  6E1B               	movwf	___awmod@divisor+1,c
  2519  002910  0E07               	movlw	7
  2520  002912  6E1A               	movwf	___awmod@divisor,c
  2521  002914  EC8A  F035         	call	___awmod	;wreg free
  2522  002918  2818               	incf	?___awmod,w,c
  2523  00291A                     L4:
  2524  00291A  0100               	movlb	0	; () banked
  2525  00291C  6FAF               	movwf	vscp_handleProtocolEvent@bytes& (0+255),b
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;vscp_firmware.c: 981: vscp_omsg.flags = 0x80 + bytes + 1;
  2529                           
  2530                           ; BSR set to: 0
  2531  00291E  0100               	movlb	0	; () banked
  2532  002920  51AF               	movf	vscp_handleProtocolEvent@bytes& (0+255),w,b
  2533  002922  0F81               	addlw	129
  2534  002924  0100               	movlb	0	; () banked
  2535  002926  6FD4               	movwf	_vscp_omsg& (0+255),b
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;vscp_firmware.c: 982: vscp_omsg.priority = 0x03;
  2539  002928  0E03               	movlw	3
  2540  00292A  0100               	movlb	0	; () banked
  2541  00292C  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;vscp_firmware.c: 983: vscp_omsg.vscp_class = 0;
  2545  00292E  0E00               	movlw	0
  2546  002930  0100               	movlb	0	; () banked
  2547  002932  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  2548  002934  0E00               	movlw	0
  2549  002936  0100               	movlb	0	; () banked
  2550  002938  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;vscp_firmware.c: 984: vscp_omsg.vscp_type = 26;
  2554  00293A  0E1A               	movlw	26
  2555  00293C  0100               	movlb	0	; () banked
  2556  00293E  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;vscp_firmware.c: 985: vscp_omsg.data[ 0 ] = pos;
  2560  002940  C0AE  F0D9         	movff	vscp_handleProtocolEvent@pos,_vscp_omsg+5
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;vscp_firmware.c: 988: vscp_sendEvent();
  2564  002944  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  2565                           
  2566                           ;vscp_firmware.c: 989: pos++;
  2567  002948  0100               	movlb	0	; () banked
  2568  00294A  2BAE               	incf	vscp_handleProtocolEvent@pos& (0+255),f,b
  2569  00294C                     l10172:
  2570                           
  2571                           ; BSR set to: 0
  2572  00294C  0100               	movlb	0	; () banked
  2573  00294E  2BBB               	incf	vscp_handleProtocolEvent@i& (0+255),f,b
  2574  002950                     l10174:
  2575                           
  2576                           ; BSR set to: 0
  2577  002950  0100               	movlb	0	; () banked
  2578  002952  51B0               	movf	vscp_handleProtocolEvent@len& (0+255),w,b
  2579  002954  0100               	movlb	0	; () banked
  2580  002956  5DBB               	subwf	vscp_handleProtocolEvent@i& (0+255),w,b
  2581  002958  B0D8               	btfsc	status,0,c
  2582  00295A  D340               	goto	l1241
  2583  00295C  D77A               	goto	l10146
  2584  00295E                     l10176:
  2585                           
  2586                           ;vscp_firmware.c: 997: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  2587  00295E  0100               	movlb	0	; () banked
  2588  002960  51D2               	movf	_vscp_nickname& (0+255),w,b
  2589  002962  EE20  F041         	lfsr	2,_vscp_imsg+6
  2590  002966  62DF               	cpfseq	indf2,c
  2591  002968  D339               	goto	l1241
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;vscp_firmware.c: 998: uint8_t i;
  2595                           ;vscp_firmware.c: 999: uint8_t pos = vscp_imsg.data[ 1 ];
  2596  00296A  C042  F0B1         	movff	_vscp_imsg+7,vscp_handleProtocolEvent@pos_1059
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;vscp_firmware.c: 1000: uint8_t len = (vscp_imsg.flags - 2) & 0x07;
  2600  00296E  503B               	movf	_vscp_imsg,w,c
  2601  002970  0FFE               	addlw	254
  2602  002972  0B07               	andlw	7
  2603  002974  0100               	movlb	0	; () banked
  2604  002976  6FB2               	movwf	vscp_handleProtocolEvent@len_1060& (0+255),b
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;vscp_firmware.c: 1002: for (i = 0; i < len; i++) {
  2608  002978  0E00               	movlw	0
  2609  00297A  0100               	movlb	0	; () banked
  2610  00297C  6FB8               	movwf	vscp_handleProtocolEvent@i_1058& (0+255),b
  2611  00297E  D03A               	goto	l10190
  2612  002980                     l10184:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;vscp_firmware.c: 1004: vscp_writeRegister(pos + i, vscp_imsg.data[ 2 + i ]);
  2616  002980  0100               	movlb	0	; () banked
  2617  002982  51B8               	movf	vscp_handleProtocolEvent@i_1058& (0+255),w,b
  2618  002984  0100               	movlb	0	; () banked
  2619  002986  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  2620  002988  6BA1               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  2621  00298A  0E02               	movlw	2
  2622  00298C  0100               	movlb	0	; () banked
  2623  00298E  27A0               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  2624  002990  0E00               	movlw	0
  2625  002992  23A1               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  2626  002994  0E41               	movlw	low (_vscp_imsg+6)
  2627  002996  0100               	movlb	0	; () banked
  2628  002998  25A0               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  2629  00299A  6ED9               	movwf	fsr2l,c
  2630  00299C  0E00               	movlw	high (_vscp_imsg+6)
  2631  00299E  0100               	movlb	0	; () banked
  2632  0029A0  21A1               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  2633  0029A2  6EDA               	movwf	fsr2h,c
  2634  0029A4  50DF               	movf	indf2,w,c
  2635  0029A6  6E31               	movwf	vscp_writeRegister@value,c
  2636  0029A8  0100               	movlb	0	; () banked
  2637  0029AA  51B1               	movf	vscp_handleProtocolEvent@pos_1059& (0+255),w,b
  2638  0029AC  0100               	movlb	0	; () banked
  2639  0029AE  25B8               	addwf	vscp_handleProtocolEvent@i_1058& (0+255),w,b
  2640  0029B0  EC67  F039         	call	_vscp_writeRegister
  2641                           
  2642                           ;vscp_firmware.c: 1005: vscp_omsg.data[ 1 + i ] = vscp_readRegister(pos + i);
  2643  0029B4  0100               	movlb	0	; () banked
  2644  0029B6  51B1               	movf	vscp_handleProtocolEvent@pos_1059& (0+255),w,b
  2645  0029B8  0100               	movlb	0	; () banked
  2646  0029BA  25B8               	addwf	vscp_handleProtocolEvent@i_1058& (0+255),w,b
  2647  0029BC  ECEB  F039         	call	_vscp_readRegister
  2648  0029C0  0100               	movlb	0	; () banked
  2649  0029C2  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  2650  0029C4  0100               	movlb	0	; () banked
  2651  0029C6  51B8               	movf	vscp_handleProtocolEvent@i_1058& (0+255),w,b
  2652  0029C8  0100               	movlb	0	; () banked
  2653  0029CA  6FA1               	movwf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  2654  0029CC  6BA2               	clrf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  2655  0029CE  0E01               	movlw	1
  2656  0029D0  0100               	movlb	0	; () banked
  2657  0029D2  27A1               	addwf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  2658  0029D4  0E00               	movlw	0
  2659  0029D6  23A2               	addwfc	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  2660  0029D8  0100               	movlb	0	; () banked
  2661  0029DA  0ED9               	movlw	low (_vscp_omsg+5)
  2662  0029DC  0100               	movlb	0	; () banked
  2663  0029DE  25A1               	addwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  2664  0029E0  6ED9               	movwf	fsr2l,c
  2665  0029E2  0100               	movlb	0	; () banked
  2666  0029E4  0E00               	movlw	high (_vscp_omsg+5)
  2667  0029E6  0100               	movlb	0	; () banked
  2668  0029E8  21A2               	addwfc	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  2669  0029EA  6EDA               	movwf	fsr2h,c
  2670  0029EC  C0A0  FFDF         	movff	??_vscp_handleProtocolEvent,indf2
  2671                           
  2672                           ; BSR set to: 0
  2673  0029F0  0100               	movlb	0	; () banked
  2674  0029F2  2BB8               	incf	vscp_handleProtocolEvent@i_1058& (0+255),f,b
  2675  0029F4                     l10190:
  2676                           
  2677                           ; BSR set to: 0
  2678  0029F4  0100               	movlb	0	; () banked
  2679  0029F6  51B2               	movf	vscp_handleProtocolEvent@len_1060& (0+255),w,b
  2680  0029F8  0100               	movlb	0	; () banked
  2681  0029FA  5DB8               	subwf	vscp_handleProtocolEvent@i_1058& (0+255),w,b
  2682  0029FC  A0D8               	btfss	status,0,c
  2683  0029FE  D7C0               	goto	l10184
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;vscp_firmware.c: 1006: }
  2687                           ;vscp_firmware.c: 1008: vscp_omsg.priority = 0x03;
  2688                           
  2689                           ; BSR set to: 0
  2690  002A00  0E03               	movlw	3
  2691  002A02  0100               	movlb	0	; () banked
  2692  002A04  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  2693                           
  2694                           ;vscp_firmware.c: 1009: vscp_omsg.vscp_class = 0;
  2695  002A06  0E00               	movlw	0
  2696  002A08  0100               	movlb	0	; () banked
  2697  002A0A  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  2698  002A0C  0E00               	movlw	0
  2699  002A0E  0100               	movlb	0	; () banked
  2700  002A10  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  2701                           
  2702                           ;vscp_firmware.c: 1010: vscp_omsg.vscp_type = 26;
  2703  002A12  0E1A               	movlw	26
  2704  002A14  0100               	movlb	0	; () banked
  2705  002A16  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  2706                           
  2707                           ;vscp_firmware.c: 1011: vscp_omsg.data[ 0 ] = 0;
  2708  002A18  0E00               	movlw	0
  2709  002A1A  0100               	movlb	0	; () banked
  2710  002A1C  6FD9               	movwf	(_vscp_omsg+5)& (0+255),b
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;vscp_firmware.c: 1012: vscp_omsg.flags = 0x80 + len + 1;
  2714  002A1E  0100               	movlb	0	; () banked
  2715  002A20  51B2               	movf	vscp_handleProtocolEvent@len_1060& (0+255),w,b
  2716  002A22  0F81               	addlw	129
  2717  002A24  0100               	movlb	0	; () banked
  2718  002A26  6FD4               	movwf	_vscp_omsg& (0+255),b
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;vscp_firmware.c: 1015: vscp_sendEvent();
  2722  002A28  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  2723  002A2C  D2D7               	goto	l1241
  2724  002A2E                     l10198:
  2725                           
  2726                           ;vscp_firmware.c: 1022: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  2727  002A2E  0100               	movlb	0	; () banked
  2728  002A30  51D2               	movf	_vscp_nickname& (0+255),w,b
  2729  002A32  EE20  F041         	lfsr	2,_vscp_imsg+6
  2730  002A36  62DF               	cpfseq	indf2,c
  2731  002A38  D2D1               	goto	l1241
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;vscp_firmware.c: 1024: vscp_omsg.data[ 1 ] = vscp_writeAppReg(
  2735                           ;vscp_firmware.c: 1025: vscp_imsg.data[ 1 ],
  2736                           ;vscp_firmware.c: 1026: vscp_readAppReg(vscp_imsg.data[ 1 ]) + 1);
  2737  002A3A  5042               	movf	_vscp_imsg+7,w,c
  2738  002A3C  ECEF  F017         	call	_vscp_readAppReg
  2739  002A40  0100               	movlb	0	; () banked
  2740  002A42  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  2741  002A44  0100               	movlb	0	; () banked
  2742  002A46  29A0               	incf	??_vscp_handleProtocolEvent& (0+255),w,b
  2743  002A48  6E2A               	movwf	vscp_writeAppReg@val,c
  2744  002A4A  5042               	movf	_vscp_imsg+7,w,c
  2745  002A4C  EC37  F003         	call	_vscp_writeAppReg
  2746  002A50  0100               	movlb	0	; () banked
  2747  002A52  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;vscp_firmware.c: 1028: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  2751  002A54  C042  F0D9         	movff	_vscp_imsg+7,_vscp_omsg+5
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;vscp_firmware.c: 1030: vscp_omsg.priority = 0x03;
  2755  002A58  0E03               	movlw	3
  2756  002A5A  0100               	movlb	0	; () banked
  2757  002A5C  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;vscp_firmware.c: 1031: vscp_omsg.flags = 0x80 + 2;
  2761  002A5E  0E82               	movlw	130
  2762  002A60  0100               	movlb	0	; () banked
  2763  002A62  6FD4               	movwf	_vscp_omsg& (0+255),b
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;vscp_firmware.c: 1032: vscp_omsg.vscp_class = 0;
  2767  002A64  0E00               	movlw	0
  2768  002A66  0100               	movlb	0	; () banked
  2769  002A68  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  2770  002A6A  0E00               	movlw	0
  2771  002A6C  0100               	movlb	0	; () banked
  2772  002A6E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;vscp_firmware.c: 1033: vscp_omsg.vscp_type = 10;
  2776  002A70  0E0A               	movlw	10
  2777  002A72  0100               	movlb	0	; () banked
  2778  002A74  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;vscp_firmware.c: 1036: vscp_sendEvent();
  2782  002A76  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  2783  002A7A  D2B0               	goto	l1241
  2784  002A7C                     l10214:
  2785                           
  2786                           ;vscp_firmware.c: 1042: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  2787  002A7C  0100               	movlb	0	; () banked
  2788  002A7E  51D2               	movf	_vscp_nickname& (0+255),w,b
  2789  002A80  EE20  F041         	lfsr	2,_vscp_imsg+6
  2790  002A84  62DF               	cpfseq	indf2,c
  2791  002A86  D2AA               	goto	l1241
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;vscp_firmware.c: 1044: vscp_omsg.data[ 1 ] = vscp_writeAppReg(
  2795                           ;vscp_firmware.c: 1045: vscp_imsg.data[ 1 ],
  2796                           ;vscp_firmware.c: 1046: vscp_readAppReg(vscp_imsg.data[ 1 ]) - 1);
  2797  002A88  5042               	movf	_vscp_imsg+7,w,c
  2798  002A8A  ECEF  F017         	call	_vscp_readAppReg
  2799  002A8E  0100               	movlb	0	; () banked
  2800  002A90  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  2801  002A92  0100               	movlb	0	; () banked
  2802  002A94  05A0               	decf	??_vscp_handleProtocolEvent& (0+255),w,b
  2803  002A96  6E2A               	movwf	vscp_writeAppReg@val,c
  2804  002A98  5042               	movf	_vscp_imsg+7,w,c
  2805  002A9A  EC37  F003         	call	_vscp_writeAppReg
  2806  002A9E  0100               	movlb	0	; () banked
  2807  002AA0  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;vscp_firmware.c: 1048: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  2811  002AA2  C042  F0D9         	movff	_vscp_imsg+7,_vscp_omsg+5
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;vscp_firmware.c: 1050: vscp_omsg.priority = 0x03;
  2815  002AA6  0E03               	movlw	3
  2816  002AA8  0100               	movlb	0	; () banked
  2817  002AAA  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;vscp_firmware.c: 1051: vscp_omsg.flags = 0x80 + 2;
  2821  002AAC  0E82               	movlw	130
  2822  002AAE  0100               	movlb	0	; () banked
  2823  002AB0  6FD4               	movwf	_vscp_omsg& (0+255),b
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;vscp_firmware.c: 1052: vscp_omsg.vscp_class = 0;
  2827  002AB2  0E00               	movlw	0
  2828  002AB4  0100               	movlb	0	; () banked
  2829  002AB6  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  2830  002AB8  0E00               	movlw	0
  2831  002ABA  0100               	movlb	0	; () banked
  2832  002ABC  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;vscp_firmware.c: 1053: vscp_omsg.vscp_type = 10;
  2836  002ABE  0E0A               	movlw	10
  2837  002AC0  0100               	movlb	0	; () banked
  2838  002AC2  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;vscp_firmware.c: 1056: vscp_sendEvent();
  2842  002AC4  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  2843  002AC8  D289               	goto	l1241
  2844  002ACA                     l10230:
  2845                           
  2846                           ;vscp_firmware.c: 1062: if ((vscp_nickname == vscp_imsg.data[ 0 ]) ||
  2847                           ;vscp_firmware.c: 1063: (0xff == vscp_imsg.data[ 0 ])) {
  2848  002ACA  5041               	movf	_vscp_imsg+6,w,c
  2849  002ACC  0100               	movlb	0	; () banked
  2850  002ACE  19D2               	xorwf	_vscp_nickname& (0+255),w,b
  2851  002AD0  B4D8               	btfsc	status,2,c
  2852  002AD2  D003               	goto	l10234
  2853                           
  2854                           ; BSR set to: 0
  2855  002AD4  2841               	incf	_vscp_imsg+6,w,c
  2856  002AD6  A4D8               	btfss	status,2,c
  2857  002AD8  D281               	goto	l1241
  2858  002ADA                     l10234:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;vscp_firmware.c: 1065: uint8_t i, j, k = 0;
  2862  002ADA  0E00               	movlw	0
  2863  002ADC  0100               	movlb	0	; () banked
  2864  002ADE  6FB6               	movwf	vscp_handleProtocolEvent@k& (0+255),b
  2865                           
  2866                           ;vscp_firmware.c: 1069: vscp_omsg.priority = 0x03;
  2867  002AE0  0E03               	movlw	3
  2868  002AE2  0100               	movlb	0	; () banked
  2869  002AE4  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  2870                           
  2871                           ;vscp_firmware.c: 1070: vscp_omsg.flags = 0x80 + 8;
  2872  002AE6  0E88               	movlw	136
  2873  002AE8  0100               	movlb	0	; () banked
  2874  002AEA  6FD4               	movwf	_vscp_omsg& (0+255),b
  2875                           
  2876                           ;vscp_firmware.c: 1071: vscp_omsg.vscp_class = 0;
  2877  002AEC  0E00               	movlw	0
  2878  002AEE  0100               	movlb	0	; () banked
  2879  002AF0  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  2880  002AF2  0E00               	movlw	0
  2881  002AF4  0100               	movlb	0	; () banked
  2882  002AF6  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  2883                           
  2884                           ;vscp_firmware.c: 1072: vscp_omsg.vscp_type = 32;
  2885  002AF8  0E20               	movlw	32
  2886  002AFA  0100               	movlb	0	; () banked
  2887  002AFC  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  2888                           
  2889                           ;vscp_firmware.c: 1074: for (i = 0; i < 3; i++)
  2890  002AFE  0E00               	movlw	0
  2891  002B00  0100               	movlb	0	; () banked
  2892  002B02  6FBA               	movwf	vscp_handleProtocolEvent@i_1062& (0+255),b
  2893  002B04  D02E               	goto	L8
  2894  002B06                     l1207:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;vscp_firmware.c: 1075: {
  2898                           ;vscp_firmware.c: 1076: vscp_omsg.data[0] = i;
  2899  002B06  C0BA  F0D9         	movff	vscp_handleProtocolEvent@i_1062,_vscp_omsg+5
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;vscp_firmware.c: 1078: for (j = 1; j < 8; j++) {
  2903  002B0A  0E01               	movlw	1
  2904  002B0C  0100               	movlb	0	; () banked
  2905  002B0E  6FBC               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  2906  002B10  D01B               	goto	L9
  2907  002B12                     l10246:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;vscp_firmware.c: 1079: vscp_omsg.data[j] = vscp_getGUID(15 - k++);
  2911  002B12  0100               	movlb	0	; () banked
  2912  002B14  51BC               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  2913  002B16  0D01               	mullw	1
  2914  002B18  0100               	movlb	0	; () banked
  2915  002B1A  0ED9               	movlw	low (_vscp_omsg+5)
  2916  002B1C  24F3               	addwf	prodl,w,c
  2917  002B1E  6ED9               	movwf	fsr2l,c
  2918  002B20  0100               	movlb	0	; () banked
  2919  002B22  0E00               	movlw	high (_vscp_omsg+5)
  2920  002B24  20F4               	addwfc	prodh,w,c
  2921  002B26  6EDA               	movwf	fsr2h,c
  2922  002B28  0100               	movlb	0	; () banked
  2923  002B2A  51B6               	movf	vscp_handleProtocolEvent@k& (0+255),w,b
  2924  002B2C  0800               	sublw	0
  2925  002B2E  0F0F               	addlw	15
  2926  002B30  EC22  F03A         	call	_vscp_getGUID
  2927  002B34  6EDF               	movwf	indf2,c
  2928  002B36  0100               	movlb	0	; () banked
  2929  002B38  2BB6               	incf	vscp_handleProtocolEvent@k& (0+255),f,b
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;vscp_firmware.c: 1080: if (k > 16)
  2933  002B3A  0E10               	movlw	16
  2934  002B3C  0100               	movlb	0	; () banked
  2935  002B3E  65B6               	cpfsgt	vscp_handleProtocolEvent@k& (0+255),b
  2936  002B40  D001               	goto	l10254
  2937  002B42  D006               	goto	l10258
  2938  002B44                     l10254:
  2939                           
  2940                           ; BSR set to: 0
  2941  002B44  0100               	movlb	0	; () banked
  2942  002B46  2BBC               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  2943  002B48                     L9:
  2944                           
  2945                           ; BSR set to: 0
  2946  002B48  0E07               	movlw	7
  2947  002B4A  0100               	movlb	0	; () banked
  2948  002B4C  65BC               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  2949  002B4E  D7E1               	goto	l10246
  2950  002B50                     l10258:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;vscp_firmware.c: 1082: }
  2954                           ;vscp_firmware.c: 1084: if (k > 16)
  2955  002B50  0E10               	movlw	16
  2956  002B52  0100               	movlb	0	; () banked
  2957  002B54  65B6               	cpfsgt	vscp_handleProtocolEvent@k& (0+255),b
  2958  002B56  D001               	goto	l10262
  2959  002B58  D008               	goto	l10268
  2960  002B5A                     l10262:
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;vscp_firmware.c: 1087: vscp_sendEvent();
  2964  002B5A  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  2965  002B5E  0100               	movlb	0	; () banked
  2966  002B60  2BBA               	incf	vscp_handleProtocolEvent@i_1062& (0+255),f,b
  2967  002B62                     L8:
  2968                           
  2969                           ; BSR set to: 0
  2970  002B62  0E02               	movlw	2
  2971  002B64  0100               	movlb	0	; () banked
  2972  002B66  65BA               	cpfsgt	vscp_handleProtocolEvent@i_1062& (0+255),b
  2973  002B68  D7CE               	goto	l1207
  2974  002B6A                     l10268:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;vscp_firmware.c: 1088: }
  2978                           ;vscp_firmware.c: 1090: for (j = 0; j < 5; j++)
  2979  002B6A  0E00               	movlw	0
  2980  002B6C  0100               	movlb	0	; () banked
  2981  002B6E  6FBC               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  2982  002B70  D038               	goto	L10
  2983  002B72                     l10274:
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;vscp_firmware.c: 1091: {
  2987                           ;vscp_firmware.c: 1092: if (vscp_getMDF_URL(j) > 0)
  2988  002B72  0100               	movlb	0	; () banked
  2989  002B74  51BC               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  2990  002B76  ECF7  F039         	call	_vscp_getMDF_URL
  2991  002B7A  0900               	iorlw	0
  2992  002B7C  B4D8               	btfsc	status,2,c
  2993  002B7E  D019               	goto	l10278
  2994                           
  2995                           ;vscp_firmware.c: 1093: vscp_omsg.data[3 + j] = vscp_getMDF_URL(j);
  2996  002B80  0100               	movlb	0	; () banked
  2997  002B82  51BC               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  2998  002B84  0100               	movlb	0	; () banked
  2999  002B86  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  3000  002B88  6BA1               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  3001  002B8A  0E03               	movlw	3
  3002  002B8C  0100               	movlb	0	; () banked
  3003  002B8E  27A0               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  3004  002B90  0E00               	movlw	0
  3005  002B92  23A1               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  3006  002B94  0100               	movlb	0	; () banked
  3007  002B96  0ED9               	movlw	low (_vscp_omsg+5)
  3008  002B98  0100               	movlb	0	; () banked
  3009  002B9A  25A0               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  3010  002B9C  6ED9               	movwf	fsr2l,c
  3011  002B9E  0100               	movlb	0	; () banked
  3012  002BA0  0E00               	movlw	high (_vscp_omsg+5)
  3013  002BA2  0100               	movlb	0	; () banked
  3014  002BA4  21A1               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  3015  002BA6  6EDA               	movwf	fsr2h,c
  3016  002BA8  0100               	movlb	0	; () banked
  3017  002BAA  51BC               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  3018  002BAC  ECF7  F039         	call	_vscp_getMDF_URL
  3019  002BB0  D015               	goto	L5
  3020  002BB2                     l10278:
  3021                           
  3022                           ;vscp_firmware.c: 1094: else
  3023                           ;vscp_firmware.c: 1095: vscp_omsg.data[3 + j] = 0;
  3024  002BB2  0100               	movlb	0	; () banked
  3025  002BB4  51BC               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  3026  002BB6  0100               	movlb	0	; () banked
  3027  002BB8  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  3028  002BBA  6BA1               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  3029  002BBC  0E03               	movlw	3
  3030  002BBE  0100               	movlb	0	; () banked
  3031  002BC0  27A0               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  3032  002BC2  0E00               	movlw	0
  3033  002BC4  23A1               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  3034  002BC6  0100               	movlb	0	; () banked
  3035  002BC8  0ED9               	movlw	low (_vscp_omsg+5)
  3036  002BCA  0100               	movlb	0	; () banked
  3037  002BCC  25A0               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  3038  002BCE  6ED9               	movwf	fsr2l,c
  3039  002BD0  0100               	movlb	0	; () banked
  3040  002BD2  0E00               	movlw	high (_vscp_omsg+5)
  3041  002BD4  0100               	movlb	0	; () banked
  3042  002BD6  21A1               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  3043  002BD8  6EDA               	movwf	fsr2h,c
  3044  002BDA  0E00               	movlw	0
  3045  002BDC                     L5:
  3046  002BDC  6EDF               	movwf	indf2,c
  3047                           
  3048                           ; BSR set to: 0
  3049  002BDE  0100               	movlb	0	; () banked
  3050  002BE0  2BBC               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  3051  002BE2                     L10:
  3052                           
  3053                           ; BSR set to: 0
  3054  002BE2  0E04               	movlw	4
  3055  002BE4  0100               	movlb	0	; () banked
  3056  002BE6  65BC               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  3057  002BE8  D7C4               	goto	l10274
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;vscp_firmware.c: 1096: }
  3061                           ;vscp_firmware.c: 1098: vscp_sendEvent();
  3062                           
  3063                           ; BSR set to: 0
  3064  002BEA  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  3065                           
  3066                           ;vscp_firmware.c: 1100: k = 5;
  3067  002BEE  0E05               	movlw	5
  3068  002BF0  0100               	movlb	0	; () banked
  3069  002BF2  6FB6               	movwf	vscp_handleProtocolEvent@k& (0+255),b
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;vscp_firmware.c: 1101: for (i = 3; i < 7; i++)
  3073  002BF4  0E03               	movlw	3
  3074  002BF6  0100               	movlb	0	; () banked
  3075  002BF8  6FBA               	movwf	vscp_handleProtocolEvent@i_1062& (0+255),b
  3076  002BFA  D022               	goto	L11
  3077  002BFC                     l1217:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;vscp_firmware.c: 1102: {
  3081                           ;vscp_firmware.c: 1103: vscp_omsg.data[0] = i;
  3082  002BFC  C0BA  F0D9         	movff	vscp_handleProtocolEvent@i_1062,_vscp_omsg+5
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;vscp_firmware.c: 1105: for (j = 1; j < 8; j++) {
  3086  002C00  0E01               	movlw	1
  3087  002C02  0100               	movlb	0	; () banked
  3088  002C04  6FBC               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  3089  002C06  D014               	goto	L12
  3090  002C08                     l10300:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;vscp_firmware.c: 1106: vscp_omsg.data[j] = vscp_getMDF_URL(k++);
  3094  002C08  0100               	movlb	0	; () banked
  3095  002C0A  51BC               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  3096  002C0C  0D01               	mullw	1
  3097  002C0E  0100               	movlb	0	; () banked
  3098  002C10  0ED9               	movlw	low (_vscp_omsg+5)
  3099  002C12  24F3               	addwf	prodl,w,c
  3100  002C14  6ED9               	movwf	fsr2l,c
  3101  002C16  0100               	movlb	0	; () banked
  3102  002C18  0E00               	movlw	high (_vscp_omsg+5)
  3103  002C1A  20F4               	addwfc	prodh,w,c
  3104  002C1C  6EDA               	movwf	fsr2h,c
  3105  002C1E  0100               	movlb	0	; () banked
  3106  002C20  51B6               	movf	vscp_handleProtocolEvent@k& (0+255),w,b
  3107  002C22  ECF7  F039         	call	_vscp_getMDF_URL
  3108  002C26  6EDF               	movwf	indf2,c
  3109  002C28  0100               	movlb	0	; () banked
  3110  002C2A  2BB6               	incf	vscp_handleProtocolEvent@k& (0+255),f,b
  3111                           
  3112                           ; BSR set to: 0
  3113  002C2C  0100               	movlb	0	; () banked
  3114  002C2E  2BBC               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  3115  002C30                     L12:
  3116                           
  3117                           ; BSR set to: 0
  3118  002C30  0E07               	movlw	7
  3119  002C32  0100               	movlb	0	; () banked
  3120  002C34  65BC               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  3121  002C36  D7E8               	goto	l10300
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;vscp_firmware.c: 1107: }
  3125                           ;vscp_firmware.c: 1108: vscp_sendEvent();
  3126                           
  3127                           ; BSR set to: 0
  3128  002C38  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  3129  002C3C  0100               	movlb	0	; () banked
  3130  002C3E  2BBA               	incf	vscp_handleProtocolEvent@i_1062& (0+255),f,b
  3131  002C40                     L11:
  3132                           
  3133                           ; BSR set to: 0
  3134  002C40  0E06               	movlw	6
  3135  002C42  0100               	movlb	0	; () banked
  3136  002C44  65BA               	cpfsgt	vscp_handleProtocolEvent@i_1062& (0+255),b
  3137  002C46  D7DA               	goto	l1217
  3138  002C48  D1C9               	goto	l1241
  3139  002C4A                     l10314:
  3140                           
  3141                           ;vscp_firmware.c: 1117: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  3142  002C4A  0100               	movlb	0	; () banked
  3143  002C4C  51D2               	movf	_vscp_nickname& (0+255),w,b
  3144  002C4E  EE20  F041         	lfsr	2,_vscp_imsg+6
  3145  002C52  62DF               	cpfseq	indf2,c
  3146  002C54  D1C3               	goto	l1241
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;vscp_firmware.c: 1119: vscp_omsg.priority = 0x03;
  3150  002C56  0E03               	movlw	3
  3151  002C58  0100               	movlb	0	; () banked
  3152  002C5A  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  3153                           
  3154                           ;vscp_firmware.c: 1120: vscp_omsg.flags = 0x80 + 7;
  3155  002C5C  0E87               	movlw	135
  3156  002C5E  0100               	movlb	0	; () banked
  3157  002C60  6FD4               	movwf	_vscp_omsg& (0+255),b
  3158                           
  3159                           ;vscp_firmware.c: 1121: vscp_omsg.vscp_class = 0;
  3160  002C62  0E00               	movlw	0
  3161  002C64  0100               	movlb	0	; () banked
  3162  002C66  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  3163  002C68  0E00               	movlw	0
  3164  002C6A  0100               	movlb	0	; () banked
  3165  002C6C  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  3166                           
  3167                           ;vscp_firmware.c: 1122: vscp_omsg.vscp_type = 34;
  3168  002C6E  0E22               	movlw	34
  3169  002C70  0100               	movlb	0	; () banked
  3170  002C72  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;vscp_firmware.c: 1124: vscp_getMatrixInfo((char *) vscp_omsg.data);
  3174  002C74  0100               	movlb	0	; () banked
  3175  002C76  0E00               	movlw	high (_vscp_omsg+5)
  3176  002C78  6E19               	movwf	vscp_getMatrixInfo@pData+1,c
  3177  002C7A  0100               	movlb	0	; () banked
  3178  002C7C  0ED9               	movlw	low (_vscp_omsg+5)
  3179  002C7E  6E18               	movwf	vscp_getMatrixInfo@pData,c
  3180  002C80  ECA1  F039         	call	_vscp_getMatrixInfo	;wreg free
  3181                           
  3182                           ;vscp_firmware.c: 1127: vscp_sendEvent();
  3183  002C84  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  3184  002C88  D1A9               	goto	l1241
  3185  002C8A                     l10322:
  3186                           
  3187                           ;vscp_firmware.c: 1140: if ( vscp_nickname == vscp_imsg.data[0] ) {
  3188  002C8A  0100               	movlb	0	; () banked
  3189  002C8C  51D2               	movf	_vscp_nickname& (0+255),w,b
  3190  002C8E  EE20  F041         	lfsr	2,_vscp_imsg+6
  3191  002C92  62DF               	cpfseq	indf2,c
  3192  002C94  D1A3               	goto	l1241
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;vscp_firmware.c: 1142: uint16_t page_save;
  3196                           ;vscp_firmware.c: 1143: uint8_t byte = 0, bytes = 0;
  3197  002C96  0E00               	movlw	0
  3198  002C98  0100               	movlb	0	; () banked
  3199  002C9A  6FB9               	movwf	vscp_handleProtocolEvent@byte& (0+255),b
  3200  002C9C  0E00               	movlw	0
  3201  002C9E  0100               	movlb	0	; () banked
  3202  002CA0  6FB7               	movwf	vscp_handleProtocolEvent@bytes_1068& (0+255),b
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;vscp_firmware.c: 1144: uint8_t bytes_this_time, cb;
  3206                           ;vscp_firmware.c: 1148: if ( ( vscp_imsg.flags & 0x0f) > 3 ) {
  3207  002CA2  C03B  F0A0         	movff	_vscp_imsg,??_vscp_handleProtocolEvent
  3208  002CA6  0E0F               	movlw	15
  3209  002CA8  0100               	movlb	0	; () banked
  3210  002CAA  17A0               	andwf	??_vscp_handleProtocolEvent& (0+255),f,b
  3211  002CAC  0E04               	movlw	4
  3212  002CAE  0100               	movlb	0	; () banked
  3213  002CB0  5DA0               	subwf	??_vscp_handleProtocolEvent& (0+255),w,b
  3214  002CB2  A0D8               	btfss	status,0,c
  3215  002CB4  D005               	goto	l10332
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;vscp_firmware.c: 1151: bytes = vscp_imsg.data[4];
  3219  002CB6  C045  F0B7         	movff	_vscp_imsg+10,vscp_handleProtocolEvent@bytes_1068
  3220                           
  3221                           ;vscp_firmware.c: 1153: if ( 0 == bytes ) {
  3222  002CBA  0100               	movlb	0	; () banked
  3223  002CBC  67B7               	tstfsz	vscp_handleProtocolEvent@bytes_1068& (0+255),b
  3224  002CBE  D003               	goto	l10334
  3225  002CC0                     l10332:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;vscp_firmware.c: 1157: else {
  3229                           ;vscp_firmware.c: 1158: bytes = 1;
  3230  002CC0  0E01               	movlw	1
  3231  002CC2  0100               	movlb	0	; () banked
  3232  002CC4  6FB7               	movwf	vscp_handleProtocolEvent@bytes_1068& (0+255),b
  3233  002CC6                     l10334:
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;vscp_firmware.c: 1159: }
  3237                           ;vscp_firmware.c: 1162: page_save = vscp_page_select;
  3238  002CC6  C032  F0A9         	movff	_vscp_page_select,vscp_handleProtocolEvent@page_save
  3239  002CCA  C033  F0AA         	movff	_vscp_page_select+1,vscp_handleProtocolEvent@page_save+1
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;vscp_firmware.c: 1167: vscp_page_select = ((vscp_imsg.data[1] << 8) | vscp_imsg.data[2]
      +                          );
  3243  002CCE  5043               	movf	_vscp_imsg+8,w,c
  3244  002CD0  C042  F0A0         	movff	_vscp_imsg+7,??_vscp_handleProtocolEvent
  3245  002CD4  0100               	movlb	0	; () banked
  3246  002CD6  6BA1               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  3247  002CD8  C0A0  F0A1         	movff	??_vscp_handleProtocolEvent,??_vscp_handleProtocolEvent+1
  3248  002CDC  0100               	movlb	0	; () banked
  3249  002CDE  6BA0               	clrf	??_vscp_handleProtocolEvent& (0+255),b
  3250  002CE0  0100               	movlb	0	; () banked
  3251  002CE2  11A0               	iorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  3252  002CE4  6E32               	movwf	_vscp_page_select,c
  3253  002CE6  0100               	movlb	0	; () banked
  3254  002CE8  51A1               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  3255  002CEA  6E33               	movwf	_vscp_page_select+1,c
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;vscp_firmware.c: 1170: vscp_omsg.priority = 0x03;
  3259  002CEC  0E03               	movlw	3
  3260  002CEE  0100               	movlb	0	; () banked
  3261  002CF0  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;vscp_firmware.c: 1171: vscp_omsg.vscp_class = 0;
  3265  002CF2  0E00               	movlw	0
  3266  002CF4  0100               	movlb	0	; () banked
  3267  002CF6  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  3268  002CF8  0E00               	movlw	0
  3269  002CFA  0100               	movlb	0	; () banked
  3270  002CFC  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;vscp_firmware.c: 1172: vscp_omsg.vscp_type = 39;
  3274  002CFE  0E27               	movlw	39
  3275  002D00  0100               	movlb	0	; () banked
  3276  002D02  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;vscp_firmware.c: 1173: vscp_omsg.data[0] = 0;
  3280  002D04  0E00               	movlw	0
  3281  002D06  0100               	movlb	0	; () banked
  3282  002D08  6FD9               	movwf	(_vscp_omsg+5)& (0+255),b
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;vscp_firmware.c: 1174: vscp_omsg.data[1] = vscp_imsg.data[1];
  3286  002D0A  C042  F0DA         	movff	_vscp_imsg+7,_vscp_omsg+6
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;vscp_firmware.c: 1175: vscp_omsg.data[2] = vscp_imsg.data[2];
  3290  002D0E  C043  F0DB         	movff	_vscp_imsg+8,_vscp_omsg+7
  3291  002D12                     l10350:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;vscp_firmware.c: 1179: if ( ( bytes - byte ) >= 4 ) {
  3295  002D12  0100               	movlb	0	; () banked
  3296  002D14  51B9               	movf	vscp_handleProtocolEvent@byte& (0+255),w,b
  3297  002D16  0100               	movlb	0	; () banked
  3298  002D18  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  3299  002D1A  6BA1               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  3300  002D1C  0100               	movlb	0	; () banked
  3301  002D1E  1FA0               	comf	??_vscp_handleProtocolEvent& (0+255),f,b
  3302  002D20  1FA1               	comf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  3303  002D22  4BA0               	infsnz	??_vscp_handleProtocolEvent& (0+255),f,b
  3304  002D24  2BA1               	incf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  3305  002D26  0100               	movlb	0	; () banked
  3306  002D28  51B7               	movf	vscp_handleProtocolEvent@bytes_1068& (0+255),w,b
  3307  002D2A  0100               	movlb	0	; () banked
  3308  002D2C  6FA2               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  3309  002D2E  6BA3               	clrf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  3310  002D30  0100               	movlb	0	; () banked
  3311  002D32  51A0               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  3312  002D34  0100               	movlb	0	; () banked
  3313  002D36  27A2               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  3314  002D38  0100               	movlb	0	; () banked
  3315  002D3A  51A1               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  3316  002D3C  0100               	movlb	0	; () banked
  3317  002D3E  23A3               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),f,b
  3318  002D40  0100               	movlb	0	; () banked
  3319  002D42  51A3               	movf	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  3320  002D44  0A80               	xorlw	128
  3321  002D46  0F80               	addlw	-128
  3322  002D48  0E04               	movlw	4
  3323  002D4A  B4D8               	btfsc	status,2,c
  3324  002D4C  5DA2               	subwf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  3325  002D4E  A0D8               	btfss	status,0,c
  3326  002D50  D002               	goto	l10354
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;vscp_firmware.c: 1180: bytes_this_time = 4;
  3330  002D52  0E04               	movlw	4
  3331  002D54  D005               	goto	L7
  3332  002D56                     l10354:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;vscp_firmware.c: 1182: else {
  3336                           ;vscp_firmware.c: 1183: bytes_this_time = (bytes - byte);
  3337  002D56  0100               	movlb	0	; () banked
  3338  002D58  51B9               	movf	vscp_handleProtocolEvent@byte& (0+255),w,b
  3339  002D5A  0800               	sublw	0
  3340  002D5C  0100               	movlb	0	; () banked
  3341  002D5E  25B7               	addwf	vscp_handleProtocolEvent@bytes_1068& (0+255),w,b
  3342  002D60                     L7:
  3343  002D60  0100               	movlb	0	; () banked
  3344  002D62  6FB3               	movwf	vscp_handleProtocolEvent@bytes_this_time& (0+255),b
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;vscp_firmware.c: 1184: }
  3348                           ;vscp_firmware.c: 1187: vscp_omsg.flags = 0x80 + 4 + bytes_this_time;
  3349  002D64  0100               	movlb	0	; () banked
  3350  002D66  51B3               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  3351  002D68  0F84               	addlw	132
  3352  002D6A  0100               	movlb	0	; () banked
  3353  002D6C  6FD4               	movwf	_vscp_omsg& (0+255),b
  3354                           
  3355                           ;vscp_firmware.c: 1188: vscp_omsg.data[3] =
  3356                           ;vscp_firmware.c: 1189: vscp_imsg.data[3] + byte;
  3357  002D6E  5044               	movf	_vscp_imsg+9,w,c
  3358  002D70  0100               	movlb	0	; () banked
  3359  002D72  25B9               	addwf	vscp_handleProtocolEvent@byte& (0+255),w,b
  3360  002D74  0100               	movlb	0	; () banked
  3361  002D76  6FDC               	movwf	(_vscp_omsg+8)& (0+255),b
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;vscp_firmware.c: 1192: for ( cb = 0; cb < bytes_this_time; cb++ ) {
  3365  002D78  0E00               	movlw	0
  3366  002D7A  0100               	movlb	0	; () banked
  3367  002D7C  6FB4               	movwf	vscp_handleProtocolEvent@cb& (0+255),b
  3368  002D7E  D021               	goto	l10362
  3369  002D80                     l10358:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;vscp_firmware.c: 1193: vscp_omsg.data[ (4 + cb) ] =
  3373                           ;vscp_firmware.c: 1194: vscp_readRegister( ( vscp_imsg.data[3] + byte + cb ) );
  3374  002D80  5044               	movf	_vscp_imsg+9,w,c
  3375  002D82  0100               	movlb	0	; () banked
  3376  002D84  25B9               	addwf	vscp_handleProtocolEvent@byte& (0+255),w,b
  3377  002D86  0100               	movlb	0	; () banked
  3378  002D88  25B4               	addwf	vscp_handleProtocolEvent@cb& (0+255),w,b
  3379  002D8A  ECEB  F039         	call	_vscp_readRegister
  3380  002D8E  0100               	movlb	0	; () banked
  3381  002D90  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  3382  002D92  0100               	movlb	0	; () banked
  3383  002D94  51B4               	movf	vscp_handleProtocolEvent@cb& (0+255),w,b
  3384  002D96  0100               	movlb	0	; () banked
  3385  002D98  6FA1               	movwf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  3386  002D9A  6BA2               	clrf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  3387  002D9C  0E04               	movlw	4
  3388  002D9E  0100               	movlb	0	; () banked
  3389  002DA0  27A1               	addwf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  3390  002DA2  0E00               	movlw	0
  3391  002DA4  23A2               	addwfc	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  3392  002DA6  0100               	movlb	0	; () banked
  3393  002DA8  0ED9               	movlw	low (_vscp_omsg+5)
  3394  002DAA  0100               	movlb	0	; () banked
  3395  002DAC  25A1               	addwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  3396  002DAE  6ED9               	movwf	fsr2l,c
  3397  002DB0  0100               	movlb	0	; () banked
  3398  002DB2  0E00               	movlw	high (_vscp_omsg+5)
  3399  002DB4  0100               	movlb	0	; () banked
  3400  002DB6  21A2               	addwfc	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  3401  002DB8  6EDA               	movwf	fsr2h,c
  3402  002DBA  C0A0  FFDF         	movff	??_vscp_handleProtocolEvent,indf2
  3403                           
  3404                           ; BSR set to: 0
  3405  002DBE  0100               	movlb	0	; () banked
  3406  002DC0  2BB4               	incf	vscp_handleProtocolEvent@cb& (0+255),f,b
  3407  002DC2                     l10362:
  3408                           
  3409                           ; BSR set to: 0
  3410  002DC2  0100               	movlb	0	; () banked
  3411  002DC4  51B3               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  3412  002DC6  0100               	movlb	0	; () banked
  3413  002DC8  5DB4               	subwf	vscp_handleProtocolEvent@cb& (0+255),w,b
  3414  002DCA  A0D8               	btfss	status,0,c
  3415  002DCC  D7D9               	goto	l10358
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;vscp_firmware.c: 1195: }
  3419                           ;vscp_firmware.c: 1198: vscp_sendEvent();
  3420                           
  3421                           ; BSR set to: 0
  3422  002DCE  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  3423                           
  3424                           ;vscp_firmware.c: 1201: byte += bytes_this_time;
  3425  002DD2  0100               	movlb	0	; () banked
  3426  002DD4  51B3               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  3427  002DD6  0100               	movlb	0	; () banked
  3428  002DD8  27B9               	addwf	vscp_handleProtocolEvent@byte& (0+255),f,b
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;vscp_firmware.c: 1204: vscp_omsg.data[0] += 1;
  3432  002DDA  0100               	movlb	0	; () banked
  3433  002DDC  2BD9               	incf	(_vscp_omsg+5)& (0+255),f,b
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;vscp_firmware.c: 1206: } while (byte < bytes);
  3437  002DDE  0100               	movlb	0	; () banked
  3438  002DE0  51B7               	movf	vscp_handleProtocolEvent@bytes_1068& (0+255),w,b
  3439  002DE2  0100               	movlb	0	; () banked
  3440  002DE4  5DB9               	subwf	vscp_handleProtocolEvent@byte& (0+255),w,b
  3441  002DE6  A0D8               	btfss	status,0,c
  3442  002DE8  D794               	goto	l10350
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;vscp_firmware.c: 1209: vscp_page_select = page_save;
  3446  002DEA  C0A9  F032         	movff	vscp_handleProtocolEvent@page_save,_vscp_page_select
  3447  002DEE  C0AA  F033         	movff	vscp_handleProtocolEvent@page_save+1,_vscp_page_select+1
  3448  002DF2  D0F4               	goto	l1241
  3449  002DF4                     l10372:
  3450                           
  3451                           ;vscp_firmware.c: 1216: if ( vscp_nickname == vscp_imsg.data[ 0 ] ) {
  3452  002DF4  0100               	movlb	0	; () banked
  3453  002DF6  51D2               	movf	_vscp_nickname& (0+255),w,b
  3454  002DF8  EE20  F041         	lfsr	2,_vscp_imsg+6
  3455  002DFC  62DF               	cpfseq	indf2,c
  3456  002DFE  D0EE               	goto	l1241
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;vscp_firmware.c: 1218: uint8_t i;
  3460                           ;vscp_firmware.c: 1219: uint16_t page_save;
  3461                           ;vscp_firmware.c: 1222: page_save = vscp_page_select;
  3462  002E00  C032  F0AB         	movff	_vscp_page_select,vscp_handleProtocolEvent@page_save_1072
  3463  002E04  C033  F0AC         	movff	_vscp_page_select+1,vscp_handleProtocolEvent@page_save_1072+1
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;vscp_firmware.c: 1226: vscp_page_select = (vscp_imsg.data[1] << 8) | vscp_imsg.data[2];
  3467  002E08  5043               	movf	_vscp_imsg+8,w,c
  3468  002E0A  C042  F0A0         	movff	_vscp_imsg+7,??_vscp_handleProtocolEvent
  3469  002E0E  0100               	movlb	0	; () banked
  3470  002E10  6BA1               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  3471  002E12  C0A0  F0A1         	movff	??_vscp_handleProtocolEvent,??_vscp_handleProtocolEvent+1
  3472  002E16  0100               	movlb	0	; () banked
  3473  002E18  6BA0               	clrf	??_vscp_handleProtocolEvent& (0+255),b
  3474  002E1A  0100               	movlb	0	; () banked
  3475  002E1C  11A0               	iorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  3476  002E1E  6E32               	movwf	_vscp_page_select,c
  3477  002E20  0100               	movlb	0	; () banked
  3478  002E22  51A1               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  3479  002E24  6E33               	movwf	_vscp_page_select+1,c
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;vscp_firmware.c: 1228: for (i = vscp_imsg.data[ 3 ];
  3483  002E26  C044  F0B5         	movff	_vscp_imsg+9,vscp_handleProtocolEvent@i_1071
  3484                           
  3485                           ;vscp_firmware.c: 1231: i < (vscp_imsg.data[ 3 ] + ((vscp_imsg.flags & 0x0f) - 4));
  3486                           ;vscp_firmware.c: 1232: i++) {
  3487  002E2A  D054               	goto	l10384
  3488  002E2C                     l10380:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;vscp_firmware.c: 1233: vscp_omsg.data[ 4 + (i - vscp_imsg.data[ 3 ]) ] =
  3492                           ;vscp_firmware.c: 1234: vscp_writeRegister(i, vscp_imsg.data[ 4 + (i - vscp_imsg.data[ 3
      +                           ]) ]);
  3493  002E2C  5044               	movf	_vscp_imsg+9,w,c
  3494  002E2E  0100               	movlb	0	; () banked
  3495  002E30  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  3496  002E32  6BA1               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  3497  002E34  0100               	movlb	0	; () banked
  3498  002E36  1FA0               	comf	??_vscp_handleProtocolEvent& (0+255),f,b
  3499  002E38  1FA1               	comf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  3500  002E3A  4BA0               	infsnz	??_vscp_handleProtocolEvent& (0+255),f,b
  3501  002E3C  2BA1               	incf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  3502  002E3E  0100               	movlb	0	; () banked
  3503  002E40  51B5               	movf	vscp_handleProtocolEvent@i_1071& (0+255),w,b
  3504  002E42  0100               	movlb	0	; () banked
  3505  002E44  6FA2               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  3506  002E46  6BA3               	clrf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  3507  002E48  0100               	movlb	0	; () banked
  3508  002E4A  51A0               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  3509  002E4C  0100               	movlb	0	; () banked
  3510  002E4E  27A2               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  3511  002E50  0100               	movlb	0	; () banked
  3512  002E52  51A1               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  3513  002E54  0100               	movlb	0	; () banked
  3514  002E56  23A3               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),f,b
  3515  002E58  0E04               	movlw	4
  3516  002E5A  0100               	movlb	0	; () banked
  3517  002E5C  27A2               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  3518  002E5E  0E00               	movlw	0
  3519  002E60  23A3               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),f,b
  3520  002E62  0E41               	movlw	low (_vscp_imsg+6)
  3521  002E64  0100               	movlb	0	; () banked
  3522  002E66  25A2               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  3523  002E68  6ED9               	movwf	fsr2l,c
  3524  002E6A  0E00               	movlw	high (_vscp_imsg+6)
  3525  002E6C  0100               	movlb	0	; () banked
  3526  002E6E  21A3               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  3527  002E70  6EDA               	movwf	fsr2h,c
  3528  002E72  50DF               	movf	indf2,w,c
  3529  002E74  6E31               	movwf	vscp_writeRegister@value,c
  3530  002E76  0100               	movlb	0	; () banked
  3531  002E78  51B5               	movf	vscp_handleProtocolEvent@i_1071& (0+255),w,b
  3532  002E7A  EC67  F039         	call	_vscp_writeRegister
  3533  002E7E  0100               	movlb	0	; () banked
  3534  002E80  6FA4               	movwf	(??_vscp_handleProtocolEvent+4)& (0+255),b
  3535  002E82  5044               	movf	_vscp_imsg+9,w,c
  3536  002E84  0100               	movlb	0	; () banked
  3537  002E86  6FA5               	movwf	(??_vscp_handleProtocolEvent+5)& (0+255),b
  3538  002E88  6BA6               	clrf	(??_vscp_handleProtocolEvent+6)& (0+255),b
  3539  002E8A  0100               	movlb	0	; () banked
  3540  002E8C  1FA5               	comf	(??_vscp_handleProtocolEvent+5)& (0+255),f,b
  3541  002E8E  1FA6               	comf	(??_vscp_handleProtocolEvent+6)& (0+255),f,b
  3542  002E90  4BA5               	infsnz	(??_vscp_handleProtocolEvent+5)& (0+255),f,b
  3543  002E92  2BA6               	incf	(??_vscp_handleProtocolEvent+6)& (0+255),f,b
  3544  002E94  0100               	movlb	0	; () banked
  3545  002E96  51B5               	movf	vscp_handleProtocolEvent@i_1071& (0+255),w,b
  3546  002E98  0100               	movlb	0	; () banked
  3547  002E9A  6FA7               	movwf	(??_vscp_handleProtocolEvent+7)& (0+255),b
  3548  002E9C  6BA8               	clrf	(??_vscp_handleProtocolEvent+8)& (0+255),b
  3549  002E9E  0100               	movlb	0	; () banked
  3550  002EA0  51A5               	movf	(??_vscp_handleProtocolEvent+5)& (0+255),w,b
  3551  002EA2  0100               	movlb	0	; () banked
  3552  002EA4  27A7               	addwf	(??_vscp_handleProtocolEvent+7)& (0+255),f,b
  3553  002EA6  0100               	movlb	0	; () banked
  3554  002EA8  51A6               	movf	(??_vscp_handleProtocolEvent+6)& (0+255),w,b
  3555  002EAA  0100               	movlb	0	; () banked
  3556  002EAC  23A8               	addwfc	(??_vscp_handleProtocolEvent+8)& (0+255),f,b
  3557  002EAE  0E04               	movlw	4
  3558  002EB0  0100               	movlb	0	; () banked
  3559  002EB2  27A7               	addwf	(??_vscp_handleProtocolEvent+7)& (0+255),f,b
  3560  002EB4  0E00               	movlw	0
  3561  002EB6  23A8               	addwfc	(??_vscp_handleProtocolEvent+8)& (0+255),f,b
  3562  002EB8  0100               	movlb	0	; () banked
  3563  002EBA  0ED9               	movlw	low (_vscp_omsg+5)
  3564  002EBC  0100               	movlb	0	; () banked
  3565  002EBE  25A7               	addwf	(??_vscp_handleProtocolEvent+7)& (0+255),w,b
  3566  002EC0  6ED9               	movwf	fsr2l,c
  3567  002EC2  0100               	movlb	0	; () banked
  3568  002EC4  0E00               	movlw	high (_vscp_omsg+5)
  3569  002EC6  0100               	movlb	0	; () banked
  3570  002EC8  21A8               	addwfc	(??_vscp_handleProtocolEvent+8)& (0+255),w,b
  3571  002ECA  6EDA               	movwf	fsr2h,c
  3572  002ECC  C0A4  FFDF         	movff	??_vscp_handleProtocolEvent+4,indf2
  3573                           
  3574                           ; BSR set to: 0
  3575  002ED0  0100               	movlb	0	; () banked
  3576  002ED2  2BB5               	incf	vscp_handleProtocolEvent@i_1071& (0+255),f,b
  3577  002ED4                     l10384:
  3578                           
  3579                           ; BSR set to: 0
  3580  002ED4  0EFC               	movlw	252
  3581  002ED6  0100               	movlb	0	; () banked
  3582  002ED8  6FA0               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  3583  002EDA  0EFF               	movlw	255
  3584  002EDC  6FA1               	movwf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  3585  002EDE  503B               	movf	_vscp_imsg,w,c
  3586  002EE0  0B0F               	andlw	15
  3587  002EE2  0100               	movlb	0	; () banked
  3588  002EE4  6FA2               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  3589  002EE6  6BA3               	clrf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  3590  002EE8  5044               	movf	_vscp_imsg+9,w,c
  3591  002EEA  0100               	movlb	0	; () banked
  3592  002EEC  27A2               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  3593  002EEE  0E00               	movlw	0
  3594  002EF0  23A3               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),f,b
  3595  002EF2  0100               	movlb	0	; () banked
  3596  002EF4  51A0               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  3597  002EF6  0100               	movlb	0	; () banked
  3598  002EF8  27A2               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  3599  002EFA  0100               	movlb	0	; () banked
  3600  002EFC  51A1               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  3601  002EFE  0100               	movlb	0	; () banked
  3602  002F00  23A3               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),f,b
  3603  002F02  0100               	movlb	0	; () banked
  3604  002F04  51B5               	movf	vscp_handleProtocolEvent@i_1071& (0+255),w,b
  3605  002F06  0100               	movlb	0	; () banked
  3606  002F08  6FA4               	movwf	(??_vscp_handleProtocolEvent+4)& (0+255),b
  3607  002F0A  6BA5               	clrf	(??_vscp_handleProtocolEvent+5)& (0+255),b
  3608  002F0C  0100               	movlb	0	; () banked
  3609  002F0E  51A5               	movf	(??_vscp_handleProtocolEvent+5)& (0+255),w,b
  3610  002F10  0A80               	xorlw	128
  3611  002F12  0100               	movlb	0	; () banked
  3612  002F14  6FA6               	movwf	(??_vscp_handleProtocolEvent+6)& (0+255),b
  3613  002F16  51A2               	movf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  3614  002F18  0100               	movlb	0	; () banked
  3615  002F1A  5DA4               	subwf	(??_vscp_handleProtocolEvent+4)& (0+255),w,b
  3616  002F1C  0100               	movlb	0	; () banked
  3617  002F1E  51A3               	movf	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  3618  002F20  0A80               	xorlw	128
  3619  002F22  0100               	movlb	0	; () banked
  3620  002F24  59A6               	subwfb	(??_vscp_handleProtocolEvent+6)& (0+255),w,b
  3621  002F26  A0D8               	btfss	status,0,c
  3622  002F28  D781               	goto	l10380
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;vscp_firmware.c: 1235: }
  3626                           ;vscp_firmware.c: 1238: vscp_page_select = page_save;
  3627  002F2A  C0AB  F032         	movff	vscp_handleProtocolEvent@page_save_1072,_vscp_page_select
  3628  002F2E  C0AC  F033         	movff	vscp_handleProtocolEvent@page_save_1072+1,_vscp_page_select+1
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;vscp_firmware.c: 1240: vscp_omsg.priority = 0x03;
  3632  002F32  0E03               	movlw	3
  3633  002F34  0100               	movlb	0	; () banked
  3634  002F36  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;vscp_firmware.c: 1241: vscp_omsg.flags = 0x80 + 4 + ((vscp_imsg.flags & 0x0f) - 4);
  3638  002F38  503B               	movf	_vscp_imsg,w,c
  3639  002F3A  0B0F               	andlw	15
  3640  002F3C  0F80               	addlw	128
  3641  002F3E  0100               	movlb	0	; () banked
  3642  002F40  6FD4               	movwf	_vscp_omsg& (0+255),b
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;vscp_firmware.c: 1242: vscp_omsg.vscp_class = 0;
  3646  002F42  0E00               	movlw	0
  3647  002F44  0100               	movlb	0	; () banked
  3648  002F46  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
  3649  002F48  0E00               	movlw	0
  3650  002F4A  0100               	movlb	0	; () banked
  3651  002F4C  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;vscp_firmware.c: 1243: vscp_omsg.vscp_type = 39;
  3655  002F4E  0E27               	movlw	39
  3656  002F50  0100               	movlb	0	; () banked
  3657  002F52  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;vscp_firmware.c: 1244: vscp_omsg.data[0] = 0;
  3661  002F54  0E00               	movlw	0
  3662  002F56  0100               	movlb	0	; () banked
  3663  002F58  6FD9               	movwf	(_vscp_omsg+5)& (0+255),b
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;vscp_firmware.c: 1245: vscp_omsg.data[1] = vscp_imsg.data[1];
  3667  002F5A  C042  F0DA         	movff	_vscp_imsg+7,_vscp_omsg+6
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;vscp_firmware.c: 1246: vscp_omsg.data[2] = vscp_imsg.data[2];
  3671  002F5E  C043  F0DB         	movff	_vscp_imsg+8,_vscp_omsg+7
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;vscp_firmware.c: 1247: vscp_omsg.data[3] = vscp_imsg.data[3];
  3675  002F62  C044  F0DC         	movff	_vscp_imsg+9,_vscp_omsg+8
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;vscp_firmware.c: 1250: vscp_sendEvent();
  3679  002F66  EC7A  F038         	call	_vscp_sendEvent	;wreg free
  3680  002F6A  D038               	goto	l1241
  3681  002F6C                     l10406:
  3682  002F6C  503F               	movf	_vscp_imsg+4,w,c
  3683                           
  3684                           ; Switch size 1, requested type "space"
  3685                           ; Number of cases is 16, Range of values is 1 to 38
  3686                           ; switch strategies available:
  3687                           ; Name         Instructions Cycles
  3688                           ; simple_byte           49    25 (average)
  3689                           ;	Chosen strategy is simple_byte
  3690  002F6E  0A01               	xorlw	1	; case 1
  3691  002F70  B4D8               	btfsc	status,2,c
  3692  002F72  EF8D  F012         	goto	l9988
  3693  002F76  0A03               	xorlw	3	; case 2
  3694  002F78  B4D8               	btfsc	status,2,c
  3695  002F7A  EF91  F012         	goto	l9990
  3696  002F7E  0A04               	xorlw	4	; case 6
  3697  002F80  B4D8               	btfsc	status,2,c
  3698  002F82  EF95  F012         	goto	l9992
  3699  002F86  0A0E               	xorlw	14	; case 8
  3700  002F88  B4D8               	btfsc	status,2,c
  3701  002F8A  EF99  F012         	goto	l9994
  3702  002F8E  0A01               	xorlw	1	; case 9
  3703  002F90  B4D8               	btfsc	status,2,c
  3704  002F92  EF9D  F012         	goto	l9996
  3705  002F96  0A02               	xorlw	2	; case 11
  3706  002F98  B4D8               	btfsc	status,2,c
  3707  002F9A  EFE7  F012         	goto	l10030
  3708  002F9E  0A07               	xorlw	7	; case 12
  3709  002FA0  B4D8               	btfsc	status,2,c
  3710  002FA2  EF35  F013         	goto	l10064
  3711  002FA6  0A1B               	xorlw	27	; case 23
  3712  002FA8  B4D8               	btfsc	status,2,c
  3713  002FAA  D41C               	goto	l10132
  3714  002FAC  0A0F               	xorlw	15	; case 24
  3715  002FAE  B4D8               	btfsc	status,2,c
  3716  002FB0  D43F               	goto	l10138
  3717  002FB2  0A01               	xorlw	1	; case 25
  3718  002FB4  B4D8               	btfsc	status,2,c
  3719  002FB6  D4D3               	goto	l10176
  3720  002FB8  0A04               	xorlw	4	; case 29
  3721  002FBA  B4D8               	btfsc	status,2,c
  3722  002FBC  D538               	goto	l10198
  3723  002FBE  0A03               	xorlw	3	; case 30
  3724  002FC0  B4D8               	btfsc	status,2,c
  3725  002FC2  D55C               	goto	l10214
  3726  002FC4  0A01               	xorlw	1	; case 31
  3727  002FC6  B4D8               	btfsc	status,2,c
  3728  002FC8  D580               	goto	l10230
  3729  002FCA  0A3E               	xorlw	62	; case 33
  3730  002FCC  B4D8               	btfsc	status,2,c
  3731  002FCE  D63D               	goto	l10314
  3732  002FD0  0A04               	xorlw	4	; case 37
  3733  002FD2  B4D8               	btfsc	status,2,c
  3734  002FD4  D65A               	goto	l10322
  3735  002FD6  0A03               	xorlw	3	; case 38
  3736  002FD8  B4D8               	btfsc	status,2,c
  3737  002FDA  D70C               	goto	l10372
  3738  002FDC                     l1241:
  3739  002FDC  0012               	return	
  3740  002FDE                     __end_of_vscp_handleProtocolEvent:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           prodh	equ	0xFF4
  3744                           prodl	equ	0xFF3
  3745                           postinc0	equ	0xFEE
  3746                           wreg	equ	0xFE8
  3747                           postdec1	equ	0xFE5
  3748                           fsr1h	equ	0xFE2
  3749                           fsr1l	equ	0xFE1
  3750                           indf2	equ	0xFDF
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function _vscp_writeRegister *****************
  3756 ;; Defined at:
  3757 ;;		line 674 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  reg             1    wreg     unsigned char 
  3760 ;;  value           1   48[COMRAM] unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  reg             1   12[BANK0 ] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      unsigned char 
  3765 ;; Registers used:
  3766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3772 ;;      Params:         1       0       0       0       0       0       0
  3773 ;;      Locals:         0       1       0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0
  3775 ;;      Totals:         1       1       0       0       0       0       0
  3776 ;;Total ram usage:        2 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    7
  3779 ;; This function calls:
  3780 ;;		_vscp_writeAppReg
  3781 ;;		_vscp_writeStdReg
  3782 ;; This function is called by:
  3783 ;;		_vscp_handleProtocolEvent
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text2
  3788  0072CE                     __ptext2:
  3789                           	opt stack 0
  3790  0072CE                     _vscp_writeRegister:
  3791                           	opt stack 22
  3792                           
  3793                           ;incstack = 0
  3794                           ;vscp_writeRegister@reg stored from wreg
  3795  0072CE  0100               	movlb	0	; () banked
  3796  0072D0  6F6C               	movwf	vscp_writeRegister@reg& (0+255),b
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;vscp_firmware.c: 676: if (reg >= 0x80) {
  3800  0072D2  0E7F               	movlw	127
  3801  0072D4  0100               	movlb	0	; () banked
  3802  0072D6  656C               	cpfsgt	vscp_writeRegister@reg& (0+255),b
  3803  0072D8  D007               	goto	l9818
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;vscp_firmware.c: 677: return vscp_writeStdReg(reg, value);
  3807  0072DA  C031  F02B         	movff	vscp_writeRegister@value,vscp_writeStdReg@value
  3808  0072DE  0100               	movlb	0	; () banked
  3809  0072E0  516C               	movf	vscp_writeRegister@reg& (0+255),w,b
  3810  0072E2  ECA2  F024         	call	_vscp_writeStdReg
  3811  0072E6  D006               	goto	l1117
  3812  0072E8                     l9818:
  3813                           
  3814                           ;vscp_firmware.c: 679: return vscp_writeAppReg(reg, value);
  3815  0072E8  C031  F02A         	movff	vscp_writeRegister@value,vscp_writeAppReg@val
  3816  0072EC  0100               	movlb	0	; () banked
  3817  0072EE  516C               	movf	vscp_writeRegister@reg& (0+255),w,b
  3818  0072F0  EC37  F003         	call	_vscp_writeAppReg
  3819  0072F4                     l1117:
  3820  0072F4  0012               	return	
  3821  0072F6                     __end_of_vscp_writeRegister:
  3822                           	opt stack 0
  3823                           tblptru	equ	0xFF8
  3824                           prodh	equ	0xFF4
  3825                           prodl	equ	0xFF3
  3826                           postinc0	equ	0xFEE
  3827                           wreg	equ	0xFE8
  3828                           postdec1	equ	0xFE5
  3829                           fsr1h	equ	0xFE2
  3830                           fsr1l	equ	0xFE1
  3831                           indf2	equ	0xFDF
  3832                           fsr2h	equ	0xFDA
  3833                           fsr2l	equ	0xFD9
  3834                           status	equ	0xFD8
  3835                           
  3836 ;; *************** function _vscp_writeStdReg *****************
  3837 ;; Defined at:
  3838 ;;		line 687 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  reg             1    wreg     unsigned char 
  3841 ;;  value           1   42[COMRAM] unsigned char 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  reg             1   11[BANK0 ] unsigned char 
  3844 ;;  code            4    4[BANK0 ] unsigned long 
  3845 ;;  idx             1    9[BANK0 ] unsigned char 
  3846 ;;  code            4    0[BANK0 ] unsigned long 
  3847 ;;  idx             1    8[BANK0 ] unsigned char 
  3848 ;;  rv              1   10[BANK0 ] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      unsigned char 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3858 ;;      Params:         1       0       0       0       0       0       0
  3859 ;;      Locals:         0      12       0       0       0       0       0
  3860 ;;      Temps:          5       0       0       0       0       0       0
  3861 ;;      Totals:         6      12       0       0       0       0       0
  3862 ;;Total ram usage:       18 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    6
  3865 ;; This function calls:
  3866 ;;		_vscp_getFamilyCode
  3867 ;;		_vscp_getFamilyType
  3868 ;;		_vscp_getGUID
  3869 ;;		_vscp_getManufacturerId
  3870 ;;		_vscp_getUserID
  3871 ;;		_vscp_restoreDefaults
  3872 ;;		_vscp_setGUID
  3873 ;;		_vscp_setManufacturerId
  3874 ;;		_vscp_setUserID
  3875 ;; This function is called by:
  3876 ;;		_vscp_writeRegister
  3877 ;;		_vscp_handleProtocolEvent
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text3
  3882  004944                     __ptext3:
  3883                           	opt stack 0
  3884  004944                     _vscp_writeStdReg:
  3885                           	opt stack 23
  3886                           
  3887                           ;incstack = 0
  3888                           ;vscp_writeStdReg@reg stored from wreg
  3889  004944  0100               	movlb	0	; () banked
  3890  004946  6F6B               	movwf	vscp_writeStdReg@reg& (0+255),b
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;vscp_firmware.c: 689: uint8_t rv = ~value;
  3894  004948  502B               	movf	vscp_writeStdReg@value,w,c
  3895  00494A  0AFF               	xorlw	255
  3896  00494C  0100               	movlb	0	; () banked
  3897  00494E  6F6A               	movwf	vscp_writeStdReg@rv& (0+255),b
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;vscp_firmware.c: 691: if ((reg > (0x82 + 1)) &&
  3901                           ;vscp_firmware.c: 692: (reg < 0x89)) {
  3902  004950  0E83               	movlw	131
  3903  004952  0100               	movlb	0	; () banked
  3904  004954  656B               	cpfsgt	vscp_writeStdReg@reg& (0+255),b
  3905  004956  D012               	goto	l9460
  3906                           
  3907                           ; BSR set to: 0
  3908  004958  0E89               	movlw	137
  3909  00495A  0100               	movlb	0	; () banked
  3910  00495C  5D6B               	subwf	vscp_writeStdReg@reg& (0+255),w,b
  3911  00495E  B0D8               	btfsc	status,0,c
  3912  004960  D00D               	goto	l9460
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;vscp_firmware.c: 695: vscp_setUserID((reg - 0x84), value);
  3916  004962  C02B  F01B         	movff	vscp_writeStdReg@value,vscp_setUserID@data
  3917  004966  0100               	movlb	0	; () banked
  3918  004968  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  3919  00496A  0F7C               	addlw	124
  3920  00496C  ECD3  F039         	call	_vscp_setUserID
  3921                           
  3922                           ;vscp_firmware.c: 696: rv = vscp_getUserID((reg - 0x84));
  3923  004970  0100               	movlb	0	; () banked
  3924  004972  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  3925  004974  0F7C               	addlw	124
  3926  004976  EC0E  F03A         	call	_vscp_getUserID
  3927  00497A  D127               	goto	L20
  3928  00497C                     l9460:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;vscp_firmware.c: 699: else if (0x92 == reg) {
  3932  00497C  0100               	movlb	0	; () banked
  3933  00497E  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  3934  004980  0A92               	xorlw	146
  3935  004982  A4D8               	btfss	status,2,c
  3936  004984  D016               	goto	l9466
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;vscp_firmware.c: 702: vscp_page_select = (vscp_page_select & 0xff) | ((uint16_t) value 
      +                          << 8);
  3940  004986  502B               	movf	vscp_writeStdReg@value,w,c
  3941  004988  6E2D               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  3942  00498A  6A2C               	clrf	??_vscp_writeStdReg& (0+255),c
  3943  00498C  0EFF               	movlw	255
  3944  00498E  1432               	andwf	_vscp_page_select,w,c
  3945  004990  6E2E               	movwf	(??_vscp_writeStdReg+2)& (0+255),c
  3946  004992  0E00               	movlw	0
  3947  004994  1433               	andwf	_vscp_page_select+1,w,c
  3948  004996  6E2F               	movwf	(??_vscp_writeStdReg+3)& (0+255),c
  3949  004998  502C               	movf	??_vscp_writeStdReg,w,c
  3950  00499A  102E               	iorwf	??_vscp_writeStdReg+2,w,c
  3951  00499C  6E32               	movwf	_vscp_page_select,c
  3952  00499E  502D               	movf	??_vscp_writeStdReg+1,w,c
  3953  0049A0  102F               	iorwf	??_vscp_writeStdReg+3,w,c
  3954  0049A2  6E33               	movwf	_vscp_page_select+1,c
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;vscp_firmware.c: 703: rv = (vscp_page_select >> 8) & 0xff;
  3958  0049A4  C033  F02C         	movff	_vscp_page_select+1,??_vscp_writeStdReg
  3959  0049A8  C02C  F02D         	movff	??_vscp_writeStdReg,??_vscp_writeStdReg+1
  3960  0049AC  6A2E               	clrf	(??_vscp_writeStdReg+2)& (0+255),c
  3961  0049AE  502D               	movf	??_vscp_writeStdReg+1,w,c
  3962  0049B0  D10C               	goto	L20
  3963  0049B2                     l9466:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;vscp_firmware.c: 705: else if (0x93 == reg) {
  3967  0049B2  0100               	movlb	0	; () banked
  3968  0049B4  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  3969  0049B6  0A93               	xorlw	147
  3970  0049B8  A4D8               	btfss	status,2,c
  3971  0049BA  D014               	goto	l9472
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;vscp_firmware.c: 708: vscp_page_select = (vscp_page_select & 0xff00) | value;
  3975  0049BC  0E00               	movlw	0
  3976  0049BE  6E2C               	movwf	??_vscp_writeStdReg& (0+255),c
  3977  0049C0  0EFF               	movlw	255
  3978  0049C2  6E2D               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  3979  0049C4  C032  F02E         	movff	_vscp_page_select,??_vscp_writeStdReg+2
  3980  0049C8  C033  F02F         	movff	_vscp_page_select+1,??_vscp_writeStdReg+3
  3981  0049CC  502C               	movf	??_vscp_writeStdReg,w,c
  3982  0049CE  162E               	andwf	??_vscp_writeStdReg+2,f,c
  3983  0049D0  502D               	movf	??_vscp_writeStdReg+1,w,c
  3984  0049D2  162F               	andwf	??_vscp_writeStdReg+3,f,c
  3985  0049D4  502B               	movf	vscp_writeStdReg@value,w,c
  3986  0049D6  102E               	iorwf	??_vscp_writeStdReg+2,w,c
  3987  0049D8  6E32               	movwf	_vscp_page_select,c
  3988  0049DA  502F               	movf	??_vscp_writeStdReg+3,w,c
  3989  0049DC  6E33               	movwf	_vscp_page_select+1,c
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;vscp_firmware.c: 709: rv = (vscp_page_select & 0xff);
  3993  0049DE  C032  F06A         	movff	_vscp_page_select,vscp_writeStdReg@rv
  3994                           
  3995                           ;vscp_firmware.c: 710: }
  3996  0049E2  D0F5               	goto	l9534
  3997  0049E4                     l9472:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;vscp_firmware.c: 715: else if ((reg > 0x88) && (reg < 0x91)) {
  4001  0049E4  0E88               	movlw	136
  4002  0049E6  0100               	movlb	0	; () banked
  4003  0049E8  656B               	cpfsgt	vscp_writeStdReg@reg& (0+255),b
  4004  0049EA  D029               	goto	l9484
  4005                           
  4006                           ; BSR set to: 0
  4007  0049EC  0E91               	movlw	145
  4008  0049EE  0100               	movlb	0	; () banked
  4009  0049F0  5D6B               	subwf	vscp_writeStdReg@reg& (0+255),w,b
  4010  0049F2  B0D8               	btfsc	status,0,c
  4011  0049F4  D024               	goto	l9484
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;vscp_firmware.c: 717: if ((0xff != ((vscp_page_select >> 8) & 0xff)) ||
  4015                           ;vscp_firmware.c: 718: (0xff != (vscp_page_select & 0xff))) {
  4016  0049F6  C033  F02C         	movff	_vscp_page_select+1,??_vscp_writeStdReg
  4017  0049FA  C02C  F02D         	movff	??_vscp_writeStdReg,??_vscp_writeStdReg+1
  4018  0049FE  6A2E               	clrf	(??_vscp_writeStdReg+2)& (0+255),c
  4019  004A00  0EFF               	movlw	255
  4020  004A02  162D               	andwf	??_vscp_writeStdReg+1,f,c
  4021  004A04  0E00               	movlw	0
  4022  004A06  162E               	andwf	??_vscp_writeStdReg+2,f,c
  4023  004A08  282D               	incf	??_vscp_writeStdReg+1,w,c
  4024  004A0A  102E               	iorwf	??_vscp_writeStdReg+2,w,c
  4025  004A0C  A4D8               	btfss	status,2,c
  4026  004A0E  D0DB               	goto	l9532
  4027                           
  4028                           ; BSR set to: 0
  4029  004A10  0EFF               	movlw	255
  4030  004A12  1432               	andwf	_vscp_page_select,w,c
  4031  004A14  6E2C               	movwf	??_vscp_writeStdReg& (0+255),c
  4032  004A16  0E00               	movlw	0
  4033  004A18  1433               	andwf	_vscp_page_select+1,w,c
  4034  004A1A  6E2D               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  4035  004A1C  282C               	incf	??_vscp_writeStdReg,w,c
  4036  004A1E  102D               	iorwf	??_vscp_writeStdReg+1,w,c
  4037  004A20  A4D8               	btfss	status,2,c
  4038                           
  4039                           ; BSR set to: 0
  4040  004A22  D0D1               	goto	l9532
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;vscp_firmware.c: 723: vscp_setManufacturerId(reg - 0x89, value);
  4044                           
  4045                           ; BSR set to: 0
  4046                           
  4047                           ;vscp_firmware.c: 721: } else {
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;vscp_firmware.c: 720: rv = ~value;
  4051  004A24  C02B  F01B         	movff	vscp_writeStdReg@value,vscp_setManufacturerId@data
  4052  004A28  0100               	movlb	0	; () banked
  4053  004A2A  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  4054  004A2C  0F77               	addlw	119
  4055  004A2E  ECDF  F039         	call	_vscp_setManufacturerId
  4056                           
  4057                           ;vscp_firmware.c: 724: rv = vscp_getManufacturerId(reg - 0x89);
  4058  004A32  0100               	movlb	0	; () banked
  4059  004A34  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  4060  004A36  0F77               	addlw	119
  4061  004A38  EC18  F03A         	call	_vscp_getManufacturerId
  4062  004A3C  D0C6               	goto	L20
  4063  004A3E                     l9484:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;vscp_firmware.c: 727: else if ((reg > (0xD0 - 1)) && (reg < 0xE0)) {
  4067  004A3E  0ECF               	movlw	207
  4068  004A40  0100               	movlb	0	; () banked
  4069  004A42  656B               	cpfsgt	vscp_writeStdReg@reg& (0+255),b
  4070  004A44  D029               	goto	l9496
  4071                           
  4072                           ; BSR set to: 0
  4073  004A46  0EE0               	movlw	224
  4074  004A48  0100               	movlb	0	; () banked
  4075  004A4A  5D6B               	subwf	vscp_writeStdReg@reg& (0+255),w,b
  4076  004A4C  B0D8               	btfsc	status,0,c
  4077  004A4E  D024               	goto	l9496
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;vscp_firmware.c: 729: if ((0xff != ((vscp_page_select >> 8) & 0xff)) ||
  4081                           ;vscp_firmware.c: 730: (0xff != (vscp_page_select & 0xff))) {
  4082  004A50  C033  F02C         	movff	_vscp_page_select+1,??_vscp_writeStdReg
  4083  004A54  C02C  F02D         	movff	??_vscp_writeStdReg,??_vscp_writeStdReg+1
  4084  004A58  6A2E               	clrf	(??_vscp_writeStdReg+2)& (0+255),c
  4085  004A5A  0EFF               	movlw	255
  4086  004A5C  162D               	andwf	??_vscp_writeStdReg+1,f,c
  4087  004A5E  0E00               	movlw	0
  4088  004A60  162E               	andwf	??_vscp_writeStdReg+2,f,c
  4089  004A62  282D               	incf	??_vscp_writeStdReg+1,w,c
  4090  004A64  102E               	iorwf	??_vscp_writeStdReg+2,w,c
  4091  004A66  A4D8               	btfss	status,2,c
  4092  004A68  D0AE               	goto	l9532
  4093                           
  4094                           ; BSR set to: 0
  4095  004A6A  0EFF               	movlw	255
  4096  004A6C  1432               	andwf	_vscp_page_select,w,c
  4097  004A6E  6E2C               	movwf	??_vscp_writeStdReg& (0+255),c
  4098  004A70  0E00               	movlw	0
  4099  004A72  1433               	andwf	_vscp_page_select+1,w,c
  4100  004A74  6E2D               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  4101  004A76  282C               	incf	??_vscp_writeStdReg,w,c
  4102  004A78  102D               	iorwf	??_vscp_writeStdReg+1,w,c
  4103  004A7A  A4D8               	btfss	status,2,c
  4104                           
  4105                           ; BSR set to: 0
  4106  004A7C  D0A4               	goto	l9532
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;vscp_firmware.c: 734: vscp_setGUID(reg - 0xD0, value);
  4110                           
  4111                           ; BSR set to: 0
  4112                           
  4113                           ;vscp_firmware.c: 733: } else {
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;vscp_firmware.c: 732: rv = ~value;
  4117  004A7E  C02B  F01B         	movff	vscp_writeStdReg@value,vscp_setGUID@data
  4118  004A82  0100               	movlb	0	; () banked
  4119  004A84  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  4120  004A86  0F30               	addlw	48
  4121  004A88  ECB3  F039         	call	_vscp_setGUID
  4122                           
  4123                           ;vscp_firmware.c: 735: rv = vscp_getGUID(reg - 0xD0);
  4124  004A8C  0100               	movlb	0	; () banked
  4125  004A8E  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  4126  004A90  0F30               	addlw	48
  4127  004A92  EC22  F03A         	call	_vscp_getGUID
  4128  004A96  D099               	goto	L20
  4129  004A98                     l9496:
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;vscp_firmware.c: 739: else if ( ( reg >= 0x9A ) &&
  4133                           ;vscp_firmware.c: 740: ( reg < 0x9E ) ) {
  4134  004A98  0E99               	movlw	153
  4135  004A9A  0100               	movlb	0	; () banked
  4136  004A9C  656B               	cpfsgt	vscp_writeStdReg@reg& (0+255),b
  4137  004A9E  D036               	goto	l9506
  4138                           
  4139                           ; BSR set to: 0
  4140  004AA0  0E9E               	movlw	158
  4141  004AA2  0100               	movlb	0	; () banked
  4142  004AA4  5D6B               	subwf	vscp_writeStdReg@reg& (0+255),w,b
  4143  004AA6  B0D8               	btfsc	status,0,c
  4144  004AA8  D031               	goto	l9506
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;vscp_firmware.c: 742: uint32_t code = vscp_getFamilyCode();
  4148  004AAA  EC5D  F03A         	call	_vscp_getFamilyCode	;wreg free
  4149  004AAE  C018  F060         	movff	?_vscp_getFamilyCode,vscp_writeStdReg@code
  4150  004AB2  C019  F061         	movff	?_vscp_getFamilyCode+1,vscp_writeStdReg@code+1
  4151  004AB6  C01A  F062         	movff	?_vscp_getFamilyCode+2,vscp_writeStdReg@code+2
  4152  004ABA  C01B  F063         	movff	?_vscp_getFamilyCode+3,vscp_writeStdReg@code+3
  4153                           
  4154                           ;vscp_firmware.c: 743: uint8_t idx = reg - 0x9A;
  4155  004ABE  0100               	movlb	0	; () banked
  4156  004AC0  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  4157  004AC2  0F66               	addlw	102
  4158  004AC4  0100               	movlb	0	; () banked
  4159  004AC6  6F68               	movwf	vscp_writeStdReg@idx& (0+255),b
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;vscp_firmware.c: 744: rv = code >> (((3-idx)*8) & 0xff);
  4163  004AC8  0100               	movlb	0	; () banked
  4164  004ACA  5168               	movf	vscp_writeStdReg@idx& (0+255),w,b
  4165  004ACC  0800               	sublw	0
  4166  004ACE  6E2C               	movwf	??_vscp_writeStdReg& (0+255),c
  4167  004AD0  90D8               	bcf	status,0,c
  4168  004AD2  362C               	rlcf	??_vscp_writeStdReg,f,c
  4169  004AD4  90D8               	bcf	status,0,c
  4170  004AD6  362C               	rlcf	??_vscp_writeStdReg,f,c
  4171  004AD8  90D8               	bcf	status,0,c
  4172  004ADA  362C               	rlcf	??_vscp_writeStdReg,f,c
  4173  004ADC  502C               	movf	??_vscp_writeStdReg,w,c
  4174  004ADE  0F18               	addlw	24
  4175  004AE0  0100               	movlb	0	; () banked
  4176  004AE2  C060  F02D         	movff	vscp_writeStdReg@code,??_vscp_writeStdReg+1
  4177  004AE6  0100               	movlb	0	; () banked
  4178  004AE8  C061  F02E         	movff	vscp_writeStdReg@code+1,??_vscp_writeStdReg+2
  4179  004AEC  0100               	movlb	0	; () banked
  4180  004AEE  C062  F02F         	movff	vscp_writeStdReg@code+2,??_vscp_writeStdReg+3
  4181  004AF2  0100               	movlb	0	; () banked
  4182  004AF4  C063  F030         	movff	vscp_writeStdReg@code+3,??_vscp_writeStdReg+4
  4183  004AF8  2AE8               	incf	wreg,f,c
  4184  004AFA  D005               	goto	u9720
  4185  004AFC                     u9725:
  4186  004AFC  90D8               	bcf	status,0,c
  4187  004AFE  3230               	rrcf	??_vscp_writeStdReg+4,f,c
  4188  004B00  322F               	rrcf	??_vscp_writeStdReg+3,f,c
  4189  004B02  322E               	rrcf	??_vscp_writeStdReg+2,f,c
  4190  004B04  322D               	rrcf	??_vscp_writeStdReg+1,f,c
  4191  004B06                     u9720:
  4192  004B06  2EE8               	decfsz	wreg,f,c
  4193  004B08  D7F9               	goto	u9725
  4194  004B0A  D751               	goto	L21
  4195  004B0C                     l9506:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;vscp_firmware.c: 746: else if ( ( reg >= 0x9E ) &&
  4199                           ;vscp_firmware.c: 747: ( reg < 0xA2 ) ) {
  4200  004B0C  0E9D               	movlw	157
  4201  004B0E  0100               	movlb	0	; () banked
  4202  004B10  656B               	cpfsgt	vscp_writeStdReg@reg& (0+255),b
  4203  004B12  D036               	goto	l9516
  4204                           
  4205                           ; BSR set to: 0
  4206  004B14  0EA2               	movlw	162
  4207  004B16  0100               	movlb	0	; () banked
  4208  004B18  5D6B               	subwf	vscp_writeStdReg@reg& (0+255),w,b
  4209  004B1A  B0D8               	btfsc	status,0,c
  4210  004B1C  D031               	goto	l9516
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;vscp_firmware.c: 749: uint32_t code = vscp_getFamilyType();
  4214  004B1E  EC54  F03A         	call	_vscp_getFamilyType	;wreg free
  4215  004B22  C018  F064         	movff	?_vscp_getFamilyType,vscp_writeStdReg@code_1042
  4216  004B26  C019  F065         	movff	?_vscp_getFamilyType+1,vscp_writeStdReg@code_1042+1
  4217  004B2A  C01A  F066         	movff	?_vscp_getFamilyType+2,vscp_writeStdReg@code_1042+2
  4218  004B2E  C01B  F067         	movff	?_vscp_getFamilyType+3,vscp_writeStdReg@code_1042+3
  4219                           
  4220                           ;vscp_firmware.c: 750: uint8_t idx = reg - 0x9E;
  4221  004B32  0100               	movlb	0	; () banked
  4222  004B34  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  4223  004B36  0F62               	addlw	98
  4224  004B38  0100               	movlb	0	; () banked
  4225  004B3A  6F69               	movwf	vscp_writeStdReg@idx_1044& (0+255),b
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;vscp_firmware.c: 751: rv = code >> (((3-idx)*8) & 0xff);
  4229  004B3C  0100               	movlb	0	; () banked
  4230  004B3E  5169               	movf	vscp_writeStdReg@idx_1044& (0+255),w,b
  4231  004B40  0800               	sublw	0
  4232  004B42  6E2C               	movwf	??_vscp_writeStdReg& (0+255),c
  4233  004B44  90D8               	bcf	status,0,c
  4234  004B46  362C               	rlcf	??_vscp_writeStdReg,f,c
  4235  004B48  90D8               	bcf	status,0,c
  4236  004B4A  362C               	rlcf	??_vscp_writeStdReg,f,c
  4237  004B4C  90D8               	bcf	status,0,c
  4238  004B4E  362C               	rlcf	??_vscp_writeStdReg,f,c
  4239  004B50  502C               	movf	??_vscp_writeStdReg,w,c
  4240  004B52  0F18               	addlw	24
  4241  004B54  0100               	movlb	0	; () banked
  4242  004B56  C064  F02D         	movff	vscp_writeStdReg@code_1042,??_vscp_writeStdReg+1
  4243  004B5A  0100               	movlb	0	; () banked
  4244  004B5C  C065  F02E         	movff	vscp_writeStdReg@code_1042+1,??_vscp_writeStdReg+2
  4245  004B60  0100               	movlb	0	; () banked
  4246  004B62  C066  F02F         	movff	vscp_writeStdReg@code_1042+2,??_vscp_writeStdReg+3
  4247  004B66  0100               	movlb	0	; () banked
  4248  004B68  C067  F030         	movff	vscp_writeStdReg@code_1042+3,??_vscp_writeStdReg+4
  4249  004B6C  2AE8               	incf	wreg,f,c
  4250  004B6E  D005               	goto	u9750
  4251  004B70                     u9755:
  4252  004B70  90D8               	bcf	status,0,c
  4253  004B72  3230               	rrcf	??_vscp_writeStdReg+4,f,c
  4254  004B74  322F               	rrcf	??_vscp_writeStdReg+3,f,c
  4255  004B76  322E               	rrcf	??_vscp_writeStdReg+2,f,c
  4256  004B78  322D               	rrcf	??_vscp_writeStdReg+1,f,c
  4257  004B7A                     u9750:
  4258  004B7A  2EE8               	decfsz	wreg,f,c
  4259  004B7C  D7F9               	goto	u9755
  4260  004B7E  D717               	goto	L21
  4261  004B80                     l9516:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;vscp_firmware.c: 753: else if ( 0xA2 == reg ) {
  4265  004B80  0100               	movlb	0	; () banked
  4266  004B82  516B               	movf	vscp_writeStdReg@reg& (0+255),w,b
  4267  004B84  0AA2               	xorlw	162
  4268  004B86  A4D8               	btfss	status,2,c
  4269  004B88  D01E               	goto	l9532
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;vscp_firmware.c: 754: if ( 0x55 == value ) {
  4273  004B8A  502B               	movf	vscp_writeStdReg@value,w,c
  4274  004B8C  0A55               	xorlw	85
  4275  004B8E  A4D8               	btfss	status,2,c
  4276  004B90  D008               	goto	l9522
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;vscp_firmware.c: 755: vscp_configtimer = 0;
  4280  004B92  0E00               	movlw	0
  4281  004B94  0101               	movlb	1	; () banked
  4282  004B96  6F1D               	movwf	(_vscp_configtimer+1)& (0+255),b	;volatile
  4283  004B98  0E00               	movlw	0
  4284  004B9A  0101               	movlb	1	; () banked
  4285  004B9C  6F1C               	movwf	_vscp_configtimer& (0+255),b	;volatile
  4286                           
  4287                           ;vscp_firmware.c: 756: rv = 0x55;
  4288  004B9E  0E55               	movlw	85
  4289  004BA0  D014               	goto	L20
  4290  004BA2                     l9522:
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;vscp_firmware.c: 758: else if ( 0xaa == value ) {
  4294  004BA2  502B               	movf	vscp_writeStdReg@value,w,c
  4295  004BA4  0AAA               	xorlw	170
  4296  004BA6  A4D8               	btfss	status,2,c
  4297  004BA8  D012               	goto	l9534
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;vscp_firmware.c: 759: if ( vscp_configtimer < 1000 ) {
  4301  004BAA  0EE8               	movlw	232
  4302  004BAC  0101               	movlb	1	; () banked
  4303  004BAE  5D1C               	subwf	_vscp_configtimer& (0+255),w,b	;volatile
  4304  004BB0  0E03               	movlw	3
  4305  004BB2  0101               	movlb	1	; () banked
  4306  004BB4  591D               	subwfb	(_vscp_configtimer+1)& (0+255),w,b	;volatile
  4307  004BB6  B0D8               	btfsc	status,0,c
  4308  004BB8  D004               	goto	l9530
  4309                           
  4310                           ; BSR set to: 1
  4311                           ;vscp_firmware.c: 760: vscp_restoreDefaults();
  4312  004BBA  EC9D  F03A         	call	_vscp_restoreDefaults	;wreg free
  4313                           
  4314                           ;vscp_firmware.c: 761: rv = 0xaa;
  4315  004BBE  0EAA               	movlw	170
  4316  004BC0  D004               	goto	L20
  4317  004BC2                     l9530:
  4318                           
  4319                           ;vscp_firmware.c: 763: else {
  4320                           ;vscp_firmware.c: 764: rv = 0;
  4321  004BC2  0E00               	movlw	0
  4322  004BC4  D002               	goto	L20
  4323  004BC6                     l9532:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;vscp_firmware.c: 769: else {
  4327                           ;vscp_firmware.c: 771: rv = ~value;
  4328  004BC6  502B               	movf	vscp_writeStdReg@value,w,c
  4329  004BC8  0AFF               	xorlw	255
  4330  004BCA                     L20:
  4331  004BCA  0100               	movlb	0	; () banked
  4332  004BCC  6F6A               	movwf	vscp_writeStdReg@rv& (0+255),b
  4333  004BCE                     l9534:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;vscp_firmware.c: 772: }
  4337                           ;vscp_firmware.c: 774: return rv;
  4338  004BCE  0100               	movlb	0	; () banked
  4339  004BD0  516A               	movf	vscp_writeStdReg@rv& (0+255),w,b
  4340                           
  4341                           ; BSR set to: 0
  4342                           
  4343                           ; BSR set to: 0
  4344  004BD2  0012               	return	
  4345  004BD4                     __end_of_vscp_writeStdReg:
  4346                           	opt stack 0
  4347                           tblptru	equ	0xFF8
  4348                           prodh	equ	0xFF4
  4349                           prodl	equ	0xFF3
  4350                           postinc0	equ	0xFEE
  4351                           wreg	equ	0xFE8
  4352                           postdec1	equ	0xFE5
  4353                           fsr1h	equ	0xFE2
  4354                           fsr1l	equ	0xFE1
  4355                           indf2	equ	0xFDF
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           
  4360 ;; *************** function _vscp_setUserID *****************
  4361 ;; Defined at:
  4362 ;;		line 2616 in file "../main.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  idx             1    wreg     unsigned char 
  4365 ;;  data            1   26[COMRAM] unsigned char 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  idx             1   27[COMRAM] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;		None               void
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4377 ;;      Params:         1       0       0       0       0       0       0
  4378 ;;      Locals:         1       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0
  4380 ;;      Totals:         2       0       0       0       0       0       0
  4381 ;;Total ram usage:        2 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    3
  4384 ;; This function calls:
  4385 ;;		_writeEEPROM
  4386 ;; This function is called by:
  4387 ;;		_vscp_writeStdReg
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text4
  4392  0073A6                     __ptext4:
  4393                           	opt stack 0
  4394  0073A6                     _vscp_setUserID:
  4395                           	opt stack 25
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;incstack = 0
  4399                           ;vscp_setUserID@idx stored from wreg
  4400  0073A6  6E1C               	movwf	vscp_setUserID@idx,c
  4401                           
  4402                           ;main.c: 2618: writeEEPROM(idx + 0x04, data);
  4403  0073A8  0E04               	movlw	4
  4404  0073AA  241C               	addwf	vscp_setUserID@idx,w,c
  4405  0073AC  6E18               	movwf	writeEEPROM@address,c
  4406  0073AE  6A19               	clrf	writeEEPROM@address+1,c
  4407  0073B0  0E00               	movlw	0
  4408  0073B2  2219               	addwfc	writeEEPROM@address+1,f,c
  4409  0073B4  C01B  F01A         	movff	vscp_setUserID@data,writeEEPROM@data
  4410  0073B8  EC8E  F039         	call	_writeEEPROM	;wreg free
  4411  0073BC  0012               	return	
  4412  0073BE                     __end_of_vscp_setUserID:
  4413                           	opt stack 0
  4414                           tblptru	equ	0xFF8
  4415                           prodh	equ	0xFF4
  4416                           prodl	equ	0xFF3
  4417                           postinc0	equ	0xFEE
  4418                           wreg	equ	0xFE8
  4419                           postdec1	equ	0xFE5
  4420                           fsr1h	equ	0xFE2
  4421                           fsr1l	equ	0xFE1
  4422                           indf2	equ	0xFDF
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _vscp_setManufacturerId *****************
  4428 ;; Defined at:
  4429 ;;		line 2638 in file "../main.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  idx             1    wreg     unsigned char 
  4432 ;;  data            1   26[COMRAM] unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  idx             1   27[COMRAM] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;		None               void
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4444 ;;      Params:         1       0       0       0       0       0       0
  4445 ;;      Locals:         1       0       0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0
  4447 ;;      Totals:         2       0       0       0       0       0       0
  4448 ;;Total ram usage:        2 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    3
  4451 ;; This function calls:
  4452 ;;		_writeEEPROM
  4453 ;; This function is called by:
  4454 ;;		_vscp_writeStdReg
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text5
  4459  0073BE                     __ptext5:
  4460                           	opt stack 0
  4461  0073BE                     _vscp_setManufacturerId:
  4462                           	opt stack 25
  4463                           
  4464                           ;incstack = 0
  4465                           ;vscp_setManufacturerId@idx stored from wreg
  4466  0073BE  6E1C               	movwf	vscp_setManufacturerId@idx,c
  4467                           
  4468                           ;main.c: 2640: writeEEPROM(0x09 + idx, data);
  4469  0073C0  0E09               	movlw	9
  4470  0073C2  241C               	addwf	vscp_setManufacturerId@idx,w,c
  4471  0073C4  6E18               	movwf	writeEEPROM@address,c
  4472  0073C6  6A19               	clrf	writeEEPROM@address+1,c
  4473  0073C8  0E00               	movlw	0
  4474  0073CA  2219               	addwfc	writeEEPROM@address+1,f,c
  4475  0073CC  C01B  F01A         	movff	vscp_setManufacturerId@data,writeEEPROM@data
  4476  0073D0  EC8E  F039         	call	_writeEEPROM	;wreg free
  4477  0073D4  0012               	return	
  4478  0073D6                     __end_of_vscp_setManufacturerId:
  4479                           	opt stack 0
  4480                           tblptru	equ	0xFF8
  4481                           prodh	equ	0xFF4
  4482                           prodl	equ	0xFF3
  4483                           postinc0	equ	0xFEE
  4484                           wreg	equ	0xFE8
  4485                           postdec1	equ	0xFE5
  4486                           fsr1h	equ	0xFE2
  4487                           fsr1l	equ	0xFE1
  4488                           indf2	equ	0xFDF
  4489                           fsr2h	equ	0xFDA
  4490                           fsr2l	equ	0xFD9
  4491                           status	equ	0xFD8
  4492                           
  4493 ;; *************** function _vscp_setGUID *****************
  4494 ;; Defined at:
  4495 ;;		line 2585 in file "../main.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  idx             1    wreg     unsigned char 
  4498 ;;  data            1   26[COMRAM] unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  idx             1   27[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;		None               void
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4510 ;;      Params:         1       0       0       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0
  4513 ;;      Totals:         2       0       0       0       0       0       0
  4514 ;;Total ram usage:        2 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    3
  4517 ;; This function calls:
  4518 ;;		_writeEEPROM
  4519 ;; This function is called by:
  4520 ;;		_vscp_writeStdReg
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text6
  4525  007366                     __ptext6:
  4526                           	opt stack 0
  4527  007366                     _vscp_setGUID:
  4528                           	opt stack 25
  4529                           
  4530                           ;incstack = 0
  4531                           ;vscp_setGUID@idx stored from wreg
  4532  007366  6E1C               	movwf	vscp_setGUID@idx,c
  4533                           
  4534                           ;main.c: 2587: if ( idx>15 ) return;
  4535  007368  0E0F               	movlw	15
  4536  00736A  641C               	cpfsgt	vscp_setGUID@idx,c
  4537  00736C  D001               	goto	l8572
  4538  00736E  D00A               	goto	l544
  4539  007370                     l8572:
  4540                           
  4541                           ;main.c: 2588: writeEEPROM( 0x11 + idx, data );
  4542  007370  0E11               	movlw	17
  4543  007372  241C               	addwf	vscp_setGUID@idx,w,c
  4544  007374  6E18               	movwf	writeEEPROM@address,c
  4545  007376  6A19               	clrf	writeEEPROM@address+1,c
  4546  007378  0E00               	movlw	0
  4547  00737A  2219               	addwfc	writeEEPROM@address+1,f,c
  4548  00737C  C01B  F01A         	movff	vscp_setGUID@data,writeEEPROM@data
  4549  007380  EC8E  F039         	call	_writeEEPROM	;wreg free
  4550  007384                     l544:
  4551  007384  0012               	return	
  4552  007386                     __end_of_vscp_setGUID:
  4553                           	opt stack 0
  4554                           tblptru	equ	0xFF8
  4555                           prodh	equ	0xFF4
  4556                           prodl	equ	0xFF3
  4557                           postinc0	equ	0xFEE
  4558                           wreg	equ	0xFE8
  4559                           postdec1	equ	0xFE5
  4560                           fsr1h	equ	0xFE2
  4561                           fsr1l	equ	0xFE1
  4562                           indf2	equ	0xFDF
  4563                           fsr2h	equ	0xFDA
  4564                           fsr2l	equ	0xFD9
  4565                           status	equ	0xFD8
  4566                           
  4567 ;; *************** function _vscp_restoreDefaults *****************
  4568 ;; Defined at:
  4569 ;;		line 2819 in file "../main.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;		None               void
  4576 ;; Registers used:
  4577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4583 ;;      Params:         0       0       0       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0
  4586 ;;      Totals:         0       0       0       0       0       0       0
  4587 ;;Total ram usage:        0 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    5
  4590 ;; This function calls:
  4591 ;;		_init_app_eeprom
  4592 ;;		_init_app_ram
  4593 ;; This function is called by:
  4594 ;;		_vscp_writeStdReg
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text7
  4599  00753A                     __ptext7:
  4600                           	opt stack 0
  4601  00753A                     _vscp_restoreDefaults:
  4602                           	opt stack 23
  4603                           
  4604                           ;main.c: 2821: init_app_eeprom();
  4605                           
  4606                           ;incstack = 0
  4607  00753A  EC3D  F01C         	call	_init_app_eeprom	;wreg free
  4608                           
  4609                           ;main.c: 2822: init_app_ram();
  4610  00753E  EC19  F036         	call	_init_app_ram	;wreg free
  4611  007542  0012               	return	
  4612  007544                     __end_of_vscp_restoreDefaults:
  4613                           	opt stack 0
  4614                           tblptru	equ	0xFF8
  4615                           prodh	equ	0xFF4
  4616                           prodl	equ	0xFF3
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           postdec1	equ	0xFE5
  4620                           fsr1h	equ	0xFE2
  4621                           fsr1l	equ	0xFE1
  4622                           indf2	equ	0xFDF
  4623                           fsr2h	equ	0xFDA
  4624                           fsr2l	equ	0xFD9
  4625                           status	equ	0xFD8
  4626                           
  4627 ;; *************** function _init_app_eeprom *****************
  4628 ;; Defined at:
  4629 ;;		line 1011 in file "../main.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;		None
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  i               1   26[COMRAM] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;		None               void
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4643 ;;      Params:         0       0       0       0       0       0       0
  4644 ;;      Locals:         1       0       0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0
  4646 ;;      Totals:         1       0       0       0       0       0       0
  4647 ;;Total ram usage:        1 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    3
  4650 ;; This function calls:
  4651 ;;		_writeEEPROM
  4652 ;; This function is called by:
  4653 ;;		_main
  4654 ;;		_vscp_restoreDefaults
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text8
  4659  00387A                     __ptext8:
  4660                           	opt stack 0
  4661  00387A                     _init_app_eeprom:
  4662                           	opt stack 24
  4663                           
  4664                           ;main.c: 1013: writeEEPROM(0x43, 0b00000001);
  4665                           
  4666                           ;incstack = 0
  4667  00387A  0E00               	movlw	0
  4668  00387C  6E19               	movwf	writeEEPROM@address+1,c
  4669  00387E  0E43               	movlw	67
  4670  003880  6E18               	movwf	writeEEPROM@address,c
  4671  003882  0E01               	movlw	1
  4672  003884  6E1A               	movwf	writeEEPROM@data,c
  4673  003886  EC8E  F039         	call	_writeEEPROM	;wreg free
  4674                           
  4675                           ;main.c: 1014: writeEEPROM(0x44, 0b00000001);
  4676  00388A  0E00               	movlw	0
  4677  00388C  6E19               	movwf	writeEEPROM@address+1,c
  4678  00388E  0E44               	movlw	68
  4679  003890  6E18               	movwf	writeEEPROM@address,c
  4680  003892  0E01               	movlw	1
  4681  003894  6E1A               	movwf	writeEEPROM@data,c
  4682  003896  EC8E  F039         	call	_writeEEPROM	;wreg free
  4683                           
  4684                           ;main.c: 1015: writeEEPROM(0x45, 0b00000001);
  4685  00389A  0E00               	movlw	0
  4686  00389C  6E19               	movwf	writeEEPROM@address+1,c
  4687  00389E  0E45               	movlw	69
  4688  0038A0  6E18               	movwf	writeEEPROM@address,c
  4689  0038A2  0E01               	movlw	1
  4690  0038A4  6E1A               	movwf	writeEEPROM@data,c
  4691  0038A6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4692                           
  4693                           ;main.c: 1016: writeEEPROM(0x46, 0b00000001);
  4694  0038AA  0E00               	movlw	0
  4695  0038AC  6E19               	movwf	writeEEPROM@address+1,c
  4696  0038AE  0E46               	movlw	70
  4697  0038B0  6E18               	movwf	writeEEPROM@address,c
  4698  0038B2  0E01               	movlw	1
  4699  0038B4  6E1A               	movwf	writeEEPROM@data,c
  4700  0038B6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4701                           
  4702                           ;main.c: 1017: writeEEPROM(0x47, 0b00000001);
  4703  0038BA  0E00               	movlw	0
  4704  0038BC  6E19               	movwf	writeEEPROM@address+1,c
  4705  0038BE  0E47               	movlw	71
  4706  0038C0  6E18               	movwf	writeEEPROM@address,c
  4707  0038C2  0E01               	movlw	1
  4708  0038C4  6E1A               	movwf	writeEEPROM@data,c
  4709  0038C6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4710                           
  4711                           ;main.c: 1018: writeEEPROM(0x48, 0b00000001);
  4712  0038CA  0E00               	movlw	0
  4713  0038CC  6E19               	movwf	writeEEPROM@address+1,c
  4714  0038CE  0E48               	movlw	72
  4715  0038D0  6E18               	movwf	writeEEPROM@address,c
  4716  0038D2  0E01               	movlw	1
  4717  0038D4  6E1A               	movwf	writeEEPROM@data,c
  4718  0038D6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4719                           
  4720                           ;main.c: 1020: writeEEPROM(0x49, 10);
  4721  0038DA  0E00               	movlw	0
  4722  0038DC  6E19               	movwf	writeEEPROM@address+1,c
  4723  0038DE  0E49               	movlw	73
  4724  0038E0  6E18               	movwf	writeEEPROM@address,c
  4725  0038E2  0E0A               	movlw	10
  4726  0038E4  6E1A               	movwf	writeEEPROM@data,c
  4727  0038E6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4728                           
  4729                           ;main.c: 1021: writeEEPROM(0x4A, 0);
  4730  0038EA  0E00               	movlw	0
  4731  0038EC  6E19               	movwf	writeEEPROM@address+1,c
  4732  0038EE  0E4A               	movlw	74
  4733  0038F0  6E18               	movwf	writeEEPROM@address,c
  4734  0038F2  0E00               	movlw	0
  4735  0038F4  6E1A               	movwf	writeEEPROM@data,c
  4736  0038F6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4737                           
  4738                           ;main.c: 1022: writeEEPROM(0x4B, 0);
  4739  0038FA  0E00               	movlw	0
  4740  0038FC  6E19               	movwf	writeEEPROM@address+1,c
  4741  0038FE  0E4B               	movlw	75
  4742  003900  6E18               	movwf	writeEEPROM@address,c
  4743  003902  0E00               	movlw	0
  4744  003904  6E1A               	movwf	writeEEPROM@data,c
  4745  003906  EC8E  F039         	call	_writeEEPROM	;wreg free
  4746                           
  4747                           ;main.c: 1023: writeEEPROM(0x4C, 0);
  4748  00390A  0E00               	movlw	0
  4749  00390C  6E19               	movwf	writeEEPROM@address+1,c
  4750  00390E  0E4C               	movlw	76
  4751  003910  6E18               	movwf	writeEEPROM@address,c
  4752  003912  0E00               	movlw	0
  4753  003914  6E1A               	movwf	writeEEPROM@data,c
  4754  003916  EC8E  F039         	call	_writeEEPROM	;wreg free
  4755                           
  4756                           ;main.c: 1024: writeEEPROM(0x4D, 0);
  4757  00391A  0E00               	movlw	0
  4758  00391C  6E19               	movwf	writeEEPROM@address+1,c
  4759  00391E  0E4D               	movlw	77
  4760  003920  6E18               	movwf	writeEEPROM@address,c
  4761  003922  0E00               	movlw	0
  4762  003924  6E1A               	movwf	writeEEPROM@data,c
  4763  003926  EC8E  F039         	call	_writeEEPROM	;wreg free
  4764                           
  4765                           ;main.c: 1025: writeEEPROM(0x4E, 0);
  4766  00392A  0E00               	movlw	0
  4767  00392C  6E19               	movwf	writeEEPROM@address+1,c
  4768  00392E  0E4E               	movlw	78
  4769  003930  6E18               	movwf	writeEEPROM@address,c
  4770  003932  0E00               	movlw	0
  4771  003934  6E1A               	movwf	writeEEPROM@data,c
  4772  003936  EC8E  F039         	call	_writeEEPROM	;wreg free
  4773                           
  4774                           ;main.c: 1029: writeEEPROM(0x4F, 0x0F);
  4775  00393A  0E00               	movlw	0
  4776  00393C  6E19               	movwf	writeEEPROM@address+1,c
  4777  00393E  0E4F               	movlw	79
  4778  003940  6E18               	movwf	writeEEPROM@address,c
  4779  003942  0E0F               	movlw	15
  4780  003944  6E1A               	movwf	writeEEPROM@data,c
  4781  003946  EC8E  F039         	call	_writeEEPROM	;wreg free
  4782                           
  4783                           ;main.c: 1030: writeEEPROM(0x50, 0x68);
  4784  00394A  0E00               	movlw	0
  4785  00394C  6E19               	movwf	writeEEPROM@address+1,c
  4786  00394E  0E50               	movlw	80
  4787  003950  6E18               	movwf	writeEEPROM@address,c
  4788  003952  0E68               	movlw	104
  4789  003954  6E1A               	movwf	writeEEPROM@data,c
  4790  003956  EC8E  F039         	call	_writeEEPROM	;wreg free
  4791                           
  4792                           ;main.c: 1032: writeEEPROM(0x51, 0x0D);
  4793  00395A  0E00               	movlw	0
  4794  00395C  6E19               	movwf	writeEEPROM@address+1,c
  4795  00395E  0E51               	movlw	81
  4796  003960  6E18               	movwf	writeEEPROM@address,c
  4797  003962  0E0D               	movlw	13
  4798  003964  6E1A               	movwf	writeEEPROM@data,c
  4799  003966  EC8E  F039         	call	_writeEEPROM	;wreg free
  4800                           
  4801                           ;main.c: 1033: writeEEPROM(0x52, 0x7F);
  4802  00396A  0E00               	movlw	0
  4803  00396C  6E19               	movwf	writeEEPROM@address+1,c
  4804  00396E  0E52               	movlw	82
  4805  003970  6E18               	movwf	writeEEPROM@address,c
  4806  003972  0E7F               	movlw	127
  4807  003974  6E1A               	movwf	writeEEPROM@data,c
  4808  003976  EC8E  F039         	call	_writeEEPROM	;wreg free
  4809                           
  4810                           ;main.c: 1035: writeEEPROM(0x53, 0x0D);
  4811  00397A  0E00               	movlw	0
  4812  00397C  6E19               	movwf	writeEEPROM@address+1,c
  4813  00397E  0E53               	movlw	83
  4814  003980  6E18               	movwf	writeEEPROM@address,c
  4815  003982  0E0D               	movlw	13
  4816  003984  6E1A               	movwf	writeEEPROM@data,c
  4817  003986  EC8E  F039         	call	_writeEEPROM	;wreg free
  4818                           
  4819                           ;main.c: 1036: writeEEPROM(0x54, 0x7F);
  4820  00398A  0E00               	movlw	0
  4821  00398C  6E19               	movwf	writeEEPROM@address+1,c
  4822  00398E  0E54               	movlw	84
  4823  003990  6E18               	movwf	writeEEPROM@address,c
  4824  003992  0E7F               	movlw	127
  4825  003994  6E1A               	movwf	writeEEPROM@data,c
  4826  003996  EC8E  F039         	call	_writeEEPROM	;wreg free
  4827                           
  4828                           ;main.c: 1038: writeEEPROM(0x55, 0x0D);
  4829  00399A  0E00               	movlw	0
  4830  00399C  6E19               	movwf	writeEEPROM@address+1,c
  4831  00399E  0E55               	movlw	85
  4832  0039A0  6E18               	movwf	writeEEPROM@address,c
  4833  0039A2  0E0D               	movlw	13
  4834  0039A4  6E1A               	movwf	writeEEPROM@data,c
  4835  0039A6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4836                           
  4837                           ;main.c: 1039: writeEEPROM(0x56, 0x7F);
  4838  0039AA  0E00               	movlw	0
  4839  0039AC  6E19               	movwf	writeEEPROM@address+1,c
  4840  0039AE  0E56               	movlw	86
  4841  0039B0  6E18               	movwf	writeEEPROM@address,c
  4842  0039B2  0E7F               	movlw	127
  4843  0039B4  6E1A               	movwf	writeEEPROM@data,c
  4844  0039B6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4845                           
  4846                           ;main.c: 1041: writeEEPROM(0x57, 0x0D);
  4847  0039BA  0E00               	movlw	0
  4848  0039BC  6E19               	movwf	writeEEPROM@address+1,c
  4849  0039BE  0E57               	movlw	87
  4850  0039C0  6E18               	movwf	writeEEPROM@address,c
  4851  0039C2  0E0D               	movlw	13
  4852  0039C4  6E1A               	movwf	writeEEPROM@data,c
  4853  0039C6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4854                           
  4855                           ;main.c: 1042: writeEEPROM(0x58, 0x7F);
  4856  0039CA  0E00               	movlw	0
  4857  0039CC  6E19               	movwf	writeEEPROM@address+1,c
  4858  0039CE  0E58               	movlw	88
  4859  0039D0  6E18               	movwf	writeEEPROM@address,c
  4860  0039D2  0E7F               	movlw	127
  4861  0039D4  6E1A               	movwf	writeEEPROM@data,c
  4862  0039D6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4863                           
  4864                           ;main.c: 1044: writeEEPROM(0x59, 0x0D);
  4865  0039DA  0E00               	movlw	0
  4866  0039DC  6E19               	movwf	writeEEPROM@address+1,c
  4867  0039DE  0E59               	movlw	89
  4868  0039E0  6E18               	movwf	writeEEPROM@address,c
  4869  0039E2  0E0D               	movlw	13
  4870  0039E4  6E1A               	movwf	writeEEPROM@data,c
  4871  0039E6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4872                           
  4873                           ;main.c: 1045: writeEEPROM(0x5A, 0x7F);
  4874  0039EA  0E00               	movlw	0
  4875  0039EC  6E19               	movwf	writeEEPROM@address+1,c
  4876  0039EE  0E5A               	movlw	90
  4877  0039F0  6E18               	movwf	writeEEPROM@address,c
  4878  0039F2  0E7F               	movlw	127
  4879  0039F4  6E1A               	movwf	writeEEPROM@data,c
  4880  0039F6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4881                           
  4882                           ;main.c: 1049: writeEEPROM(0x5B, 0x80);
  4883  0039FA  0E00               	movlw	0
  4884  0039FC  6E19               	movwf	writeEEPROM@address+1,c
  4885  0039FE  0E5B               	movlw	91
  4886  003A00  6E18               	movwf	writeEEPROM@address,c
  4887  003A02  0E80               	movlw	128
  4888  003A04  6E1A               	movwf	writeEEPROM@data,c
  4889  003A06  EC8E  F039         	call	_writeEEPROM	;wreg free
  4890                           
  4891                           ;main.c: 1050: writeEEPROM(0x5C, 0xff);
  4892  003A0A  0E00               	movlw	0
  4893  003A0C  6E19               	movwf	writeEEPROM@address+1,c
  4894  003A0E  0E5C               	movlw	92
  4895  003A10  6E18               	movwf	writeEEPROM@address,c
  4896  003A12  0EFF               	movlw	255
  4897  003A14  6E1A               	movwf	writeEEPROM@data,c
  4898  003A16  EC8E  F039         	call	_writeEEPROM	;wreg free
  4899                           
  4900                           ;main.c: 1052: writeEEPROM(0x5D, 0x80);
  4901  003A1A  0E00               	movlw	0
  4902  003A1C  6E19               	movwf	writeEEPROM@address+1,c
  4903  003A1E  0E5D               	movlw	93
  4904  003A20  6E18               	movwf	writeEEPROM@address,c
  4905  003A22  0E80               	movlw	128
  4906  003A24  6E1A               	movwf	writeEEPROM@data,c
  4907  003A26  EC8E  F039         	call	_writeEEPROM	;wreg free
  4908                           
  4909                           ;main.c: 1053: writeEEPROM(0x5E, 0xff);
  4910  003A2A  0E00               	movlw	0
  4911  003A2C  6E19               	movwf	writeEEPROM@address+1,c
  4912  003A2E  0E5E               	movlw	94
  4913  003A30  6E18               	movwf	writeEEPROM@address,c
  4914  003A32  0EFF               	movlw	255
  4915  003A34  6E1A               	movwf	writeEEPROM@data,c
  4916  003A36  EC8E  F039         	call	_writeEEPROM	;wreg free
  4917                           
  4918                           ;main.c: 1055: writeEEPROM(0x5F, 0x80);
  4919  003A3A  0E00               	movlw	0
  4920  003A3C  6E19               	movwf	writeEEPROM@address+1,c
  4921  003A3E  0E5F               	movlw	95
  4922  003A40  6E18               	movwf	writeEEPROM@address,c
  4923  003A42  0E80               	movlw	128
  4924  003A44  6E1A               	movwf	writeEEPROM@data,c
  4925  003A46  EC8E  F039         	call	_writeEEPROM	;wreg free
  4926                           
  4927                           ;main.c: 1056: writeEEPROM(0x60, 0xff);
  4928  003A4A  0E00               	movlw	0
  4929  003A4C  6E19               	movwf	writeEEPROM@address+1,c
  4930  003A4E  0E60               	movlw	96
  4931  003A50  6E18               	movwf	writeEEPROM@address,c
  4932  003A52  0EFF               	movlw	255
  4933  003A54  6E1A               	movwf	writeEEPROM@data,c
  4934  003A56  EC8E  F039         	call	_writeEEPROM	;wreg free
  4935                           
  4936                           ;main.c: 1058: writeEEPROM(0x61, 0x80);
  4937  003A5A  0E00               	movlw	0
  4938  003A5C  6E19               	movwf	writeEEPROM@address+1,c
  4939  003A5E  0E61               	movlw	97
  4940  003A60  6E18               	movwf	writeEEPROM@address,c
  4941  003A62  0E80               	movlw	128
  4942  003A64  6E1A               	movwf	writeEEPROM@data,c
  4943  003A66  EC8E  F039         	call	_writeEEPROM	;wreg free
  4944                           
  4945                           ;main.c: 1059: writeEEPROM(0x62, 0xff);
  4946  003A6A  0E00               	movlw	0
  4947  003A6C  6E19               	movwf	writeEEPROM@address+1,c
  4948  003A6E  0E62               	movlw	98
  4949  003A70  6E18               	movwf	writeEEPROM@address,c
  4950  003A72  0EFF               	movlw	255
  4951  003A74  6E1A               	movwf	writeEEPROM@data,c
  4952  003A76  EC8E  F039         	call	_writeEEPROM	;wreg free
  4953                           
  4954                           ;main.c: 1061: writeEEPROM(0x63, 0x80);
  4955  003A7A  0E00               	movlw	0
  4956  003A7C  6E19               	movwf	writeEEPROM@address+1,c
  4957  003A7E  0E63               	movlw	99
  4958  003A80  6E18               	movwf	writeEEPROM@address,c
  4959  003A82  0E80               	movlw	128
  4960  003A84  6E1A               	movwf	writeEEPROM@data,c
  4961  003A86  EC8E  F039         	call	_writeEEPROM	;wreg free
  4962                           
  4963                           ;main.c: 1062: writeEEPROM(0x64, 0xff);
  4964  003A8A  0E00               	movlw	0
  4965  003A8C  6E19               	movwf	writeEEPROM@address+1,c
  4966  003A8E  0E64               	movlw	100
  4967  003A90  6E18               	movwf	writeEEPROM@address,c
  4968  003A92  0EFF               	movlw	255
  4969  003A94  6E1A               	movwf	writeEEPROM@data,c
  4970  003A96  EC8E  F039         	call	_writeEEPROM	;wreg free
  4971                           
  4972                           ;main.c: 1064: writeEEPROM(0x65, 0x80);
  4973  003A9A  0E00               	movlw	0
  4974  003A9C  6E19               	movwf	writeEEPROM@address+1,c
  4975  003A9E  0E65               	movlw	101
  4976  003AA0  6E18               	movwf	writeEEPROM@address,c
  4977  003AA2  0E80               	movlw	128
  4978  003AA4  6E1A               	movwf	writeEEPROM@data,c
  4979  003AA6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4980                           
  4981                           ;main.c: 1065: writeEEPROM(0x66, 0xff);
  4982  003AAA  0E00               	movlw	0
  4983  003AAC  6E19               	movwf	writeEEPROM@address+1,c
  4984  003AAE  0E66               	movlw	102
  4985  003AB0  6E18               	movwf	writeEEPROM@address,c
  4986  003AB2  0EFF               	movlw	255
  4987  003AB4  6E1A               	movwf	writeEEPROM@data,c
  4988  003AB6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4989                           
  4990                           ;main.c: 1069: writeEEPROM(0x67, 0x7f);
  4991  003ABA  0E00               	movlw	0
  4992  003ABC  6E19               	movwf	writeEEPROM@address+1,c
  4993  003ABE  0E67               	movlw	103
  4994  003AC0  6E18               	movwf	writeEEPROM@address,c
  4995  003AC2  0E7F               	movlw	127
  4996  003AC4  6E1A               	movwf	writeEEPROM@data,c
  4997  003AC6  EC8E  F039         	call	_writeEEPROM	;wreg free
  4998                           
  4999                           ;main.c: 1070: writeEEPROM(0x68, 0xff);
  5000  003ACA  0E00               	movlw	0
  5001  003ACC  6E19               	movwf	writeEEPROM@address+1,c
  5002  003ACE  0E68               	movlw	104
  5003  003AD0  6E18               	movwf	writeEEPROM@address,c
  5004  003AD2  0EFF               	movlw	255
  5005  003AD4  6E1A               	movwf	writeEEPROM@data,c
  5006  003AD6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5007                           
  5008                           ;main.c: 1072: writeEEPROM(0x69, 0x7f);
  5009  003ADA  0E00               	movlw	0
  5010  003ADC  6E19               	movwf	writeEEPROM@address+1,c
  5011  003ADE  0E69               	movlw	105
  5012  003AE0  6E18               	movwf	writeEEPROM@address,c
  5013  003AE2  0E7F               	movlw	127
  5014  003AE4  6E1A               	movwf	writeEEPROM@data,c
  5015  003AE6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5016                           
  5017                           ;main.c: 1073: writeEEPROM(0x6A, 0xff);
  5018  003AEA  0E00               	movlw	0
  5019  003AEC  6E19               	movwf	writeEEPROM@address+1,c
  5020  003AEE  0E6A               	movlw	106
  5021  003AF0  6E18               	movwf	writeEEPROM@address,c
  5022  003AF2  0EFF               	movlw	255
  5023  003AF4  6E1A               	movwf	writeEEPROM@data,c
  5024  003AF6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5025                           
  5026                           ;main.c: 1075: writeEEPROM(0x6B, 0x7f);
  5027  003AFA  0E00               	movlw	0
  5028  003AFC  6E19               	movwf	writeEEPROM@address+1,c
  5029  003AFE  0E6B               	movlw	107
  5030  003B00  6E18               	movwf	writeEEPROM@address,c
  5031  003B02  0E7F               	movlw	127
  5032  003B04  6E1A               	movwf	writeEEPROM@data,c
  5033  003B06  EC8E  F039         	call	_writeEEPROM	;wreg free
  5034                           
  5035                           ;main.c: 1076: writeEEPROM(0x6C, 0xff);
  5036  003B0A  0E00               	movlw	0
  5037  003B0C  6E19               	movwf	writeEEPROM@address+1,c
  5038  003B0E  0E6C               	movlw	108
  5039  003B10  6E18               	movwf	writeEEPROM@address,c
  5040  003B12  0EFF               	movlw	255
  5041  003B14  6E1A               	movwf	writeEEPROM@data,c
  5042  003B16  EC8E  F039         	call	_writeEEPROM	;wreg free
  5043                           
  5044                           ;main.c: 1078: writeEEPROM(0x6D, 0x7f);
  5045  003B1A  0E00               	movlw	0
  5046  003B1C  6E19               	movwf	writeEEPROM@address+1,c
  5047  003B1E  0E6D               	movlw	109
  5048  003B20  6E18               	movwf	writeEEPROM@address,c
  5049  003B22  0E7F               	movlw	127
  5050  003B24  6E1A               	movwf	writeEEPROM@data,c
  5051  003B26  EC8E  F039         	call	_writeEEPROM	;wreg free
  5052                           
  5053                           ;main.c: 1079: writeEEPROM(0x6E, 0xff);
  5054  003B2A  0E00               	movlw	0
  5055  003B2C  6E19               	movwf	writeEEPROM@address+1,c
  5056  003B2E  0E6E               	movlw	110
  5057  003B30  6E18               	movwf	writeEEPROM@address,c
  5058  003B32  0EFF               	movlw	255
  5059  003B34  6E1A               	movwf	writeEEPROM@data,c
  5060  003B36  EC8E  F039         	call	_writeEEPROM	;wreg free
  5061                           
  5062                           ;main.c: 1081: writeEEPROM(0x6F, 0x7f);
  5063  003B3A  0E00               	movlw	0
  5064  003B3C  6E19               	movwf	writeEEPROM@address+1,c
  5065  003B3E  0E6F               	movlw	111
  5066  003B40  6E18               	movwf	writeEEPROM@address,c
  5067  003B42  0E7F               	movlw	127
  5068  003B44  6E1A               	movwf	writeEEPROM@data,c
  5069  003B46  EC8E  F039         	call	_writeEEPROM	;wreg free
  5070                           
  5071                           ;main.c: 1082: writeEEPROM(0x70, 0xff);
  5072  003B4A  0E00               	movlw	0
  5073  003B4C  6E19               	movwf	writeEEPROM@address+1,c
  5074  003B4E  0E70               	movlw	112
  5075  003B50  6E18               	movwf	writeEEPROM@address,c
  5076  003B52  0EFF               	movlw	255
  5077  003B54  6E1A               	movwf	writeEEPROM@data,c
  5078  003B56  EC8E  F039         	call	_writeEEPROM	;wreg free
  5079                           
  5080                           ;main.c: 1084: writeEEPROM(0x71, 0x7f);
  5081  003B5A  0E00               	movlw	0
  5082  003B5C  6E19               	movwf	writeEEPROM@address+1,c
  5083  003B5E  0E71               	movlw	113
  5084  003B60  6E18               	movwf	writeEEPROM@address,c
  5085  003B62  0E7F               	movlw	127
  5086  003B64  6E1A               	movwf	writeEEPROM@data,c
  5087  003B66  EC8E  F039         	call	_writeEEPROM	;wreg free
  5088                           
  5089                           ;main.c: 1085: writeEEPROM(0x72, 0xff);
  5090  003B6A  0E00               	movlw	0
  5091  003B6C  6E19               	movwf	writeEEPROM@address+1,c
  5092  003B6E  0E72               	movlw	114
  5093  003B70  6E18               	movwf	writeEEPROM@address,c
  5094  003B72  0EFF               	movlw	255
  5095  003B74  6E1A               	movwf	writeEEPROM@data,c
  5096  003B76  EC8E  F039         	call	_writeEEPROM	;wreg free
  5097                           
  5098                           ;main.c: 1089: writeEEPROM(0x73, 0);
  5099  003B7A  0E00               	movlw	0
  5100  003B7C  6E19               	movwf	writeEEPROM@address+1,c
  5101  003B7E  0E73               	movlw	115
  5102  003B80  6E18               	movwf	writeEEPROM@address,c
  5103  003B82  0E00               	movlw	0
  5104  003B84  6E1A               	movwf	writeEEPROM@data,c
  5105  003B86  EC8E  F039         	call	_writeEEPROM	;wreg free
  5106                           
  5107                           ;main.c: 1090: writeEEPROM(0x74, 0);
  5108  003B8A  0E00               	movlw	0
  5109  003B8C  6E19               	movwf	writeEEPROM@address+1,c
  5110  003B8E  0E74               	movlw	116
  5111  003B90  6E18               	movwf	writeEEPROM@address,c
  5112  003B92  0E00               	movlw	0
  5113  003B94  6E1A               	movwf	writeEEPROM@data,c
  5114  003B96  EC8E  F039         	call	_writeEEPROM	;wreg free
  5115                           
  5116                           ;main.c: 1092: writeEEPROM(0x75, 0);
  5117  003B9A  0E00               	movlw	0
  5118  003B9C  6E19               	movwf	writeEEPROM@address+1,c
  5119  003B9E  0E75               	movlw	117
  5120  003BA0  6E18               	movwf	writeEEPROM@address,c
  5121  003BA2  0E00               	movlw	0
  5122  003BA4  6E1A               	movwf	writeEEPROM@data,c
  5123  003BA6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5124                           
  5125                           ;main.c: 1093: writeEEPROM(0x76, 0);
  5126  003BAA  0E00               	movlw	0
  5127  003BAC  6E19               	movwf	writeEEPROM@address+1,c
  5128  003BAE  0E76               	movlw	118
  5129  003BB0  6E18               	movwf	writeEEPROM@address,c
  5130  003BB2  0E00               	movlw	0
  5131  003BB4  6E1A               	movwf	writeEEPROM@data,c
  5132  003BB6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5133                           
  5134                           ;main.c: 1095: writeEEPROM(0x77, 0);
  5135  003BBA  0E00               	movlw	0
  5136  003BBC  6E19               	movwf	writeEEPROM@address+1,c
  5137  003BBE  0E77               	movlw	119
  5138  003BC0  6E18               	movwf	writeEEPROM@address,c
  5139  003BC2  0E00               	movlw	0
  5140  003BC4  6E1A               	movwf	writeEEPROM@data,c
  5141  003BC6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5142                           
  5143                           ;main.c: 1096: writeEEPROM(0x78, 0);
  5144  003BCA  0E00               	movlw	0
  5145  003BCC  6E19               	movwf	writeEEPROM@address+1,c
  5146  003BCE  0E78               	movlw	120
  5147  003BD0  6E18               	movwf	writeEEPROM@address,c
  5148  003BD2  0E00               	movlw	0
  5149  003BD4  6E1A               	movwf	writeEEPROM@data,c
  5150  003BD6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5151                           
  5152                           ;main.c: 1098: writeEEPROM(0x79, 0);
  5153  003BDA  0E00               	movlw	0
  5154  003BDC  6E19               	movwf	writeEEPROM@address+1,c
  5155  003BDE  0E79               	movlw	121
  5156  003BE0  6E18               	movwf	writeEEPROM@address,c
  5157  003BE2  0E00               	movlw	0
  5158  003BE4  6E1A               	movwf	writeEEPROM@data,c
  5159  003BE6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5160                           
  5161                           ;main.c: 1099: writeEEPROM(0x7A, 0);
  5162  003BEA  0E00               	movlw	0
  5163  003BEC  6E19               	movwf	writeEEPROM@address+1,c
  5164  003BEE  0E7A               	movlw	122
  5165  003BF0  6E18               	movwf	writeEEPROM@address,c
  5166  003BF2  0E00               	movlw	0
  5167  003BF4  6E1A               	movwf	writeEEPROM@data,c
  5168  003BF6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5169                           
  5170                           ;main.c: 1101: writeEEPROM(0x7B, 0);
  5171  003BFA  0E00               	movlw	0
  5172  003BFC  6E19               	movwf	writeEEPROM@address+1,c
  5173  003BFE  0E7B               	movlw	123
  5174  003C00  6E18               	movwf	writeEEPROM@address,c
  5175  003C02  0E00               	movlw	0
  5176  003C04  6E1A               	movwf	writeEEPROM@data,c
  5177  003C06  EC8E  F039         	call	_writeEEPROM	;wreg free
  5178                           
  5179                           ;main.c: 1102: writeEEPROM(0x7C, 0);
  5180  003C0A  0E00               	movlw	0
  5181  003C0C  6E19               	movwf	writeEEPROM@address+1,c
  5182  003C0E  0E7C               	movlw	124
  5183  003C10  6E18               	movwf	writeEEPROM@address,c
  5184  003C12  0E00               	movlw	0
  5185  003C14  6E1A               	movwf	writeEEPROM@data,c
  5186  003C16  EC8E  F039         	call	_writeEEPROM	;wreg free
  5187                           
  5188                           ;main.c: 1104: writeEEPROM(0x7D, 0);
  5189  003C1A  0E00               	movlw	0
  5190  003C1C  6E19               	movwf	writeEEPROM@address+1,c
  5191  003C1E  0E7D               	movlw	125
  5192  003C20  6E18               	movwf	writeEEPROM@address,c
  5193  003C22  0E00               	movlw	0
  5194  003C24  6E1A               	movwf	writeEEPROM@data,c
  5195  003C26  EC8E  F039         	call	_writeEEPROM	;wreg free
  5196                           
  5197                           ;main.c: 1105: writeEEPROM(0x7E, 0);
  5198  003C2A  0E00               	movlw	0
  5199  003C2C  6E19               	movwf	writeEEPROM@address+1,c
  5200  003C2E  0E7E               	movlw	126
  5201  003C30  6E18               	movwf	writeEEPROM@address,c
  5202  003C32  0E00               	movlw	0
  5203  003C34  6E1A               	movwf	writeEEPROM@data,c
  5204  003C36  EC8E  F039         	call	_writeEEPROM	;wreg free
  5205                           
  5206                           ;main.c: 1109: writeEEPROM(0x7F, 0x7f);
  5207  003C3A  0E00               	movlw	0
  5208  003C3C  6E19               	movwf	writeEEPROM@address+1,c
  5209  003C3E  0E7F               	movlw	127
  5210  003C40  6E18               	movwf	writeEEPROM@address,c
  5211  003C42  0E7F               	movlw	127
  5212  003C44  6E1A               	movwf	writeEEPROM@data,c
  5213  003C46  EC8E  F039         	call	_writeEEPROM	;wreg free
  5214                           
  5215                           ;main.c: 1110: writeEEPROM(0x80, 0xff);
  5216  003C4A  0E00               	movlw	0
  5217  003C4C  6E19               	movwf	writeEEPROM@address+1,c
  5218  003C4E  0E80               	movlw	128
  5219  003C50  6E18               	movwf	writeEEPROM@address,c
  5220  003C52  0EFF               	movlw	255
  5221  003C54  6E1A               	movwf	writeEEPROM@data,c
  5222  003C56  EC8E  F039         	call	_writeEEPROM	;wreg free
  5223                           
  5224                           ;main.c: 1112: writeEEPROM(0x81, 0x7f);
  5225  003C5A  0E00               	movlw	0
  5226  003C5C  6E19               	movwf	writeEEPROM@address+1,c
  5227  003C5E  0E81               	movlw	129
  5228  003C60  6E18               	movwf	writeEEPROM@address,c
  5229  003C62  0E7F               	movlw	127
  5230  003C64  6E1A               	movwf	writeEEPROM@data,c
  5231  003C66  EC8E  F039         	call	_writeEEPROM	;wreg free
  5232                           
  5233                           ;main.c: 1113: writeEEPROM(0x82, 0xff);
  5234  003C6A  0E00               	movlw	0
  5235  003C6C  6E19               	movwf	writeEEPROM@address+1,c
  5236  003C6E  0E82               	movlw	130
  5237  003C70  6E18               	movwf	writeEEPROM@address,c
  5238  003C72  0EFF               	movlw	255
  5239  003C74  6E1A               	movwf	writeEEPROM@data,c
  5240  003C76  EC8E  F039         	call	_writeEEPROM	;wreg free
  5241                           
  5242                           ;main.c: 1115: writeEEPROM(0x83, 0x7f);
  5243  003C7A  0E00               	movlw	0
  5244  003C7C  6E19               	movwf	writeEEPROM@address+1,c
  5245  003C7E  0E83               	movlw	131
  5246  003C80  6E18               	movwf	writeEEPROM@address,c
  5247  003C82  0E7F               	movlw	127
  5248  003C84  6E1A               	movwf	writeEEPROM@data,c
  5249  003C86  EC8E  F039         	call	_writeEEPROM	;wreg free
  5250                           
  5251                           ;main.c: 1116: writeEEPROM(0x84, 0xff);
  5252  003C8A  0E00               	movlw	0
  5253  003C8C  6E19               	movwf	writeEEPROM@address+1,c
  5254  003C8E  0E84               	movlw	132
  5255  003C90  6E18               	movwf	writeEEPROM@address,c
  5256  003C92  0EFF               	movlw	255
  5257  003C94  6E1A               	movwf	writeEEPROM@data,c
  5258  003C96  EC8E  F039         	call	_writeEEPROM	;wreg free
  5259                           
  5260                           ;main.c: 1118: writeEEPROM(0x85, 0x7f);
  5261  003C9A  0E00               	movlw	0
  5262  003C9C  6E19               	movwf	writeEEPROM@address+1,c
  5263  003C9E  0E85               	movlw	133
  5264  003CA0  6E18               	movwf	writeEEPROM@address,c
  5265  003CA2  0E7F               	movlw	127
  5266  003CA4  6E1A               	movwf	writeEEPROM@data,c
  5267  003CA6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5268                           
  5269                           ;main.c: 1119: writeEEPROM(0x86, 0xff);
  5270  003CAA  0E00               	movlw	0
  5271  003CAC  6E19               	movwf	writeEEPROM@address+1,c
  5272  003CAE  0E86               	movlw	134
  5273  003CB0  6E18               	movwf	writeEEPROM@address,c
  5274  003CB2  0EFF               	movlw	255
  5275  003CB4  6E1A               	movwf	writeEEPROM@data,c
  5276  003CB6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5277                           
  5278                           ;main.c: 1121: writeEEPROM(0x87, 0x7f);
  5279  003CBA  0E00               	movlw	0
  5280  003CBC  6E19               	movwf	writeEEPROM@address+1,c
  5281  003CBE  0E87               	movlw	135
  5282  003CC0  6E18               	movwf	writeEEPROM@address,c
  5283  003CC2  0E7F               	movlw	127
  5284  003CC4  6E1A               	movwf	writeEEPROM@data,c
  5285  003CC6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5286                           
  5287                           ;main.c: 1122: writeEEPROM(0x88, 0xff);
  5288  003CCA  0E00               	movlw	0
  5289  003CCC  6E19               	movwf	writeEEPROM@address+1,c
  5290  003CCE  0E88               	movlw	136
  5291  003CD0  6E18               	movwf	writeEEPROM@address,c
  5292  003CD2  0EFF               	movlw	255
  5293  003CD4  6E1A               	movwf	writeEEPROM@data,c
  5294  003CD6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5295                           
  5296                           ;main.c: 1124: writeEEPROM(0x89, 0x7f);
  5297  003CDA  0E00               	movlw	0
  5298  003CDC  6E19               	movwf	writeEEPROM@address+1,c
  5299  003CDE  0E89               	movlw	137
  5300  003CE0  6E18               	movwf	writeEEPROM@address,c
  5301  003CE2  0E7F               	movlw	127
  5302  003CE4  6E1A               	movwf	writeEEPROM@data,c
  5303  003CE6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5304                           
  5305                           ;main.c: 1125: writeEEPROM(0x8A, 0xff);
  5306  003CEA  0E00               	movlw	0
  5307  003CEC  6E19               	movwf	writeEEPROM@address+1,c
  5308  003CEE  0E8A               	movlw	138
  5309  003CF0  6E18               	movwf	writeEEPROM@address,c
  5310  003CF2  0EFF               	movlw	255
  5311  003CF4  6E1A               	movwf	writeEEPROM@data,c
  5312  003CF6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5313                           
  5314                           ;main.c: 1129: writeEEPROM(0x8B, 0x80);
  5315  003CFA  0E00               	movlw	0
  5316  003CFC  6E19               	movwf	writeEEPROM@address+1,c
  5317  003CFE  0E8B               	movlw	139
  5318  003D00  6E18               	movwf	writeEEPROM@address,c
  5319  003D02  0E80               	movlw	128
  5320  003D04  6E1A               	movwf	writeEEPROM@data,c
  5321  003D06  EC8E  F039         	call	_writeEEPROM	;wreg free
  5322                           
  5323                           ;main.c: 1130: writeEEPROM(0x8C, 0x00);
  5324  003D0A  0E00               	movlw	0
  5325  003D0C  6E19               	movwf	writeEEPROM@address+1,c
  5326  003D0E  0E8C               	movlw	140
  5327  003D10  6E18               	movwf	writeEEPROM@address,c
  5328  003D12  0E00               	movlw	0
  5329  003D14  6E1A               	movwf	writeEEPROM@data,c
  5330  003D16  EC8E  F039         	call	_writeEEPROM	;wreg free
  5331                           
  5332                           ;main.c: 1132: writeEEPROM(0x8D, 0x80);
  5333  003D1A  0E00               	movlw	0
  5334  003D1C  6E19               	movwf	writeEEPROM@address+1,c
  5335  003D1E  0E8D               	movlw	141
  5336  003D20  6E18               	movwf	writeEEPROM@address,c
  5337  003D22  0E80               	movlw	128
  5338  003D24  6E1A               	movwf	writeEEPROM@data,c
  5339  003D26  EC8E  F039         	call	_writeEEPROM	;wreg free
  5340                           
  5341                           ;main.c: 1133: writeEEPROM(0x8E, 0x00);
  5342  003D2A  0E00               	movlw	0
  5343  003D2C  6E19               	movwf	writeEEPROM@address+1,c
  5344  003D2E  0E8E               	movlw	142
  5345  003D30  6E18               	movwf	writeEEPROM@address,c
  5346  003D32  0E00               	movlw	0
  5347  003D34  6E1A               	movwf	writeEEPROM@data,c
  5348  003D36  EC8E  F039         	call	_writeEEPROM	;wreg free
  5349                           
  5350                           ;main.c: 1135: writeEEPROM(0x8F, 0x80);
  5351  003D3A  0E00               	movlw	0
  5352  003D3C  6E19               	movwf	writeEEPROM@address+1,c
  5353  003D3E  0E8F               	movlw	143
  5354  003D40  6E18               	movwf	writeEEPROM@address,c
  5355  003D42  0E80               	movlw	128
  5356  003D44  6E1A               	movwf	writeEEPROM@data,c
  5357  003D46  EC8E  F039         	call	_writeEEPROM	;wreg free
  5358                           
  5359                           ;main.c: 1136: writeEEPROM(0x90, 0x00);
  5360  003D4A  0E00               	movlw	0
  5361  003D4C  6E19               	movwf	writeEEPROM@address+1,c
  5362  003D4E  0E90               	movlw	144
  5363  003D50  6E18               	movwf	writeEEPROM@address,c
  5364  003D52  0E00               	movlw	0
  5365  003D54  6E1A               	movwf	writeEEPROM@data,c
  5366  003D56  EC8E  F039         	call	_writeEEPROM	;wreg free
  5367                           
  5368                           ;main.c: 1138: writeEEPROM(0x91, 0x80);
  5369  003D5A  0E00               	movlw	0
  5370  003D5C  6E19               	movwf	writeEEPROM@address+1,c
  5371  003D5E  0E91               	movlw	145
  5372  003D60  6E18               	movwf	writeEEPROM@address,c
  5373  003D62  0E80               	movlw	128
  5374  003D64  6E1A               	movwf	writeEEPROM@data,c
  5375  003D66  EC8E  F039         	call	_writeEEPROM	;wreg free
  5376                           
  5377                           ;main.c: 1139: writeEEPROM(0x92, 0x00);
  5378  003D6A  0E00               	movlw	0
  5379  003D6C  6E19               	movwf	writeEEPROM@address+1,c
  5380  003D6E  0E92               	movlw	146
  5381  003D70  6E18               	movwf	writeEEPROM@address,c
  5382  003D72  0E00               	movlw	0
  5383  003D74  6E1A               	movwf	writeEEPROM@data,c
  5384  003D76  EC8E  F039         	call	_writeEEPROM	;wreg free
  5385                           
  5386                           ;main.c: 1141: writeEEPROM(0x93, 0x80);
  5387  003D7A  0E00               	movlw	0
  5388  003D7C  6E19               	movwf	writeEEPROM@address+1,c
  5389  003D7E  0E93               	movlw	147
  5390  003D80  6E18               	movwf	writeEEPROM@address,c
  5391  003D82  0E80               	movlw	128
  5392  003D84  6E1A               	movwf	writeEEPROM@data,c
  5393  003D86  EC8E  F039         	call	_writeEEPROM	;wreg free
  5394                           
  5395                           ;main.c: 1142: writeEEPROM(0x94, 0x00);
  5396  003D8A  0E00               	movlw	0
  5397  003D8C  6E19               	movwf	writeEEPROM@address+1,c
  5398  003D8E  0E94               	movlw	148
  5399  003D90  6E18               	movwf	writeEEPROM@address,c
  5400  003D92  0E00               	movlw	0
  5401  003D94  6E1A               	movwf	writeEEPROM@data,c
  5402  003D96  EC8E  F039         	call	_writeEEPROM	;wreg free
  5403                           
  5404                           ;main.c: 1144: writeEEPROM(0x95, 0x80);
  5405  003D9A  0E00               	movlw	0
  5406  003D9C  6E19               	movwf	writeEEPROM@address+1,c
  5407  003D9E  0E95               	movlw	149
  5408  003DA0  6E18               	movwf	writeEEPROM@address,c
  5409  003DA2  0E80               	movlw	128
  5410  003DA4  6E1A               	movwf	writeEEPROM@data,c
  5411  003DA6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5412                           
  5413                           ;main.c: 1145: writeEEPROM(0x96, 0x00);
  5414  003DAA  0E00               	movlw	0
  5415  003DAC  6E19               	movwf	writeEEPROM@address+1,c
  5416  003DAE  0E96               	movlw	150
  5417  003DB0  6E18               	movwf	writeEEPROM@address,c
  5418  003DB2  0E00               	movlw	0
  5419  003DB4  6E1A               	movwf	writeEEPROM@data,c
  5420  003DB6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5421                           
  5422                           ;main.c: 1149: writeEEPROM(0x97, 2);
  5423  003DBA  0E00               	movlw	0
  5424  003DBC  6E19               	movwf	writeEEPROM@address+1,c
  5425  003DBE  0E97               	movlw	151
  5426  003DC0  6E18               	movwf	writeEEPROM@address,c
  5427  003DC2  0E02               	movlw	2
  5428  003DC4  6E1A               	movwf	writeEEPROM@data,c
  5429  003DC6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5430                           
  5431                           ;main.c: 1150: writeEEPROM(0x98, 2);
  5432  003DCA  0E00               	movlw	0
  5433  003DCC  6E19               	movwf	writeEEPROM@address+1,c
  5434  003DCE  0E98               	movlw	152
  5435  003DD0  6E18               	movwf	writeEEPROM@address,c
  5436  003DD2  0E02               	movlw	2
  5437  003DD4  6E1A               	movwf	writeEEPROM@data,c
  5438  003DD6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5439                           
  5440                           ;main.c: 1151: writeEEPROM(0x99, 2);
  5441  003DDA  0E00               	movlw	0
  5442  003DDC  6E19               	movwf	writeEEPROM@address+1,c
  5443  003DDE  0E99               	movlw	153
  5444  003DE0  6E18               	movwf	writeEEPROM@address,c
  5445  003DE2  0E02               	movlw	2
  5446  003DE4  6E1A               	movwf	writeEEPROM@data,c
  5447  003DE6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5448                           
  5449                           ;main.c: 1152: writeEEPROM(0x9A, 2);
  5450  003DEA  0E00               	movlw	0
  5451  003DEC  6E19               	movwf	writeEEPROM@address+1,c
  5452  003DEE  0E9A               	movlw	154
  5453  003DF0  6E18               	movwf	writeEEPROM@address,c
  5454  003DF2  0E02               	movlw	2
  5455  003DF4  6E1A               	movwf	writeEEPROM@data,c
  5456  003DF6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5457                           
  5458                           ;main.c: 1153: writeEEPROM(0x9B, 2);
  5459  003DFA  0E00               	movlw	0
  5460  003DFC  6E19               	movwf	writeEEPROM@address+1,c
  5461  003DFE  0E9B               	movlw	155
  5462  003E00  6E18               	movwf	writeEEPROM@address,c
  5463  003E02  0E02               	movlw	2
  5464  003E04  6E1A               	movwf	writeEEPROM@data,c
  5465  003E06  EC8E  F039         	call	_writeEEPROM	;wreg free
  5466                           
  5467                           ;main.c: 1154: writeEEPROM(0x9C, 2);
  5468  003E0A  0E00               	movlw	0
  5469  003E0C  6E19               	movwf	writeEEPROM@address+1,c
  5470  003E0E  0E9C               	movlw	156
  5471  003E10  6E18               	movwf	writeEEPROM@address,c
  5472  003E12  0E02               	movlw	2
  5473  003E14  6E1A               	movwf	writeEEPROM@data,c
  5474  003E16  EC8E  F039         	call	_writeEEPROM	;wreg free
  5475                           
  5476                           ;main.c: 1158: writeEEPROM(0x9E, 0);
  5477  003E1A  0E00               	movlw	0
  5478  003E1C  6E19               	movwf	writeEEPROM@address+1,c
  5479  003E1E  0E9E               	movlw	158
  5480  003E20  6E18               	movwf	writeEEPROM@address,c
  5481  003E22  0E00               	movlw	0
  5482  003E24  6E1A               	movwf	writeEEPROM@data,c
  5483  003E26  EC8E  F039         	call	_writeEEPROM	;wreg free
  5484                           
  5485                           ;main.c: 1159: writeEEPROM(0x9F, 0);
  5486  003E2A  0E00               	movlw	0
  5487  003E2C  6E19               	movwf	writeEEPROM@address+1,c
  5488  003E2E  0E9F               	movlw	159
  5489  003E30  6E18               	movwf	writeEEPROM@address,c
  5490  003E32  0E00               	movlw	0
  5491  003E34  6E1A               	movwf	writeEEPROM@data,c
  5492  003E36  EC8E  F039         	call	_writeEEPROM	;wreg free
  5493                           
  5494                           ;main.c: 1160: writeEEPROM(0xA0, 0);
  5495  003E3A  0E00               	movlw	0
  5496  003E3C  6E19               	movwf	writeEEPROM@address+1,c
  5497  003E3E  0EA0               	movlw	160
  5498  003E40  6E18               	movwf	writeEEPROM@address,c
  5499  003E42  0E00               	movlw	0
  5500  003E44  6E1A               	movwf	writeEEPROM@data,c
  5501  003E46  EC8E  F039         	call	_writeEEPROM	;wreg free
  5502                           
  5503                           ;main.c: 1161: writeEEPROM(0xA1, 0);
  5504  003E4A  0E00               	movlw	0
  5505  003E4C  6E19               	movwf	writeEEPROM@address+1,c
  5506  003E4E  0EA1               	movlw	161
  5507  003E50  6E18               	movwf	writeEEPROM@address,c
  5508  003E52  0E00               	movlw	0
  5509  003E54  6E1A               	movwf	writeEEPROM@data,c
  5510  003E56  EC8E  F039         	call	_writeEEPROM	;wreg free
  5511                           
  5512                           ;main.c: 1162: writeEEPROM(0xA2, 0);
  5513  003E5A  0E00               	movlw	0
  5514  003E5C  6E19               	movwf	writeEEPROM@address+1,c
  5515  003E5E  0EA2               	movlw	162
  5516  003E60  6E18               	movwf	writeEEPROM@address,c
  5517  003E62  0E00               	movlw	0
  5518  003E64  6E1A               	movwf	writeEEPROM@data,c
  5519  003E66  EC8E  F039         	call	_writeEEPROM	;wreg free
  5520                           
  5521                           ;main.c: 1163: writeEEPROM(0xA3, 0);
  5522  003E6A  0E00               	movlw	0
  5523  003E6C  6E19               	movwf	writeEEPROM@address+1,c
  5524  003E6E  0EA3               	movlw	163
  5525  003E70  6E18               	movwf	writeEEPROM@address,c
  5526  003E72  0E00               	movlw	0
  5527  003E74  6E1A               	movwf	writeEEPROM@data,c
  5528  003E76  EC8E  F039         	call	_writeEEPROM	;wreg free
  5529                           
  5530                           ;main.c: 1164: writeEEPROM(0xA4, 0);
  5531  003E7A  0E00               	movlw	0
  5532  003E7C  6E19               	movwf	writeEEPROM@address+1,c
  5533  003E7E  0EA4               	movlw	164
  5534  003E80  6E18               	movwf	writeEEPROM@address,c
  5535  003E82  0E00               	movlw	0
  5536  003E84  6E1A               	movwf	writeEEPROM@data,c
  5537  003E86  EC8E  F039         	call	_writeEEPROM	;wreg free
  5538                           
  5539                           ;main.c: 1165: writeEEPROM(0xA5, 0);
  5540  003E8A  0E00               	movlw	0
  5541  003E8C  6E19               	movwf	writeEEPROM@address+1,c
  5542  003E8E  0EA5               	movlw	165
  5543  003E90  6E18               	movwf	writeEEPROM@address,c
  5544  003E92  0E00               	movlw	0
  5545  003E94  6E1A               	movwf	writeEEPROM@data,c
  5546  003E96  EC8E  F039         	call	_writeEEPROM	;wreg free
  5547                           
  5548                           ;main.c: 1166: writeEEPROM(0xA6, 0);
  5549  003E9A  0E00               	movlw	0
  5550  003E9C  6E19               	movwf	writeEEPROM@address+1,c
  5551  003E9E  0EA6               	movlw	166
  5552  003EA0  6E18               	movwf	writeEEPROM@address,c
  5553  003EA2  0E00               	movlw	0
  5554  003EA4  6E1A               	movwf	writeEEPROM@data,c
  5555  003EA6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5556                           
  5557                           ;main.c: 1167: writeEEPROM(0xA7, 0);
  5558  003EAA  0E00               	movlw	0
  5559  003EAC  6E19               	movwf	writeEEPROM@address+1,c
  5560  003EAE  0EA7               	movlw	167
  5561  003EB0  6E18               	movwf	writeEEPROM@address,c
  5562  003EB2  0E00               	movlw	0
  5563  003EB4  6E1A               	movwf	writeEEPROM@data,c
  5564  003EB6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5565                           
  5566                           ;main.c: 1168: writeEEPROM(0xA8, 0);
  5567  003EBA  0E00               	movlw	0
  5568  003EBC  6E19               	movwf	writeEEPROM@address+1,c
  5569  003EBE  0EA8               	movlw	168
  5570  003EC0  6E18               	movwf	writeEEPROM@address,c
  5571  003EC2  0E00               	movlw	0
  5572  003EC4  6E1A               	movwf	writeEEPROM@data,c
  5573  003EC6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5574                           
  5575                           ;main.c: 1169: writeEEPROM(0xA9, 0);
  5576  003ECA  0E00               	movlw	0
  5577  003ECC  6E19               	movwf	writeEEPROM@address+1,c
  5578  003ECE  0EA9               	movlw	169
  5579  003ED0  6E18               	movwf	writeEEPROM@address,c
  5580  003ED2  0E00               	movlw	0
  5581  003ED4  6E1A               	movwf	writeEEPROM@data,c
  5582  003ED6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5583                           
  5584                           ;main.c: 1172: writeEEPROM(0xAA, 0);
  5585  003EDA  0E00               	movlw	0
  5586  003EDC  6E19               	movwf	writeEEPROM@address+1,c
  5587  003EDE  0EAA               	movlw	170
  5588  003EE0  6E18               	movwf	writeEEPROM@address,c
  5589  003EE2  0E00               	movlw	0
  5590  003EE4  6E1A               	movwf	writeEEPROM@data,c
  5591  003EE6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5592                           
  5593                           ;main.c: 1173: writeEEPROM(0xAB, 0);
  5594  003EEA  0E00               	movlw	0
  5595  003EEC  6E19               	movwf	writeEEPROM@address+1,c
  5596  003EEE  0EAB               	movlw	171
  5597  003EF0  6E18               	movwf	writeEEPROM@address,c
  5598  003EF2  0E00               	movlw	0
  5599  003EF4  6E1A               	movwf	writeEEPROM@data,c
  5600  003EF6  EC8E  F039         	call	_writeEEPROM	;wreg free
  5601                           
  5602                           ;main.c: 1174: writeEEPROM(0xAC, 0);
  5603  003EFA  0E00               	movlw	0
  5604  003EFC  6E19               	movwf	writeEEPROM@address+1,c
  5605  003EFE  0EAC               	movlw	172
  5606  003F00  6E18               	movwf	writeEEPROM@address,c
  5607  003F02  0E00               	movlw	0
  5608  003F04  6E1A               	movwf	writeEEPROM@data,c
  5609  003F06  EC8E  F039         	call	_writeEEPROM	;wreg free
  5610                           
  5611                           ;main.c: 1175: writeEEPROM(0xAD, 0);
  5612  003F0A  0E00               	movlw	0
  5613  003F0C  6E19               	movwf	writeEEPROM@address+1,c
  5614  003F0E  0EAD               	movlw	173
  5615  003F10  6E18               	movwf	writeEEPROM@address,c
  5616  003F12  0E00               	movlw	0
  5617  003F14  6E1A               	movwf	writeEEPROM@data,c
  5618  003F16  EC8E  F039         	call	_writeEEPROM	;wreg free
  5619                           
  5620                           ;main.c: 1176: writeEEPROM(0xAE, 0);
  5621  003F1A  0E00               	movlw	0
  5622  003F1C  6E19               	movwf	writeEEPROM@address+1,c
  5623  003F1E  0EAE               	movlw	174
  5624  003F20  6E18               	movwf	writeEEPROM@address,c
  5625  003F22  0E00               	movlw	0
  5626  003F24  6E1A               	movwf	writeEEPROM@data,c
  5627  003F26  EC8E  F039         	call	_writeEEPROM	;wreg free
  5628                           
  5629                           ;main.c: 1177: writeEEPROM(0xAF, 0);
  5630  003F2A  0E00               	movlw	0
  5631  003F2C  6E19               	movwf	writeEEPROM@address+1,c
  5632  003F2E  0EAF               	movlw	175
  5633  003F30  6E18               	movwf	writeEEPROM@address,c
  5634  003F32  0E00               	movlw	0
  5635  003F34  6E1A               	movwf	writeEEPROM@data,c
  5636  003F36  EC8E  F039         	call	_writeEEPROM	;wreg free
  5637                           
  5638                           ;main.c: 1178: writeEEPROM(0xB0, 0);
  5639  003F3A  0E00               	movlw	0
  5640  003F3C  6E19               	movwf	writeEEPROM@address+1,c
  5641  003F3E  0EB0               	movlw	176
  5642  003F40  6E18               	movwf	writeEEPROM@address,c
  5643  003F42  0E00               	movlw	0
  5644  003F44  6E1A               	movwf	writeEEPROM@data,c
  5645  003F46  EC8E  F039         	call	_writeEEPROM	;wreg free
  5646                           
  5647                           ;main.c: 1179: writeEEPROM(0xB1, 0);
  5648  003F4A  0E00               	movlw	0
  5649  003F4C  6E19               	movwf	writeEEPROM@address+1,c
  5650  003F4E  0EB1               	movlw	177
  5651  003F50  6E18               	movwf	writeEEPROM@address,c
  5652  003F52  0E00               	movlw	0
  5653  003F54  6E1A               	movwf	writeEEPROM@data,c
  5654  003F56  EC8E  F039         	call	_writeEEPROM	;wreg free
  5655                           
  5656                           ;main.c: 1180: writeEEPROM(0xB2, 0);
  5657  003F5A  0E00               	movlw	0
  5658  003F5C  6E19               	movwf	writeEEPROM@address+1,c
  5659  003F5E  0EB2               	movlw	178
  5660  003F60  6E18               	movwf	writeEEPROM@address,c
  5661  003F62  0E00               	movlw	0
  5662  003F64  6E1A               	movwf	writeEEPROM@data,c
  5663  003F66  EC8E  F039         	call	_writeEEPROM	;wreg free
  5664                           
  5665                           ;main.c: 1181: writeEEPROM(0xB3, 0);
  5666  003F6A  0E00               	movlw	0
  5667  003F6C  6E19               	movwf	writeEEPROM@address+1,c
  5668  003F6E  0EB3               	movlw	179
  5669  003F70  6E18               	movwf	writeEEPROM@address,c
  5670  003F72  0E00               	movlw	0
  5671  003F74  6E1A               	movwf	writeEEPROM@data,c
  5672  003F76  EC8E  F039         	call	_writeEEPROM	;wreg free
  5673                           
  5674                           ;main.c: 1182: writeEEPROM(0xB4, 0);
  5675  003F7A  0E00               	movlw	0
  5676  003F7C  6E19               	movwf	writeEEPROM@address+1,c
  5677  003F7E  0EB4               	movlw	180
  5678  003F80  6E18               	movwf	writeEEPROM@address,c
  5679  003F82  0E00               	movlw	0
  5680  003F84  6E1A               	movwf	writeEEPROM@data,c
  5681  003F86  EC8E  F039         	call	_writeEEPROM	;wreg free
  5682                           
  5683                           ;main.c: 1183: writeEEPROM(0xB5, 0);
  5684  003F8A  0E00               	movlw	0
  5685  003F8C  6E19               	movwf	writeEEPROM@address+1,c
  5686  003F8E  0EB5               	movlw	181
  5687  003F90  6E18               	movwf	writeEEPROM@address,c
  5688  003F92  0E00               	movlw	0
  5689  003F94  6E1A               	movwf	writeEEPROM@data,c
  5690  003F96  EC8E  F039         	call	_writeEEPROM	;wreg free
  5691                           
  5692                           ;main.c: 1186: for (uint8_t i = 0; i < 6; i++) {
  5693  003F9A  0E00               	movlw	0
  5694  003F9C  6E1B               	movwf	init_app_eeprom@i,c
  5695  003F9E  D091               	goto	L22
  5696  003FA0                     l8308:
  5697                           
  5698                           ;main.c: 1187: writeEEPROM(0xB6 + i * 12, 0);
  5699  003FA0  501B               	movf	init_app_eeprom@i,w,c
  5700  003FA2  0D0C               	mullw	12
  5701  003FA4  0EB6               	movlw	182
  5702  003FA6  24F3               	addwf	prodl,w,c
  5703  003FA8  6E18               	movwf	writeEEPROM@address,c
  5704  003FAA  0E00               	movlw	0
  5705  003FAC  20F4               	addwfc	prodh,w,c
  5706  003FAE  6E19               	movwf	writeEEPROM@address+1,c
  5707  003FB0  0E00               	movlw	0
  5708  003FB2  6E1A               	movwf	writeEEPROM@data,c
  5709  003FB4  EC8E  F039         	call	_writeEEPROM	;wreg free
  5710                           
  5711                           ;main.c: 1188: writeEEPROM(0xB7 + i * 12, 0);
  5712  003FB8  501B               	movf	init_app_eeprom@i,w,c
  5713  003FBA  0D0C               	mullw	12
  5714  003FBC  0EB7               	movlw	183
  5715  003FBE  24F3               	addwf	prodl,w,c
  5716  003FC0  6E18               	movwf	writeEEPROM@address,c
  5717  003FC2  0E00               	movlw	0
  5718  003FC4  20F4               	addwfc	prodh,w,c
  5719  003FC6  6E19               	movwf	writeEEPROM@address+1,c
  5720  003FC8  0E00               	movlw	0
  5721  003FCA  6E1A               	movwf	writeEEPROM@data,c
  5722  003FCC  EC8E  F039         	call	_writeEEPROM	;wreg free
  5723                           
  5724                           ;main.c: 1189: writeEEPROM(0xB8 + i * 12, 0);
  5725  003FD0  501B               	movf	init_app_eeprom@i,w,c
  5726  003FD2  0D0C               	mullw	12
  5727  003FD4  0EB8               	movlw	184
  5728  003FD6  24F3               	addwf	prodl,w,c
  5729  003FD8  6E18               	movwf	writeEEPROM@address,c
  5730  003FDA  0E00               	movlw	0
  5731  003FDC  20F4               	addwfc	prodh,w,c
  5732  003FDE  6E19               	movwf	writeEEPROM@address+1,c
  5733  003FE0  0E00               	movlw	0
  5734  003FE2  6E1A               	movwf	writeEEPROM@data,c
  5735  003FE4  EC8E  F039         	call	_writeEEPROM	;wreg free
  5736                           
  5737                           ;main.c: 1190: writeEEPROM(0xB9 + i * 12, 0);
  5738  003FE8  501B               	movf	init_app_eeprom@i,w,c
  5739  003FEA  0D0C               	mullw	12
  5740  003FEC  0EB9               	movlw	185
  5741  003FEE  24F3               	addwf	prodl,w,c
  5742  003FF0  6E18               	movwf	writeEEPROM@address,c
  5743  003FF2  0E00               	movlw	0
  5744  003FF4  20F4               	addwfc	prodh,w,c
  5745  003FF6  6E19               	movwf	writeEEPROM@address+1,c
  5746  003FF8  0E00               	movlw	0
  5747  003FFA  6E1A               	movwf	writeEEPROM@data,c
  5748  003FFC  EC8E  F039         	call	_writeEEPROM	;wreg free
  5749                           
  5750                           ;main.c: 1191: writeEEPROM(0xBA + i * 12, 0);
  5751  004000  501B               	movf	init_app_eeprom@i,w,c
  5752  004002  0D0C               	mullw	12
  5753  004004  0EBA               	movlw	186
  5754  004006  24F3               	addwf	prodl,w,c
  5755  004008  6E18               	movwf	writeEEPROM@address,c
  5756  00400A  0E00               	movlw	0
  5757  00400C  20F4               	addwfc	prodh,w,c
  5758  00400E  6E19               	movwf	writeEEPROM@address+1,c
  5759  004010  0E00               	movlw	0
  5760  004012  6E1A               	movwf	writeEEPROM@data,c
  5761  004014  EC8E  F039         	call	_writeEEPROM	;wreg free
  5762                           
  5763                           ;main.c: 1192: writeEEPROM(0xBB + i * 12, 0);
  5764  004018  501B               	movf	init_app_eeprom@i,w,c
  5765  00401A  0D0C               	mullw	12
  5766  00401C  0EBB               	movlw	187
  5767  00401E  24F3               	addwf	prodl,w,c
  5768  004020  6E18               	movwf	writeEEPROM@address,c
  5769  004022  0E00               	movlw	0
  5770  004024  20F4               	addwfc	prodh,w,c
  5771  004026  6E19               	movwf	writeEEPROM@address+1,c
  5772  004028  0E00               	movlw	0
  5773  00402A  6E1A               	movwf	writeEEPROM@data,c
  5774  00402C  EC8E  F039         	call	_writeEEPROM	;wreg free
  5775                           
  5776                           ;main.c: 1193: writeEEPROM(0xBC + i * 12, 0);
  5777  004030  501B               	movf	init_app_eeprom@i,w,c
  5778  004032  0D0C               	mullw	12
  5779  004034  0EBC               	movlw	188
  5780  004036  24F3               	addwf	prodl,w,c
  5781  004038  6E18               	movwf	writeEEPROM@address,c
  5782  00403A  0E00               	movlw	0
  5783  00403C  20F4               	addwfc	prodh,w,c
  5784  00403E  6E19               	movwf	writeEEPROM@address+1,c
  5785  004040  0E00               	movlw	0
  5786  004042  6E1A               	movwf	writeEEPROM@data,c
  5787  004044  EC8E  F039         	call	_writeEEPROM	;wreg free
  5788                           
  5789                           ;main.c: 1194: writeEEPROM(0xBD + i * 12, 0);
  5790  004048  501B               	movf	init_app_eeprom@i,w,c
  5791  00404A  0D0C               	mullw	12
  5792  00404C  0EBD               	movlw	189
  5793  00404E  24F3               	addwf	prodl,w,c
  5794  004050  6E18               	movwf	writeEEPROM@address,c
  5795  004052  0E00               	movlw	0
  5796  004054  20F4               	addwfc	prodh,w,c
  5797  004056  6E19               	movwf	writeEEPROM@address+1,c
  5798  004058  0E00               	movlw	0
  5799  00405A  6E1A               	movwf	writeEEPROM@data,c
  5800  00405C  EC8E  F039         	call	_writeEEPROM	;wreg free
  5801                           
  5802                           ;main.c: 1195: writeEEPROM(0xBE + i * 12, 0);
  5803  004060  501B               	movf	init_app_eeprom@i,w,c
  5804  004062  0D0C               	mullw	12
  5805  004064  0EBE               	movlw	190
  5806  004066  24F3               	addwf	prodl,w,c
  5807  004068  6E18               	movwf	writeEEPROM@address,c
  5808  00406A  0E00               	movlw	0
  5809  00406C  20F4               	addwfc	prodh,w,c
  5810  00406E  6E19               	movwf	writeEEPROM@address+1,c
  5811  004070  0E00               	movlw	0
  5812  004072  6E1A               	movwf	writeEEPROM@data,c
  5813  004074  EC8E  F039         	call	_writeEEPROM	;wreg free
  5814                           
  5815                           ;main.c: 1196: writeEEPROM(0xBF + i * 12, 0);
  5816  004078  501B               	movf	init_app_eeprom@i,w,c
  5817  00407A  0D0C               	mullw	12
  5818  00407C  0EBF               	movlw	191
  5819  00407E  24F3               	addwf	prodl,w,c
  5820  004080  6E18               	movwf	writeEEPROM@address,c
  5821  004082  0E00               	movlw	0
  5822  004084  20F4               	addwfc	prodh,w,c
  5823  004086  6E19               	movwf	writeEEPROM@address+1,c
  5824  004088  0E00               	movlw	0
  5825  00408A  6E1A               	movwf	writeEEPROM@data,c
  5826  00408C  EC8E  F039         	call	_writeEEPROM	;wreg free
  5827                           
  5828                           ;main.c: 1197: writeEEPROM(0xC0 + i * 12, 0);
  5829  004090  501B               	movf	init_app_eeprom@i,w,c
  5830  004092  0D0C               	mullw	12
  5831  004094  0EC0               	movlw	192
  5832  004096  24F3               	addwf	prodl,w,c
  5833  004098  6E18               	movwf	writeEEPROM@address,c
  5834  00409A  0E00               	movlw	0
  5835  00409C  20F4               	addwfc	prodh,w,c
  5836  00409E  6E19               	movwf	writeEEPROM@address+1,c
  5837  0040A0  0E00               	movlw	0
  5838  0040A2  6E1A               	movwf	writeEEPROM@data,c
  5839  0040A4  EC8E  F039         	call	_writeEEPROM	;wreg free
  5840                           
  5841                           ;main.c: 1198: writeEEPROM(0xC1 + i * 12, 0);
  5842  0040A8  501B               	movf	init_app_eeprom@i,w,c
  5843  0040AA  0D0C               	mullw	12
  5844  0040AC  0EC1               	movlw	193
  5845  0040AE  24F3               	addwf	prodl,w,c
  5846  0040B0  6E18               	movwf	writeEEPROM@address,c
  5847  0040B2  0E00               	movlw	0
  5848  0040B4  20F4               	addwfc	prodh,w,c
  5849  0040B6  6E19               	movwf	writeEEPROM@address+1,c
  5850  0040B8  0E00               	movlw	0
  5851  0040BA  6E1A               	movwf	writeEEPROM@data,c
  5852  0040BC  EC8E  F039         	call	_writeEEPROM	;wreg free
  5853  0040C0  2A1B               	incf	init_app_eeprom@i,f,c
  5854  0040C2                     L22:
  5855  0040C2  0E05               	movlw	5
  5856  0040C4  641B               	cpfsgt	init_app_eeprom@i,c
  5857  0040C6  D76C               	goto	l8308
  5858                           
  5859                           ;main.c: 1199: }
  5860                           ;main.c: 1202: writeEEPROM(0xF2, 0xc3);
  5861  0040C8  0E00               	movlw	0
  5862  0040CA  6E19               	movwf	writeEEPROM@address+1,c
  5863  0040CC  0EF2               	movlw	242
  5864  0040CE  6E18               	movwf	writeEEPROM@address,c
  5865  0040D0  0EC3               	movlw	195
  5866  0040D2  6E1A               	movwf	writeEEPROM@data,c
  5867  0040D4  EC8E  F039         	call	_writeEEPROM	;wreg free
  5868                           
  5869                           ;main.c: 1203: writeEEPROM(0xF3, 0x50);
  5870  0040D8  0E00               	movlw	0
  5871  0040DA  6E19               	movwf	writeEEPROM@address+1,c
  5872  0040DC  0EF3               	movlw	243
  5873  0040DE  6E18               	movwf	writeEEPROM@address,c
  5874  0040E0  0E50               	movlw	80
  5875  0040E2  6E1A               	movwf	writeEEPROM@data,c
  5876  0040E4  EC8E  F039         	call	_writeEEPROM	;wreg free
  5877  0040E8  0012               	return	
  5878  0040EA                     __end_of_init_app_eeprom:
  5879                           	opt stack 0
  5880                           tblptru	equ	0xFF8
  5881                           prodh	equ	0xFF4
  5882                           prodl	equ	0xFF3
  5883                           postinc0	equ	0xFEE
  5884                           wreg	equ	0xFE8
  5885                           postdec1	equ	0xFE5
  5886                           fsr1h	equ	0xFE2
  5887                           fsr1l	equ	0xFE1
  5888                           indf2	equ	0xFDF
  5889                           fsr2h	equ	0xFDA
  5890                           fsr2l	equ	0xFD9
  5891                           status	equ	0xFD8
  5892                           
  5893 ;; *************** function _vscp_getFamilyType *****************
  5894 ;; Defined at:
  5895 ;;		line 2810 in file "../main.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;		None
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  4   23[COMRAM] unsigned long 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5909 ;;      Params:         4       0       0       0       0       0       0
  5910 ;;      Locals:         0       0       0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0
  5912 ;;      Totals:         4       0       0       0       0       0       0
  5913 ;;Total ram usage:        4 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    2
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_vscp_writeStdReg
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text9
  5924  0074A8                     __ptext9:
  5925                           	opt stack 0
  5926  0074A8                     _vscp_getFamilyType:
  5927                           	opt stack 26
  5928                           
  5929                           ;main.c: 2812: return 0;
  5930                           
  5931                           ;incstack = 0
  5932  0074A8  0E00               	movlw	0
  5933  0074AA  6E18               	movwf	?_vscp_getFamilyType,c
  5934  0074AC  0E00               	movlw	0
  5935  0074AE  6E19               	movwf	?_vscp_getFamilyType+1,c
  5936  0074B0  0E00               	movlw	0
  5937  0074B2  6E1A               	movwf	?_vscp_getFamilyType+2,c
  5938  0074B4  0E00               	movlw	0
  5939  0074B6  6E1B               	movwf	?_vscp_getFamilyType+3,c
  5940  0074B8  0012               	return	
  5941  0074BA                     __end_of_vscp_getFamilyType:
  5942                           	opt stack 0
  5943                           tblptru	equ	0xFF8
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           postinc0	equ	0xFEE
  5947                           wreg	equ	0xFE8
  5948                           postdec1	equ	0xFE5
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           indf2	equ	0xFDF
  5952                           fsr2h	equ	0xFDA
  5953                           fsr2l	equ	0xFD9
  5954                           status	equ	0xFD8
  5955                           
  5956 ;; *************** function _vscp_getFamilyCode *****************
  5957 ;; Defined at:
  5958 ;;		line 2800 in file "../main.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  4   23[COMRAM] unsigned long 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5972 ;;      Params:         4       0       0       0       0       0       0
  5973 ;;      Locals:         0       0       0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0
  5975 ;;      Totals:         4       0       0       0       0       0       0
  5976 ;;Total ram usage:        4 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:    2
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_vscp_writeStdReg
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text10
  5987  0074BA                     __ptext10:
  5988                           	opt stack 0
  5989  0074BA                     _vscp_getFamilyCode:
  5990                           	opt stack 26
  5991                           
  5992                           ;main.c: 2802: return 0L;
  5993                           
  5994                           ;incstack = 0
  5995  0074BA  0E00               	movlw	0
  5996  0074BC  6E18               	movwf	?_vscp_getFamilyCode,c
  5997  0074BE  0E00               	movlw	0
  5998  0074C0  6E19               	movwf	?_vscp_getFamilyCode+1,c
  5999  0074C2  0E00               	movlw	0
  6000  0074C4  6E1A               	movwf	?_vscp_getFamilyCode+2,c
  6001  0074C6  0E00               	movlw	0
  6002  0074C8  6E1B               	movwf	?_vscp_getFamilyCode+3,c
  6003  0074CA  0012               	return	
  6004  0074CC                     __end_of_vscp_getFamilyCode:
  6005                           	opt stack 0
  6006                           tblptru	equ	0xFF8
  6007                           prodh	equ	0xFF4
  6008                           prodl	equ	0xFF3
  6009                           postinc0	equ	0xFEE
  6010                           wreg	equ	0xFE8
  6011                           postdec1	equ	0xFE5
  6012                           fsr1h	equ	0xFE2
  6013                           fsr1l	equ	0xFE1
  6014                           indf2	equ	0xFDF
  6015                           fsr2h	equ	0xFDA
  6016                           fsr2l	equ	0xFD9
  6017                           status	equ	0xFD8
  6018                           
  6019 ;; *************** function _vscp_writeAppReg *****************
  6020 ;; Defined at:
  6021 ;;		line 1866 in file "../main.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  reg             1    wreg     unsigned char 
  6024 ;;  val             1   41[COMRAM] unsigned char 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  reg             1   42[COMRAM] unsigned char 
  6027 ;;  rv              1   43[COMRAM] unsigned char 
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      unsigned char 
  6030 ;; Registers used:
  6031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6037 ;;      Params:         1       0       0       0       0       0       0
  6038 ;;      Locals:         2       0       0       0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0       0       0
  6040 ;;      Totals:         3       0       0       0       0       0       0
  6041 ;;Total ram usage:        3 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    4
  6044 ;; This function calls:
  6045 ;;		_readEEPROM
  6046 ;;		_writeCoeffs2Ram
  6047 ;;		_writeEEPROM
  6048 ;; This function is called by:
  6049 ;;		_vscp_writeRegister
  6050 ;;		_vscp_handleProtocolEvent
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text11
  6055  00066E                     __ptext11:
  6056                           	opt stack 0
  6057  00066E                     _vscp_writeAppReg:
  6058                           	opt stack 24
  6059                           
  6060                           ;incstack = 0
  6061                           ;vscp_writeAppReg@reg stored from wreg
  6062  00066E  6E2B               	movwf	vscp_writeAppReg@reg,c
  6063                           
  6064                           ;main.c: 1868: uint8_t rv;
  6065                           ;main.c: 1875: rv = ~val;
  6066  000670  502A               	movf	vscp_writeAppReg@val,w,c
  6067  000672  0AFF               	xorlw	255
  6068  000674  6E2C               	movwf	vscp_writeAppReg@rv,c
  6069                           
  6070                           ;main.c: 1877: if (0 == vscp_page_select) {
  6071  000676  5033               	movf	_vscp_page_select+1,w,c
  6072  000678  1032               	iorwf	_vscp_page_select,w,c
  6073  00067A  B4D8               	btfsc	status,2,c
  6074  00067C  EFCC  F009         	goto	l9326
  6075  000680  EF26  F00B         	goto	l9328
  6076  000684                     l9130:
  6077                           
  6078                           ;main.c: 1883: writeEEPROM(0x41, val);
  6079  000684  0E00               	movlw	0
  6080  000686  6E19               	movwf	writeEEPROM@address+1,c
  6081  000688  0E41               	movlw	65
  6082  00068A  6E18               	movwf	writeEEPROM@address,c
  6083  00068C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6084  000690  EC8E  F039         	call	_writeEEPROM	;wreg free
  6085                           
  6086                           ;main.c: 1884: rv = readEEPROM(0x41);
  6087  000694  0E00               	movlw	0
  6088  000696  6E1F               	movwf	readEEPROM@address+1,c
  6089  000698  0E41               	movlw	65
  6090  00069A  6E1E               	movwf	readEEPROM@address,c
  6091  00069C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6092  0006A0  EFCA  F009         	goto	L116
  6093  0006A4                     l9132:
  6094                           
  6095                           ;main.c: 1889: writeEEPROM(0x42, val);
  6096  0006A4  0E00               	movlw	0
  6097  0006A6  6E19               	movwf	writeEEPROM@address+1,c
  6098  0006A8  0E42               	movlw	66
  6099  0006AA  6E18               	movwf	writeEEPROM@address,c
  6100  0006AC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6101  0006B0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6102                           
  6103                           ;main.c: 1890: rv = readEEPROM(0x42);
  6104  0006B4  0E00               	movlw	0
  6105  0006B6  6E1F               	movwf	readEEPROM@address+1,c
  6106  0006B8  0E42               	movlw	66
  6107  0006BA  6E1E               	movwf	readEEPROM@address,c
  6108  0006BC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6109  0006C0  EFCA  F009         	goto	L116
  6110  0006C4                     l9134:
  6111                           
  6112                           ;main.c: 1899: writeEEPROM(0x43, val);
  6113  0006C4  0E00               	movlw	0
  6114  0006C6  6E19               	movwf	writeEEPROM@address+1,c
  6115  0006C8  0E43               	movlw	67
  6116  0006CA  6E18               	movwf	writeEEPROM@address,c
  6117  0006CC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6118  0006D0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6119                           
  6120                           ;main.c: 1900: rv = readEEPROM(0x43);
  6121  0006D4  0E00               	movlw	0
  6122  0006D6  6E1F               	movwf	readEEPROM@address+1,c
  6123  0006D8  0E43               	movlw	67
  6124  0006DA  6E1E               	movwf	readEEPROM@address,c
  6125  0006DC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6126  0006E0  EFCA  F009         	goto	L116
  6127  0006E4                     l9136:
  6128                           
  6129                           ;main.c: 1905: writeEEPROM(0x44, val);
  6130  0006E4  0E00               	movlw	0
  6131  0006E6  6E19               	movwf	writeEEPROM@address+1,c
  6132  0006E8  0E44               	movlw	68
  6133  0006EA  6E18               	movwf	writeEEPROM@address,c
  6134  0006EC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6135  0006F0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6136                           
  6137                           ;main.c: 1906: rv = readEEPROM(0x44);
  6138  0006F4  0E00               	movlw	0
  6139  0006F6  6E1F               	movwf	readEEPROM@address+1,c
  6140  0006F8  0E44               	movlw	68
  6141  0006FA  6E1E               	movwf	readEEPROM@address,c
  6142  0006FC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6143  000700  EFCA  F009         	goto	L116
  6144  000704                     l9138:
  6145                           
  6146                           ;main.c: 1911: writeEEPROM(0x45, val);
  6147  000704  0E00               	movlw	0
  6148  000706  6E19               	movwf	writeEEPROM@address+1,c
  6149  000708  0E45               	movlw	69
  6150  00070A  6E18               	movwf	writeEEPROM@address,c
  6151  00070C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6152  000710  EC8E  F039         	call	_writeEEPROM	;wreg free
  6153                           
  6154                           ;main.c: 1912: rv = readEEPROM(0x45);
  6155  000714  0E00               	movlw	0
  6156  000716  6E1F               	movwf	readEEPROM@address+1,c
  6157  000718  0E45               	movlw	69
  6158  00071A  6E1E               	movwf	readEEPROM@address,c
  6159  00071C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6160  000720  EFCA  F009         	goto	L116
  6161  000724                     l9140:
  6162                           
  6163                           ;main.c: 1917: writeEEPROM(0x46, val);
  6164  000724  0E00               	movlw	0
  6165  000726  6E19               	movwf	writeEEPROM@address+1,c
  6166  000728  0E46               	movlw	70
  6167  00072A  6E18               	movwf	writeEEPROM@address,c
  6168  00072C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6169  000730  EC8E  F039         	call	_writeEEPROM	;wreg free
  6170                           
  6171                           ;main.c: 1918: rv = readEEPROM(0x46);
  6172  000734  0E00               	movlw	0
  6173  000736  6E1F               	movwf	readEEPROM@address+1,c
  6174  000738  0E46               	movlw	70
  6175  00073A  6E1E               	movwf	readEEPROM@address,c
  6176  00073C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6177  000740  EFCA  F009         	goto	L116
  6178  000744                     l9142:
  6179                           
  6180                           ;main.c: 1923: writeEEPROM(0x47, val);
  6181  000744  0E00               	movlw	0
  6182  000746  6E19               	movwf	writeEEPROM@address+1,c
  6183  000748  0E47               	movlw	71
  6184  00074A  6E18               	movwf	writeEEPROM@address,c
  6185  00074C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6186  000750  EC8E  F039         	call	_writeEEPROM	;wreg free
  6187                           
  6188                           ;main.c: 1924: rv = readEEPROM(0x47);
  6189  000754  0E00               	movlw	0
  6190  000756  6E1F               	movwf	readEEPROM@address+1,c
  6191  000758  0E47               	movlw	71
  6192  00075A  6E1E               	movwf	readEEPROM@address,c
  6193  00075C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6194  000760  EFCA  F009         	goto	L116
  6195  000764                     l9144:
  6196                           
  6197                           ;main.c: 1929: writeEEPROM(0x48, val);
  6198  000764  0E00               	movlw	0
  6199  000766  6E19               	movwf	writeEEPROM@address+1,c
  6200  000768  0E48               	movlw	72
  6201  00076A  6E18               	movwf	writeEEPROM@address,c
  6202  00076C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6203  000770  EC8E  F039         	call	_writeEEPROM	;wreg free
  6204                           
  6205                           ;main.c: 1930: rv = readEEPROM(0x48);
  6206  000774  0E00               	movlw	0
  6207  000776  6E1F               	movwf	readEEPROM@address+1,c
  6208  000778  0E48               	movlw	72
  6209  00077A  6E1E               	movwf	readEEPROM@address,c
  6210  00077C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6211  000780  EFCA  F009         	goto	L116
  6212  000784                     l9146:
  6213                           
  6214                           ;main.c: 1939: writeEEPROM(0x49, val);
  6215  000784  0E00               	movlw	0
  6216  000786  6E19               	movwf	writeEEPROM@address+1,c
  6217  000788  0E49               	movlw	73
  6218  00078A  6E18               	movwf	writeEEPROM@address,c
  6219  00078C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6220  000790  EC8E  F039         	call	_writeEEPROM	;wreg free
  6221                           
  6222                           ;main.c: 1940: rv = readEEPROM(0x49);
  6223  000794  0E00               	movlw	0
  6224  000796  6E1F               	movwf	readEEPROM@address+1,c
  6225  000798  0E49               	movlw	73
  6226  00079A  6E1E               	movwf	readEEPROM@address,c
  6227  00079C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6228  0007A0  EFCA  F009         	goto	L116
  6229  0007A4                     l9148:
  6230                           
  6231                           ;main.c: 1945: writeEEPROM(0x4A, val);
  6232  0007A4  0E00               	movlw	0
  6233  0007A6  6E19               	movwf	writeEEPROM@address+1,c
  6234  0007A8  0E4A               	movlw	74
  6235  0007AA  6E18               	movwf	writeEEPROM@address,c
  6236  0007AC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6237  0007B0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6238                           
  6239                           ;main.c: 1946: rv = readEEPROM(0x4A);
  6240  0007B4  0E00               	movlw	0
  6241  0007B6  6E1F               	movwf	readEEPROM@address+1,c
  6242  0007B8  0E4A               	movlw	74
  6243  0007BA  6E1E               	movwf	readEEPROM@address,c
  6244  0007BC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6245  0007C0  EFCA  F009         	goto	L116
  6246  0007C4                     l9150:
  6247                           
  6248                           ;main.c: 1951: writeEEPROM(0x4B, val);
  6249  0007C4  0E00               	movlw	0
  6250  0007C6  6E19               	movwf	writeEEPROM@address+1,c
  6251  0007C8  0E4B               	movlw	75
  6252  0007CA  6E18               	movwf	writeEEPROM@address,c
  6253  0007CC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6254  0007D0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6255                           
  6256                           ;main.c: 1952: rv = readEEPROM(0x4B);
  6257  0007D4  0E00               	movlw	0
  6258  0007D6  6E1F               	movwf	readEEPROM@address+1,c
  6259  0007D8  0E4B               	movlw	75
  6260  0007DA  6E1E               	movwf	readEEPROM@address,c
  6261  0007DC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6262  0007E0  EFCA  F009         	goto	L116
  6263  0007E4                     l9152:
  6264                           
  6265                           ;main.c: 1957: writeEEPROM(0x4C, val);
  6266  0007E4  0E00               	movlw	0
  6267  0007E6  6E19               	movwf	writeEEPROM@address+1,c
  6268  0007E8  0E4C               	movlw	76
  6269  0007EA  6E18               	movwf	writeEEPROM@address,c
  6270  0007EC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6271  0007F0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6272                           
  6273                           ;main.c: 1958: rv = readEEPROM(0x4C);
  6274  0007F4  0E00               	movlw	0
  6275  0007F6  6E1F               	movwf	readEEPROM@address+1,c
  6276  0007F8  0E4C               	movlw	76
  6277  0007FA  6E1E               	movwf	readEEPROM@address,c
  6278  0007FC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6279  000800  EFCA  F009         	goto	L116
  6280  000804                     l9154:
  6281                           
  6282                           ;main.c: 1963: writeEEPROM(0x4D, val);
  6283  000804  0E00               	movlw	0
  6284  000806  6E19               	movwf	writeEEPROM@address+1,c
  6285  000808  0E4D               	movlw	77
  6286  00080A  6E18               	movwf	writeEEPROM@address,c
  6287  00080C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6288  000810  EC8E  F039         	call	_writeEEPROM	;wreg free
  6289                           
  6290                           ;main.c: 1964: rv = readEEPROM(0x4D);
  6291  000814  0E00               	movlw	0
  6292  000816  6E1F               	movwf	readEEPROM@address+1,c
  6293  000818  0E4D               	movlw	77
  6294  00081A  6E1E               	movwf	readEEPROM@address,c
  6295  00081C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6296  000820  EFCA  F009         	goto	L116
  6297  000824                     l9156:
  6298                           
  6299                           ;main.c: 1969: writeEEPROM(0x4E, val);
  6300  000824  0E00               	movlw	0
  6301  000826  6E19               	movwf	writeEEPROM@address+1,c
  6302  000828  0E4E               	movlw	78
  6303  00082A  6E18               	movwf	writeEEPROM@address,c
  6304  00082C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6305  000830  EC8E  F039         	call	_writeEEPROM	;wreg free
  6306                           
  6307                           ;main.c: 1970: rv = readEEPROM(0x4E);
  6308  000834  0E00               	movlw	0
  6309  000836  6E1F               	movwf	readEEPROM@address+1,c
  6310  000838  0E4E               	movlw	78
  6311  00083A  6E1E               	movwf	readEEPROM@address,c
  6312  00083C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6313  000840  EFCA  F009         	goto	L116
  6314  000844                     l9158:
  6315                           
  6316                           ;main.c: 1979: writeEEPROM(0x4F, val);
  6317  000844  0E00               	movlw	0
  6318  000846  6E19               	movwf	writeEEPROM@address+1,c
  6319  000848  0E4F               	movlw	79
  6320  00084A  6E18               	movwf	writeEEPROM@address,c
  6321  00084C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6322  000850  EC8E  F039         	call	_writeEEPROM	;wreg free
  6323                           
  6324                           ;main.c: 1980: rv = readEEPROM(0x4F);
  6325  000854  0E00               	movlw	0
  6326  000856  6E1F               	movwf	readEEPROM@address+1,c
  6327  000858  0E4F               	movlw	79
  6328  00085A  6E1E               	movwf	readEEPROM@address,c
  6329  00085C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6330  000860  EFCA  F009         	goto	L116
  6331  000864                     l9160:
  6332                           
  6333                           ;main.c: 1985: writeEEPROM(0x50, val);
  6334  000864  0E00               	movlw	0
  6335  000866  6E19               	movwf	writeEEPROM@address+1,c
  6336  000868  0E50               	movlw	80
  6337  00086A  6E18               	movwf	writeEEPROM@address,c
  6338  00086C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6339  000870  EC8E  F039         	call	_writeEEPROM	;wreg free
  6340                           
  6341                           ;main.c: 1986: rv = readEEPROM(0x50);
  6342  000874  0E00               	movlw	0
  6343  000876  6E1F               	movwf	readEEPROM@address+1,c
  6344  000878  0E50               	movlw	80
  6345  00087A  6E1E               	movwf	readEEPROM@address,c
  6346  00087C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6347  000880  EFCA  F009         	goto	L116
  6348  000884                     l9162:
  6349                           
  6350                           ;main.c: 1991: writeEEPROM(0x51, val);
  6351  000884  0E00               	movlw	0
  6352  000886  6E19               	movwf	writeEEPROM@address+1,c
  6353  000888  0E51               	movlw	81
  6354  00088A  6E18               	movwf	writeEEPROM@address,c
  6355  00088C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6356  000890  EC8E  F039         	call	_writeEEPROM	;wreg free
  6357                           
  6358                           ;main.c: 1992: rv = readEEPROM(0x51);
  6359  000894  0E00               	movlw	0
  6360  000896  6E1F               	movwf	readEEPROM@address+1,c
  6361  000898  0E51               	movlw	81
  6362  00089A  6E1E               	movwf	readEEPROM@address,c
  6363  00089C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6364  0008A0  EFCA  F009         	goto	L116
  6365  0008A4                     l9164:
  6366                           
  6367                           ;main.c: 1997: writeEEPROM(0x52, val);
  6368  0008A4  0E00               	movlw	0
  6369  0008A6  6E19               	movwf	writeEEPROM@address+1,c
  6370  0008A8  0E52               	movlw	82
  6371  0008AA  6E18               	movwf	writeEEPROM@address,c
  6372  0008AC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6373  0008B0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6374                           
  6375                           ;main.c: 1998: rv = readEEPROM(0x52);
  6376  0008B4  0E00               	movlw	0
  6377  0008B6  6E1F               	movwf	readEEPROM@address+1,c
  6378  0008B8  0E52               	movlw	82
  6379  0008BA  6E1E               	movwf	readEEPROM@address,c
  6380  0008BC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6381  0008C0  EFCA  F009         	goto	L116
  6382  0008C4                     l9166:
  6383                           
  6384                           ;main.c: 2003: writeEEPROM(0x53, val);
  6385  0008C4  0E00               	movlw	0
  6386  0008C6  6E19               	movwf	writeEEPROM@address+1,c
  6387  0008C8  0E53               	movlw	83
  6388  0008CA  6E18               	movwf	writeEEPROM@address,c
  6389  0008CC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6390  0008D0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6391                           
  6392                           ;main.c: 2004: rv = readEEPROM(0x53);
  6393  0008D4  0E00               	movlw	0
  6394  0008D6  6E1F               	movwf	readEEPROM@address+1,c
  6395  0008D8  0E53               	movlw	83
  6396  0008DA  6E1E               	movwf	readEEPROM@address,c
  6397  0008DC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6398  0008E0  EFCA  F009         	goto	L116
  6399  0008E4                     l9168:
  6400                           
  6401                           ;main.c: 2009: writeEEPROM(0x54, val);
  6402  0008E4  0E00               	movlw	0
  6403  0008E6  6E19               	movwf	writeEEPROM@address+1,c
  6404  0008E8  0E54               	movlw	84
  6405  0008EA  6E18               	movwf	writeEEPROM@address,c
  6406  0008EC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6407  0008F0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6408                           
  6409                           ;main.c: 2010: rv = readEEPROM(0x54);
  6410  0008F4  0E00               	movlw	0
  6411  0008F6  6E1F               	movwf	readEEPROM@address+1,c
  6412  0008F8  0E54               	movlw	84
  6413  0008FA  6E1E               	movwf	readEEPROM@address,c
  6414  0008FC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6415  000900  EFCA  F009         	goto	L116
  6416  000904                     l9170:
  6417                           
  6418                           ;main.c: 2015: writeEEPROM(0x55, val);
  6419  000904  0E00               	movlw	0
  6420  000906  6E19               	movwf	writeEEPROM@address+1,c
  6421  000908  0E55               	movlw	85
  6422  00090A  6E18               	movwf	writeEEPROM@address,c
  6423  00090C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6424  000910  EC8E  F039         	call	_writeEEPROM	;wreg free
  6425                           
  6426                           ;main.c: 2016: rv = readEEPROM(0x55);
  6427  000914  0E00               	movlw	0
  6428  000916  6E1F               	movwf	readEEPROM@address+1,c
  6429  000918  0E55               	movlw	85
  6430  00091A  6E1E               	movwf	readEEPROM@address,c
  6431  00091C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6432  000920  EFCA  F009         	goto	L116
  6433  000924                     l9172:
  6434                           
  6435                           ;main.c: 2021: writeEEPROM(0x56, val);
  6436  000924  0E00               	movlw	0
  6437  000926  6E19               	movwf	writeEEPROM@address+1,c
  6438  000928  0E56               	movlw	86
  6439  00092A  6E18               	movwf	writeEEPROM@address,c
  6440  00092C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6441  000930  EC8E  F039         	call	_writeEEPROM	;wreg free
  6442                           
  6443                           ;main.c: 2022: rv = readEEPROM(0x56);
  6444  000934  0E00               	movlw	0
  6445  000936  6E1F               	movwf	readEEPROM@address+1,c
  6446  000938  0E56               	movlw	86
  6447  00093A  6E1E               	movwf	readEEPROM@address,c
  6448  00093C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6449  000940  EFCA  F009         	goto	L116
  6450  000944                     l9174:
  6451                           
  6452                           ;main.c: 2027: writeEEPROM(0x57, val);
  6453  000944  0E00               	movlw	0
  6454  000946  6E19               	movwf	writeEEPROM@address+1,c
  6455  000948  0E57               	movlw	87
  6456  00094A  6E18               	movwf	writeEEPROM@address,c
  6457  00094C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6458  000950  EC8E  F039         	call	_writeEEPROM	;wreg free
  6459                           
  6460                           ;main.c: 2028: rv = readEEPROM(0x57);
  6461  000954  0E00               	movlw	0
  6462  000956  6E1F               	movwf	readEEPROM@address+1,c
  6463  000958  0E57               	movlw	87
  6464  00095A  6E1E               	movwf	readEEPROM@address,c
  6465  00095C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6466  000960  EFCA  F009         	goto	L116
  6467  000964                     l9176:
  6468                           
  6469                           ;main.c: 2033: writeEEPROM(0x58, val);
  6470  000964  0E00               	movlw	0
  6471  000966  6E19               	movwf	writeEEPROM@address+1,c
  6472  000968  0E58               	movlw	88
  6473  00096A  6E18               	movwf	writeEEPROM@address,c
  6474  00096C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6475  000970  EC8E  F039         	call	_writeEEPROM	;wreg free
  6476                           
  6477                           ;main.c: 2034: rv = readEEPROM(0x58);
  6478  000974  0E00               	movlw	0
  6479  000976  6E1F               	movwf	readEEPROM@address+1,c
  6480  000978  0E58               	movlw	88
  6481  00097A  6E1E               	movwf	readEEPROM@address,c
  6482  00097C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6483  000980  EFCA  F009         	goto	L116
  6484  000984                     l9178:
  6485                           
  6486                           ;main.c: 2039: writeEEPROM(0x59, val);
  6487  000984  0E00               	movlw	0
  6488  000986  6E19               	movwf	writeEEPROM@address+1,c
  6489  000988  0E59               	movlw	89
  6490  00098A  6E18               	movwf	writeEEPROM@address,c
  6491  00098C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6492  000990  EC8E  F039         	call	_writeEEPROM	;wreg free
  6493                           
  6494                           ;main.c: 2040: rv = readEEPROM(0x59);
  6495  000994  0E00               	movlw	0
  6496  000996  6E1F               	movwf	readEEPROM@address+1,c
  6497  000998  0E59               	movlw	89
  6498  00099A  6E1E               	movwf	readEEPROM@address,c
  6499  00099C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6500  0009A0  EFCA  F009         	goto	L116
  6501  0009A4                     l9180:
  6502                           
  6503                           ;main.c: 2045: writeEEPROM(0x5A, val);
  6504  0009A4  0E00               	movlw	0
  6505  0009A6  6E19               	movwf	writeEEPROM@address+1,c
  6506  0009A8  0E5A               	movlw	90
  6507  0009AA  6E18               	movwf	writeEEPROM@address,c
  6508  0009AC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6509  0009B0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6510                           
  6511                           ;main.c: 2046: rv = readEEPROM(0x5A);
  6512  0009B4  0E00               	movlw	0
  6513  0009B6  6E1F               	movwf	readEEPROM@address+1,c
  6514  0009B8  0E5A               	movlw	90
  6515  0009BA  6E1E               	movwf	readEEPROM@address,c
  6516  0009BC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6517  0009C0  EFCA  F009         	goto	L116
  6518  0009C4                     l9182:
  6519                           
  6520                           ;main.c: 2055: writeEEPROM(0x5B, val);
  6521  0009C4  0E00               	movlw	0
  6522  0009C6  6E19               	movwf	writeEEPROM@address+1,c
  6523  0009C8  0E5B               	movlw	91
  6524  0009CA  6E18               	movwf	writeEEPROM@address,c
  6525  0009CC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6526  0009D0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6527                           
  6528                           ;main.c: 2056: rv = readEEPROM(0x5B);
  6529  0009D4  0E00               	movlw	0
  6530  0009D6  6E1F               	movwf	readEEPROM@address+1,c
  6531  0009D8  0E5B               	movlw	91
  6532  0009DA  6E1E               	movwf	readEEPROM@address,c
  6533  0009DC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6534  0009E0  EFCA  F009         	goto	L116
  6535  0009E4                     l9184:
  6536                           
  6537                           ;main.c: 2061: writeEEPROM(0x5C, val);
  6538  0009E4  0E00               	movlw	0
  6539  0009E6  6E19               	movwf	writeEEPROM@address+1,c
  6540  0009E8  0E5C               	movlw	92
  6541  0009EA  6E18               	movwf	writeEEPROM@address,c
  6542  0009EC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6543  0009F0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6544                           
  6545                           ;main.c: 2062: rv = readEEPROM(0x5C);
  6546  0009F4  0E00               	movlw	0
  6547  0009F6  6E1F               	movwf	readEEPROM@address+1,c
  6548  0009F8  0E5C               	movlw	92
  6549  0009FA  6E1E               	movwf	readEEPROM@address,c
  6550  0009FC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6551  000A00  EFCA  F009         	goto	L116
  6552  000A04                     l9186:
  6553                           
  6554                           ;main.c: 2067: writeEEPROM(0x5D, val);
  6555  000A04  0E00               	movlw	0
  6556  000A06  6E19               	movwf	writeEEPROM@address+1,c
  6557  000A08  0E5D               	movlw	93
  6558  000A0A  6E18               	movwf	writeEEPROM@address,c
  6559  000A0C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6560  000A10  EC8E  F039         	call	_writeEEPROM	;wreg free
  6561                           
  6562                           ;main.c: 2068: rv = readEEPROM(0x5D);
  6563  000A14  0E00               	movlw	0
  6564  000A16  6E1F               	movwf	readEEPROM@address+1,c
  6565  000A18  0E5D               	movlw	93
  6566  000A1A  6E1E               	movwf	readEEPROM@address,c
  6567  000A1C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6568  000A20  EFCA  F009         	goto	L116
  6569  000A24                     l9188:
  6570                           
  6571                           ;main.c: 2073: writeEEPROM(0x5E, val);
  6572  000A24  0E00               	movlw	0
  6573  000A26  6E19               	movwf	writeEEPROM@address+1,c
  6574  000A28  0E5E               	movlw	94
  6575  000A2A  6E18               	movwf	writeEEPROM@address,c
  6576  000A2C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6577  000A30  EC8E  F039         	call	_writeEEPROM	;wreg free
  6578                           
  6579                           ;main.c: 2074: rv = readEEPROM(0x5E);
  6580  000A34  0E00               	movlw	0
  6581  000A36  6E1F               	movwf	readEEPROM@address+1,c
  6582  000A38  0E5E               	movlw	94
  6583  000A3A  6E1E               	movwf	readEEPROM@address,c
  6584  000A3C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6585  000A40  EFCA  F009         	goto	L116
  6586  000A44                     l9190:
  6587                           
  6588                           ;main.c: 2079: writeEEPROM(0x5F, val);
  6589  000A44  0E00               	movlw	0
  6590  000A46  6E19               	movwf	writeEEPROM@address+1,c
  6591  000A48  0E5F               	movlw	95
  6592  000A4A  6E18               	movwf	writeEEPROM@address,c
  6593  000A4C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6594  000A50  EC8E  F039         	call	_writeEEPROM	;wreg free
  6595                           
  6596                           ;main.c: 2080: rv = readEEPROM(0x5F);
  6597  000A54  0E00               	movlw	0
  6598  000A56  6E1F               	movwf	readEEPROM@address+1,c
  6599  000A58  0E5F               	movlw	95
  6600  000A5A  6E1E               	movwf	readEEPROM@address,c
  6601  000A5C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6602  000A60  EFCA  F009         	goto	L116
  6603  000A64                     l9192:
  6604                           
  6605                           ;main.c: 2085: writeEEPROM(0x60, val);
  6606  000A64  0E00               	movlw	0
  6607  000A66  6E19               	movwf	writeEEPROM@address+1,c
  6608  000A68  0E60               	movlw	96
  6609  000A6A  6E18               	movwf	writeEEPROM@address,c
  6610  000A6C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6611  000A70  EC8E  F039         	call	_writeEEPROM	;wreg free
  6612                           
  6613                           ;main.c: 2086: rv = readEEPROM(0x60);
  6614  000A74  0E00               	movlw	0
  6615  000A76  6E1F               	movwf	readEEPROM@address+1,c
  6616  000A78  0E60               	movlw	96
  6617  000A7A  6E1E               	movwf	readEEPROM@address,c
  6618  000A7C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6619  000A80  EFCA  F009         	goto	L116
  6620  000A84                     l9194:
  6621                           
  6622                           ;main.c: 2091: writeEEPROM(0x61, val);
  6623  000A84  0E00               	movlw	0
  6624  000A86  6E19               	movwf	writeEEPROM@address+1,c
  6625  000A88  0E61               	movlw	97
  6626  000A8A  6E18               	movwf	writeEEPROM@address,c
  6627  000A8C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6628  000A90  EC8E  F039         	call	_writeEEPROM	;wreg free
  6629                           
  6630                           ;main.c: 2092: rv = readEEPROM(0x61);
  6631  000A94  0E00               	movlw	0
  6632  000A96  6E1F               	movwf	readEEPROM@address+1,c
  6633  000A98  0E61               	movlw	97
  6634  000A9A  6E1E               	movwf	readEEPROM@address,c
  6635  000A9C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6636  000AA0  EFCA  F009         	goto	L116
  6637  000AA4                     l9196:
  6638                           
  6639                           ;main.c: 2097: writeEEPROM(0x62, val);
  6640  000AA4  0E00               	movlw	0
  6641  000AA6  6E19               	movwf	writeEEPROM@address+1,c
  6642  000AA8  0E62               	movlw	98
  6643  000AAA  6E18               	movwf	writeEEPROM@address,c
  6644  000AAC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6645  000AB0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6646                           
  6647                           ;main.c: 2098: rv = readEEPROM(0x62);
  6648  000AB4  0E00               	movlw	0
  6649  000AB6  6E1F               	movwf	readEEPROM@address+1,c
  6650  000AB8  0E62               	movlw	98
  6651  000ABA  6E1E               	movwf	readEEPROM@address,c
  6652  000ABC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6653  000AC0  EFCA  F009         	goto	L116
  6654  000AC4                     l9198:
  6655                           
  6656                           ;main.c: 2103: writeEEPROM(0x63, val);
  6657  000AC4  0E00               	movlw	0
  6658  000AC6  6E19               	movwf	writeEEPROM@address+1,c
  6659  000AC8  0E63               	movlw	99
  6660  000ACA  6E18               	movwf	writeEEPROM@address,c
  6661  000ACC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6662  000AD0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6663                           
  6664                           ;main.c: 2104: rv = readEEPROM(0x63);
  6665  000AD4  0E00               	movlw	0
  6666  000AD6  6E1F               	movwf	readEEPROM@address+1,c
  6667  000AD8  0E63               	movlw	99
  6668  000ADA  6E1E               	movwf	readEEPROM@address,c
  6669  000ADC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6670  000AE0  EFCA  F009         	goto	L116
  6671  000AE4                     l9200:
  6672                           
  6673                           ;main.c: 2109: writeEEPROM(0x64, val);
  6674  000AE4  0E00               	movlw	0
  6675  000AE6  6E19               	movwf	writeEEPROM@address+1,c
  6676  000AE8  0E64               	movlw	100
  6677  000AEA  6E18               	movwf	writeEEPROM@address,c
  6678  000AEC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6679  000AF0  EC8E  F039         	call	_writeEEPROM	;wreg free
  6680                           
  6681                           ;main.c: 2110: rv = readEEPROM(0x64);
  6682  000AF4  0E00               	movlw	0
  6683  000AF6  6E1F               	movwf	readEEPROM@address+1,c
  6684  000AF8  0E64               	movlw	100
  6685  000AFA  6E1E               	movwf	readEEPROM@address,c
  6686  000AFC  EC6F  F03A         	call	_readEEPROM	;wreg free
  6687  000B00  EFCA  F009         	goto	L116
  6688  000B04                     l9202:
  6689                           
  6690                           ;main.c: 2115: writeEEPROM(0x65, val);
  6691  000B04  0E00               	movlw	0
  6692  000B06  6E19               	movwf	writeEEPROM@address+1,c
  6693  000B08  0E65               	movlw	101
  6694  000B0A  6E18               	movwf	writeEEPROM@address,c
  6695  000B0C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6696  000B10  EC8E  F039         	call	_writeEEPROM	;wreg free
  6697                           
  6698                           ;main.c: 2116: rv = readEEPROM(0x65);
  6699  000B14  0E00               	movlw	0
  6700  000B16  6E1F               	movwf	readEEPROM@address+1,c
  6701  000B18  0E65               	movlw	101
  6702  000B1A  6E1E               	movwf	readEEPROM@address,c
  6703  000B1C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6704  000B20  EFCA  F009         	goto	L116
  6705  000B24                     l9204:
  6706                           
  6707                           ;main.c: 2121: writeEEPROM(0x66, val);
  6708  000B24  0E00               	movlw	0
  6709  000B26  6E19               	movwf	writeEEPROM@address+1,c
  6710  000B28  0E66               	movlw	102
  6711  000B2A  6E18               	movwf	writeEEPROM@address,c
  6712  000B2C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6713  000B30  EC8E  F039         	call	_writeEEPROM	;wreg free
  6714                           
  6715                           ;main.c: 2122: rv = readEEPROM(0x66);
  6716  000B34  0E00               	movlw	0
  6717  000B36  6E1F               	movwf	readEEPROM@address+1,c
  6718  000B38  0E66               	movlw	102
  6719  000B3A  6E1E               	movwf	readEEPROM@address,c
  6720  000B3C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6721  000B40  EFCA  F009         	goto	L116
  6722  000B44                     l9206:
  6723                           
  6724                           ;main.c: 2131: writeEEPROM(0x67, val);
  6725  000B44  0E00               	movlw	0
  6726  000B46  6E19               	movwf	writeEEPROM@address+1,c
  6727  000B48  0E67               	movlw	103
  6728  000B4A  6E18               	movwf	writeEEPROM@address,c
  6729  000B4C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6730  000B50  EC8E  F039         	call	_writeEEPROM	;wreg free
  6731                           
  6732                           ;main.c: 2132: rv = readEEPROM(0x67);
  6733  000B54  0E00               	movlw	0
  6734  000B56  6E1F               	movwf	readEEPROM@address+1,c
  6735  000B58  0E67               	movlw	103
  6736  000B5A  6E1E               	movwf	readEEPROM@address,c
  6737  000B5C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6738  000B60  EFCA  F009         	goto	L116
  6739  000B64                     l9208:
  6740                           
  6741                           ;main.c: 2137: writeEEPROM(0x68, val);
  6742  000B64  0E00               	movlw	0
  6743  000B66  6E19               	movwf	writeEEPROM@address+1,c
  6744  000B68  0E68               	movlw	104
  6745  000B6A  6E18               	movwf	writeEEPROM@address,c
  6746  000B6C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6747  000B70  EC8E  F039         	call	_writeEEPROM	;wreg free
  6748                           
  6749                           ;main.c: 2138: rv = readEEPROM(0x68);
  6750  000B74  0E00               	movlw	0
  6751  000B76  6E1F               	movwf	readEEPROM@address+1,c
  6752  000B78  0E68               	movlw	104
  6753  000B7A  6E1E               	movwf	readEEPROM@address,c
  6754  000B7C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6755  000B80  EFCA  F009         	goto	L116
  6756  000B84                     l9210:
  6757                           
  6758                           ;main.c: 2143: writeEEPROM(0x69, val);
  6759  000B84  0E00               	movlw	0
  6760  000B86  6E19               	movwf	writeEEPROM@address+1,c
  6761  000B88  0E69               	movlw	105
  6762  000B8A  6E18               	movwf	writeEEPROM@address,c
  6763  000B8C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6764  000B90  EC8E  F039         	call	_writeEEPROM	;wreg free
  6765                           
  6766                           ;main.c: 2144: rv = readEEPROM(0x69);
  6767  000B94  0E00               	movlw	0
  6768  000B96  6E1F               	movwf	readEEPROM@address+1,c
  6769  000B98  0E69               	movlw	105
  6770  000B9A  6E1E               	movwf	readEEPROM@address,c
  6771  000B9C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6772  000BA0  D3F9               	goto	L116
  6773  000BA2                     l9212:
  6774                           
  6775                           ;main.c: 2149: writeEEPROM(0x6A, val);
  6776  000BA2  0E00               	movlw	0
  6777  000BA4  6E19               	movwf	writeEEPROM@address+1,c
  6778  000BA6  0E6A               	movlw	106
  6779  000BA8  6E18               	movwf	writeEEPROM@address,c
  6780  000BAA  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6781  000BAE  EC8E  F039         	call	_writeEEPROM	;wreg free
  6782                           
  6783                           ;main.c: 2150: rv = readEEPROM(0x6A);
  6784  000BB2  0E00               	movlw	0
  6785  000BB4  6E1F               	movwf	readEEPROM@address+1,c
  6786  000BB6  0E6A               	movlw	106
  6787  000BB8  6E1E               	movwf	readEEPROM@address,c
  6788  000BBA  EC6F  F03A         	call	_readEEPROM	;wreg free
  6789  000BBE  D3EA               	goto	L116
  6790  000BC0                     l9214:
  6791                           
  6792                           ;main.c: 2155: writeEEPROM(0x6B, val);
  6793  000BC0  0E00               	movlw	0
  6794  000BC2  6E19               	movwf	writeEEPROM@address+1,c
  6795  000BC4  0E6B               	movlw	107
  6796  000BC6  6E18               	movwf	writeEEPROM@address,c
  6797  000BC8  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6798  000BCC  EC8E  F039         	call	_writeEEPROM	;wreg free
  6799                           
  6800                           ;main.c: 2156: rv = readEEPROM(0x6B);
  6801  000BD0  0E00               	movlw	0
  6802  000BD2  6E1F               	movwf	readEEPROM@address+1,c
  6803  000BD4  0E6B               	movlw	107
  6804  000BD6  6E1E               	movwf	readEEPROM@address,c
  6805  000BD8  EC6F  F03A         	call	_readEEPROM	;wreg free
  6806  000BDC  D3DB               	goto	L116
  6807  000BDE                     l9216:
  6808                           
  6809                           ;main.c: 2161: writeEEPROM(0x6C, val);
  6810  000BDE  0E00               	movlw	0
  6811  000BE0  6E19               	movwf	writeEEPROM@address+1,c
  6812  000BE2  0E6C               	movlw	108
  6813  000BE4  6E18               	movwf	writeEEPROM@address,c
  6814  000BE6  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6815  000BEA  EC8E  F039         	call	_writeEEPROM	;wreg free
  6816                           
  6817                           ;main.c: 2162: rv = readEEPROM(0x6C);
  6818  000BEE  0E00               	movlw	0
  6819  000BF0  6E1F               	movwf	readEEPROM@address+1,c
  6820  000BF2  0E6C               	movlw	108
  6821  000BF4  6E1E               	movwf	readEEPROM@address,c
  6822  000BF6  EC6F  F03A         	call	_readEEPROM	;wreg free
  6823  000BFA  D3CC               	goto	L116
  6824  000BFC                     l9218:
  6825                           
  6826                           ;main.c: 2167: writeEEPROM(0x6D, val);
  6827  000BFC  0E00               	movlw	0
  6828  000BFE  6E19               	movwf	writeEEPROM@address+1,c
  6829  000C00  0E6D               	movlw	109
  6830  000C02  6E18               	movwf	writeEEPROM@address,c
  6831  000C04  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6832  000C08  EC8E  F039         	call	_writeEEPROM	;wreg free
  6833                           
  6834                           ;main.c: 2168: rv = readEEPROM(0x6D);
  6835  000C0C  0E00               	movlw	0
  6836  000C0E  6E1F               	movwf	readEEPROM@address+1,c
  6837  000C10  0E6D               	movlw	109
  6838  000C12  6E1E               	movwf	readEEPROM@address,c
  6839  000C14  EC6F  F03A         	call	_readEEPROM	;wreg free
  6840  000C18  D3BD               	goto	L116
  6841  000C1A                     l9220:
  6842                           
  6843                           ;main.c: 2173: writeEEPROM(0x6E, val);
  6844  000C1A  0E00               	movlw	0
  6845  000C1C  6E19               	movwf	writeEEPROM@address+1,c
  6846  000C1E  0E6E               	movlw	110
  6847  000C20  6E18               	movwf	writeEEPROM@address,c
  6848  000C22  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6849  000C26  EC8E  F039         	call	_writeEEPROM	;wreg free
  6850                           
  6851                           ;main.c: 2174: rv = readEEPROM(0x6E);
  6852  000C2A  0E00               	movlw	0
  6853  000C2C  6E1F               	movwf	readEEPROM@address+1,c
  6854  000C2E  0E6E               	movlw	110
  6855  000C30  6E1E               	movwf	readEEPROM@address,c
  6856  000C32  EC6F  F03A         	call	_readEEPROM	;wreg free
  6857  000C36  D3AE               	goto	L116
  6858  000C38                     l9222:
  6859                           
  6860                           ;main.c: 2179: writeEEPROM(0x6F, val);
  6861  000C38  0E00               	movlw	0
  6862  000C3A  6E19               	movwf	writeEEPROM@address+1,c
  6863  000C3C  0E6F               	movlw	111
  6864  000C3E  6E18               	movwf	writeEEPROM@address,c
  6865  000C40  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6866  000C44  EC8E  F039         	call	_writeEEPROM	;wreg free
  6867                           
  6868                           ;main.c: 2180: rv = readEEPROM(0x6F);
  6869  000C48  0E00               	movlw	0
  6870  000C4A  6E1F               	movwf	readEEPROM@address+1,c
  6871  000C4C  0E6F               	movlw	111
  6872  000C4E  6E1E               	movwf	readEEPROM@address,c
  6873  000C50  EC6F  F03A         	call	_readEEPROM	;wreg free
  6874  000C54  D39F               	goto	L116
  6875  000C56                     l9224:
  6876                           
  6877                           ;main.c: 2185: writeEEPROM(0x70, val);
  6878  000C56  0E00               	movlw	0
  6879  000C58  6E19               	movwf	writeEEPROM@address+1,c
  6880  000C5A  0E70               	movlw	112
  6881  000C5C  6E18               	movwf	writeEEPROM@address,c
  6882  000C5E  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6883  000C62  EC8E  F039         	call	_writeEEPROM	;wreg free
  6884                           
  6885                           ;main.c: 2186: rv = readEEPROM(0x70);
  6886  000C66  0E00               	movlw	0
  6887  000C68  6E1F               	movwf	readEEPROM@address+1,c
  6888  000C6A  0E70               	movlw	112
  6889  000C6C  6E1E               	movwf	readEEPROM@address,c
  6890  000C6E  EC6F  F03A         	call	_readEEPROM	;wreg free
  6891  000C72  D390               	goto	L116
  6892  000C74                     l9226:
  6893                           
  6894                           ;main.c: 2191: writeEEPROM(0x71, val);
  6895  000C74  0E00               	movlw	0
  6896  000C76  6E19               	movwf	writeEEPROM@address+1,c
  6897  000C78  0E71               	movlw	113
  6898  000C7A  6E18               	movwf	writeEEPROM@address,c
  6899  000C7C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6900  000C80  EC8E  F039         	call	_writeEEPROM	;wreg free
  6901                           
  6902                           ;main.c: 2192: rv = readEEPROM(0x71);
  6903  000C84  0E00               	movlw	0
  6904  000C86  6E1F               	movwf	readEEPROM@address+1,c
  6905  000C88  0E71               	movlw	113
  6906  000C8A  6E1E               	movwf	readEEPROM@address,c
  6907  000C8C  EC6F  F03A         	call	_readEEPROM	;wreg free
  6908  000C90  D381               	goto	L116
  6909  000C92                     l9228:
  6910                           
  6911                           ;main.c: 2197: writeEEPROM(0x72, val);
  6912  000C92  0E00               	movlw	0
  6913  000C94  6E19               	movwf	writeEEPROM@address+1,c
  6914  000C96  0E72               	movlw	114
  6915  000C98  6E18               	movwf	writeEEPROM@address,c
  6916  000C9A  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6917  000C9E  EC8E  F039         	call	_writeEEPROM	;wreg free
  6918                           
  6919                           ;main.c: 2198: rv = readEEPROM(0x72);
  6920  000CA2  0E00               	movlw	0
  6921  000CA4  6E1F               	movwf	readEEPROM@address+1,c
  6922  000CA6  0E72               	movlw	114
  6923  000CA8  6E1E               	movwf	readEEPROM@address,c
  6924  000CAA  EC6F  F03A         	call	_readEEPROM	;wreg free
  6925  000CAE  D372               	goto	L116
  6926  000CB0                     l9230:
  6927                           
  6928                           ;main.c: 2207: writeEEPROM(0x73, val);
  6929  000CB0  0E00               	movlw	0
  6930  000CB2  6E19               	movwf	writeEEPROM@address+1,c
  6931  000CB4  0E73               	movlw	115
  6932  000CB6  6E18               	movwf	writeEEPROM@address,c
  6933  000CB8  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6934  000CBC  EC8E  F039         	call	_writeEEPROM	;wreg free
  6935                           
  6936                           ;main.c: 2208: rv = readEEPROM(0x73);
  6937  000CC0  0E00               	movlw	0
  6938  000CC2  6E1F               	movwf	readEEPROM@address+1,c
  6939  000CC4  0E73               	movlw	115
  6940  000CC6  6E1E               	movwf	readEEPROM@address,c
  6941  000CC8  EC6F  F03A         	call	_readEEPROM	;wreg free
  6942  000CCC  D363               	goto	L116
  6943  000CCE                     l9232:
  6944                           
  6945                           ;main.c: 2213: writeEEPROM(0x74, val);
  6946  000CCE  0E00               	movlw	0
  6947  000CD0  6E19               	movwf	writeEEPROM@address+1,c
  6948  000CD2  0E74               	movlw	116
  6949  000CD4  6E18               	movwf	writeEEPROM@address,c
  6950  000CD6  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6951  000CDA  EC8E  F039         	call	_writeEEPROM	;wreg free
  6952                           
  6953                           ;main.c: 2214: rv = readEEPROM(0x74);
  6954  000CDE  0E00               	movlw	0
  6955  000CE0  6E1F               	movwf	readEEPROM@address+1,c
  6956  000CE2  0E74               	movlw	116
  6957  000CE4  6E1E               	movwf	readEEPROM@address,c
  6958  000CE6  EC6F  F03A         	call	_readEEPROM	;wreg free
  6959  000CEA  D354               	goto	L116
  6960  000CEC                     l9234:
  6961                           
  6962                           ;main.c: 2219: writeEEPROM(0x75, val);
  6963  000CEC  0E00               	movlw	0
  6964  000CEE  6E19               	movwf	writeEEPROM@address+1,c
  6965  000CF0  0E75               	movlw	117
  6966  000CF2  6E18               	movwf	writeEEPROM@address,c
  6967  000CF4  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6968  000CF8  EC8E  F039         	call	_writeEEPROM	;wreg free
  6969                           
  6970                           ;main.c: 2220: rv = readEEPROM(0x75);
  6971  000CFC  0E00               	movlw	0
  6972  000CFE  6E1F               	movwf	readEEPROM@address+1,c
  6973  000D00  0E75               	movlw	117
  6974  000D02  6E1E               	movwf	readEEPROM@address,c
  6975  000D04  EC6F  F03A         	call	_readEEPROM	;wreg free
  6976  000D08  D345               	goto	L116
  6977  000D0A                     l9236:
  6978                           
  6979                           ;main.c: 2225: writeEEPROM(0x76, val);
  6980  000D0A  0E00               	movlw	0
  6981  000D0C  6E19               	movwf	writeEEPROM@address+1,c
  6982  000D0E  0E76               	movlw	118
  6983  000D10  6E18               	movwf	writeEEPROM@address,c
  6984  000D12  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  6985  000D16  EC8E  F039         	call	_writeEEPROM	;wreg free
  6986                           
  6987                           ;main.c: 2226: rv = readEEPROM(0x76);
  6988  000D1A  0E00               	movlw	0
  6989  000D1C  6E1F               	movwf	readEEPROM@address+1,c
  6990  000D1E  0E76               	movlw	118
  6991  000D20  6E1E               	movwf	readEEPROM@address,c
  6992  000D22  EC6F  F03A         	call	_readEEPROM	;wreg free
  6993  000D26  D336               	goto	L116
  6994  000D28                     l9238:
  6995                           
  6996                           ;main.c: 2231: writeEEPROM(0x77, val);
  6997  000D28  0E00               	movlw	0
  6998  000D2A  6E19               	movwf	writeEEPROM@address+1,c
  6999  000D2C  0E77               	movlw	119
  7000  000D2E  6E18               	movwf	writeEEPROM@address,c
  7001  000D30  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7002  000D34  EC8E  F039         	call	_writeEEPROM	;wreg free
  7003                           
  7004                           ;main.c: 2232: rv = readEEPROM(0x77);
  7005  000D38  0E00               	movlw	0
  7006  000D3A  6E1F               	movwf	readEEPROM@address+1,c
  7007  000D3C  0E77               	movlw	119
  7008  000D3E  6E1E               	movwf	readEEPROM@address,c
  7009  000D40  EC6F  F03A         	call	_readEEPROM	;wreg free
  7010  000D44  D327               	goto	L116
  7011  000D46                     l9240:
  7012                           
  7013                           ;main.c: 2237: writeEEPROM(0x78, val);
  7014  000D46  0E00               	movlw	0
  7015  000D48  6E19               	movwf	writeEEPROM@address+1,c
  7016  000D4A  0E78               	movlw	120
  7017  000D4C  6E18               	movwf	writeEEPROM@address,c
  7018  000D4E  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7019  000D52  EC8E  F039         	call	_writeEEPROM	;wreg free
  7020                           
  7021                           ;main.c: 2238: rv = readEEPROM(0x78);
  7022  000D56  0E00               	movlw	0
  7023  000D58  6E1F               	movwf	readEEPROM@address+1,c
  7024  000D5A  0E78               	movlw	120
  7025  000D5C  6E1E               	movwf	readEEPROM@address,c
  7026  000D5E  EC6F  F03A         	call	_readEEPROM	;wreg free
  7027  000D62  D318               	goto	L116
  7028  000D64                     l9242:
  7029                           
  7030                           ;main.c: 2243: writeEEPROM(0x79, val);
  7031  000D64  0E00               	movlw	0
  7032  000D66  6E19               	movwf	writeEEPROM@address+1,c
  7033  000D68  0E79               	movlw	121
  7034  000D6A  6E18               	movwf	writeEEPROM@address,c
  7035  000D6C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7036  000D70  EC8E  F039         	call	_writeEEPROM	;wreg free
  7037                           
  7038                           ;main.c: 2244: rv = readEEPROM(0x79);
  7039  000D74  0E00               	movlw	0
  7040  000D76  6E1F               	movwf	readEEPROM@address+1,c
  7041  000D78  0E79               	movlw	121
  7042  000D7A  6E1E               	movwf	readEEPROM@address,c
  7043  000D7C  EC6F  F03A         	call	_readEEPROM	;wreg free
  7044  000D80  D309               	goto	L116
  7045  000D82                     l9244:
  7046                           
  7047                           ;main.c: 2249: writeEEPROM(0x7A, val);
  7048  000D82  0E00               	movlw	0
  7049  000D84  6E19               	movwf	writeEEPROM@address+1,c
  7050  000D86  0E7A               	movlw	122
  7051  000D88  6E18               	movwf	writeEEPROM@address,c
  7052  000D8A  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7053  000D8E  EC8E  F039         	call	_writeEEPROM	;wreg free
  7054                           
  7055                           ;main.c: 2250: rv = readEEPROM(0x7A);
  7056  000D92  0E00               	movlw	0
  7057  000D94  6E1F               	movwf	readEEPROM@address+1,c
  7058  000D96  0E7A               	movlw	122
  7059  000D98  6E1E               	movwf	readEEPROM@address,c
  7060  000D9A  EC6F  F03A         	call	_readEEPROM	;wreg free
  7061  000D9E  D2FA               	goto	L116
  7062  000DA0                     l9246:
  7063                           
  7064                           ;main.c: 2255: writeEEPROM(0x7B, val);
  7065  000DA0  0E00               	movlw	0
  7066  000DA2  6E19               	movwf	writeEEPROM@address+1,c
  7067  000DA4  0E7B               	movlw	123
  7068  000DA6  6E18               	movwf	writeEEPROM@address,c
  7069  000DA8  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7070  000DAC  EC8E  F039         	call	_writeEEPROM	;wreg free
  7071                           
  7072                           ;main.c: 2256: rv = readEEPROM(0x7B);
  7073  000DB0  0E00               	movlw	0
  7074  000DB2  6E1F               	movwf	readEEPROM@address+1,c
  7075  000DB4  0E7B               	movlw	123
  7076  000DB6  6E1E               	movwf	readEEPROM@address,c
  7077  000DB8  EC6F  F03A         	call	_readEEPROM	;wreg free
  7078  000DBC  D2EB               	goto	L116
  7079  000DBE                     l9248:
  7080                           
  7081                           ;main.c: 2261: writeEEPROM(0x7C, val);
  7082  000DBE  0E00               	movlw	0
  7083  000DC0  6E19               	movwf	writeEEPROM@address+1,c
  7084  000DC2  0E7C               	movlw	124
  7085  000DC4  6E18               	movwf	writeEEPROM@address,c
  7086  000DC6  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7087  000DCA  EC8E  F039         	call	_writeEEPROM	;wreg free
  7088                           
  7089                           ;main.c: 2262: rv = readEEPROM(0x7C);
  7090  000DCE  0E00               	movlw	0
  7091  000DD0  6E1F               	movwf	readEEPROM@address+1,c
  7092  000DD2  0E7C               	movlw	124
  7093  000DD4  6E1E               	movwf	readEEPROM@address,c
  7094  000DD6  EC6F  F03A         	call	_readEEPROM	;wreg free
  7095  000DDA  D2DC               	goto	L116
  7096  000DDC                     l9250:
  7097                           
  7098                           ;main.c: 2267: writeEEPROM(0x7D, val);
  7099  000DDC  0E00               	movlw	0
  7100  000DDE  6E19               	movwf	writeEEPROM@address+1,c
  7101  000DE0  0E7D               	movlw	125
  7102  000DE2  6E18               	movwf	writeEEPROM@address,c
  7103  000DE4  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7104  000DE8  EC8E  F039         	call	_writeEEPROM	;wreg free
  7105                           
  7106                           ;main.c: 2268: rv = readEEPROM(0x7D);
  7107  000DEC  0E00               	movlw	0
  7108  000DEE  6E1F               	movwf	readEEPROM@address+1,c
  7109  000DF0  0E7D               	movlw	125
  7110  000DF2  6E1E               	movwf	readEEPROM@address,c
  7111  000DF4  EC6F  F03A         	call	_readEEPROM	;wreg free
  7112  000DF8  D2CD               	goto	L116
  7113  000DFA                     l9252:
  7114                           
  7115                           ;main.c: 2273: writeEEPROM(0x7E, val);
  7116  000DFA  0E00               	movlw	0
  7117  000DFC  6E19               	movwf	writeEEPROM@address+1,c
  7118  000DFE  0E7E               	movlw	126
  7119  000E00  6E18               	movwf	writeEEPROM@address,c
  7120  000E02  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7121  000E06  EC8E  F039         	call	_writeEEPROM	;wreg free
  7122                           
  7123                           ;main.c: 2274: rv = readEEPROM(0x7E);
  7124  000E0A  0E00               	movlw	0
  7125  000E0C  6E1F               	movwf	readEEPROM@address+1,c
  7126  000E0E  0E7E               	movlw	126
  7127  000E10  6E1E               	movwf	readEEPROM@address,c
  7128  000E12  EC6F  F03A         	call	_readEEPROM	;wreg free
  7129  000E16  D2BE               	goto	L116
  7130  000E18                     l9254:
  7131                           
  7132                           ;main.c: 2283: writeEEPROM(0x7F, 0x7f);
  7133  000E18  0E00               	movlw	0
  7134  000E1A  6E19               	movwf	writeEEPROM@address+1,c
  7135  000E1C  0E7F               	movlw	127
  7136  000E1E  6E18               	movwf	writeEEPROM@address,c
  7137  000E20  0E7F               	movlw	127
  7138  000E22  6E1A               	movwf	writeEEPROM@data,c
  7139  000E24  EC8E  F039         	call	_writeEEPROM	;wreg free
  7140                           
  7141                           ;main.c: 2284: writeEEPROM(0x80, 0xff);
  7142  000E28  0E00               	movlw	0
  7143  000E2A  6E19               	movwf	writeEEPROM@address+1,c
  7144  000E2C  0E80               	movlw	128
  7145  000E2E  6E18               	movwf	writeEEPROM@address,c
  7146  000E30  0EFF               	movlw	255
  7147  000E32  6E1A               	movwf	writeEEPROM@data,c
  7148  000E34  EC8E  F039         	call	_writeEEPROM	;wreg free
  7149                           
  7150                           ;main.c: 2285: rv = readEEPROM(0x7F);
  7151  000E38  0E00               	movlw	0
  7152  000E3A  6E1F               	movwf	readEEPROM@address+1,c
  7153  000E3C  0E7F               	movlw	127
  7154  000E3E  6E1E               	movwf	readEEPROM@address,c
  7155  000E40  EC6F  F03A         	call	_readEEPROM	;wreg free
  7156  000E44  D2A7               	goto	L116
  7157  000E46                     l9256:
  7158                           
  7159                           ;main.c: 2290: writeEEPROM(0x7F, 0x7f);
  7160  000E46  0E00               	movlw	0
  7161  000E48  6E19               	movwf	writeEEPROM@address+1,c
  7162  000E4A  0E7F               	movlw	127
  7163  000E4C  6E18               	movwf	writeEEPROM@address,c
  7164  000E4E  0E7F               	movlw	127
  7165  000E50  6E1A               	movwf	writeEEPROM@data,c
  7166  000E52  EC8E  F039         	call	_writeEEPROM	;wreg free
  7167                           
  7168                           ;main.c: 2291: writeEEPROM(0x80, 0xff);
  7169  000E56  0E00               	movlw	0
  7170  000E58  6E19               	movwf	writeEEPROM@address+1,c
  7171  000E5A  0E80               	movlw	128
  7172  000E5C  6E18               	movwf	writeEEPROM@address,c
  7173  000E5E  0EFF               	movlw	255
  7174  000E60  6E1A               	movwf	writeEEPROM@data,c
  7175  000E62  EC8E  F039         	call	_writeEEPROM	;wreg free
  7176                           
  7177                           ;main.c: 2292: rv = readEEPROM(0x80);
  7178  000E66  0E00               	movlw	0
  7179  000E68  6E1F               	movwf	readEEPROM@address+1,c
  7180  000E6A  0E80               	movlw	128
  7181  000E6C  6E1E               	movwf	readEEPROM@address,c
  7182  000E6E  EC6F  F03A         	call	_readEEPROM	;wreg free
  7183  000E72  D290               	goto	L116
  7184  000E74                     l9258:
  7185                           
  7186                           ;main.c: 2297: writeEEPROM(0x81, 0x7f);
  7187  000E74  0E00               	movlw	0
  7188  000E76  6E19               	movwf	writeEEPROM@address+1,c
  7189  000E78  0E81               	movlw	129
  7190  000E7A  6E18               	movwf	writeEEPROM@address,c
  7191  000E7C  0E7F               	movlw	127
  7192  000E7E  6E1A               	movwf	writeEEPROM@data,c
  7193  000E80  EC8E  F039         	call	_writeEEPROM	;wreg free
  7194                           
  7195                           ;main.c: 2298: writeEEPROM(0x82, 0xff);
  7196  000E84  0E00               	movlw	0
  7197  000E86  6E19               	movwf	writeEEPROM@address+1,c
  7198  000E88  0E82               	movlw	130
  7199  000E8A  6E18               	movwf	writeEEPROM@address,c
  7200  000E8C  0EFF               	movlw	255
  7201  000E8E  6E1A               	movwf	writeEEPROM@data,c
  7202  000E90  EC8E  F039         	call	_writeEEPROM	;wreg free
  7203                           
  7204                           ;main.c: 2299: rv = readEEPROM(0x81);
  7205  000E94  0E00               	movlw	0
  7206  000E96  6E1F               	movwf	readEEPROM@address+1,c
  7207  000E98  0E81               	movlw	129
  7208  000E9A  6E1E               	movwf	readEEPROM@address,c
  7209  000E9C  EC6F  F03A         	call	_readEEPROM	;wreg free
  7210  000EA0  D279               	goto	L116
  7211  000EA2                     l9260:
  7212                           
  7213                           ;main.c: 2304: writeEEPROM(0x81, 0x7f);
  7214  000EA2  0E00               	movlw	0
  7215  000EA4  6E19               	movwf	writeEEPROM@address+1,c
  7216  000EA6  0E81               	movlw	129
  7217  000EA8  6E18               	movwf	writeEEPROM@address,c
  7218  000EAA  0E7F               	movlw	127
  7219  000EAC  6E1A               	movwf	writeEEPROM@data,c
  7220  000EAE  EC8E  F039         	call	_writeEEPROM	;wreg free
  7221                           
  7222                           ;main.c: 2305: writeEEPROM(0x82, 0xff);
  7223  000EB2  0E00               	movlw	0
  7224  000EB4  6E19               	movwf	writeEEPROM@address+1,c
  7225  000EB6  0E82               	movlw	130
  7226  000EB8  6E18               	movwf	writeEEPROM@address,c
  7227  000EBA  0EFF               	movlw	255
  7228  000EBC  6E1A               	movwf	writeEEPROM@data,c
  7229  000EBE  EC8E  F039         	call	_writeEEPROM	;wreg free
  7230                           
  7231                           ;main.c: 2306: rv = readEEPROM(0x82);
  7232  000EC2  0E00               	movlw	0
  7233  000EC4  6E1F               	movwf	readEEPROM@address+1,c
  7234  000EC6  0E82               	movlw	130
  7235  000EC8  6E1E               	movwf	readEEPROM@address,c
  7236  000ECA  EC6F  F03A         	call	_readEEPROM	;wreg free
  7237  000ECE  D262               	goto	L116
  7238  000ED0                     l9262:
  7239                           
  7240                           ;main.c: 2311: writeEEPROM(0x83, 0x7f);
  7241  000ED0  0E00               	movlw	0
  7242  000ED2  6E19               	movwf	writeEEPROM@address+1,c
  7243  000ED4  0E83               	movlw	131
  7244  000ED6  6E18               	movwf	writeEEPROM@address,c
  7245  000ED8  0E7F               	movlw	127
  7246  000EDA  6E1A               	movwf	writeEEPROM@data,c
  7247  000EDC  EC8E  F039         	call	_writeEEPROM	;wreg free
  7248                           
  7249                           ;main.c: 2312: writeEEPROM(0x84, 0xff);
  7250  000EE0  0E00               	movlw	0
  7251  000EE2  6E19               	movwf	writeEEPROM@address+1,c
  7252  000EE4  0E84               	movlw	132
  7253  000EE6  6E18               	movwf	writeEEPROM@address,c
  7254  000EE8  0EFF               	movlw	255
  7255  000EEA  6E1A               	movwf	writeEEPROM@data,c
  7256  000EEC  EC8E  F039         	call	_writeEEPROM	;wreg free
  7257                           
  7258                           ;main.c: 2313: rv = readEEPROM(0x83);
  7259  000EF0  0E00               	movlw	0
  7260  000EF2  6E1F               	movwf	readEEPROM@address+1,c
  7261  000EF4  0E83               	movlw	131
  7262  000EF6  6E1E               	movwf	readEEPROM@address,c
  7263  000EF8  EC6F  F03A         	call	_readEEPROM	;wreg free
  7264  000EFC  D24B               	goto	L116
  7265  000EFE                     l9264:
  7266                           
  7267                           ;main.c: 2318: writeEEPROM(0x83, 0x7f);
  7268  000EFE  0E00               	movlw	0
  7269  000F00  6E19               	movwf	writeEEPROM@address+1,c
  7270  000F02  0E83               	movlw	131
  7271  000F04  6E18               	movwf	writeEEPROM@address,c
  7272  000F06  0E7F               	movlw	127
  7273  000F08  6E1A               	movwf	writeEEPROM@data,c
  7274  000F0A  EC8E  F039         	call	_writeEEPROM	;wreg free
  7275                           
  7276                           ;main.c: 2319: writeEEPROM(0x84, 0xff);
  7277  000F0E  0E00               	movlw	0
  7278  000F10  6E19               	movwf	writeEEPROM@address+1,c
  7279  000F12  0E84               	movlw	132
  7280  000F14  6E18               	movwf	writeEEPROM@address,c
  7281  000F16  0EFF               	movlw	255
  7282  000F18  6E1A               	movwf	writeEEPROM@data,c
  7283  000F1A  EC8E  F039         	call	_writeEEPROM	;wreg free
  7284                           
  7285                           ;main.c: 2320: rv = readEEPROM(0x84);
  7286  000F1E  0E00               	movlw	0
  7287  000F20  6E1F               	movwf	readEEPROM@address+1,c
  7288  000F22  0E84               	movlw	132
  7289  000F24  6E1E               	movwf	readEEPROM@address,c
  7290  000F26  EC6F  F03A         	call	_readEEPROM	;wreg free
  7291  000F2A  D234               	goto	L116
  7292  000F2C                     l9266:
  7293                           
  7294                           ;main.c: 2325: writeEEPROM(0x85, 0x7f);
  7295  000F2C  0E00               	movlw	0
  7296  000F2E  6E19               	movwf	writeEEPROM@address+1,c
  7297  000F30  0E85               	movlw	133
  7298  000F32  6E18               	movwf	writeEEPROM@address,c
  7299  000F34  0E7F               	movlw	127
  7300  000F36  6E1A               	movwf	writeEEPROM@data,c
  7301  000F38  EC8E  F039         	call	_writeEEPROM	;wreg free
  7302                           
  7303                           ;main.c: 2326: writeEEPROM(0x86, 0xff);
  7304  000F3C  0E00               	movlw	0
  7305  000F3E  6E19               	movwf	writeEEPROM@address+1,c
  7306  000F40  0E86               	movlw	134
  7307  000F42  6E18               	movwf	writeEEPROM@address,c
  7308  000F44  0EFF               	movlw	255
  7309  000F46  6E1A               	movwf	writeEEPROM@data,c
  7310  000F48  EC8E  F039         	call	_writeEEPROM	;wreg free
  7311                           
  7312                           ;main.c: 2327: rv = readEEPROM(0x85);
  7313  000F4C  0E00               	movlw	0
  7314  000F4E  6E1F               	movwf	readEEPROM@address+1,c
  7315  000F50  0E85               	movlw	133
  7316  000F52  6E1E               	movwf	readEEPROM@address,c
  7317  000F54  EC6F  F03A         	call	_readEEPROM	;wreg free
  7318  000F58  D21D               	goto	L116
  7319  000F5A                     l9268:
  7320                           
  7321                           ;main.c: 2332: writeEEPROM(0x85, 0x7f);
  7322  000F5A  0E00               	movlw	0
  7323  000F5C  6E19               	movwf	writeEEPROM@address+1,c
  7324  000F5E  0E85               	movlw	133
  7325  000F60  6E18               	movwf	writeEEPROM@address,c
  7326  000F62  0E7F               	movlw	127
  7327  000F64  6E1A               	movwf	writeEEPROM@data,c
  7328  000F66  EC8E  F039         	call	_writeEEPROM	;wreg free
  7329                           
  7330                           ;main.c: 2333: writeEEPROM(0x86, 0xff);
  7331  000F6A  0E00               	movlw	0
  7332  000F6C  6E19               	movwf	writeEEPROM@address+1,c
  7333  000F6E  0E86               	movlw	134
  7334  000F70  6E18               	movwf	writeEEPROM@address,c
  7335  000F72  0EFF               	movlw	255
  7336  000F74  6E1A               	movwf	writeEEPROM@data,c
  7337  000F76  EC8E  F039         	call	_writeEEPROM	;wreg free
  7338                           
  7339                           ;main.c: 2334: rv = readEEPROM(0x86);
  7340  000F7A  0E00               	movlw	0
  7341  000F7C  6E1F               	movwf	readEEPROM@address+1,c
  7342  000F7E  0E86               	movlw	134
  7343  000F80  6E1E               	movwf	readEEPROM@address,c
  7344  000F82  EC6F  F03A         	call	_readEEPROM	;wreg free
  7345  000F86  D206               	goto	L116
  7346  000F88                     l9270:
  7347                           
  7348                           ;main.c: 2339: writeEEPROM(0x87, 0x7f);
  7349  000F88  0E00               	movlw	0
  7350  000F8A  6E19               	movwf	writeEEPROM@address+1,c
  7351  000F8C  0E87               	movlw	135
  7352  000F8E  6E18               	movwf	writeEEPROM@address,c
  7353  000F90  0E7F               	movlw	127
  7354  000F92  6E1A               	movwf	writeEEPROM@data,c
  7355  000F94  EC8E  F039         	call	_writeEEPROM	;wreg free
  7356                           
  7357                           ;main.c: 2340: writeEEPROM(0x88, 0xff);
  7358  000F98  0E00               	movlw	0
  7359  000F9A  6E19               	movwf	writeEEPROM@address+1,c
  7360  000F9C  0E88               	movlw	136
  7361  000F9E  6E18               	movwf	writeEEPROM@address,c
  7362  000FA0  0EFF               	movlw	255
  7363  000FA2  6E1A               	movwf	writeEEPROM@data,c
  7364  000FA4  EC8E  F039         	call	_writeEEPROM	;wreg free
  7365                           
  7366                           ;main.c: 2341: rv = readEEPROM(0x87);
  7367  000FA8  0E00               	movlw	0
  7368  000FAA  6E1F               	movwf	readEEPROM@address+1,c
  7369  000FAC  0E87               	movlw	135
  7370  000FAE  6E1E               	movwf	readEEPROM@address,c
  7371  000FB0  EC6F  F03A         	call	_readEEPROM	;wreg free
  7372  000FB4  D1EF               	goto	L116
  7373  000FB6                     l9272:
  7374                           
  7375                           ;main.c: 2346: writeEEPROM(0x87, 0x7f);
  7376  000FB6  0E00               	movlw	0
  7377  000FB8  6E19               	movwf	writeEEPROM@address+1,c
  7378  000FBA  0E87               	movlw	135
  7379  000FBC  6E18               	movwf	writeEEPROM@address,c
  7380  000FBE  0E7F               	movlw	127
  7381  000FC0  6E1A               	movwf	writeEEPROM@data,c
  7382  000FC2  EC8E  F039         	call	_writeEEPROM	;wreg free
  7383                           
  7384                           ;main.c: 2347: writeEEPROM(0x88, 0xff);
  7385  000FC6  0E00               	movlw	0
  7386  000FC8  6E19               	movwf	writeEEPROM@address+1,c
  7387  000FCA  0E88               	movlw	136
  7388  000FCC  6E18               	movwf	writeEEPROM@address,c
  7389  000FCE  0EFF               	movlw	255
  7390  000FD0  6E1A               	movwf	writeEEPROM@data,c
  7391  000FD2  EC8E  F039         	call	_writeEEPROM	;wreg free
  7392                           
  7393                           ;main.c: 2348: rv = readEEPROM(0x88);
  7394  000FD6  0E00               	movlw	0
  7395  000FD8  6E1F               	movwf	readEEPROM@address+1,c
  7396  000FDA  0E88               	movlw	136
  7397  000FDC  6E1E               	movwf	readEEPROM@address,c
  7398  000FDE  EC6F  F03A         	call	_readEEPROM	;wreg free
  7399  000FE2  D1D8               	goto	L116
  7400  000FE4                     l9274:
  7401                           
  7402                           ;main.c: 2353: writeEEPROM(0x89, 0x7f);
  7403  000FE4  0E00               	movlw	0
  7404  000FE6  6E19               	movwf	writeEEPROM@address+1,c
  7405  000FE8  0E89               	movlw	137
  7406  000FEA  6E18               	movwf	writeEEPROM@address,c
  7407  000FEC  0E7F               	movlw	127
  7408  000FEE  6E1A               	movwf	writeEEPROM@data,c
  7409  000FF0  EC8E  F039         	call	_writeEEPROM	;wreg free
  7410                           
  7411                           ;main.c: 2354: writeEEPROM(0x8A, 0xff);
  7412  000FF4  0E00               	movlw	0
  7413  000FF6  6E19               	movwf	writeEEPROM@address+1,c
  7414  000FF8  0E8A               	movlw	138
  7415  000FFA  6E18               	movwf	writeEEPROM@address,c
  7416  000FFC  0EFF               	movlw	255
  7417  000FFE  6E1A               	movwf	writeEEPROM@data,c
  7418  001000  EC8E  F039         	call	_writeEEPROM	;wreg free
  7419                           
  7420                           ;main.c: 2355: rv = readEEPROM(0x89);
  7421  001004  0E00               	movlw	0
  7422  001006  6E1F               	movwf	readEEPROM@address+1,c
  7423  001008  0E89               	movlw	137
  7424  00100A  6E1E               	movwf	readEEPROM@address,c
  7425  00100C  EC6F  F03A         	call	_readEEPROM	;wreg free
  7426  001010  D1C1               	goto	L116
  7427  001012                     l9276:
  7428                           
  7429                           ;main.c: 2360: writeEEPROM(0x89, 0x7f);
  7430  001012  0E00               	movlw	0
  7431  001014  6E19               	movwf	writeEEPROM@address+1,c
  7432  001016  0E89               	movlw	137
  7433  001018  6E18               	movwf	writeEEPROM@address,c
  7434  00101A  0E7F               	movlw	127
  7435  00101C  6E1A               	movwf	writeEEPROM@data,c
  7436  00101E  EC8E  F039         	call	_writeEEPROM	;wreg free
  7437                           
  7438                           ;main.c: 2361: writeEEPROM(0x8A, 0xff);
  7439  001022  0E00               	movlw	0
  7440  001024  6E19               	movwf	writeEEPROM@address+1,c
  7441  001026  0E8A               	movlw	138
  7442  001028  6E18               	movwf	writeEEPROM@address,c
  7443  00102A  0EFF               	movlw	255
  7444  00102C  6E1A               	movwf	writeEEPROM@data,c
  7445  00102E  EC8E  F039         	call	_writeEEPROM	;wreg free
  7446                           
  7447                           ;main.c: 2362: rv = readEEPROM(0x8A);
  7448  001032  0E00               	movlw	0
  7449  001034  6E1F               	movwf	readEEPROM@address+1,c
  7450  001036  0E8A               	movlw	138
  7451  001038  6E1E               	movwf	readEEPROM@address,c
  7452  00103A  EC6F  F03A         	call	_readEEPROM	;wreg free
  7453  00103E  D1AA               	goto	L116
  7454  001040                     l9278:
  7455                           
  7456                           ;main.c: 2371: writeEEPROM(0x8B, 0x80);
  7457  001040  0E00               	movlw	0
  7458  001042  6E19               	movwf	writeEEPROM@address+1,c
  7459  001044  0E8B               	movlw	139
  7460  001046  6E18               	movwf	writeEEPROM@address,c
  7461  001048  0E80               	movlw	128
  7462  00104A  6E1A               	movwf	writeEEPROM@data,c
  7463  00104C  EC8E  F039         	call	_writeEEPROM	;wreg free
  7464                           
  7465                           ;main.c: 2372: writeEEPROM(0x8B, 0x00);
  7466  001050  0E00               	movlw	0
  7467  001052  6E19               	movwf	writeEEPROM@address+1,c
  7468  001054  0E8B               	movlw	139
  7469  001056  6E18               	movwf	writeEEPROM@address,c
  7470  001058  0E00               	movlw	0
  7471  00105A  6E1A               	movwf	writeEEPROM@data,c
  7472  00105C  EC8E  F039         	call	_writeEEPROM	;wreg free
  7473                           
  7474                           ;main.c: 2373: rv = readEEPROM(0x8B);
  7475  001060  0E00               	movlw	0
  7476  001062  6E1F               	movwf	readEEPROM@address+1,c
  7477  001064  0E8B               	movlw	139
  7478  001066  6E1E               	movwf	readEEPROM@address,c
  7479  001068  EC6F  F03A         	call	_readEEPROM	;wreg free
  7480  00106C  D193               	goto	L116
  7481  00106E                     l9280:
  7482                           
  7483                           ;main.c: 2378: writeEEPROM(0x8B, 0x80);
  7484  00106E  0E00               	movlw	0
  7485  001070  6E19               	movwf	writeEEPROM@address+1,c
  7486  001072  0E8B               	movlw	139
  7487  001074  6E18               	movwf	writeEEPROM@address,c
  7488  001076  0E80               	movlw	128
  7489  001078  6E1A               	movwf	writeEEPROM@data,c
  7490  00107A  EC8E  F039         	call	_writeEEPROM	;wreg free
  7491                           
  7492                           ;main.c: 2379: writeEEPROM(0x8B, 0x00);
  7493  00107E  0E00               	movlw	0
  7494  001080  6E19               	movwf	writeEEPROM@address+1,c
  7495  001082  0E8B               	movlw	139
  7496  001084  6E18               	movwf	writeEEPROM@address,c
  7497  001086  0E00               	movlw	0
  7498  001088  6E1A               	movwf	writeEEPROM@data,c
  7499  00108A  EC8E  F039         	call	_writeEEPROM	;wreg free
  7500                           
  7501                           ;main.c: 2380: rv = readEEPROM(0x8C);
  7502  00108E  0E00               	movlw	0
  7503  001090  6E1F               	movwf	readEEPROM@address+1,c
  7504  001092  0E8C               	movlw	140
  7505  001094  6E1E               	movwf	readEEPROM@address,c
  7506  001096  EC6F  F03A         	call	_readEEPROM	;wreg free
  7507  00109A  D17C               	goto	L116
  7508  00109C                     l9282:
  7509                           
  7510                           ;main.c: 2385: writeEEPROM(0x8D, 0x80);
  7511  00109C  0E00               	movlw	0
  7512  00109E  6E19               	movwf	writeEEPROM@address+1,c
  7513  0010A0  0E8D               	movlw	141
  7514  0010A2  6E18               	movwf	writeEEPROM@address,c
  7515  0010A4  0E80               	movlw	128
  7516  0010A6  6E1A               	movwf	writeEEPROM@data,c
  7517  0010A8  EC8E  F039         	call	_writeEEPROM	;wreg free
  7518                           
  7519                           ;main.c: 2386: writeEEPROM(0x8D, 0x00);
  7520  0010AC  0E00               	movlw	0
  7521  0010AE  6E19               	movwf	writeEEPROM@address+1,c
  7522  0010B0  0E8D               	movlw	141
  7523  0010B2  6E18               	movwf	writeEEPROM@address,c
  7524  0010B4  0E00               	movlw	0
  7525  0010B6  6E1A               	movwf	writeEEPROM@data,c
  7526  0010B8  EC8E  F039         	call	_writeEEPROM	;wreg free
  7527                           
  7528                           ;main.c: 2387: rv = readEEPROM(0x8D);
  7529  0010BC  0E00               	movlw	0
  7530  0010BE  6E1F               	movwf	readEEPROM@address+1,c
  7531  0010C0  0E8D               	movlw	141
  7532  0010C2  6E1E               	movwf	readEEPROM@address,c
  7533  0010C4  EC6F  F03A         	call	_readEEPROM	;wreg free
  7534  0010C8  D165               	goto	L116
  7535  0010CA                     l9284:
  7536                           
  7537                           ;main.c: 2392: writeEEPROM(0x8D, 0x80);
  7538  0010CA  0E00               	movlw	0
  7539  0010CC  6E19               	movwf	writeEEPROM@address+1,c
  7540  0010CE  0E8D               	movlw	141
  7541  0010D0  6E18               	movwf	writeEEPROM@address,c
  7542  0010D2  0E80               	movlw	128
  7543  0010D4  6E1A               	movwf	writeEEPROM@data,c
  7544  0010D6  EC8E  F039         	call	_writeEEPROM	;wreg free
  7545                           
  7546                           ;main.c: 2393: writeEEPROM(0x8D, 0x00);
  7547  0010DA  0E00               	movlw	0
  7548  0010DC  6E19               	movwf	writeEEPROM@address+1,c
  7549  0010DE  0E8D               	movlw	141
  7550  0010E0  6E18               	movwf	writeEEPROM@address,c
  7551  0010E2  0E00               	movlw	0
  7552  0010E4  6E1A               	movwf	writeEEPROM@data,c
  7553  0010E6  EC8E  F039         	call	_writeEEPROM	;wreg free
  7554                           
  7555                           ;main.c: 2394: rv = readEEPROM(0x8E);
  7556  0010EA  0E00               	movlw	0
  7557  0010EC  6E1F               	movwf	readEEPROM@address+1,c
  7558  0010EE  0E8E               	movlw	142
  7559  0010F0  6E1E               	movwf	readEEPROM@address,c
  7560  0010F2  EC6F  F03A         	call	_readEEPROM	;wreg free
  7561  0010F6  D14E               	goto	L116
  7562  0010F8                     l9286:
  7563                           
  7564                           ;main.c: 2399: writeEEPROM(0x8F, 0x80);
  7565  0010F8  0E00               	movlw	0
  7566  0010FA  6E19               	movwf	writeEEPROM@address+1,c
  7567  0010FC  0E8F               	movlw	143
  7568  0010FE  6E18               	movwf	writeEEPROM@address,c
  7569  001100  0E80               	movlw	128
  7570  001102  6E1A               	movwf	writeEEPROM@data,c
  7571  001104  EC8E  F039         	call	_writeEEPROM	;wreg free
  7572                           
  7573                           ;main.c: 2400: writeEEPROM(0x8F, 0x00);
  7574  001108  0E00               	movlw	0
  7575  00110A  6E19               	movwf	writeEEPROM@address+1,c
  7576  00110C  0E8F               	movlw	143
  7577  00110E  6E18               	movwf	writeEEPROM@address,c
  7578  001110  0E00               	movlw	0
  7579  001112  6E1A               	movwf	writeEEPROM@data,c
  7580  001114  EC8E  F039         	call	_writeEEPROM	;wreg free
  7581                           
  7582                           ;main.c: 2401: rv = readEEPROM(0x8F);
  7583  001118  0E00               	movlw	0
  7584  00111A  6E1F               	movwf	readEEPROM@address+1,c
  7585  00111C  0E8F               	movlw	143
  7586  00111E  6E1E               	movwf	readEEPROM@address,c
  7587  001120  EC6F  F03A         	call	_readEEPROM	;wreg free
  7588  001124  D137               	goto	L116
  7589  001126                     l9288:
  7590                           
  7591                           ;main.c: 2406: writeEEPROM(0x8F, 0x80);
  7592  001126  0E00               	movlw	0
  7593  001128  6E19               	movwf	writeEEPROM@address+1,c
  7594  00112A  0E8F               	movlw	143
  7595  00112C  6E18               	movwf	writeEEPROM@address,c
  7596  00112E  0E80               	movlw	128
  7597  001130  6E1A               	movwf	writeEEPROM@data,c
  7598  001132  EC8E  F039         	call	_writeEEPROM	;wreg free
  7599                           
  7600                           ;main.c: 2407: writeEEPROM(0x8F, 0x00);
  7601  001136  0E00               	movlw	0
  7602  001138  6E19               	movwf	writeEEPROM@address+1,c
  7603  00113A  0E8F               	movlw	143
  7604  00113C  6E18               	movwf	writeEEPROM@address,c
  7605  00113E  0E00               	movlw	0
  7606  001140  6E1A               	movwf	writeEEPROM@data,c
  7607  001142  EC8E  F039         	call	_writeEEPROM	;wreg free
  7608                           
  7609                           ;main.c: 2408: rv = readEEPROM(0x90);
  7610  001146  0E00               	movlw	0
  7611  001148  6E1F               	movwf	readEEPROM@address+1,c
  7612  00114A  0E90               	movlw	144
  7613  00114C  6E1E               	movwf	readEEPROM@address,c
  7614  00114E  EC6F  F03A         	call	_readEEPROM	;wreg free
  7615  001152  D120               	goto	L116
  7616  001154                     l9290:
  7617                           
  7618                           ;main.c: 2413: writeEEPROM(0x91, 0x80);
  7619  001154  0E00               	movlw	0
  7620  001156  6E19               	movwf	writeEEPROM@address+1,c
  7621  001158  0E91               	movlw	145
  7622  00115A  6E18               	movwf	writeEEPROM@address,c
  7623  00115C  0E80               	movlw	128
  7624  00115E  6E1A               	movwf	writeEEPROM@data,c
  7625  001160  EC8E  F039         	call	_writeEEPROM	;wreg free
  7626                           
  7627                           ;main.c: 2414: writeEEPROM(0x91, 0x00);
  7628  001164  0E00               	movlw	0
  7629  001166  6E19               	movwf	writeEEPROM@address+1,c
  7630  001168  0E91               	movlw	145
  7631  00116A  6E18               	movwf	writeEEPROM@address,c
  7632  00116C  0E00               	movlw	0
  7633  00116E  6E1A               	movwf	writeEEPROM@data,c
  7634  001170  EC8E  F039         	call	_writeEEPROM	;wreg free
  7635                           
  7636                           ;main.c: 2415: rv = readEEPROM(0x91);
  7637  001174  0E00               	movlw	0
  7638  001176  6E1F               	movwf	readEEPROM@address+1,c
  7639  001178  0E91               	movlw	145
  7640  00117A  6E1E               	movwf	readEEPROM@address,c
  7641  00117C  EC6F  F03A         	call	_readEEPROM	;wreg free
  7642  001180  D109               	goto	L116
  7643  001182                     l9292:
  7644                           
  7645                           ;main.c: 2420: writeEEPROM(0x91, 0x80);
  7646  001182  0E00               	movlw	0
  7647  001184  6E19               	movwf	writeEEPROM@address+1,c
  7648  001186  0E91               	movlw	145
  7649  001188  6E18               	movwf	writeEEPROM@address,c
  7650  00118A  0E80               	movlw	128
  7651  00118C  6E1A               	movwf	writeEEPROM@data,c
  7652  00118E  EC8E  F039         	call	_writeEEPROM	;wreg free
  7653                           
  7654                           ;main.c: 2421: writeEEPROM(0x91, 0x00);
  7655  001192  0E00               	movlw	0
  7656  001194  6E19               	movwf	writeEEPROM@address+1,c
  7657  001196  0E91               	movlw	145
  7658  001198  6E18               	movwf	writeEEPROM@address,c
  7659  00119A  0E00               	movlw	0
  7660  00119C  6E1A               	movwf	writeEEPROM@data,c
  7661  00119E  EC8E  F039         	call	_writeEEPROM	;wreg free
  7662                           
  7663                           ;main.c: 2422: rv = readEEPROM(0x92);
  7664  0011A2  0E00               	movlw	0
  7665  0011A4  6E1F               	movwf	readEEPROM@address+1,c
  7666  0011A6  0E92               	movlw	146
  7667  0011A8  6E1E               	movwf	readEEPROM@address,c
  7668  0011AA  EC6F  F03A         	call	_readEEPROM	;wreg free
  7669  0011AE  D0F2               	goto	L116
  7670  0011B0                     l9294:
  7671                           
  7672                           ;main.c: 2427: writeEEPROM(0x93, 0x80);
  7673  0011B0  0E00               	movlw	0
  7674  0011B2  6E19               	movwf	writeEEPROM@address+1,c
  7675  0011B4  0E93               	movlw	147
  7676  0011B6  6E18               	movwf	writeEEPROM@address,c
  7677  0011B8  0E80               	movlw	128
  7678  0011BA  6E1A               	movwf	writeEEPROM@data,c
  7679  0011BC  EC8E  F039         	call	_writeEEPROM	;wreg free
  7680                           
  7681                           ;main.c: 2428: writeEEPROM(0x93, 0x00);
  7682  0011C0  0E00               	movlw	0
  7683  0011C2  6E19               	movwf	writeEEPROM@address+1,c
  7684  0011C4  0E93               	movlw	147
  7685  0011C6  6E18               	movwf	writeEEPROM@address,c
  7686  0011C8  0E00               	movlw	0
  7687  0011CA  6E1A               	movwf	writeEEPROM@data,c
  7688  0011CC  EC8E  F039         	call	_writeEEPROM	;wreg free
  7689                           
  7690                           ;main.c: 2429: rv = readEEPROM(0x93);
  7691  0011D0  0E00               	movlw	0
  7692  0011D2  6E1F               	movwf	readEEPROM@address+1,c
  7693  0011D4  0E93               	movlw	147
  7694  0011D6  6E1E               	movwf	readEEPROM@address,c
  7695  0011D8  EC6F  F03A         	call	_readEEPROM	;wreg free
  7696  0011DC  D0DB               	goto	L116
  7697  0011DE                     l9296:
  7698                           
  7699                           ;main.c: 2434: writeEEPROM(0x93, 0x80);
  7700  0011DE  0E00               	movlw	0
  7701  0011E0  6E19               	movwf	writeEEPROM@address+1,c
  7702  0011E2  0E93               	movlw	147
  7703  0011E4  6E18               	movwf	writeEEPROM@address,c
  7704  0011E6  0E80               	movlw	128
  7705  0011E8  6E1A               	movwf	writeEEPROM@data,c
  7706  0011EA  EC8E  F039         	call	_writeEEPROM	;wreg free
  7707                           
  7708                           ;main.c: 2435: writeEEPROM(0x93, 0x00);
  7709  0011EE  0E00               	movlw	0
  7710  0011F0  6E19               	movwf	writeEEPROM@address+1,c
  7711  0011F2  0E93               	movlw	147
  7712  0011F4  6E18               	movwf	writeEEPROM@address,c
  7713  0011F6  0E00               	movlw	0
  7714  0011F8  6E1A               	movwf	writeEEPROM@data,c
  7715  0011FA  EC8E  F039         	call	_writeEEPROM	;wreg free
  7716                           
  7717                           ;main.c: 2436: rv = readEEPROM(0x94);
  7718  0011FE  0E00               	movlw	0
  7719  001200  6E1F               	movwf	readEEPROM@address+1,c
  7720  001202  0E94               	movlw	148
  7721  001204  6E1E               	movwf	readEEPROM@address,c
  7722  001206  EC6F  F03A         	call	_readEEPROM	;wreg free
  7723  00120A  D0C4               	goto	L116
  7724  00120C                     l9298:
  7725                           
  7726                           ;main.c: 2441: writeEEPROM(0x8B, 0x80);
  7727  00120C  0E00               	movlw	0
  7728  00120E  6E19               	movwf	writeEEPROM@address+1,c
  7729  001210  0E8B               	movlw	139
  7730  001212  6E18               	movwf	writeEEPROM@address,c
  7731  001214  0E80               	movlw	128
  7732  001216  6E1A               	movwf	writeEEPROM@data,c
  7733  001218  EC8E  F039         	call	_writeEEPROM	;wreg free
  7734                           
  7735                           ;main.c: 2442: writeEEPROM(0x8B, 0x00);
  7736  00121C  0E00               	movlw	0
  7737  00121E  6E19               	movwf	writeEEPROM@address+1,c
  7738  001220  0E8B               	movlw	139
  7739  001222  6E18               	movwf	writeEEPROM@address,c
  7740  001224  0E00               	movlw	0
  7741  001226  6E1A               	movwf	writeEEPROM@data,c
  7742  001228  EC8E  F039         	call	_writeEEPROM	;wreg free
  7743                           
  7744                           ;main.c: 2443: rv = readEEPROM(0x95);
  7745  00122C  0E00               	movlw	0
  7746  00122E  6E1F               	movwf	readEEPROM@address+1,c
  7747  001230  0E95               	movlw	149
  7748  001232  6E1E               	movwf	readEEPROM@address,c
  7749  001234  EC6F  F03A         	call	_readEEPROM	;wreg free
  7750  001238  D0AD               	goto	L116
  7751  00123A                     l9300:
  7752                           
  7753                           ;main.c: 2448: writeEEPROM(0x8B, 0x80);
  7754  00123A  0E00               	movlw	0
  7755  00123C  6E19               	movwf	writeEEPROM@address+1,c
  7756  00123E  0E8B               	movlw	139
  7757  001240  6E18               	movwf	writeEEPROM@address,c
  7758  001242  0E80               	movlw	128
  7759  001244  6E1A               	movwf	writeEEPROM@data,c
  7760  001246  EC8E  F039         	call	_writeEEPROM	;wreg free
  7761                           
  7762                           ;main.c: 2449: writeEEPROM(0x8B, 0x00);
  7763  00124A  0E00               	movlw	0
  7764  00124C  6E19               	movwf	writeEEPROM@address+1,c
  7765  00124E  0E8B               	movlw	139
  7766  001250  6E18               	movwf	writeEEPROM@address,c
  7767  001252  0E00               	movlw	0
  7768  001254  6E1A               	movwf	writeEEPROM@data,c
  7769  001256  EC8E  F039         	call	_writeEEPROM	;wreg free
  7770                           
  7771                           ;main.c: 2450: rv = readEEPROM(0x96);
  7772  00125A  0E00               	movlw	0
  7773  00125C  6E1F               	movwf	readEEPROM@address+1,c
  7774  00125E  0E96               	movlw	150
  7775  001260  6E1E               	movwf	readEEPROM@address,c
  7776  001262  EC6F  F03A         	call	_readEEPROM	;wreg free
  7777  001266  D096               	goto	L116
  7778  001268                     l9302:
  7779                           
  7780                           ;main.c: 2459: writeEEPROM(0x97, val);
  7781  001268  0E00               	movlw	0
  7782  00126A  6E19               	movwf	writeEEPROM@address+1,c
  7783  00126C  0E97               	movlw	151
  7784  00126E  6E18               	movwf	writeEEPROM@address,c
  7785  001270  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7786  001274  EC8E  F039         	call	_writeEEPROM	;wreg free
  7787                           
  7788                           ;main.c: 2460: rv = readEEPROM(0x97);
  7789  001278  0E00               	movlw	0
  7790  00127A  6E1F               	movwf	readEEPROM@address+1,c
  7791  00127C  0E97               	movlw	151
  7792  00127E  6E1E               	movwf	readEEPROM@address,c
  7793  001280  EC6F  F03A         	call	_readEEPROM	;wreg free
  7794  001284  D087               	goto	L116
  7795  001286                     l9304:
  7796                           
  7797                           ;main.c: 2465: writeEEPROM(0x98, val);
  7798  001286  0E00               	movlw	0
  7799  001288  6E19               	movwf	writeEEPROM@address+1,c
  7800  00128A  0E98               	movlw	152
  7801  00128C  6E18               	movwf	writeEEPROM@address,c
  7802  00128E  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7803  001292  EC8E  F039         	call	_writeEEPROM	;wreg free
  7804                           
  7805                           ;main.c: 2466: rv = readEEPROM(0x98);
  7806  001296  0E00               	movlw	0
  7807  001298  6E1F               	movwf	readEEPROM@address+1,c
  7808  00129A  0E98               	movlw	152
  7809  00129C  6E1E               	movwf	readEEPROM@address,c
  7810  00129E  EC6F  F03A         	call	_readEEPROM	;wreg free
  7811  0012A2  D078               	goto	L116
  7812  0012A4                     l9306:
  7813                           
  7814                           ;main.c: 2471: writeEEPROM(0x99, val);
  7815  0012A4  0E00               	movlw	0
  7816  0012A6  6E19               	movwf	writeEEPROM@address+1,c
  7817  0012A8  0E99               	movlw	153
  7818  0012AA  6E18               	movwf	writeEEPROM@address,c
  7819  0012AC  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7820  0012B0  EC8E  F039         	call	_writeEEPROM	;wreg free
  7821                           
  7822                           ;main.c: 2472: rv = readEEPROM(0x99);
  7823  0012B4  0E00               	movlw	0
  7824  0012B6  6E1F               	movwf	readEEPROM@address+1,c
  7825  0012B8  0E99               	movlw	153
  7826  0012BA  6E1E               	movwf	readEEPROM@address,c
  7827  0012BC  EC6F  F03A         	call	_readEEPROM	;wreg free
  7828  0012C0  6E2C               	movwf	vscp_writeAppReg@rv,c
  7829  0012C2                     l516:
  7830                           
  7831                           ;main.c: 2476: writeEEPROM(0x9A, val);
  7832  0012C2  0E00               	movlw	0
  7833  0012C4  6E19               	movwf	writeEEPROM@address+1,c
  7834  0012C6  0E9A               	movlw	154
  7835  0012C8  6E18               	movwf	writeEEPROM@address,c
  7836  0012CA  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7837  0012CE  EC8E  F039         	call	_writeEEPROM	;wreg free
  7838                           
  7839                           ;main.c: 2477: rv = readEEPROM(0x9A);
  7840  0012D2  0E00               	movlw	0
  7841  0012D4  6E1F               	movwf	readEEPROM@address+1,c
  7842  0012D6  0E9A               	movlw	154
  7843  0012D8  6E1E               	movwf	readEEPROM@address,c
  7844  0012DA  EC6F  F03A         	call	_readEEPROM	;wreg free
  7845  0012DE  D05A               	goto	L116
  7846  0012E0                     l9308:
  7847                           
  7848                           ;main.c: 2482: writeEEPROM(0x9B, val);
  7849  0012E0  0E00               	movlw	0
  7850  0012E2  6E19               	movwf	writeEEPROM@address+1,c
  7851  0012E4  0E9B               	movlw	155
  7852  0012E6  6E18               	movwf	writeEEPROM@address,c
  7853  0012E8  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7854  0012EC  EC8E  F039         	call	_writeEEPROM	;wreg free
  7855                           
  7856                           ;main.c: 2483: rv = readEEPROM(0x9B);
  7857  0012F0  0E00               	movlw	0
  7858  0012F2  6E1F               	movwf	readEEPROM@address+1,c
  7859  0012F4  0E9B               	movlw	155
  7860  0012F6  6E1E               	movwf	readEEPROM@address,c
  7861  0012F8  EC6F  F03A         	call	_readEEPROM	;wreg free
  7862  0012FC  D04B               	goto	L116
  7863  0012FE                     l9310:
  7864                           
  7865                           ;main.c: 2488: writeEEPROM(0x9C, val);
  7866  0012FE  0E00               	movlw	0
  7867  001300  6E19               	movwf	writeEEPROM@address+1,c
  7868  001302  0E9C               	movlw	156
  7869  001304  6E18               	movwf	writeEEPROM@address,c
  7870  001306  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7871  00130A  EC8E  F039         	call	_writeEEPROM	;wreg free
  7872                           
  7873                           ;main.c: 2489: rv = readEEPROM(0x9C);
  7874  00130E  0E00               	movlw	0
  7875  001310  6E1F               	movwf	readEEPROM@address+1,c
  7876  001312  0E9C               	movlw	156
  7877  001314  6E1E               	movwf	readEEPROM@address,c
  7878  001316  EC6F  F03A         	call	_readEEPROM	;wreg free
  7879  00131A  D03C               	goto	L116
  7880  00131C                     l9312:
  7881                           
  7882                           ;main.c: 2496: if (val < 12) {
  7883  00131C  0E0C               	movlw	12
  7884  00131E  5C2A               	subwf	vscp_writeAppReg@val,w,c
  7885  001320  B0D8               	btfsc	status,0,c
  7886  001322  D1B1               	goto	l9336
  7887                           
  7888                           ;main.c: 2497: rv = calibration_index = val;
  7889  001324  C02A  F037         	movff	vscp_writeAppReg@val,_calibration_index
  7890  001328  C037  F02C         	movff	_calibration_index,vscp_writeAppReg@rv
  7891  00132C  D1AC               	goto	l9336
  7892  00132E                     l9316:
  7893                           
  7894                           ;main.c: 2503: writeEEPROM(0x9E +
  7895                           ;main.c: 2504: calibration_index, val);
  7896  00132E  0E9E               	movlw	158
  7897  001330  2437               	addwf	_calibration_index,w,c
  7898  001332  6E18               	movwf	writeEEPROM@address,c
  7899  001334  6A19               	clrf	writeEEPROM@address+1,c
  7900  001336  0E00               	movlw	0
  7901  001338  2219               	addwfc	writeEEPROM@address+1,f,c
  7902  00133A  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7903  00133E  EC8E  F039         	call	_writeEEPROM	;wreg free
  7904                           
  7905                           ;main.c: 2505: rv = readEEPROM(0x9E +
  7906                           ;main.c: 2506: calibration_index);
  7907  001342  0E9E               	movlw	158
  7908  001344  2437               	addwf	_calibration_index,w,c
  7909  001346  6E1E               	movwf	readEEPROM@address,c
  7910  001348  6A1F               	clrf	readEEPROM@address+1,c
  7911  00134A  0E00               	movlw	0
  7912  00134C  221F               	addwfc	readEEPROM@address+1,f,c
  7913  00134E  EC6F  F03A         	call	_readEEPROM	;wreg free
  7914  001352  D020               	goto	L116
  7915  001354                     l9318:
  7916                           
  7917                           ;main.c: 2510: writeEEPROM(0xF2, val);
  7918  001354  0E00               	movlw	0
  7919  001356  6E19               	movwf	writeEEPROM@address+1,c
  7920  001358  0EF2               	movlw	242
  7921  00135A  6E18               	movwf	writeEEPROM@address,c
  7922  00135C  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7923  001360  EC8E  F039         	call	_writeEEPROM	;wreg free
  7924                           
  7925                           ;main.c: 2511: rv = readEEPROM(0xF2);
  7926  001364  0E00               	movlw	0
  7927  001366  6E1F               	movwf	readEEPROM@address+1,c
  7928  001368  0EF2               	movlw	242
  7929  00136A  6E1E               	movwf	readEEPROM@address,c
  7930  00136C  EC6F  F03A         	call	_readEEPROM	;wreg free
  7931  001370  D011               	goto	L116
  7932  001372                     l9320:
  7933                           
  7934                           ;main.c: 2515: writeEEPROM(0xF3, val);
  7935  001372  0E00               	movlw	0
  7936  001374  6E19               	movwf	writeEEPROM@address+1,c
  7937  001376  0EF3               	movlw	243
  7938  001378  6E18               	movwf	writeEEPROM@address,c
  7939  00137A  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  7940  00137E  EC8E  F039         	call	_writeEEPROM	;wreg free
  7941                           
  7942                           ;main.c: 2516: rv = readEEPROM(0xF3);
  7943  001382  0E00               	movlw	0
  7944  001384  6E1F               	movwf	readEEPROM@address+1,c
  7945  001386  0EF3               	movlw	243
  7946  001388  6E1E               	movwf	readEEPROM@address,c
  7947  00138A  EC6F  F03A         	call	_readEEPROM	;wreg free
  7948  00138E  D002               	goto	L116
  7949  001390                     l9322:
  7950                           
  7951                           ;main.c: 2520: rv = ~val;
  7952  001390  502A               	movf	vscp_writeAppReg@val,w,c
  7953  001392  0AFF               	xorlw	255
  7954  001394                     L116:
  7955  001394  6E2C               	movwf	vscp_writeAppReg@rv,c
  7956                           
  7957                           ;main.c: 2521: break;
  7958  001396  D177               	goto	l9336
  7959  001398                     l9326:
  7960  001398  502B               	movf	vscp_writeAppReg@reg,w,c
  7961                           
  7962                           ; Switch size 1, requested type "space"
  7963                           ; Number of cases is 96, Range of values is 0 to 119
  7964                           ; switch strategies available:
  7965                           ; Name         Instructions Cycles
  7966                           ; simple_byte          289   145 (average)
  7967                           ;	Chosen strategy is simple_byte
  7968  00139A  0A00               	xorlw	0	; case 0
  7969  00139C  B4D8               	btfsc	status,2,c
  7970  00139E  EF42  F003         	goto	l9130
  7971  0013A2  0A01               	xorlw	1	; case 1
  7972  0013A4  B4D8               	btfsc	status,2,c
  7973  0013A6  EF52  F003         	goto	l9132
  7974  0013AA  0A03               	xorlw	3	; case 2
  7975  0013AC  B4D8               	btfsc	status,2,c
  7976  0013AE  EF62  F003         	goto	l9134
  7977  0013B2  0A01               	xorlw	1	; case 3
  7978  0013B4  B4D8               	btfsc	status,2,c
  7979  0013B6  EF72  F003         	goto	l9136
  7980  0013BA  0A07               	xorlw	7	; case 4
  7981  0013BC  B4D8               	btfsc	status,2,c
  7982  0013BE  EF82  F003         	goto	l9138
  7983  0013C2  0A01               	xorlw	1	; case 5
  7984  0013C4  B4D8               	btfsc	status,2,c
  7985  0013C6  EF92  F003         	goto	l9140
  7986  0013CA  0A03               	xorlw	3	; case 6
  7987  0013CC  B4D8               	btfsc	status,2,c
  7988  0013CE  EFA2  F003         	goto	l9142
  7989  0013D2  0A01               	xorlw	1	; case 7
  7990  0013D4  B4D8               	btfsc	status,2,c
  7991  0013D6  EFB2  F003         	goto	l9144
  7992  0013DA  0A13               	xorlw	19	; case 20
  7993  0013DC  B4D8               	btfsc	status,2,c
  7994  0013DE  EFC2  F003         	goto	l9146
  7995  0013E2  0A01               	xorlw	1	; case 21
  7996  0013E4  B4D8               	btfsc	status,2,c
  7997  0013E6  EFD2  F003         	goto	l9148
  7998  0013EA  0A03               	xorlw	3	; case 22
  7999  0013EC  B4D8               	btfsc	status,2,c
  8000  0013EE  EFE2  F003         	goto	l9150
  8001  0013F2  0A01               	xorlw	1	; case 23
  8002  0013F4  B4D8               	btfsc	status,2,c
  8003  0013F6  EFF2  F003         	goto	l9152
  8004  0013FA  0A0F               	xorlw	15	; case 24
  8005  0013FC  B4D8               	btfsc	status,2,c
  8006  0013FE  EF02  F004         	goto	l9154
  8007  001402  0A01               	xorlw	1	; case 25
  8008  001404  B4D8               	btfsc	status,2,c
  8009  001406  EF12  F004         	goto	l9156
  8010  00140A  0A3F               	xorlw	63	; case 38
  8011  00140C  B4D8               	btfsc	status,2,c
  8012  00140E  EF22  F004         	goto	l9158
  8013  001412  0A01               	xorlw	1	; case 39
  8014  001414  B4D8               	btfsc	status,2,c
  8015  001416  EF32  F004         	goto	l9160
  8016  00141A  0A0F               	xorlw	15	; case 40
  8017  00141C  B4D8               	btfsc	status,2,c
  8018  00141E  EF42  F004         	goto	l9162
  8019  001422  0A01               	xorlw	1	; case 41
  8020  001424  B4D8               	btfsc	status,2,c
  8021  001426  EF52  F004         	goto	l9164
  8022  00142A  0A03               	xorlw	3	; case 42
  8023  00142C  B4D8               	btfsc	status,2,c
  8024  00142E  EF62  F004         	goto	l9166
  8025  001432  0A01               	xorlw	1	; case 43
  8026  001434  B4D8               	btfsc	status,2,c
  8027  001436  EF72  F004         	goto	l9168
  8028  00143A  0A07               	xorlw	7	; case 44
  8029  00143C  B4D8               	btfsc	status,2,c
  8030  00143E  EF82  F004         	goto	l9170
  8031  001442  0A01               	xorlw	1	; case 45
  8032  001444  B4D8               	btfsc	status,2,c
  8033  001446  EF92  F004         	goto	l9172
  8034  00144A  0A03               	xorlw	3	; case 46
  8035  00144C  B4D8               	btfsc	status,2,c
  8036  00144E  EFA2  F004         	goto	l9174
  8037  001452  0A01               	xorlw	1	; case 47
  8038  001454  B4D8               	btfsc	status,2,c
  8039  001456  EFB2  F004         	goto	l9176
  8040  00145A  0A1F               	xorlw	31	; case 48
  8041  00145C  B4D8               	btfsc	status,2,c
  8042  00145E  EFC2  F004         	goto	l9178
  8043  001462  0A01               	xorlw	1	; case 49
  8044  001464  B4D8               	btfsc	status,2,c
  8045  001466  EFD2  F004         	goto	l9180
  8046  00146A  0A03               	xorlw	3	; case 50
  8047  00146C  B4D8               	btfsc	status,2,c
  8048  00146E  EFE2  F004         	goto	l9182
  8049  001472  0A01               	xorlw	1	; case 51
  8050  001474  B4D8               	btfsc	status,2,c
  8051  001476  EFF2  F004         	goto	l9184
  8052  00147A  0A07               	xorlw	7	; case 52
  8053  00147C  B4D8               	btfsc	status,2,c
  8054  00147E  EF02  F005         	goto	l9186
  8055  001482  0A01               	xorlw	1	; case 53
  8056  001484  B4D8               	btfsc	status,2,c
  8057  001486  EF12  F005         	goto	l9188
  8058  00148A  0A03               	xorlw	3	; case 54
  8059  00148C  B4D8               	btfsc	status,2,c
  8060  00148E  EF22  F005         	goto	l9190
  8061  001492  0A01               	xorlw	1	; case 55
  8062  001494  B4D8               	btfsc	status,2,c
  8063  001496  EF32  F005         	goto	l9192
  8064  00149A  0A0F               	xorlw	15	; case 56
  8065  00149C  B4D8               	btfsc	status,2,c
  8066  00149E  EF42  F005         	goto	l9194
  8067  0014A2  0A01               	xorlw	1	; case 57
  8068  0014A4  B4D8               	btfsc	status,2,c
  8069  0014A6  EF52  F005         	goto	l9196
  8070  0014AA  0A03               	xorlw	3	; case 58
  8071  0014AC  B4D8               	btfsc	status,2,c
  8072  0014AE  EF62  F005         	goto	l9198
  8073  0014B2  0A01               	xorlw	1	; case 59
  8074  0014B4  B4D8               	btfsc	status,2,c
  8075  0014B6  EF72  F005         	goto	l9200
  8076  0014BA  0A07               	xorlw	7	; case 60
  8077  0014BC  B4D8               	btfsc	status,2,c
  8078  0014BE  EF82  F005         	goto	l9202
  8079  0014C2  0A01               	xorlw	1	; case 61
  8080  0014C4  B4D8               	btfsc	status,2,c
  8081  0014C6  EF92  F005         	goto	l9204
  8082  0014CA  0A03               	xorlw	3	; case 62
  8083  0014CC  B4D8               	btfsc	status,2,c
  8084  0014CE  EFA2  F005         	goto	l9206
  8085  0014D2  0A01               	xorlw	1	; case 63
  8086  0014D4  B4D8               	btfsc	status,2,c
  8087  0014D6  EFB2  F005         	goto	l9208
  8088  0014DA  0A7F               	xorlw	127	; case 64
  8089  0014DC  B4D8               	btfsc	status,2,c
  8090  0014DE  EFC2  F005         	goto	l9210
  8091  0014E2  0A01               	xorlw	1	; case 65
  8092  0014E4  B4D8               	btfsc	status,2,c
  8093  0014E6  EFD1  F005         	goto	l9212
  8094  0014EA  0A03               	xorlw	3	; case 66
  8095  0014EC  B4D8               	btfsc	status,2,c
  8096  0014EE  EFE0  F005         	goto	l9214
  8097  0014F2  0A01               	xorlw	1	; case 67
  8098  0014F4  B4D8               	btfsc	status,2,c
  8099  0014F6  EFEF  F005         	goto	l9216
  8100  0014FA  0A07               	xorlw	7	; case 68
  8101  0014FC  B4D8               	btfsc	status,2,c
  8102  0014FE  EFFE  F005         	goto	l9218
  8103  001502  0A01               	xorlw	1	; case 69
  8104  001504  B4D8               	btfsc	status,2,c
  8105  001506  EF0D  F006         	goto	l9220
  8106  00150A  0A03               	xorlw	3	; case 70
  8107  00150C  B4D8               	btfsc	status,2,c
  8108  00150E  EF1C  F006         	goto	l9222
  8109  001512  0A01               	xorlw	1	; case 71
  8110  001514  B4D8               	btfsc	status,2,c
  8111  001516  EF2B  F006         	goto	l9224
  8112  00151A  0A0F               	xorlw	15	; case 72
  8113  00151C  B4D8               	btfsc	status,2,c
  8114  00151E  EF3A  F006         	goto	l9226
  8115  001522  0A01               	xorlw	1	; case 73
  8116  001524  B4D8               	btfsc	status,2,c
  8117  001526  EF49  F006         	goto	l9228
  8118  00152A  0A03               	xorlw	3	; case 74
  8119  00152C  B4D8               	btfsc	status,2,c
  8120  00152E  EF58  F006         	goto	l9230
  8121  001532  0A01               	xorlw	1	; case 75
  8122  001534  B4D8               	btfsc	status,2,c
  8123  001536  EF67  F006         	goto	l9232
  8124  00153A  0A07               	xorlw	7	; case 76
  8125  00153C  B4D8               	btfsc	status,2,c
  8126  00153E  EF76  F006         	goto	l9234
  8127  001542  0A01               	xorlw	1	; case 77
  8128  001544  B4D8               	btfsc	status,2,c
  8129  001546  EF85  F006         	goto	l9236
  8130  00154A  0A03               	xorlw	3	; case 78
  8131  00154C  B4D8               	btfsc	status,2,c
  8132  00154E  EF94  F006         	goto	l9238
  8133  001552  0A01               	xorlw	1	; case 79
  8134  001554  B4D8               	btfsc	status,2,c
  8135  001556  EFA3  F006         	goto	l9240
  8136  00155A  0A1F               	xorlw	31	; case 80
  8137  00155C  B4D8               	btfsc	status,2,c
  8138  00155E  D402               	goto	l9242
  8139  001560  0A01               	xorlw	1	; case 81
  8140  001562  B4D8               	btfsc	status,2,c
  8141  001564  D40E               	goto	l9244
  8142  001566  0A03               	xorlw	3	; case 82
  8143  001568  B4D8               	btfsc	status,2,c
  8144  00156A  D41A               	goto	l9246
  8145  00156C  0A01               	xorlw	1	; case 83
  8146  00156E  B4D8               	btfsc	status,2,c
  8147  001570  D426               	goto	l9248
  8148  001572  0A07               	xorlw	7	; case 84
  8149  001574  B4D8               	btfsc	status,2,c
  8150  001576  D432               	goto	l9250
  8151  001578  0A01               	xorlw	1	; case 85
  8152  00157A  B4D8               	btfsc	status,2,c
  8153  00157C  D43E               	goto	l9252
  8154  00157E  0A03               	xorlw	3	; case 86
  8155  001580  B4D8               	btfsc	status,2,c
  8156  001582  D44A               	goto	l9254
  8157  001584  0A01               	xorlw	1	; case 87
  8158  001586  B4D8               	btfsc	status,2,c
  8159  001588  D45E               	goto	l9256
  8160  00158A  0A0F               	xorlw	15	; case 88
  8161  00158C  B4D8               	btfsc	status,2,c
  8162  00158E  D472               	goto	l9258
  8163  001590  0A01               	xorlw	1	; case 89
  8164  001592  B4D8               	btfsc	status,2,c
  8165  001594  D486               	goto	l9260
  8166  001596  0A03               	xorlw	3	; case 90
  8167  001598  B4D8               	btfsc	status,2,c
  8168  00159A  D49A               	goto	l9262
  8169  00159C  0A01               	xorlw	1	; case 91
  8170  00159E  B4D8               	btfsc	status,2,c
  8171  0015A0  D4AE               	goto	l9264
  8172  0015A2  0A07               	xorlw	7	; case 92
  8173  0015A4  B4D8               	btfsc	status,2,c
  8174  0015A6  D4C2               	goto	l9266
  8175  0015A8  0A01               	xorlw	1	; case 93
  8176  0015AA  B4D8               	btfsc	status,2,c
  8177  0015AC  D4D6               	goto	l9268
  8178  0015AE  0A03               	xorlw	3	; case 94
  8179  0015B0  B4D8               	btfsc	status,2,c
  8180  0015B2  D4EA               	goto	l9270
  8181  0015B4  0A01               	xorlw	1	; case 95
  8182  0015B6  B4D8               	btfsc	status,2,c
  8183  0015B8  D4FE               	goto	l9272
  8184  0015BA  0A3F               	xorlw	63	; case 96
  8185  0015BC  B4D8               	btfsc	status,2,c
  8186  0015BE  D512               	goto	l9274
  8187  0015C0  0A01               	xorlw	1	; case 97
  8188  0015C2  B4D8               	btfsc	status,2,c
  8189  0015C4  D526               	goto	l9276
  8190  0015C6  0A03               	xorlw	3	; case 98
  8191  0015C8  B4D8               	btfsc	status,2,c
  8192  0015CA  D53A               	goto	l9278
  8193  0015CC  0A01               	xorlw	1	; case 99
  8194  0015CE  B4D8               	btfsc	status,2,c
  8195  0015D0  D54E               	goto	l9280
  8196  0015D2  0A07               	xorlw	7	; case 100
  8197  0015D4  B4D8               	btfsc	status,2,c
  8198  0015D6  D562               	goto	l9282
  8199  0015D8  0A01               	xorlw	1	; case 101
  8200  0015DA  B4D8               	btfsc	status,2,c
  8201  0015DC  D576               	goto	l9284
  8202  0015DE  0A03               	xorlw	3	; case 102
  8203  0015E0  B4D8               	btfsc	status,2,c
  8204  0015E2  D58A               	goto	l9286
  8205  0015E4  0A01               	xorlw	1	; case 103
  8206  0015E6  B4D8               	btfsc	status,2,c
  8207  0015E8  D59E               	goto	l9288
  8208  0015EA  0A0F               	xorlw	15	; case 104
  8209  0015EC  B4D8               	btfsc	status,2,c
  8210  0015EE  D5B2               	goto	l9290
  8211  0015F0  0A01               	xorlw	1	; case 105
  8212  0015F2  B4D8               	btfsc	status,2,c
  8213  0015F4  D5C6               	goto	l9292
  8214  0015F6  0A03               	xorlw	3	; case 106
  8215  0015F8  B4D8               	btfsc	status,2,c
  8216  0015FA  D5DA               	goto	l9294
  8217  0015FC  0A01               	xorlw	1	; case 107
  8218  0015FE  B4D8               	btfsc	status,2,c
  8219  001600  D5EE               	goto	l9296
  8220  001602  0A07               	xorlw	7	; case 108
  8221  001604  B4D8               	btfsc	status,2,c
  8222  001606  D602               	goto	l9298
  8223  001608  0A01               	xorlw	1	; case 109
  8224  00160A  B4D8               	btfsc	status,2,c
  8225  00160C  D616               	goto	l9300
  8226  00160E  0A03               	xorlw	3	; case 110
  8227  001610  B4D8               	btfsc	status,2,c
  8228  001612  D62A               	goto	l9302
  8229  001614  0A01               	xorlw	1	; case 111
  8230  001616  B4D8               	btfsc	status,2,c
  8231  001618  D636               	goto	l9304
  8232  00161A  0A1F               	xorlw	31	; case 112
  8233  00161C  B4D8               	btfsc	status,2,c
  8234  00161E  D642               	goto	l9306
  8235  001620  0A01               	xorlw	1	; case 113
  8236  001622  B4D8               	btfsc	status,2,c
  8237  001624  D64E               	goto	l516
  8238  001626  0A03               	xorlw	3	; case 114
  8239  001628  B4D8               	btfsc	status,2,c
  8240  00162A  D65A               	goto	l9308
  8241  00162C  0A01               	xorlw	1	; case 115
  8242  00162E  B4D8               	btfsc	status,2,c
  8243  001630  D666               	goto	l9310
  8244  001632  0A07               	xorlw	7	; case 116
  8245  001634  B4D8               	btfsc	status,2,c
  8246  001636  D672               	goto	l9312
  8247  001638  0A01               	xorlw	1	; case 117
  8248  00163A  B4D8               	btfsc	status,2,c
  8249  00163C  D678               	goto	l9316
  8250  00163E  0A03               	xorlw	3	; case 118
  8251  001640  B4D8               	btfsc	status,2,c
  8252  001642  D688               	goto	l9318
  8253  001644  0A01               	xorlw	1	; case 119
  8254  001646  B4D8               	btfsc	status,2,c
  8255  001648  D694               	goto	l9320
  8256  00164A  D6A2               	goto	l9322
  8257  00164C                     l9328:
  8258  00164C  0432               	decf	_vscp_page_select,w,c
  8259  00164E  1033               	iorwf	_vscp_page_select+1,w,c
  8260  001650  A4D8               	btfss	status,2,c
  8261  001652  D019               	goto	l9336
  8262                           
  8263                           ;main.c: 2525: if (reg < 0x48) {
  8264  001654  0E48               	movlw	72
  8265  001656  5C2B               	subwf	vscp_writeAppReg@reg,w,c
  8266  001658  B0D8               	btfsc	status,0,c
  8267  00165A  D015               	goto	l9336
  8268                           
  8269                           ;main.c: 2526: writeEEPROM(0xAA + reg, val);
  8270  00165C  0EAA               	movlw	170
  8271  00165E  242B               	addwf	vscp_writeAppReg@reg,w,c
  8272  001660  6E18               	movwf	writeEEPROM@address,c
  8273  001662  6A19               	clrf	writeEEPROM@address+1,c
  8274  001664  0E00               	movlw	0
  8275  001666  2219               	addwfc	writeEEPROM@address+1,f,c
  8276  001668  C02A  F01A         	movff	vscp_writeAppReg@val,writeEEPROM@data
  8277  00166C  EC8E  F039         	call	_writeEEPROM	;wreg free
  8278                           
  8279                           ;main.c: 2527: rv = readEEPROM(0xAA + reg );
  8280  001670  0EAA               	movlw	170
  8281  001672  242B               	addwf	vscp_writeAppReg@reg,w,c
  8282  001674  6E1E               	movwf	readEEPROM@address,c
  8283  001676  6A1F               	clrf	readEEPROM@address+1,c
  8284  001678  0E00               	movlw	0
  8285  00167A  221F               	addwfc	readEEPROM@address+1,f,c
  8286  00167C  EC6F  F03A         	call	_readEEPROM	;wreg free
  8287  001680  6E2C               	movwf	vscp_writeAppReg@rv,c
  8288                           
  8289                           ;main.c: 2528: writeCoeffs2Ram();
  8290  001682  EC2D  F033         	call	_writeCoeffs2Ram	;wreg free
  8291  001686                     l9336:
  8292                           
  8293                           ;main.c: 2529: }
  8294                           ;main.c: 2530: }
  8295                           ;main.c: 2532: return rv;
  8296  001686  502C               	movf	vscp_writeAppReg@rv,w,c
  8297  001688  0012               	return	
  8298  00168A                     __end_of_vscp_writeAppReg:
  8299                           	opt stack 0
  8300                           tblptru	equ	0xFF8
  8301                           prodh	equ	0xFF4
  8302                           prodl	equ	0xFF3
  8303                           postinc0	equ	0xFEE
  8304                           wreg	equ	0xFE8
  8305                           postdec1	equ	0xFE5
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           indf2	equ	0xFDF
  8309                           fsr2h	equ	0xFDA
  8310                           fsr2l	equ	0xFD9
  8311                           status	equ	0xFD8
  8312                           
  8313 ;; *************** function _vscp_readRegister *****************
  8314 ;; Defined at:
  8315 ;;		line 549 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  reg             1    wreg     unsigned char 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  reg             1   39[COMRAM] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      unsigned char 
  8322 ;; Registers used:
  8323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8329 ;;      Params:         0       0       0       0       0       0       0
  8330 ;;      Locals:         1       0       0       0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0
  8332 ;;      Totals:         1       0       0       0       0       0       0
  8333 ;;Total ram usage:        1 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    5
  8336 ;; This function calls:
  8337 ;;		_vscp_readAppReg
  8338 ;;		_vscp_readStdReg
  8339 ;; This function is called by:
  8340 ;;		_vscp_handleProtocolEvent
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text12
  8345  0073D6                     __ptext12:
  8346                           	opt stack 0
  8347  0073D6                     _vscp_readRegister:
  8348                           	opt stack 24
  8349                           
  8350                           ;incstack = 0
  8351                           ;vscp_readRegister@reg stored from wreg
  8352  0073D6  6E28               	movwf	vscp_readRegister@reg,c
  8353                           
  8354                           ;vscp_firmware.c: 551: if (reg >= 0x80) {
  8355  0073D8  0E7F               	movlw	127
  8356  0073DA  6428               	cpfsgt	vscp_readRegister@reg,c
  8357  0073DC  D004               	goto	l9806
  8358                           
  8359                           ;vscp_firmware.c: 552: return vscp_readStdReg(reg);
  8360  0073DE  5028               	movf	vscp_readRegister@reg,w,c
  8361  0073E0  ECBF  F030         	call	_vscp_readStdReg
  8362  0073E4  D003               	goto	l1077
  8363  0073E6                     l9806:
  8364                           
  8365                           ;vscp_firmware.c: 554: return vscp_readAppReg(reg);
  8366  0073E6  5028               	movf	vscp_readRegister@reg,w,c
  8367  0073E8  ECEF  F017         	call	_vscp_readAppReg
  8368  0073EC                     l1077:
  8369  0073EC  0012               	return	
  8370  0073EE                     __end_of_vscp_readRegister:
  8371                           	opt stack 0
  8372                           tblptru	equ	0xFF8
  8373                           prodh	equ	0xFF4
  8374                           prodl	equ	0xFF3
  8375                           postinc0	equ	0xFEE
  8376                           wreg	equ	0xFE8
  8377                           postdec1	equ	0xFE5
  8378                           fsr1h	equ	0xFE2
  8379                           fsr1l	equ	0xFE1
  8380                           indf2	equ	0xFDF
  8381                           fsr2h	equ	0xFDA
  8382                           fsr2l	equ	0xFD9
  8383                           status	equ	0xFD8
  8384                           
  8385 ;; *************** function _vscp_readStdReg *****************
  8386 ;; Defined at:
  8387 ;;		line 562 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  reg             1    wreg     unsigned char 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  reg             1   37[COMRAM] unsigned char 
  8392 ;;  rv              1   36[COMRAM] unsigned char 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  1    wreg      unsigned char 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8402 ;;      Params:         0       0       0       0       0       0       0
  8403 ;;      Locals:         2       0       0       0       0       0       0
  8404 ;;      Temps:          3       0       0       0       0       0       0
  8405 ;;      Totals:         5       0       0       0       0       0       0
  8406 ;;Total ram usage:        5 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    4
  8409 ;; This function calls:
  8410 ;;		_vscp_getBootLoaderAlgorithm
  8411 ;;		_vscp_getBufferSize
  8412 ;;		_vscp_getGUID
  8413 ;;		_vscp_getMDF_URL
  8414 ;;		_vscp_getMajorVersion
  8415 ;;		_vscp_getManufacturerId
  8416 ;;		_vscp_getMinorVersion
  8417 ;;		_vscp_getRegisterPagesUsed
  8418 ;;		_vscp_getSubMinorVersion
  8419 ;;		_vscp_getUserID
  8420 ;; This function is called by:
  8421 ;;		_vscp_readRegister
  8422 ;;		_vscp_handleProtocolEvent
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text13
  8427  00617E                     __ptext13:
  8428                           	opt stack 0
  8429  00617E                     _vscp_readStdReg:
  8430                           	opt stack 25
  8431                           
  8432                           ;incstack = 0
  8433                           ;vscp_readStdReg@reg stored from wreg
  8434  00617E  6E26               	movwf	vscp_readStdReg@reg,c
  8435                           
  8436                           ;vscp_firmware.c: 564: uint8_t rv = 0;
  8437  006180  0E00               	movlw	0
  8438  006182  6E25               	movwf	vscp_readStdReg@rv,c
  8439                           
  8440                           ;vscp_firmware.c: 566: if (0x80 == reg) {
  8441  006184  5026               	movf	vscp_readStdReg@reg,w,c
  8442  006186  0A80               	xorlw	128
  8443  006188  A4D8               	btfss	status,2,c
  8444  00618A  D006               	goto	l9382
  8445                           
  8446                           ;vscp_firmware.c: 569: rv = vscp_alarmstatus;
  8447  00618C  C0CF  F025         	movff	_vscp_alarmstatus,vscp_readStdReg@rv
  8448                           
  8449                           ;vscp_firmware.c: 570: vscp_alarmstatus = 0x00;
  8450  006190  0E00               	movlw	0
  8451  006192  0100               	movlb	0	; () banked
  8452  006194  6FCF               	movwf	_vscp_alarmstatus& (0+255),b
  8453                           
  8454                           ;vscp_firmware.c: 572: }
  8455  006196  D07B               	goto	l9448
  8456  006198                     l9382:
  8457                           
  8458                           ;vscp_firmware.c: 573: else if (0x81 == reg) {
  8459  006198  5026               	movf	vscp_readStdReg@reg,w,c
  8460  00619A  0A81               	xorlw	129
  8461  00619C  A4D8               	btfss	status,2,c
  8462  00619E  D002               	goto	l9386
  8463                           
  8464                           ;vscp_firmware.c: 576: rv = 1;
  8465  0061A0  0E01               	movlw	1
  8466  0061A2  D074               	goto	L129
  8467  0061A4                     l9386:
  8468                           
  8469                           ;vscp_firmware.c: 579: else if (0x82 == reg) {
  8470  0061A4  5026               	movf	vscp_readStdReg@reg,w,c
  8471  0061A6  0A82               	xorlw	130
  8472  0061A8  A4D8               	btfss	status,2,c
  8473  0061AA  D002               	goto	l9390
  8474                           
  8475                           ;vscp_firmware.c: 582: rv = 5;
  8476  0061AC  0E05               	movlw	5
  8477  0061AE  D06E               	goto	L129
  8478  0061B0                     l9390:
  8479                           
  8480                           ;vscp_firmware.c: 585: else if (0x83 == reg) {
  8481  0061B0  5026               	movf	vscp_readStdReg@reg,w,c
  8482  0061B2  0A83               	xorlw	131
  8483  0061B4  A4D8               	btfss	status,2,c
  8484  0061B6  D002               	goto	l9394
  8485                           
  8486                           ;vscp_firmware.c: 588: rv = 0;
  8487  0061B8  0E00               	movlw	0
  8488  0061BA  D068               	goto	L129
  8489  0061BC                     l9394:
  8490                           
  8491                           ;vscp_firmware.c: 591: else if (0x94 == reg) {
  8492  0061BC  5026               	movf	vscp_readStdReg@reg,w,c
  8493  0061BE  0A94               	xorlw	148
  8494  0061C0  A4D8               	btfss	status,2,c
  8495  0061C2  D003               	goto	l9398
  8496                           
  8497                           ;vscp_firmware.c: 594: rv = vscp_getMajorVersion();
  8498  0061C4  ECAB  F03A         	call	_vscp_getMajorVersion	;wreg free
  8499  0061C8  D061               	goto	L129
  8500  0061CA                     l9398:
  8501                           
  8502                           ;vscp_firmware.c: 597: else if (0x95 == reg) {
  8503  0061CA  5026               	movf	vscp_readStdReg@reg,w,c
  8504  0061CC  0A95               	xorlw	149
  8505  0061CE  A4D8               	btfss	status,2,c
  8506  0061D0  D003               	goto	l9402
  8507                           
  8508                           ;vscp_firmware.c: 600: rv = vscp_getMinorVersion();
  8509  0061D2  ECA9  F03A         	call	_vscp_getMinorVersion	;wreg free
  8510  0061D6  D05A               	goto	L129
  8511  0061D8                     l9402:
  8512                           
  8513                           ;vscp_firmware.c: 603: else if (0x96 == reg) {
  8514  0061D8  5026               	movf	vscp_readStdReg@reg,w,c
  8515  0061DA  0A96               	xorlw	150
  8516  0061DC  A4D8               	btfss	status,2,c
  8517  0061DE  D003               	goto	l9406
  8518                           
  8519                           ;vscp_firmware.c: 606: rv = vscp_getSubMinorVersion();
  8520  0061E0  ECA5  F03A         	call	_vscp_getSubMinorVersion	;wreg free
  8521  0061E4  D053               	goto	L129
  8522  0061E6                     l9406:
  8523                           
  8524                           ;vscp_firmware.c: 609: else if (reg < 0x89) {
  8525  0061E6  0E89               	movlw	137
  8526  0061E8  5C26               	subwf	vscp_readStdReg@reg,w,c
  8527  0061EA  B0D8               	btfsc	status,0,c
  8528  0061EC  D005               	goto	l9410
  8529                           
  8530                           ;vscp_firmware.c: 612: rv = vscp_getUserID(reg - 0x84);
  8531  0061EE  5026               	movf	vscp_readStdReg@reg,w,c
  8532  0061F0  0F7C               	addlw	124
  8533  0061F2  EC0E  F03A         	call	_vscp_getUserID
  8534  0061F6  D04A               	goto	L129
  8535  0061F8                     l9410:
  8536                           
  8537                           ;vscp_firmware.c: 615: else if ((reg > 0x88) &&
  8538                           ;vscp_firmware.c: 616: (reg < 0x91)) {
  8539  0061F8  0E88               	movlw	136
  8540  0061FA  6426               	cpfsgt	vscp_readStdReg@reg,c
  8541  0061FC  D009               	goto	l9416
  8542  0061FE  0E91               	movlw	145
  8543  006200  5C26               	subwf	vscp_readStdReg@reg,w,c
  8544  006202  B0D8               	btfsc	status,0,c
  8545  006204  D005               	goto	l9416
  8546                           
  8547                           ;vscp_firmware.c: 619: rv = vscp_getManufacturerId(reg - 0x89);
  8548  006206  5026               	movf	vscp_readStdReg@reg,w,c
  8549  006208  0F77               	addlw	119
  8550  00620A  EC18  F03A         	call	_vscp_getManufacturerId
  8551  00620E  D03E               	goto	L129
  8552  006210                     l9416:
  8553                           
  8554                           ;vscp_firmware.c: 622: else if (0x91 == reg) {
  8555  006210  5026               	movf	vscp_readStdReg@reg,w,c
  8556  006212  0A91               	xorlw	145
  8557  006214  A4D8               	btfss	status,2,c
  8558  006216  D003               	goto	l9420
  8559                           
  8560                           ;vscp_firmware.c: 625: rv = vscp_nickname;
  8561  006218  C0D2  F025         	movff	_vscp_nickname,vscp_readStdReg@rv
  8562                           
  8563                           ;vscp_firmware.c: 627: }
  8564  00621C  D038               	goto	l9448
  8565  00621E                     l9420:
  8566                           
  8567                           ;vscp_firmware.c: 628: else if (0x93 == reg) {
  8568  00621E  5026               	movf	vscp_readStdReg@reg,w,c
  8569  006220  0A93               	xorlw	147
  8570  006222  A4D8               	btfss	status,2,c
  8571  006224  D003               	goto	l9424
  8572                           
  8573                           ;vscp_firmware.c: 631: rv = (vscp_page_select & 0xff);
  8574  006226  C032  F025         	movff	_vscp_page_select,vscp_readStdReg@rv
  8575                           
  8576                           ;vscp_firmware.c: 633: }
  8577  00622A  D031               	goto	l9448
  8578  00622C                     l9424:
  8579                           
  8580                           ;vscp_firmware.c: 635: else if (0x92 == reg) {
  8581  00622C  5026               	movf	vscp_readStdReg@reg,w,c
  8582  00622E  0A92               	xorlw	146
  8583  006230  A4D8               	btfss	status,2,c
  8584  006232  D007               	goto	l9428
  8585                           
  8586                           ;vscp_firmware.c: 638: rv = (vscp_page_select >> 8) & 0xff;
  8587  006234  C033  F022         	movff	_vscp_page_select+1,??_vscp_readStdReg
  8588  006238  C022  F023         	movff	??_vscp_readStdReg,??_vscp_readStdReg+1
  8589  00623C  6A24               	clrf	(??_vscp_readStdReg+2)& (0+255),c
  8590  00623E  5023               	movf	??_vscp_readStdReg+1,w,c
  8591  006240  D025               	goto	L129
  8592  006242                     l9428:
  8593                           
  8594                           ;vscp_firmware.c: 641: else if (0x97 == reg) {
  8595  006242  5026               	movf	vscp_readStdReg@reg,w,c
  8596  006244  0A97               	xorlw	151
  8597  006246  A4D8               	btfss	status,2,c
  8598  006248  D003               	goto	l9432
  8599                           
  8600                           ;vscp_firmware.c: 643: rv = vscp_getBootLoaderAlgorithm();
  8601  00624A  ECAF  F03A         	call	_vscp_getBootLoaderAlgorithm	;wreg free
  8602  00624E  D01E               	goto	L129
  8603  006250                     l9432:
  8604                           
  8605                           ;vscp_firmware.c: 645: else if (0x98 == reg) {
  8606  006250  5026               	movf	vscp_readStdReg@reg,w,c
  8607  006252  0A98               	xorlw	152
  8608  006254  A4D8               	btfss	status,2,c
  8609  006256  D003               	goto	l9436
  8610                           
  8611                           ;vscp_firmware.c: 647: rv = vscp_getBufferSize();
  8612  006258  ECAD  F03A         	call	_vscp_getBufferSize	;wreg free
  8613  00625C  D017               	goto	L129
  8614  00625E                     l9436:
  8615                           
  8616                           ;vscp_firmware.c: 649: else if (0x99 == reg) {
  8617  00625E  5026               	movf	vscp_readStdReg@reg,w,c
  8618  006260  0A99               	xorlw	153
  8619  006262  A4D8               	btfss	status,2,c
  8620  006264  D003               	goto	l9440
  8621                           
  8622                           ;vscp_firmware.c: 651: rv = vscp_getRegisterPagesUsed();
  8623  006266  ECA7  F03A         	call	_vscp_getRegisterPagesUsed	;wreg free
  8624  00626A  D010               	goto	L129
  8625  00626C                     l9440:
  8626                           
  8627                           ;vscp_firmware.c: 653: else if ((reg > (0xD0 - 1)) &&
  8628                           ;vscp_firmware.c: 654: (reg < 0xE0)) {
  8629  00626C  0ECF               	movlw	207
  8630  00626E  6426               	cpfsgt	vscp_readStdReg@reg,c
  8631  006270  D009               	goto	l9446
  8632  006272  0EE0               	movlw	224
  8633  006274  5C26               	subwf	vscp_readStdReg@reg,w,c
  8634  006276  B0D8               	btfsc	status,0,c
  8635  006278  D005               	goto	l9446
  8636                           
  8637                           ;vscp_firmware.c: 657: rv = vscp_getGUID(reg - 0xD0);
  8638  00627A  5026               	movf	vscp_readStdReg@reg,w,c
  8639  00627C  0F30               	addlw	48
  8640  00627E  EC22  F03A         	call	_vscp_getGUID
  8641  006282  D004               	goto	L129
  8642  006284                     l9446:
  8643                           
  8644                           ;vscp_firmware.c: 660: else {
  8645                           ;vscp_firmware.c: 663: rv = vscp_getMDF_URL(reg - 0xE0);
  8646  006284  5026               	movf	vscp_readStdReg@reg,w,c
  8647  006286  0F20               	addlw	32
  8648  006288  ECF7  F039         	call	_vscp_getMDF_URL
  8649  00628C                     L129:
  8650  00628C  6E25               	movwf	vscp_readStdReg@rv,c
  8651  00628E                     l9448:
  8652                           
  8653                           ;vscp_firmware.c: 665: }
  8654                           ;vscp_firmware.c: 667: return rv;
  8655  00628E  5025               	movf	vscp_readStdReg@rv,w,c
  8656  006290  0012               	return	
  8657  006292                     __end_of_vscp_readStdReg:
  8658                           	opt stack 0
  8659                           tblptru	equ	0xFF8
  8660                           prodh	equ	0xFF4
  8661                           prodl	equ	0xFF3
  8662                           postinc0	equ	0xFEE
  8663                           wreg	equ	0xFE8
  8664                           postdec1	equ	0xFE5
  8665                           fsr1h	equ	0xFE2
  8666                           fsr1l	equ	0xFE1
  8667                           indf2	equ	0xFDF
  8668                           fsr2h	equ	0xFDA
  8669                           fsr2l	equ	0xFD9
  8670                           status	equ	0xFD8
  8671                           
  8672 ;; *************** function _vscp_getUserID *****************
  8673 ;; Defined at:
  8674 ;;		line 2607 in file "../main.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  idx             1    wreg     unsigned char 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  idx             1   32[COMRAM] unsigned char 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  1    wreg      unsigned char 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2, status,0, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8688 ;;      Params:         0       0       0       0       0       0       0
  8689 ;;      Locals:         1       0       0       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0
  8691 ;;      Totals:         1       0       0       0       0       0       0
  8692 ;;Total ram usage:        1 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    3
  8695 ;; This function calls:
  8696 ;;		_readEEPROM
  8697 ;; This function is called by:
  8698 ;;		_vscp_readStdReg
  8699 ;;		_vscp_writeStdReg
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text14
  8704  00741C                     __ptext14:
  8705                           	opt stack 0
  8706  00741C                     _vscp_getUserID:
  8707                           	opt stack 25
  8708                           
  8709                           ;incstack = 0
  8710                           ;vscp_getUserID@idx stored from wreg
  8711  00741C  6E21               	movwf	vscp_getUserID@idx,c
  8712                           
  8713                           ;main.c: 2609: return readEEPROM(0x04 + idx);
  8714  00741E  0E04               	movlw	4
  8715  007420  2421               	addwf	vscp_getUserID@idx,w,c
  8716  007422  6E1E               	movwf	readEEPROM@address,c
  8717  007424  6A1F               	clrf	readEEPROM@address+1,c
  8718  007426  0E00               	movlw	0
  8719  007428  221F               	addwfc	readEEPROM@address+1,f,c
  8720  00742A  EC6F  F03A         	call	_readEEPROM	;wreg free
  8721  00742E  0012               	return	
  8722  007430                     __end_of_vscp_getUserID:
  8723                           	opt stack 0
  8724                           tblptru	equ	0xFF8
  8725                           prodh	equ	0xFF4
  8726                           prodl	equ	0xFF3
  8727                           postinc0	equ	0xFEE
  8728                           wreg	equ	0xFE8
  8729                           postdec1	equ	0xFE5
  8730                           fsr1h	equ	0xFE2
  8731                           fsr1l	equ	0xFE1
  8732                           indf2	equ	0xFDF
  8733                           fsr2h	equ	0xFDA
  8734                           fsr2l	equ	0xFD9
  8735                           status	equ	0xFD8
  8736                           
  8737 ;; *************** function _vscp_getSubMinorVersion *****************
  8738 ;; Defined at:
  8739 ;;		line 2564 in file "../main.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;		None
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      unsigned char 
  8746 ;; Registers used:
  8747 ;;		wreg
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8753 ;;      Params:         0       0       0       0       0       0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0
  8755 ;;      Temps:          0       0       0       0       0       0       0
  8756 ;;      Totals:         0       0       0       0       0       0       0
  8757 ;;Total ram usage:        0 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    2
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_vscp_readStdReg
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text15
  8768  00754A                     __ptext15:
  8769                           	opt stack 0
  8770  00754A                     _vscp_getSubMinorVersion:
  8771                           	opt stack 26
  8772                           
  8773                           ;main.c: 2566: return 1;
  8774                           
  8775                           ;incstack = 0
  8776  00754A  0E01               	movlw	1
  8777  00754C  0012               	return	
  8778  00754E                     __end_of_vscp_getSubMinorVersion:
  8779                           	opt stack 0
  8780                           tblptru	equ	0xFF8
  8781                           prodh	equ	0xFF4
  8782                           prodl	equ	0xFF3
  8783                           postinc0	equ	0xFEE
  8784                           wreg	equ	0xFE8
  8785                           postdec1	equ	0xFE5
  8786                           fsr1h	equ	0xFE2
  8787                           fsr1l	equ	0xFE1
  8788                           indf2	equ	0xFDF
  8789                           fsr2h	equ	0xFDA
  8790                           fsr2l	equ	0xFD9
  8791                           status	equ	0xFD8
  8792                           
  8793 ;; *************** function _vscp_getRegisterPagesUsed *****************
  8794 ;; Defined at:
  8795 ;;		line 2703 in file "../main.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;		None
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  1    wreg      unsigned char 
  8802 ;; Registers used:
  8803 ;;		wreg
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8809 ;;      Params:         0       0       0       0       0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0
  8812 ;;      Totals:         0       0       0       0       0       0       0
  8813 ;;Total ram usage:        0 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:    2
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;;		_vscp_readStdReg
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text16
  8824  00754E                     __ptext16:
  8825                           	opt stack 0
  8826  00754E                     _vscp_getRegisterPagesUsed:
  8827                           	opt stack 26
  8828                           
  8829                           ;main.c: 2705: return 1;
  8830                           
  8831                           ;incstack = 0
  8832  00754E  0E01               	movlw	1
  8833  007550  0012               	return	
  8834  007552                     __end_of_vscp_getRegisterPagesUsed:
  8835                           	opt stack 0
  8836                           tblptru	equ	0xFF8
  8837                           prodh	equ	0xFF4
  8838                           prodl	equ	0xFF3
  8839                           postinc0	equ	0xFEE
  8840                           wreg	equ	0xFE8
  8841                           postdec1	equ	0xFE5
  8842                           fsr1h	equ	0xFE2
  8843                           fsr1l	equ	0xFE1
  8844                           indf2	equ	0xFDF
  8845                           fsr2h	equ	0xFDA
  8846                           fsr2l	equ	0xFD9
  8847                           status	equ	0xFD8
  8848                           
  8849 ;; *************** function _vscp_getMinorVersion *****************
  8850 ;; Defined at:
  8851 ;;		line 2555 in file "../main.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;		None
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      unsigned char 
  8858 ;; Registers used:
  8859 ;;		wreg
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8865 ;;      Params:         0       0       0       0       0       0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0
  8867 ;;      Temps:          0       0       0       0       0       0       0
  8868 ;;      Totals:         0       0       0       0       0       0       0
  8869 ;;Total ram usage:        0 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    2
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_vscp_readStdReg
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text17
  8880  007552                     __ptext17:
  8881                           	opt stack 0
  8882  007552                     _vscp_getMinorVersion:
  8883                           	opt stack 26
  8884                           
  8885                           ;main.c: 2557: return 0;
  8886                           
  8887                           ;incstack = 0
  8888  007552  0E00               	movlw	0
  8889  007554  0012               	return	
  8890  007556                     __end_of_vscp_getMinorVersion:
  8891                           	opt stack 0
  8892                           tblptru	equ	0xFF8
  8893                           prodh	equ	0xFF4
  8894                           prodl	equ	0xFF3
  8895                           postinc0	equ	0xFEE
  8896                           wreg	equ	0xFE8
  8897                           postdec1	equ	0xFE5
  8898                           fsr1h	equ	0xFE2
  8899                           fsr1l	equ	0xFE1
  8900                           indf2	equ	0xFDF
  8901                           fsr2h	equ	0xFDA
  8902                           fsr2l	equ	0xFD9
  8903                           status	equ	0xFD8
  8904                           
  8905 ;; *************** function _vscp_getManufacturerId *****************
  8906 ;; Defined at:
  8907 ;;		line 2627 in file "../main.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  idx             1    wreg     unsigned char 
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;  idx             1   32[COMRAM] unsigned char 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      unsigned char 
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, status,0, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8921 ;;      Params:         0       0       0       0       0       0       0
  8922 ;;      Locals:         1       0       0       0       0       0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0
  8924 ;;      Totals:         1       0       0       0       0       0       0
  8925 ;;Total ram usage:        1 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    3
  8928 ;; This function calls:
  8929 ;;		_readEEPROM
  8930 ;; This function is called by:
  8931 ;;		_vscp_readStdReg
  8932 ;;		_vscp_writeStdReg
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           	psect	text18
  8937  007430                     __ptext18:
  8938                           	opt stack 0
  8939  007430                     _vscp_getManufacturerId:
  8940                           	opt stack 25
  8941                           
  8942                           ;incstack = 0
  8943                           ;vscp_getManufacturerId@idx stored from wreg
  8944  007430  6E21               	movwf	vscp_getManufacturerId@idx,c
  8945                           
  8946                           ;main.c: 2629: return readEEPROM(0x09 + idx);
  8947  007432  0E09               	movlw	9
  8948  007434  2421               	addwf	vscp_getManufacturerId@idx,w,c
  8949  007436  6E1E               	movwf	readEEPROM@address,c
  8950  007438  6A1F               	clrf	readEEPROM@address+1,c
  8951  00743A  0E00               	movlw	0
  8952  00743C  221F               	addwfc	readEEPROM@address+1,f,c
  8953  00743E  EC6F  F03A         	call	_readEEPROM	;wreg free
  8954  007442  0012               	return	
  8955  007444                     __end_of_vscp_getManufacturerId:
  8956                           	opt stack 0
  8957                           tblptru	equ	0xFF8
  8958                           prodh	equ	0xFF4
  8959                           prodl	equ	0xFF3
  8960                           postinc0	equ	0xFEE
  8961                           wreg	equ	0xFE8
  8962                           postdec1	equ	0xFE5
  8963                           fsr1h	equ	0xFE2
  8964                           fsr1l	equ	0xFE1
  8965                           indf2	equ	0xFDF
  8966                           fsr2h	equ	0xFDA
  8967                           fsr2l	equ	0xFD9
  8968                           status	equ	0xFD8
  8969                           
  8970 ;; *************** function _vscp_getMajorVersion *****************
  8971 ;; Defined at:
  8972 ;;		line 2546 in file "../main.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      unsigned char 
  8979 ;; Registers used:
  8980 ;;		wreg
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8986 ;;      Params:         0       0       0       0       0       0       0
  8987 ;;      Locals:         0       0       0       0       0       0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0
  8989 ;;      Totals:         0       0       0       0       0       0       0
  8990 ;;Total ram usage:        0 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; Hardware stack levels required when called:    2
  8993 ;; This function calls:
  8994 ;;		Nothing
  8995 ;; This function is called by:
  8996 ;;		_vscp_readStdReg
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text19
  9001  007556                     __ptext19:
  9002                           	opt stack 0
  9003  007556                     _vscp_getMajorVersion:
  9004                           	opt stack 26
  9005                           
  9006                           ;main.c: 2548: return 1;
  9007                           
  9008                           ;incstack = 0
  9009  007556  0E01               	movlw	1
  9010  007558  0012               	return	
  9011  00755A                     __end_of_vscp_getMajorVersion:
  9012                           	opt stack 0
  9013                           tblptru	equ	0xFF8
  9014                           prodh	equ	0xFF4
  9015                           prodl	equ	0xFF3
  9016                           postinc0	equ	0xFEE
  9017                           wreg	equ	0xFE8
  9018                           postdec1	equ	0xFE5
  9019                           fsr1h	equ	0xFE2
  9020                           fsr1l	equ	0xFE1
  9021                           indf2	equ	0xFDF
  9022                           fsr2h	equ	0xFDA
  9023                           fsr2l	equ	0xFD9
  9024                           status	equ	0xFD8
  9025                           
  9026 ;; *************** function _vscp_getMDF_URL *****************
  9027 ;; Defined at:
  9028 ;;		line 2598 in file "../main.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  idx             1    wreg     unsigned char 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  idx             1   23[COMRAM] unsigned char 
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      unsigned char 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9042 ;;      Params:         0       0       0       0       0       0       0
  9043 ;;      Locals:         1       0       0       0       0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0
  9045 ;;      Totals:         1       0       0       0       0       0       0
  9046 ;;Total ram usage:        1 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; Hardware stack levels required when called:    2
  9049 ;; This function calls:
  9050 ;;		Nothing
  9051 ;; This function is called by:
  9052 ;;		_vscp_readStdReg
  9053 ;;		_vscp_handleProtocolEvent
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text20
  9058  0073EE                     __ptext20:
  9059                           	opt stack 0
  9060  0073EE                     _vscp_getMDF_URL:
  9061                           	opt stack 26
  9062                           
  9063                           ;incstack = 0
  9064                           ;vscp_getMDF_URL@idx stored from wreg
  9065  0073EE  6E18               	movwf	vscp_getMDF_URL@idx,c
  9066                           
  9067                           ;main.c: 2600: return vscp_deviceURL[ idx ];
  9068  0073F0  5018               	movf	vscp_getMDF_URL@idx,w,c
  9069  0073F2  0D01               	mullw	1
  9070  0073F4  0E01               	movlw	low _vscp_deviceURL
  9071  0073F6  24F3               	addwf	prodl,w,c
  9072  0073F8  6EF6               	movwf	tblptrl,c
  9073  0073FA  0E06               	movlw	high _vscp_deviceURL
  9074  0073FC  20F4               	addwfc	prodh,w,c
  9075  0073FE  6EF7               	movwf	tblptrh,c
  9076  007400                     	if	0	;There are less than 3 active tblptr bytes
  9077  007400                     	endif
  9078  007400  0008               	tblrd		*
  9079  007402  50F5               	movf	tablat,w,c
  9080  007404  0012               	return	
  9081  007406                     __end_of_vscp_getMDF_URL:
  9082                           	opt stack 0
  9083                           tblptru	equ	0xFF8
  9084                           tblptrh	equ	0xFF7
  9085                           tblptrl	equ	0xFF6
  9086                           tablat	equ	0xFF5
  9087                           prodh	equ	0xFF4
  9088                           prodl	equ	0xFF3
  9089                           postinc0	equ	0xFEE
  9090                           wreg	equ	0xFE8
  9091                           postdec1	equ	0xFE5
  9092                           fsr1h	equ	0xFE2
  9093                           fsr1l	equ	0xFE1
  9094                           indf2	equ	0xFDF
  9095                           fsr2h	equ	0xFDA
  9096                           fsr2l	equ	0xFD9
  9097                           status	equ	0xFD8
  9098                           
  9099 ;; *************** function _vscp_getGUID *****************
  9100 ;; Defined at:
  9101 ;;		line 2575 in file "../main.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;  idx             1    wreg     unsigned char 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;  idx             1   32[COMRAM] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      unsigned char 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9115 ;;      Params:         0       0       0       0       0       0       0
  9116 ;;      Locals:         1       0       0       0       0       0       0
  9117 ;;      Temps:          0       0       0       0       0       0       0
  9118 ;;      Totals:         1       0       0       0       0       0       0
  9119 ;;Total ram usage:        1 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    3
  9122 ;; This function calls:
  9123 ;;		_readEEPROM
  9124 ;; This function is called by:
  9125 ;;		_vscp_readStdReg
  9126 ;;		_vscp_writeStdReg
  9127 ;;		_vscp_handleProtocolEvent
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text21
  9132  007444                     __ptext21:
  9133                           	opt stack 0
  9134  007444                     _vscp_getGUID:
  9135                           	opt stack 25
  9136                           
  9137                           ;incstack = 0
  9138                           ;vscp_getGUID@idx stored from wreg
  9139  007444  6E21               	movwf	vscp_getGUID@idx,c
  9140                           
  9141                           ;main.c: 2577: return readEEPROM(0x11 + idx);
  9142  007446  0E11               	movlw	17
  9143  007448  2421               	addwf	vscp_getGUID@idx,w,c
  9144  00744A  6E1E               	movwf	readEEPROM@address,c
  9145  00744C  6A1F               	clrf	readEEPROM@address+1,c
  9146  00744E  0E00               	movlw	0
  9147  007450  221F               	addwfc	readEEPROM@address+1,f,c
  9148  007452  EC6F  F03A         	call	_readEEPROM	;wreg free
  9149  007456  0012               	return	
  9150  007458                     __end_of_vscp_getGUID:
  9151                           	opt stack 0
  9152                           tblptru	equ	0xFF8
  9153                           tblptrh	equ	0xFF7
  9154                           tblptrl	equ	0xFF6
  9155                           tablat	equ	0xFF5
  9156                           prodh	equ	0xFF4
  9157                           prodl	equ	0xFF3
  9158                           postinc0	equ	0xFEE
  9159                           wreg	equ	0xFE8
  9160                           postdec1	equ	0xFE5
  9161                           fsr1h	equ	0xFE2
  9162                           fsr1l	equ	0xFE1
  9163                           indf2	equ	0xFDF
  9164                           fsr2h	equ	0xFDA
  9165                           fsr2l	equ	0xFD9
  9166                           status	equ	0xFD8
  9167                           
  9168 ;; *************** function _vscp_getBufferSize *****************
  9169 ;; Defined at:
  9170 ;;		line 2656 in file "../main.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;		None
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;		None
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      unsigned char 
  9177 ;; Registers used:
  9178 ;;		wreg
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9184 ;;      Params:         0       0       0       0       0       0       0
  9185 ;;      Locals:         0       0       0       0       0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0
  9187 ;;      Totals:         0       0       0       0       0       0       0
  9188 ;;Total ram usage:        0 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    2
  9191 ;; This function calls:
  9192 ;;		Nothing
  9193 ;; This function is called by:
  9194 ;;		_vscp_readStdReg
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text22
  9199  00755A                     __ptext22:
  9200                           	opt stack 0
  9201  00755A                     _vscp_getBufferSize:
  9202                           	opt stack 26
  9203                           
  9204                           ;main.c: 2658: return 8;
  9205                           
  9206                           ;incstack = 0
  9207  00755A  0E08               	movlw	8
  9208  00755C  0012               	return	
  9209  00755E                     __end_of_vscp_getBufferSize:
  9210                           	opt stack 0
  9211                           tblptru	equ	0xFF8
  9212                           tblptrh	equ	0xFF7
  9213                           tblptrl	equ	0xFF6
  9214                           tablat	equ	0xFF5
  9215                           prodh	equ	0xFF4
  9216                           prodl	equ	0xFF3
  9217                           postinc0	equ	0xFEE
  9218                           wreg	equ	0xFE8
  9219                           postdec1	equ	0xFE5
  9220                           fsr1h	equ	0xFE2
  9221                           fsr1l	equ	0xFE1
  9222                           indf2	equ	0xFDF
  9223                           fsr2h	equ	0xFDA
  9224                           fsr2l	equ	0xFD9
  9225                           status	equ	0xFD8
  9226                           
  9227 ;; *************** function _vscp_getBootLoaderAlgorithm *****************
  9228 ;; Defined at:
  9229 ;;		line 2647 in file "../main.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;		None
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      unsigned char 
  9236 ;; Registers used:
  9237 ;;		wreg
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9243 ;;      Params:         0       0       0       0       0       0       0
  9244 ;;      Locals:         0       0       0       0       0       0       0
  9245 ;;      Temps:          0       0       0       0       0       0       0
  9246 ;;      Totals:         0       0       0       0       0       0       0
  9247 ;;Total ram usage:        0 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:    2
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_vscp_readStdReg
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           	psect	text23
  9258  00755E                     __ptext23:
  9259                           	opt stack 0
  9260  00755E                     _vscp_getBootLoaderAlgorithm:
  9261                           	opt stack 26
  9262                           
  9263                           ;main.c: 2649: return 0x01;
  9264                           
  9265                           ;incstack = 0
  9266  00755E  0E01               	movlw	1
  9267  007560  0012               	return	
  9268  007562                     __end_of_vscp_getBootLoaderAlgorithm:
  9269                           	opt stack 0
  9270                           tblptru	equ	0xFF8
  9271                           tblptrh	equ	0xFF7
  9272                           tblptrl	equ	0xFF6
  9273                           tablat	equ	0xFF5
  9274                           prodh	equ	0xFF4
  9275                           prodl	equ	0xFF3
  9276                           postinc0	equ	0xFEE
  9277                           wreg	equ	0xFE8
  9278                           postdec1	equ	0xFE5
  9279                           fsr1h	equ	0xFE2
  9280                           fsr1l	equ	0xFE1
  9281                           indf2	equ	0xFDF
  9282                           fsr2h	equ	0xFDA
  9283                           fsr2l	equ	0xFD9
  9284                           status	equ	0xFD8
  9285                           
  9286 ;; *************** function _vscp_readAppReg *****************
  9287 ;; Defined at:
  9288 ;;		line 1260 in file "../main.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;  reg             1    wreg     unsigned char 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;  reg             1   37[COMRAM] unsigned char 
  9293 ;;  pos             1   36[COMRAM] unsigned char 
  9294 ;;  rv              1   38[COMRAM] unsigned char 
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  1    wreg      unsigned char 
  9297 ;; Registers used:
  9298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9304 ;;      Params:         0       0       0       0       0       0       0
  9305 ;;      Locals:         3       0       0       0       0       0       0
  9306 ;;      Temps:          4       0       0       0       0       0       0
  9307 ;;      Totals:         7       0       0       0       0       0       0
  9308 ;;Total ram usage:        7 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; Hardware stack levels required when called:    3
  9311 ;; This function calls:
  9312 ;;		_readEEPROM
  9313 ;; This function is called by:
  9314 ;;		_vscp_readRegister
  9315 ;;		_vscp_handleProtocolEvent
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text24
  9320  002FDE                     __ptext24:
  9321                           	opt stack 0
  9322  002FDE                     _vscp_readAppReg:
  9323                           	opt stack 25
  9324                           
  9325                           ;incstack = 0
  9326                           ;vscp_readAppReg@reg stored from wreg
  9327  002FDE  6E26               	movwf	vscp_readAppReg@reg,c
  9328                           
  9329                           ;main.c: 1262: uint8_t rv;
  9330                           ;main.c: 1267: if (0 == vscp_page_select) {
  9331  002FE0  5033               	movf	_vscp_page_select+1,w,c
  9332  002FE2  1032               	iorwf	_vscp_page_select,w,c
  9333  002FE4  B4D8               	btfsc	status,2,c
  9334  002FE6  D2D2               	goto	l9104
  9335  002FE8  EF0C  F01C         	goto	l9106
  9336  002FEC                     l8898:
  9337                           
  9338                           ;main.c: 1273: rv = readEEPROM(0x41);
  9339  002FEC  0E00               	movlw	0
  9340  002FEE  6E1F               	movwf	readEEPROM@address+1,c
  9341  002FF0  0E41               	movlw	65
  9342  002FF2  6E1E               	movwf	readEEPROM@address,c
  9343  002FF4  EC6F  F03A         	call	_readEEPROM	;wreg free
  9344  002FF8  EF3A  F01C         	goto	L139
  9345  002FFC                     l8900:
  9346                           
  9347                           ;main.c: 1278: rv = readEEPROM(0x42);
  9348  002FFC  0E00               	movlw	0
  9349  002FFE  6E1F               	movwf	readEEPROM@address+1,c
  9350  003000  0E42               	movlw	66
  9351  003002  6E1E               	movwf	readEEPROM@address,c
  9352  003004  EC6F  F03A         	call	_readEEPROM	;wreg free
  9353  003008  EF3A  F01C         	goto	L139
  9354  00300C                     l8902:
  9355                           
  9356                           ;main.c: 1283: rv = readEEPROM(0x43);
  9357  00300C  0E00               	movlw	0
  9358  00300E  6E1F               	movwf	readEEPROM@address+1,c
  9359  003010  0E43               	movlw	67
  9360  003012  6E1E               	movwf	readEEPROM@address,c
  9361  003014  EC6F  F03A         	call	_readEEPROM	;wreg free
  9362  003018  EF3A  F01C         	goto	L139
  9363  00301C                     l8904:
  9364                           
  9365                           ;main.c: 1288: rv = readEEPROM(0x44);
  9366  00301C  0E00               	movlw	0
  9367  00301E  6E1F               	movwf	readEEPROM@address+1,c
  9368  003020  0E44               	movlw	68
  9369  003022  6E1E               	movwf	readEEPROM@address,c
  9370  003024  EC6F  F03A         	call	_readEEPROM	;wreg free
  9371  003028  EF3A  F01C         	goto	L139
  9372  00302C                     l8906:
  9373                           
  9374                           ;main.c: 1293: rv = readEEPROM(0x45);
  9375  00302C  0E00               	movlw	0
  9376  00302E  6E1F               	movwf	readEEPROM@address+1,c
  9377  003030  0E45               	movlw	69
  9378  003032  6E1E               	movwf	readEEPROM@address,c
  9379  003034  EC6F  F03A         	call	_readEEPROM	;wreg free
  9380  003038  EF3A  F01C         	goto	L139
  9381  00303C                     l8908:
  9382                           
  9383                           ;main.c: 1298: rv = readEEPROM(0x46);
  9384  00303C  0E00               	movlw	0
  9385  00303E  6E1F               	movwf	readEEPROM@address+1,c
  9386  003040  0E46               	movlw	70
  9387  003042  6E1E               	movwf	readEEPROM@address,c
  9388  003044  EC6F  F03A         	call	_readEEPROM	;wreg free
  9389  003048  EF3A  F01C         	goto	L139
  9390  00304C                     l8910:
  9391                           
  9392                           ;main.c: 1303: rv = readEEPROM(0x47);
  9393  00304C  0E00               	movlw	0
  9394  00304E  6E1F               	movwf	readEEPROM@address+1,c
  9395  003050  0E47               	movlw	71
  9396  003052  6E1E               	movwf	readEEPROM@address,c
  9397  003054  EC6F  F03A         	call	_readEEPROM	;wreg free
  9398  003058  EF3A  F01C         	goto	L139
  9399  00305C                     l8912:
  9400                           
  9401                           ;main.c: 1308: rv = readEEPROM(0x48);
  9402  00305C  0E00               	movlw	0
  9403  00305E  6E1F               	movwf	readEEPROM@address+1,c
  9404  003060  0E48               	movlw	72
  9405  003062  6E1E               	movwf	readEEPROM@address,c
  9406  003064  EC6F  F03A         	call	_readEEPROM	;wreg free
  9407  003068  EF3A  F01C         	goto	L139
  9408  00306C                     l8914:
  9409                           
  9410                           ;main.c: 1313: rv = ((current_temp[0] & 0xff00) >> 8);
  9411  00306C  0101               	movlb	1	; () banked
  9412  00306E  C101  F021         	movff	_current_temp+1,??_vscp_readAppReg
  9413  003072  D018               	goto	L142
  9414  003074                     l315:
  9415                           
  9416                           ;main.c: 1318: rv = (current_temp[0] & 0x00ff);
  9417  003074  C100  F027         	movff	_current_temp,vscp_readAppReg@rv
  9418                           
  9419                           ;main.c: 1319: break;
  9420  003078  D3FE               	goto	l9122
  9421  00307A                     l8916:
  9422                           
  9423                           ;main.c: 1323: rv = ((current_temp[1] & 0xff00) >> 8);
  9424  00307A  0101               	movlb	1	; () banked
  9425  00307C  C103  F021         	movff	_current_temp+3,??_vscp_readAppReg
  9426  003080  D011               	goto	L142
  9427  003082                     l317:
  9428                           
  9429                           ;main.c: 1328: rv = (current_temp[1] & 0x00ff);
  9430  003082  C102  F027         	movff	_current_temp+2,vscp_readAppReg@rv
  9431                           
  9432                           ;main.c: 1329: break;
  9433  003086  D3F7               	goto	l9122
  9434  003088                     l8918:
  9435                           
  9436                           ;main.c: 1333: rv = ((current_temp[2] & 0xff00) >> 8);
  9437  003088  0101               	movlb	1	; () banked
  9438  00308A  C105  F021         	movff	_current_temp+5,??_vscp_readAppReg
  9439  00308E  D00A               	goto	L142
  9440  003090                     l319:
  9441                           
  9442                           ;main.c: 1338: rv = (current_temp[2] & 0x00ff);
  9443  003090  C104  F027         	movff	_current_temp+4,vscp_readAppReg@rv
  9444                           
  9445                           ;main.c: 1339: break;
  9446  003094  D3F0               	goto	l9122
  9447  003096                     l8920:
  9448                           
  9449                           ;main.c: 1343: rv = ((current_temp[3] & 0xff00) >> 8);
  9450  003096  0101               	movlb	1	; () banked
  9451  003098  C107  F021         	movff	_current_temp+7,??_vscp_readAppReg
  9452  00309C  D003               	goto	L142
  9453  00309E                     l321:
  9454                           
  9455                           ;main.c: 1348: rv = (current_temp[3] & 0x00ff);
  9456  00309E  C106  F027         	movff	_current_temp+6,vscp_readAppReg@rv
  9457                           
  9458                           ;main.c: 1349: break;
  9459  0030A2  D3E9               	goto	l9122
  9460  0030A4                     L142:
  9461  0030A4  C021  F022         	movff	??_vscp_readAppReg,??_vscp_readAppReg+1
  9462  0030A8  6A23               	clrf	(??_vscp_readAppReg+2)& (0+255),c
  9463  0030AA  5022               	movf	??_vscp_readAppReg+1,w,c
  9464  0030AC  D3E3               	goto	L139
  9465  0030AE                     l8924:
  9466                           
  9467                           ;main.c: 1363: rv = ((current_temp[4] & 0xff00) >> 8);
  9468  0030AE  0101               	movlb	1	; () banked
  9469  0030B0  C109  F021         	movff	_current_temp+9,??_vscp_readAppReg
  9470  0030B4  D7F7               	goto	L142
  9471  0030B6                     l325:
  9472                           
  9473                           ;main.c: 1368: rv = (current_temp[4] & 0x00ff);
  9474  0030B6  C108  F027         	movff	_current_temp+8,vscp_readAppReg@rv
  9475                           
  9476                           ;main.c: 1369: break;
  9477  0030BA  D3DD               	goto	l9122
  9478  0030BC                     l8926:
  9479                           
  9480                           ;main.c: 1373: rv = readEEPROM(0x49);
  9481  0030BC  0E00               	movlw	0
  9482  0030BE  6E1F               	movwf	readEEPROM@address+1,c
  9483  0030C0  0E49               	movlw	73
  9484  0030C2  6E1E               	movwf	readEEPROM@address,c
  9485  0030C4  EC6F  F03A         	call	_readEEPROM	;wreg free
  9486  0030C8  D3D5               	goto	L139
  9487  0030CA                     l8928:
  9488                           
  9489                           ;main.c: 1378: rv = readEEPROM(0x4A);
  9490  0030CA  0E00               	movlw	0
  9491  0030CC  6E1F               	movwf	readEEPROM@address+1,c
  9492  0030CE  0E4A               	movlw	74
  9493  0030D0  6E1E               	movwf	readEEPROM@address,c
  9494  0030D2  EC6F  F03A         	call	_readEEPROM	;wreg free
  9495  0030D6  D3CE               	goto	L139
  9496  0030D8                     l8930:
  9497                           
  9498                           ;main.c: 1383: rv = readEEPROM(0x4B);
  9499  0030D8  0E00               	movlw	0
  9500  0030DA  6E1F               	movwf	readEEPROM@address+1,c
  9501  0030DC  0E4B               	movlw	75
  9502  0030DE  6E1E               	movwf	readEEPROM@address,c
  9503  0030E0  EC6F  F03A         	call	_readEEPROM	;wreg free
  9504  0030E4  D3C7               	goto	L139
  9505  0030E6                     l8932:
  9506                           
  9507                           ;main.c: 1388: rv = readEEPROM(0x4C);
  9508  0030E6  0E00               	movlw	0
  9509  0030E8  6E1F               	movwf	readEEPROM@address+1,c
  9510  0030EA  0E4C               	movlw	76
  9511  0030EC  6E1E               	movwf	readEEPROM@address,c
  9512  0030EE  EC6F  F03A         	call	_readEEPROM	;wreg free
  9513  0030F2  D3C0               	goto	L139
  9514  0030F4                     l8934:
  9515                           
  9516                           ;main.c: 1393: rv = readEEPROM(0x4D);
  9517  0030F4  0E00               	movlw	0
  9518  0030F6  6E1F               	movwf	readEEPROM@address+1,c
  9519  0030F8  0E4D               	movlw	77
  9520  0030FA  6E1E               	movwf	readEEPROM@address,c
  9521  0030FC  EC6F  F03A         	call	_readEEPROM	;wreg free
  9522  003100  D3B9               	goto	L139
  9523  003102                     l8936:
  9524                           
  9525                           ;main.c: 1398: rv = readEEPROM(0x4E);
  9526  003102  0E00               	movlw	0
  9527  003104  6E1F               	movwf	readEEPROM@address+1,c
  9528  003106  0E4E               	movlw	78
  9529  003108  6E1E               	movwf	readEEPROM@address,c
  9530  00310A  EC6F  F03A         	call	_readEEPROM	;wreg free
  9531  00310E  D3B2               	goto	L139
  9532  003110                     l8938:
  9533                           
  9534                           ;main.c: 1405: rv = readEEPROM(0x4F);
  9535  003110  0E00               	movlw	0
  9536  003112  6E1F               	movwf	readEEPROM@address+1,c
  9537  003114  0E4F               	movlw	79
  9538  003116  6E1E               	movwf	readEEPROM@address,c
  9539  003118  EC6F  F03A         	call	_readEEPROM	;wreg free
  9540  00311C  D3AB               	goto	L139
  9541  00311E                     l8940:
  9542                           
  9543                           ;main.c: 1410: rv = readEEPROM(0x50);
  9544  00311E  0E00               	movlw	0
  9545  003120  6E1F               	movwf	readEEPROM@address+1,c
  9546  003122  0E50               	movlw	80
  9547  003124  6E1E               	movwf	readEEPROM@address,c
  9548  003126  EC6F  F03A         	call	_readEEPROM	;wreg free
  9549  00312A  D3A4               	goto	L139
  9550  00312C                     l8942:
  9551                           
  9552                           ;main.c: 1415: rv = readEEPROM(0x51);
  9553  00312C  0E00               	movlw	0
  9554  00312E  6E1F               	movwf	readEEPROM@address+1,c
  9555  003130  0E51               	movlw	81
  9556  003132  6E1E               	movwf	readEEPROM@address,c
  9557  003134  EC6F  F03A         	call	_readEEPROM	;wreg free
  9558  003138  D39D               	goto	L139
  9559  00313A                     l8944:
  9560                           
  9561                           ;main.c: 1420: rv = readEEPROM(0x52);
  9562  00313A  0E00               	movlw	0
  9563  00313C  6E1F               	movwf	readEEPROM@address+1,c
  9564  00313E  0E52               	movlw	82
  9565  003140  6E1E               	movwf	readEEPROM@address,c
  9566  003142  EC6F  F03A         	call	_readEEPROM	;wreg free
  9567  003146  D396               	goto	L139
  9568  003148                     l8946:
  9569                           
  9570                           ;main.c: 1425: rv = readEEPROM(0x53);
  9571  003148  0E00               	movlw	0
  9572  00314A  6E1F               	movwf	readEEPROM@address+1,c
  9573  00314C  0E53               	movlw	83
  9574  00314E  6E1E               	movwf	readEEPROM@address,c
  9575  003150  EC6F  F03A         	call	_readEEPROM	;wreg free
  9576  003154  D38F               	goto	L139
  9577  003156                     l8948:
  9578                           
  9579                           ;main.c: 1430: rv = readEEPROM(0x54);
  9580  003156  0E00               	movlw	0
  9581  003158  6E1F               	movwf	readEEPROM@address+1,c
  9582  00315A  0E54               	movlw	84
  9583  00315C  6E1E               	movwf	readEEPROM@address,c
  9584  00315E  EC6F  F03A         	call	_readEEPROM	;wreg free
  9585  003162  D388               	goto	L139
  9586  003164                     l8950:
  9587                           
  9588                           ;main.c: 1435: rv = readEEPROM(0x55);
  9589  003164  0E00               	movlw	0
  9590  003166  6E1F               	movwf	readEEPROM@address+1,c
  9591  003168  0E55               	movlw	85
  9592  00316A  6E1E               	movwf	readEEPROM@address,c
  9593  00316C  EC6F  F03A         	call	_readEEPROM	;wreg free
  9594  003170  D381               	goto	L139
  9595  003172                     l8952:
  9596                           
  9597                           ;main.c: 1440: rv = readEEPROM(0x56);
  9598  003172  0E00               	movlw	0
  9599  003174  6E1F               	movwf	readEEPROM@address+1,c
  9600  003176  0E56               	movlw	86
  9601  003178  6E1E               	movwf	readEEPROM@address,c
  9602  00317A  EC6F  F03A         	call	_readEEPROM	;wreg free
  9603  00317E  D37A               	goto	L139
  9604  003180                     l8954:
  9605                           
  9606                           ;main.c: 1445: rv = readEEPROM(0x57);
  9607  003180  0E00               	movlw	0
  9608  003182  6E1F               	movwf	readEEPROM@address+1,c
  9609  003184  0E57               	movlw	87
  9610  003186  6E1E               	movwf	readEEPROM@address,c
  9611  003188  EC6F  F03A         	call	_readEEPROM	;wreg free
  9612  00318C  D373               	goto	L139
  9613  00318E                     l8956:
  9614                           
  9615                           ;main.c: 1450: rv = readEEPROM(0x58);
  9616  00318E  0E00               	movlw	0
  9617  003190  6E1F               	movwf	readEEPROM@address+1,c
  9618  003192  0E58               	movlw	88
  9619  003194  6E1E               	movwf	readEEPROM@address,c
  9620  003196  EC6F  F03A         	call	_readEEPROM	;wreg free
  9621  00319A  D36C               	goto	L139
  9622  00319C                     l8958:
  9623                           
  9624                           ;main.c: 1455: rv = readEEPROM(0x59);
  9625  00319C  0E00               	movlw	0
  9626  00319E  6E1F               	movwf	readEEPROM@address+1,c
  9627  0031A0  0E59               	movlw	89
  9628  0031A2  6E1E               	movwf	readEEPROM@address,c
  9629  0031A4  EC6F  F03A         	call	_readEEPROM	;wreg free
  9630  0031A8  D365               	goto	L139
  9631  0031AA                     l8960:
  9632                           
  9633                           ;main.c: 1460: rv = readEEPROM(0x5A);
  9634  0031AA  0E00               	movlw	0
  9635  0031AC  6E1F               	movwf	readEEPROM@address+1,c
  9636  0031AE  0E5A               	movlw	90
  9637  0031B0  6E1E               	movwf	readEEPROM@address,c
  9638  0031B2  EC6F  F03A         	call	_readEEPROM	;wreg free
  9639  0031B6  D35E               	goto	L139
  9640  0031B8                     l8962:
  9641                           
  9642                           ;main.c: 1469: rv = readEEPROM(0x5B);
  9643  0031B8  0E00               	movlw	0
  9644  0031BA  6E1F               	movwf	readEEPROM@address+1,c
  9645  0031BC  0E5B               	movlw	91
  9646  0031BE  6E1E               	movwf	readEEPROM@address,c
  9647  0031C0  EC6F  F03A         	call	_readEEPROM	;wreg free
  9648  0031C4  D357               	goto	L139
  9649  0031C6                     l8964:
  9650                           
  9651                           ;main.c: 1474: rv = readEEPROM(0x5C);
  9652  0031C6  0E00               	movlw	0
  9653  0031C8  6E1F               	movwf	readEEPROM@address+1,c
  9654  0031CA  0E5C               	movlw	92
  9655  0031CC  6E1E               	movwf	readEEPROM@address,c
  9656  0031CE  EC6F  F03A         	call	_readEEPROM	;wreg free
  9657  0031D2  D350               	goto	L139
  9658  0031D4                     l8966:
  9659                           
  9660                           ;main.c: 1479: rv = readEEPROM(0x5D);
  9661  0031D4  0E00               	movlw	0
  9662  0031D6  6E1F               	movwf	readEEPROM@address+1,c
  9663  0031D8  0E5D               	movlw	93
  9664  0031DA  6E1E               	movwf	readEEPROM@address,c
  9665  0031DC  EC6F  F03A         	call	_readEEPROM	;wreg free
  9666  0031E0  D349               	goto	L139
  9667  0031E2                     l8968:
  9668                           
  9669                           ;main.c: 1484: rv = readEEPROM(0x5E);
  9670  0031E2  0E00               	movlw	0
  9671  0031E4  6E1F               	movwf	readEEPROM@address+1,c
  9672  0031E6  0E5E               	movlw	94
  9673  0031E8  6E1E               	movwf	readEEPROM@address,c
  9674  0031EA  EC6F  F03A         	call	_readEEPROM	;wreg free
  9675  0031EE  D342               	goto	L139
  9676  0031F0                     l8970:
  9677                           
  9678                           ;main.c: 1489: rv = readEEPROM(0x5F);
  9679  0031F0  0E00               	movlw	0
  9680  0031F2  6E1F               	movwf	readEEPROM@address+1,c
  9681  0031F4  0E5F               	movlw	95
  9682  0031F6  6E1E               	movwf	readEEPROM@address,c
  9683  0031F8  EC6F  F03A         	call	_readEEPROM	;wreg free
  9684  0031FC  D33B               	goto	L139
  9685  0031FE                     l8972:
  9686                           
  9687                           ;main.c: 1494: rv = readEEPROM(0x60);
  9688  0031FE  0E00               	movlw	0
  9689  003200  6E1F               	movwf	readEEPROM@address+1,c
  9690  003202  0E60               	movlw	96
  9691  003204  6E1E               	movwf	readEEPROM@address,c
  9692  003206  EC6F  F03A         	call	_readEEPROM	;wreg free
  9693  00320A  D334               	goto	L139
  9694  00320C                     l8974:
  9695                           
  9696                           ;main.c: 1499: rv = readEEPROM(0x61);
  9697  00320C  0E00               	movlw	0
  9698  00320E  6E1F               	movwf	readEEPROM@address+1,c
  9699  003210  0E61               	movlw	97
  9700  003212  6E1E               	movwf	readEEPROM@address,c
  9701  003214  EC6F  F03A         	call	_readEEPROM	;wreg free
  9702  003218  D32D               	goto	L139
  9703  00321A                     l8976:
  9704                           
  9705                           ;main.c: 1504: rv = readEEPROM(0x62);
  9706  00321A  0E00               	movlw	0
  9707  00321C  6E1F               	movwf	readEEPROM@address+1,c
  9708  00321E  0E62               	movlw	98
  9709  003220  6E1E               	movwf	readEEPROM@address,c
  9710  003222  EC6F  F03A         	call	_readEEPROM	;wreg free
  9711  003226  D326               	goto	L139
  9712  003228                     l8978:
  9713                           
  9714                           ;main.c: 1509: rv = readEEPROM(0x63);
  9715  003228  0E00               	movlw	0
  9716  00322A  6E1F               	movwf	readEEPROM@address+1,c
  9717  00322C  0E63               	movlw	99
  9718  00322E  6E1E               	movwf	readEEPROM@address,c
  9719  003230  EC6F  F03A         	call	_readEEPROM	;wreg free
  9720  003234  D31F               	goto	L139
  9721  003236                     l8980:
  9722                           
  9723                           ;main.c: 1514: rv = readEEPROM(0x64);
  9724  003236  0E00               	movlw	0
  9725  003238  6E1F               	movwf	readEEPROM@address+1,c
  9726  00323A  0E64               	movlw	100
  9727  00323C  6E1E               	movwf	readEEPROM@address,c
  9728  00323E  EC6F  F03A         	call	_readEEPROM	;wreg free
  9729  003242  D318               	goto	L139
  9730  003244                     l8982:
  9731                           
  9732                           ;main.c: 1519: rv = readEEPROM(0x65);
  9733  003244  0E00               	movlw	0
  9734  003246  6E1F               	movwf	readEEPROM@address+1,c
  9735  003248  0E65               	movlw	101
  9736  00324A  6E1E               	movwf	readEEPROM@address,c
  9737  00324C  EC6F  F03A         	call	_readEEPROM	;wreg free
  9738  003250  D311               	goto	L139
  9739  003252                     l8984:
  9740                           
  9741                           ;main.c: 1524: rv = readEEPROM(0x66);
  9742  003252  0E00               	movlw	0
  9743  003254  6E1F               	movwf	readEEPROM@address+1,c
  9744  003256  0E66               	movlw	102
  9745  003258  6E1E               	movwf	readEEPROM@address,c
  9746  00325A  EC6F  F03A         	call	_readEEPROM	;wreg free
  9747  00325E  D30A               	goto	L139
  9748  003260                     l8986:
  9749                           
  9750                           ;main.c: 1534: rv = readEEPROM(0x67);
  9751  003260  0E00               	movlw	0
  9752  003262  6E1F               	movwf	readEEPROM@address+1,c
  9753  003264  0E67               	movlw	103
  9754  003266  6E1E               	movwf	readEEPROM@address,c
  9755  003268  EC6F  F03A         	call	_readEEPROM	;wreg free
  9756  00326C  D303               	goto	L139
  9757  00326E                     l8988:
  9758                           
  9759                           ;main.c: 1539: rv = readEEPROM(0x68);
  9760  00326E  0E00               	movlw	0
  9761  003270  6E1F               	movwf	readEEPROM@address+1,c
  9762  003272  0E68               	movlw	104
  9763  003274  6E1E               	movwf	readEEPROM@address,c
  9764  003276  EC6F  F03A         	call	_readEEPROM	;wreg free
  9765  00327A  D2FC               	goto	L139
  9766  00327C                     l8990:
  9767                           
  9768                           ;main.c: 1544: rv = readEEPROM(0x69);
  9769  00327C  0E00               	movlw	0
  9770  00327E  6E1F               	movwf	readEEPROM@address+1,c
  9771  003280  0E69               	movlw	105
  9772  003282  6E1E               	movwf	readEEPROM@address,c
  9773  003284  EC6F  F03A         	call	_readEEPROM	;wreg free
  9774  003288  D2F5               	goto	L139
  9775  00328A                     l8992:
  9776                           
  9777                           ;main.c: 1549: rv = readEEPROM(0x6A);
  9778  00328A  0E00               	movlw	0
  9779  00328C  6E1F               	movwf	readEEPROM@address+1,c
  9780  00328E  0E6A               	movlw	106
  9781  003290  6E1E               	movwf	readEEPROM@address,c
  9782  003292  EC6F  F03A         	call	_readEEPROM	;wreg free
  9783  003296  D2EE               	goto	L139
  9784  003298                     l8994:
  9785                           
  9786                           ;main.c: 1554: rv = readEEPROM(0x6B);
  9787  003298  0E00               	movlw	0
  9788  00329A  6E1F               	movwf	readEEPROM@address+1,c
  9789  00329C  0E6B               	movlw	107
  9790  00329E  6E1E               	movwf	readEEPROM@address,c
  9791  0032A0  EC6F  F03A         	call	_readEEPROM	;wreg free
  9792  0032A4  D2E7               	goto	L139
  9793  0032A6                     l8996:
  9794                           
  9795                           ;main.c: 1559: rv = readEEPROM(0x6C);
  9796  0032A6  0E00               	movlw	0
  9797  0032A8  6E1F               	movwf	readEEPROM@address+1,c
  9798  0032AA  0E6C               	movlw	108
  9799  0032AC  6E1E               	movwf	readEEPROM@address,c
  9800  0032AE  EC6F  F03A         	call	_readEEPROM	;wreg free
  9801  0032B2  D2E0               	goto	L139
  9802  0032B4                     l8998:
  9803                           
  9804                           ;main.c: 1564: rv = readEEPROM(0x6D);
  9805  0032B4  0E00               	movlw	0
  9806  0032B6  6E1F               	movwf	readEEPROM@address+1,c
  9807  0032B8  0E6D               	movlw	109
  9808  0032BA  6E1E               	movwf	readEEPROM@address,c
  9809  0032BC  EC6F  F03A         	call	_readEEPROM	;wreg free
  9810  0032C0  D2D9               	goto	L139
  9811  0032C2                     l9000:
  9812                           
  9813                           ;main.c: 1569: rv = readEEPROM(0x6E);
  9814  0032C2  0E00               	movlw	0
  9815  0032C4  6E1F               	movwf	readEEPROM@address+1,c
  9816  0032C6  0E6E               	movlw	110
  9817  0032C8  6E1E               	movwf	readEEPROM@address,c
  9818  0032CA  EC6F  F03A         	call	_readEEPROM	;wreg free
  9819  0032CE  D2D2               	goto	L139
  9820  0032D0                     l9002:
  9821                           
  9822                           ;main.c: 1574: rv = readEEPROM(0x6F);
  9823  0032D0  0E00               	movlw	0
  9824  0032D2  6E1F               	movwf	readEEPROM@address+1,c
  9825  0032D4  0E6F               	movlw	111
  9826  0032D6  6E1E               	movwf	readEEPROM@address,c
  9827  0032D8  EC6F  F03A         	call	_readEEPROM	;wreg free
  9828  0032DC  D2CB               	goto	L139
  9829  0032DE                     l9004:
  9830                           
  9831                           ;main.c: 1579: rv = readEEPROM(0x70);
  9832  0032DE  0E00               	movlw	0
  9833  0032E0  6E1F               	movwf	readEEPROM@address+1,c
  9834  0032E2  0E70               	movlw	112
  9835  0032E4  6E1E               	movwf	readEEPROM@address,c
  9836  0032E6  EC6F  F03A         	call	_readEEPROM	;wreg free
  9837  0032EA  D2C4               	goto	L139
  9838  0032EC                     l9006:
  9839                           
  9840                           ;main.c: 1584: rv = readEEPROM(0x71);
  9841  0032EC  0E00               	movlw	0
  9842  0032EE  6E1F               	movwf	readEEPROM@address+1,c
  9843  0032F0  0E71               	movlw	113
  9844  0032F2  6E1E               	movwf	readEEPROM@address,c
  9845  0032F4  EC6F  F03A         	call	_readEEPROM	;wreg free
  9846  0032F8  D2BD               	goto	L139
  9847  0032FA                     l9008:
  9848                           
  9849                           ;main.c: 1589: rv = readEEPROM(0x72);
  9850  0032FA  0E00               	movlw	0
  9851  0032FC  6E1F               	movwf	readEEPROM@address+1,c
  9852  0032FE  0E72               	movlw	114
  9853  003300  6E1E               	movwf	readEEPROM@address,c
  9854  003302  EC6F  F03A         	call	_readEEPROM	;wreg free
  9855  003306  D2B6               	goto	L139
  9856  003308                     l9010:
  9857                           
  9858                           ;main.c: 1598: rv = readEEPROM(0x73);
  9859  003308  0E00               	movlw	0
  9860  00330A  6E1F               	movwf	readEEPROM@address+1,c
  9861  00330C  0E73               	movlw	115
  9862  00330E  6E1E               	movwf	readEEPROM@address,c
  9863  003310  EC6F  F03A         	call	_readEEPROM	;wreg free
  9864  003314  D2AF               	goto	L139
  9865  003316                     l9012:
  9866                           
  9867                           ;main.c: 1603: rv = readEEPROM(0x74);
  9868  003316  0E00               	movlw	0
  9869  003318  6E1F               	movwf	readEEPROM@address+1,c
  9870  00331A  0E74               	movlw	116
  9871  00331C  6E1E               	movwf	readEEPROM@address,c
  9872  00331E  EC6F  F03A         	call	_readEEPROM	;wreg free
  9873  003322  D2A8               	goto	L139
  9874  003324                     l9014:
  9875                           
  9876                           ;main.c: 1608: rv = readEEPROM(0x73);
  9877  003324  0E00               	movlw	0
  9878  003326  6E1F               	movwf	readEEPROM@address+1,c
  9879  003328  0E73               	movlw	115
  9880  00332A  6E1E               	movwf	readEEPROM@address,c
  9881  00332C  EC6F  F03A         	call	_readEEPROM	;wreg free
  9882  003330  D2A1               	goto	L139
  9883  003332                     l9016:
  9884                           
  9885                           ;main.c: 1613: rv = readEEPROM(0x74);
  9886  003332  0E00               	movlw	0
  9887  003334  6E1F               	movwf	readEEPROM@address+1,c
  9888  003336  0E74               	movlw	116
  9889  003338  6E1E               	movwf	readEEPROM@address,c
  9890  00333A  EC6F  F03A         	call	_readEEPROM	;wreg free
  9891  00333E  D29A               	goto	L139
  9892  003340                     l9018:
  9893                           
  9894                           ;main.c: 1618: rv = readEEPROM(0x73);
  9895  003340  0E00               	movlw	0
  9896  003342  6E1F               	movwf	readEEPROM@address+1,c
  9897  003344  0E73               	movlw	115
  9898  003346  6E1E               	movwf	readEEPROM@address,c
  9899  003348  EC6F  F03A         	call	_readEEPROM	;wreg free
  9900  00334C  D293               	goto	L139
  9901  00334E                     l9020:
  9902                           
  9903                           ;main.c: 1623: rv = readEEPROM(0x74);
  9904  00334E  0E00               	movlw	0
  9905  003350  6E1F               	movwf	readEEPROM@address+1,c
  9906  003352  0E74               	movlw	116
  9907  003354  6E1E               	movwf	readEEPROM@address,c
  9908  003356  EC6F  F03A         	call	_readEEPROM	;wreg free
  9909  00335A  D28C               	goto	L139
  9910  00335C                     l9022:
  9911                           
  9912                           ;main.c: 1628: rv = readEEPROM(0x73);
  9913  00335C  0E00               	movlw	0
  9914  00335E  6E1F               	movwf	readEEPROM@address+1,c
  9915  003360  0E73               	movlw	115
  9916  003362  6E1E               	movwf	readEEPROM@address,c
  9917  003364  EC6F  F03A         	call	_readEEPROM	;wreg free
  9918  003368  D285               	goto	L139
  9919  00336A                     l9024:
  9920                           
  9921                           ;main.c: 1633: rv = readEEPROM(0x74);
  9922  00336A  0E00               	movlw	0
  9923  00336C  6E1F               	movwf	readEEPROM@address+1,c
  9924  00336E  0E74               	movlw	116
  9925  003370  6E1E               	movwf	readEEPROM@address,c
  9926  003372  EC6F  F03A         	call	_readEEPROM	;wreg free
  9927  003376  D27E               	goto	L139
  9928  003378                     l9026:
  9929                           
  9930                           ;main.c: 1638: rv = readEEPROM(0x73);
  9931  003378  0E00               	movlw	0
  9932  00337A  6E1F               	movwf	readEEPROM@address+1,c
  9933  00337C  0E73               	movlw	115
  9934  00337E  6E1E               	movwf	readEEPROM@address,c
  9935  003380  EC6F  F03A         	call	_readEEPROM	;wreg free
  9936  003384  D277               	goto	L139
  9937  003386                     l9028:
  9938                           
  9939                           ;main.c: 1643: rv = readEEPROM(0x74);
  9940  003386  0E00               	movlw	0
  9941  003388  6E1F               	movwf	readEEPROM@address+1,c
  9942  00338A  0E74               	movlw	116
  9943  00338C  6E1E               	movwf	readEEPROM@address,c
  9944  00338E  EC6F  F03A         	call	_readEEPROM	;wreg free
  9945  003392  D270               	goto	L139
  9946  003394                     l9030:
  9947                           
  9948                           ;main.c: 1648: rv = readEEPROM(0x73);
  9949  003394  0E00               	movlw	0
  9950  003396  6E1F               	movwf	readEEPROM@address+1,c
  9951  003398  0E73               	movlw	115
  9952  00339A  6E1E               	movwf	readEEPROM@address,c
  9953  00339C  EC6F  F03A         	call	_readEEPROM	;wreg free
  9954  0033A0  D269               	goto	L139
  9955  0033A2                     l9032:
  9956                           
  9957                           ;main.c: 1653: rv = readEEPROM(0x74);
  9958  0033A2  0E00               	movlw	0
  9959  0033A4  6E1F               	movwf	readEEPROM@address+1,c
  9960  0033A6  0E74               	movlw	116
  9961  0033A8  6E1E               	movwf	readEEPROM@address,c
  9962  0033AA  EC6F  F03A         	call	_readEEPROM	;wreg free
  9963  0033AE  D262               	goto	L139
  9964  0033B0                     l9034:
  9965                           
  9966                           ;main.c: 1662: rv = readEEPROM(0x7F);
  9967  0033B0  0E00               	movlw	0
  9968  0033B2  6E1F               	movwf	readEEPROM@address+1,c
  9969  0033B4  0E7F               	movlw	127
  9970  0033B6  6E1E               	movwf	readEEPROM@address,c
  9971  0033B8  EC6F  F03A         	call	_readEEPROM	;wreg free
  9972  0033BC  D25B               	goto	L139
  9973  0033BE                     l9036:
  9974                           
  9975                           ;main.c: 1667: rv = readEEPROM(0x80);
  9976  0033BE  0E00               	movlw	0
  9977  0033C0  6E1F               	movwf	readEEPROM@address+1,c
  9978  0033C2  0E80               	movlw	128
  9979  0033C4  6E1E               	movwf	readEEPROM@address,c
  9980  0033C6  EC6F  F03A         	call	_readEEPROM	;wreg free
  9981  0033CA  D254               	goto	L139
  9982  0033CC                     l9038:
  9983                           
  9984                           ;main.c: 1672: rv = readEEPROM(0x81);
  9985  0033CC  0E00               	movlw	0
  9986  0033CE  6E1F               	movwf	readEEPROM@address+1,c
  9987  0033D0  0E81               	movlw	129
  9988  0033D2  6E1E               	movwf	readEEPROM@address,c
  9989  0033D4  EC6F  F03A         	call	_readEEPROM	;wreg free
  9990  0033D8  D24D               	goto	L139
  9991  0033DA                     l9040:
  9992                           
  9993                           ;main.c: 1677: rv = readEEPROM(0x82);
  9994  0033DA  0E00               	movlw	0
  9995  0033DC  6E1F               	movwf	readEEPROM@address+1,c
  9996  0033DE  0E82               	movlw	130
  9997  0033E0  6E1E               	movwf	readEEPROM@address,c
  9998  0033E2  EC6F  F03A         	call	_readEEPROM	;wreg free
  9999  0033E6  D246               	goto	L139
 10000  0033E8                     l9042:
 10001                           
 10002                           ;main.c: 1682: rv = readEEPROM(0x83);
 10003  0033E8  0E00               	movlw	0
 10004  0033EA  6E1F               	movwf	readEEPROM@address+1,c
 10005  0033EC  0E83               	movlw	131
 10006  0033EE  6E1E               	movwf	readEEPROM@address,c
 10007  0033F0  EC6F  F03A         	call	_readEEPROM	;wreg free
 10008  0033F4  D23F               	goto	L139
 10009  0033F6                     l9044:
 10010                           
 10011                           ;main.c: 1687: rv = readEEPROM(0x84);
 10012  0033F6  0E00               	movlw	0
 10013  0033F8  6E1F               	movwf	readEEPROM@address+1,c
 10014  0033FA  0E84               	movlw	132
 10015  0033FC  6E1E               	movwf	readEEPROM@address,c
 10016  0033FE  EC6F  F03A         	call	_readEEPROM	;wreg free
 10017  003402  D238               	goto	L139
 10018  003404                     l9046:
 10019                           
 10020                           ;main.c: 1692: rv = readEEPROM(0x85);
 10021  003404  0E00               	movlw	0
 10022  003406  6E1F               	movwf	readEEPROM@address+1,c
 10023  003408  0E85               	movlw	133
 10024  00340A  6E1E               	movwf	readEEPROM@address,c
 10025  00340C  EC6F  F03A         	call	_readEEPROM	;wreg free
 10026  003410  D231               	goto	L139
 10027  003412                     l9048:
 10028                           
 10029                           ;main.c: 1697: rv = readEEPROM(0x86);
 10030  003412  0E00               	movlw	0
 10031  003414  6E1F               	movwf	readEEPROM@address+1,c
 10032  003416  0E86               	movlw	134
 10033  003418  6E1E               	movwf	readEEPROM@address,c
 10034  00341A  EC6F  F03A         	call	_readEEPROM	;wreg free
 10035  00341E  D22A               	goto	L139
 10036  003420                     l9050:
 10037                           
 10038                           ;main.c: 1702: rv = readEEPROM(0x87);
 10039  003420  0E00               	movlw	0
 10040  003422  6E1F               	movwf	readEEPROM@address+1,c
 10041  003424  0E87               	movlw	135
 10042  003426  6E1E               	movwf	readEEPROM@address,c
 10043  003428  EC6F  F03A         	call	_readEEPROM	;wreg free
 10044  00342C  D223               	goto	L139
 10045  00342E                     l9052:
 10046                           
 10047                           ;main.c: 1707: rv = readEEPROM(0x88);
 10048  00342E  0E00               	movlw	0
 10049  003430  6E1F               	movwf	readEEPROM@address+1,c
 10050  003432  0E88               	movlw	136
 10051  003434  6E1E               	movwf	readEEPROM@address,c
 10052  003436  EC6F  F03A         	call	_readEEPROM	;wreg free
 10053  00343A  D21C               	goto	L139
 10054  00343C                     l9054:
 10055                           
 10056                           ;main.c: 1712: rv = readEEPROM(0x89);
 10057  00343C  0E00               	movlw	0
 10058  00343E  6E1F               	movwf	readEEPROM@address+1,c
 10059  003440  0E89               	movlw	137
 10060  003442  6E1E               	movwf	readEEPROM@address,c
 10061  003444  EC6F  F03A         	call	_readEEPROM	;wreg free
 10062  003448  D215               	goto	L139
 10063  00344A                     l9056:
 10064                           
 10065                           ;main.c: 1717: rv = readEEPROM(0x8A);
 10066  00344A  0E00               	movlw	0
 10067  00344C  6E1F               	movwf	readEEPROM@address+1,c
 10068  00344E  0E8A               	movlw	138
 10069  003450  6E1E               	movwf	readEEPROM@address,c
 10070  003452  EC6F  F03A         	call	_readEEPROM	;wreg free
 10071  003456  D20E               	goto	L139
 10072  003458                     l9058:
 10073                           
 10074                           ;main.c: 1726: rv = readEEPROM(0x8B);
 10075  003458  0E00               	movlw	0
 10076  00345A  6E1F               	movwf	readEEPROM@address+1,c
 10077  00345C  0E8B               	movlw	139
 10078  00345E  6E1E               	movwf	readEEPROM@address,c
 10079  003460  EC6F  F03A         	call	_readEEPROM	;wreg free
 10080  003464  D207               	goto	L139
 10081  003466                     l9060:
 10082                           
 10083                           ;main.c: 1731: rv = readEEPROM(0x8C);
 10084  003466  0E00               	movlw	0
 10085  003468  6E1F               	movwf	readEEPROM@address+1,c
 10086  00346A  0E8C               	movlw	140
 10087  00346C  6E1E               	movwf	readEEPROM@address,c
 10088  00346E  EC6F  F03A         	call	_readEEPROM	;wreg free
 10089  003472  D200               	goto	L139
 10090  003474                     l9062:
 10091                           
 10092                           ;main.c: 1736: rv = readEEPROM(0x8D);
 10093  003474  0E00               	movlw	0
 10094  003476  6E1F               	movwf	readEEPROM@address+1,c
 10095  003478  0E8D               	movlw	141
 10096  00347A  6E1E               	movwf	readEEPROM@address,c
 10097  00347C  EC6F  F03A         	call	_readEEPROM	;wreg free
 10098  003480  D1F9               	goto	L139
 10099  003482                     l9064:
 10100                           
 10101                           ;main.c: 1741: rv = readEEPROM(0x8E);
 10102  003482  0E00               	movlw	0
 10103  003484  6E1F               	movwf	readEEPROM@address+1,c
 10104  003486  0E8E               	movlw	142
 10105  003488  6E1E               	movwf	readEEPROM@address,c
 10106  00348A  EC6F  F03A         	call	_readEEPROM	;wreg free
 10107  00348E  D1F2               	goto	L139
 10108  003490                     l9066:
 10109                           
 10110                           ;main.c: 1746: rv = readEEPROM(0x8F);
 10111  003490  0E00               	movlw	0
 10112  003492  6E1F               	movwf	readEEPROM@address+1,c
 10113  003494  0E8F               	movlw	143
 10114  003496  6E1E               	movwf	readEEPROM@address,c
 10115  003498  EC6F  F03A         	call	_readEEPROM	;wreg free
 10116  00349C  D1EB               	goto	L139
 10117  00349E                     l9068:
 10118                           
 10119                           ;main.c: 1751: rv = readEEPROM(0x90);
 10120  00349E  0E00               	movlw	0
 10121  0034A0  6E1F               	movwf	readEEPROM@address+1,c
 10122  0034A2  0E90               	movlw	144
 10123  0034A4  6E1E               	movwf	readEEPROM@address,c
 10124  0034A6  EC6F  F03A         	call	_readEEPROM	;wreg free
 10125  0034AA  D1E4               	goto	L139
 10126  0034AC                     l9070:
 10127                           
 10128                           ;main.c: 1756: rv = readEEPROM(0x91);
 10129  0034AC  0E00               	movlw	0
 10130  0034AE  6E1F               	movwf	readEEPROM@address+1,c
 10131  0034B0  0E91               	movlw	145
 10132  0034B2  6E1E               	movwf	readEEPROM@address,c
 10133  0034B4  EC6F  F03A         	call	_readEEPROM	;wreg free
 10134  0034B8  D1DD               	goto	L139
 10135  0034BA                     l9072:
 10136                           
 10137                           ;main.c: 1761: rv = readEEPROM(0x92);
 10138  0034BA  0E00               	movlw	0
 10139  0034BC  6E1F               	movwf	readEEPROM@address+1,c
 10140  0034BE  0E92               	movlw	146
 10141  0034C0  6E1E               	movwf	readEEPROM@address,c
 10142  0034C2  EC6F  F03A         	call	_readEEPROM	;wreg free
 10143  0034C6  D1D6               	goto	L139
 10144  0034C8                     l9074:
 10145                           
 10146                           ;main.c: 1766: rv = readEEPROM(0x93);
 10147  0034C8  0E00               	movlw	0
 10148  0034CA  6E1F               	movwf	readEEPROM@address+1,c
 10149  0034CC  0E93               	movlw	147
 10150  0034CE  6E1E               	movwf	readEEPROM@address,c
 10151  0034D0  EC6F  F03A         	call	_readEEPROM	;wreg free
 10152  0034D4  D1CF               	goto	L139
 10153  0034D6                     l9076:
 10154                           
 10155                           ;main.c: 1771: rv = readEEPROM(0x94);
 10156  0034D6  0E00               	movlw	0
 10157  0034D8  6E1F               	movwf	readEEPROM@address+1,c
 10158  0034DA  0E94               	movlw	148
 10159  0034DC  6E1E               	movwf	readEEPROM@address,c
 10160  0034DE  EC6F  F03A         	call	_readEEPROM	;wreg free
 10161  0034E2  D1C8               	goto	L139
 10162  0034E4                     l9078:
 10163                           
 10164                           ;main.c: 1776: rv = readEEPROM(0x95);
 10165  0034E4  0E00               	movlw	0
 10166  0034E6  6E1F               	movwf	readEEPROM@address+1,c
 10167  0034E8  0E95               	movlw	149
 10168  0034EA  6E1E               	movwf	readEEPROM@address,c
 10169  0034EC  EC6F  F03A         	call	_readEEPROM	;wreg free
 10170  0034F0  D1C1               	goto	L139
 10171  0034F2                     l9080:
 10172                           
 10173                           ;main.c: 1781: rv = readEEPROM(0x96);
 10174  0034F2  0E00               	movlw	0
 10175  0034F4  6E1F               	movwf	readEEPROM@address+1,c
 10176  0034F6  0E96               	movlw	150
 10177  0034F8  6E1E               	movwf	readEEPROM@address,c
 10178  0034FA  EC6F  F03A         	call	_readEEPROM	;wreg free
 10179  0034FE  D1BA               	goto	L139
 10180  003500                     l9082:
 10181                           
 10182                           ;main.c: 1791: rv = readEEPROM(0x97);
 10183  003500  0E00               	movlw	0
 10184  003502  6E1F               	movwf	readEEPROM@address+1,c
 10185  003504  0E97               	movlw	151
 10186  003506  6E1E               	movwf	readEEPROM@address,c
 10187  003508  EC6F  F03A         	call	_readEEPROM	;wreg free
 10188  00350C  D1B3               	goto	L139
 10189  00350E                     l9084:
 10190                           
 10191                           ;main.c: 1796: rv = readEEPROM(0x98);
 10192  00350E  0E00               	movlw	0
 10193  003510  6E1F               	movwf	readEEPROM@address+1,c
 10194  003512  0E98               	movlw	152
 10195  003514  6E1E               	movwf	readEEPROM@address,c
 10196  003516  EC6F  F03A         	call	_readEEPROM	;wreg free
 10197  00351A  D1AC               	goto	L139
 10198  00351C                     l9086:
 10199                           
 10200                           ;main.c: 1801: rv = readEEPROM(0x99);
 10201  00351C  0E00               	movlw	0
 10202  00351E  6E1F               	movwf	readEEPROM@address+1,c
 10203  003520  0E99               	movlw	153
 10204  003522  6E1E               	movwf	readEEPROM@address,c
 10205  003524  EC6F  F03A         	call	_readEEPROM	;wreg free
 10206  003528  D1A5               	goto	L139
 10207  00352A                     l9088:
 10208                           
 10209                           ;main.c: 1806: rv = readEEPROM(0x9A);
 10210  00352A  0E00               	movlw	0
 10211  00352C  6E1F               	movwf	readEEPROM@address+1,c
 10212  00352E  0E9A               	movlw	154
 10213  003530  6E1E               	movwf	readEEPROM@address,c
 10214  003532  EC6F  F03A         	call	_readEEPROM	;wreg free
 10215  003536  D19E               	goto	L139
 10216  003538                     l9090:
 10217                           
 10218                           ;main.c: 1811: rv = readEEPROM(0x9B);
 10219  003538  0E00               	movlw	0
 10220  00353A  6E1F               	movwf	readEEPROM@address+1,c
 10221  00353C  0E9B               	movlw	155
 10222  00353E  6E1E               	movwf	readEEPROM@address,c
 10223  003540  EC6F  F03A         	call	_readEEPROM	;wreg free
 10224  003544  D197               	goto	L139
 10225  003546                     l9092:
 10226                           
 10227                           ;main.c: 1816: rv = readEEPROM(0x9C);
 10228  003546  0E00               	movlw	0
 10229  003548  6E1F               	movwf	readEEPROM@address+1,c
 10230  00354A  0E9C               	movlw	156
 10231  00354C  6E1E               	movwf	readEEPROM@address,c
 10232  00354E  EC6F  F03A         	call	_readEEPROM	;wreg free
 10233  003552  D190               	goto	L139
 10234  003554                     l410:
 10235                           
 10236                           ;main.c: 1823: rv = calibration_index;
 10237  003554  C037  F027         	movff	_calibration_index,vscp_readAppReg@rv
 10238                           
 10239                           ;main.c: 1824: break;
 10240  003558  D18E               	goto	l9122
 10241  00355A                     l9094:
 10242                           
 10243                           ;main.c: 1828: rv = readEEPROM(0x9E +
 10244                           ;main.c: 1829: calibration_index);
 10245  00355A  0E9E               	movlw	158
 10246  00355C  2437               	addwf	_calibration_index,w,c
 10247  00355E  6E1E               	movwf	readEEPROM@address,c
 10248  003560  6A1F               	clrf	readEEPROM@address+1,c
 10249  003562  0E00               	movlw	0
 10250  003564  221F               	addwfc	readEEPROM@address+1,f,c
 10251  003566  EC6F  F03A         	call	_readEEPROM	;wreg free
 10252  00356A  D184               	goto	L139
 10253  00356C                     l9096:
 10254                           
 10255                           ;main.c: 1833: rv = readEEPROM(0xF2);
 10256  00356C  0E00               	movlw	0
 10257  00356E  6E1F               	movwf	readEEPROM@address+1,c
 10258  003570  0EF2               	movlw	242
 10259  003572  6E1E               	movwf	readEEPROM@address,c
 10260  003574  EC6F  F03A         	call	_readEEPROM	;wreg free
 10261  003578  D17D               	goto	L139
 10262  00357A                     l9098:
 10263                           
 10264                           ;main.c: 1837: rv = readEEPROM(0xF3);
 10265  00357A  0E00               	movlw	0
 10266  00357C  6E1F               	movwf	readEEPROM@address+1,c
 10267  00357E  0EF3               	movlw	243
 10268  003580  6E1E               	movwf	readEEPROM@address,c
 10269  003582  EC6F  F03A         	call	_readEEPROM	;wreg free
 10270  003586  D176               	goto	L139
 10271  003588                     l9100:
 10272                           
 10273                           ;main.c: 1841: rv = 0;
 10274  003588  0E00               	movlw	0
 10275  00358A  D174               	goto	L139
 10276  00358C                     l9104:
 10277  00358C  5026               	movf	vscp_readAppReg@reg,w,c
 10278                           
 10279                           ; Switch size 1, requested type "space"
 10280                           ; Number of cases is 108, Range of values is 0 to 119
 10281                           ; switch strategies available:
 10282                           ; Name         Instructions Cycles
 10283                           ; simple_byte          325   163 (average)
 10284                           ;	Chosen strategy is simple_byte
 10285  00358E  0A00               	xorlw	0	; case 0
 10286  003590  B4D8               	btfsc	status,2,c
 10287  003592  D52C               	goto	l8898
 10288  003594  0A01               	xorlw	1	; case 1
 10289  003596  B4D8               	btfsc	status,2,c
 10290  003598  D531               	goto	l8900
 10291  00359A  0A03               	xorlw	3	; case 2
 10292  00359C  B4D8               	btfsc	status,2,c
 10293  00359E  D536               	goto	l8902
 10294  0035A0  0A01               	xorlw	1	; case 3
 10295  0035A2  B4D8               	btfsc	status,2,c
 10296  0035A4  D53B               	goto	l8904
 10297  0035A6  0A07               	xorlw	7	; case 4
 10298  0035A8  B4D8               	btfsc	status,2,c
 10299  0035AA  D540               	goto	l8906
 10300  0035AC  0A01               	xorlw	1	; case 5
 10301  0035AE  B4D8               	btfsc	status,2,c
 10302  0035B0  D545               	goto	l8908
 10303  0035B2  0A03               	xorlw	3	; case 6
 10304  0035B4  B4D8               	btfsc	status,2,c
 10305  0035B6  D54A               	goto	l8910
 10306  0035B8  0A01               	xorlw	1	; case 7
 10307  0035BA  B4D8               	btfsc	status,2,c
 10308  0035BC  D54F               	goto	l8912
 10309  0035BE  0A0F               	xorlw	15	; case 8
 10310  0035C0  B4D8               	btfsc	status,2,c
 10311  0035C2  D554               	goto	l8914
 10312  0035C4  0A01               	xorlw	1	; case 9
 10313  0035C6  B4D8               	btfsc	status,2,c
 10314  0035C8  D555               	goto	l315
 10315  0035CA  0A03               	xorlw	3	; case 10
 10316  0035CC  B4D8               	btfsc	status,2,c
 10317  0035CE  D555               	goto	l8916
 10318  0035D0  0A01               	xorlw	1	; case 11
 10319  0035D2  B4D8               	btfsc	status,2,c
 10320  0035D4  D556               	goto	l317
 10321  0035D6  0A07               	xorlw	7	; case 12
 10322  0035D8  B4D8               	btfsc	status,2,c
 10323  0035DA  D556               	goto	l8918
 10324  0035DC  0A01               	xorlw	1	; case 13
 10325  0035DE  B4D8               	btfsc	status,2,c
 10326  0035E0  D557               	goto	l319
 10327  0035E2  0A03               	xorlw	3	; case 14
 10328  0035E4  B4D8               	btfsc	status,2,c
 10329  0035E6  D557               	goto	l8920
 10330  0035E8  0A01               	xorlw	1	; case 15
 10331  0035EA  B4D8               	btfsc	status,2,c
 10332  0035EC  D558               	goto	l321
 10333  0035EE  0A1F               	xorlw	31	; case 16
 10334  0035F0  B4D8               	btfsc	status,2,c
 10335  0035F2  D55D               	goto	l8924
 10336  0035F4  0A01               	xorlw	1	; case 17
 10337  0035F6  B4D8               	btfsc	status,2,c
 10338  0035F8  D55E               	goto	l325
 10339  0035FA  0A03               	xorlw	3	; case 18
 10340  0035FC  B4D8               	btfsc	status,2,c
 10341  0035FE  D557               	goto	l8924
 10342  003600  0A01               	xorlw	1	; case 19
 10343  003602  B4D8               	btfsc	status,2,c
 10344  003604  D558               	goto	l325
 10345  003606  0A07               	xorlw	7	; case 20
 10346  003608  B4D8               	btfsc	status,2,c
 10347  00360A  D558               	goto	l8926
 10348  00360C  0A01               	xorlw	1	; case 21
 10349  00360E  B4D8               	btfsc	status,2,c
 10350  003610  D55C               	goto	l8928
 10351  003612  0A03               	xorlw	3	; case 22
 10352  003614  B4D8               	btfsc	status,2,c
 10353  003616  D560               	goto	l8930
 10354  003618  0A01               	xorlw	1	; case 23
 10355  00361A  B4D8               	btfsc	status,2,c
 10356  00361C  D564               	goto	l8932
 10357  00361E  0A0F               	xorlw	15	; case 24
 10358  003620  B4D8               	btfsc	status,2,c
 10359  003622  D568               	goto	l8934
 10360  003624  0A01               	xorlw	1	; case 25
 10361  003626  B4D8               	btfsc	status,2,c
 10362  003628  D56C               	goto	l8936
 10363  00362A  0A3F               	xorlw	63	; case 38
 10364  00362C  B4D8               	btfsc	status,2,c
 10365  00362E  D570               	goto	l8938
 10366  003630  0A01               	xorlw	1	; case 39
 10367  003632  B4D8               	btfsc	status,2,c
 10368  003634  D574               	goto	l8940
 10369  003636  0A0F               	xorlw	15	; case 40
 10370  003638  B4D8               	btfsc	status,2,c
 10371  00363A  D578               	goto	l8942
 10372  00363C  0A01               	xorlw	1	; case 41
 10373  00363E  B4D8               	btfsc	status,2,c
 10374  003640  D57C               	goto	l8944
 10375  003642  0A03               	xorlw	3	; case 42
 10376  003644  B4D8               	btfsc	status,2,c
 10377  003646  D580               	goto	l8946
 10378  003648  0A01               	xorlw	1	; case 43
 10379  00364A  B4D8               	btfsc	status,2,c
 10380  00364C  D584               	goto	l8948
 10381  00364E  0A07               	xorlw	7	; case 44
 10382  003650  B4D8               	btfsc	status,2,c
 10383  003652  D588               	goto	l8950
 10384  003654  0A01               	xorlw	1	; case 45
 10385  003656  B4D8               	btfsc	status,2,c
 10386  003658  D58C               	goto	l8952
 10387  00365A  0A03               	xorlw	3	; case 46
 10388  00365C  B4D8               	btfsc	status,2,c
 10389  00365E  D590               	goto	l8954
 10390  003660  0A01               	xorlw	1	; case 47
 10391  003662  B4D8               	btfsc	status,2,c
 10392  003664  D594               	goto	l8956
 10393  003666  0A1F               	xorlw	31	; case 48
 10394  003668  B4D8               	btfsc	status,2,c
 10395  00366A  D598               	goto	l8958
 10396  00366C  0A01               	xorlw	1	; case 49
 10397  00366E  B4D8               	btfsc	status,2,c
 10398  003670  D59C               	goto	l8960
 10399  003672  0A03               	xorlw	3	; case 50
 10400  003674  B4D8               	btfsc	status,2,c
 10401  003676  D5A0               	goto	l8962
 10402  003678  0A01               	xorlw	1	; case 51
 10403  00367A  B4D8               	btfsc	status,2,c
 10404  00367C  D5A4               	goto	l8964
 10405  00367E  0A07               	xorlw	7	; case 52
 10406  003680  B4D8               	btfsc	status,2,c
 10407  003682  D5A8               	goto	l8966
 10408  003684  0A01               	xorlw	1	; case 53
 10409  003686  B4D8               	btfsc	status,2,c
 10410  003688  D5AC               	goto	l8968
 10411  00368A  0A03               	xorlw	3	; case 54
 10412  00368C  B4D8               	btfsc	status,2,c
 10413  00368E  D5B0               	goto	l8970
 10414  003690  0A01               	xorlw	1	; case 55
 10415  003692  B4D8               	btfsc	status,2,c
 10416  003694  D5B4               	goto	l8972
 10417  003696  0A0F               	xorlw	15	; case 56
 10418  003698  B4D8               	btfsc	status,2,c
 10419  00369A  D5B8               	goto	l8974
 10420  00369C  0A01               	xorlw	1	; case 57
 10421  00369E  B4D8               	btfsc	status,2,c
 10422  0036A0  D5BC               	goto	l8976
 10423  0036A2  0A03               	xorlw	3	; case 58
 10424  0036A4  B4D8               	btfsc	status,2,c
 10425  0036A6  D5C0               	goto	l8978
 10426  0036A8  0A01               	xorlw	1	; case 59
 10427  0036AA  B4D8               	btfsc	status,2,c
 10428  0036AC  D5C4               	goto	l8980
 10429  0036AE  0A07               	xorlw	7	; case 60
 10430  0036B0  B4D8               	btfsc	status,2,c
 10431  0036B2  D5C8               	goto	l8982
 10432  0036B4  0A01               	xorlw	1	; case 61
 10433  0036B6  B4D8               	btfsc	status,2,c
 10434  0036B8  D5CC               	goto	l8984
 10435  0036BA  0A03               	xorlw	3	; case 62
 10436  0036BC  B4D8               	btfsc	status,2,c
 10437  0036BE  D5D0               	goto	l8986
 10438  0036C0  0A01               	xorlw	1	; case 63
 10439  0036C2  B4D8               	btfsc	status,2,c
 10440  0036C4  D5D4               	goto	l8988
 10441  0036C6  0A7F               	xorlw	127	; case 64
 10442  0036C8  B4D8               	btfsc	status,2,c
 10443  0036CA  D5D8               	goto	l8990
 10444  0036CC  0A01               	xorlw	1	; case 65
 10445  0036CE  B4D8               	btfsc	status,2,c
 10446  0036D0  D5DC               	goto	l8992
 10447  0036D2  0A03               	xorlw	3	; case 66
 10448  0036D4  B4D8               	btfsc	status,2,c
 10449  0036D6  D5E0               	goto	l8994
 10450  0036D8  0A01               	xorlw	1	; case 67
 10451  0036DA  B4D8               	btfsc	status,2,c
 10452  0036DC  D5E4               	goto	l8996
 10453  0036DE  0A07               	xorlw	7	; case 68
 10454  0036E0  B4D8               	btfsc	status,2,c
 10455  0036E2  D5E8               	goto	l8998
 10456  0036E4  0A01               	xorlw	1	; case 69
 10457  0036E6  B4D8               	btfsc	status,2,c
 10458  0036E8  D5EC               	goto	l9000
 10459  0036EA  0A03               	xorlw	3	; case 70
 10460  0036EC  B4D8               	btfsc	status,2,c
 10461  0036EE  D5F0               	goto	l9002
 10462  0036F0  0A01               	xorlw	1	; case 71
 10463  0036F2  B4D8               	btfsc	status,2,c
 10464  0036F4  D5F4               	goto	l9004
 10465  0036F6  0A0F               	xorlw	15	; case 72
 10466  0036F8  B4D8               	btfsc	status,2,c
 10467  0036FA  D5F8               	goto	l9006
 10468  0036FC  0A01               	xorlw	1	; case 73
 10469  0036FE  B4D8               	btfsc	status,2,c
 10470  003700  D5FC               	goto	l9008
 10471  003702  0A03               	xorlw	3	; case 74
 10472  003704  B4D8               	btfsc	status,2,c
 10473  003706  D600               	goto	l9010
 10474  003708  0A01               	xorlw	1	; case 75
 10475  00370A  B4D8               	btfsc	status,2,c
 10476  00370C  D604               	goto	l9012
 10477  00370E  0A07               	xorlw	7	; case 76
 10478  003710  B4D8               	btfsc	status,2,c
 10479  003712  D608               	goto	l9014
 10480  003714  0A01               	xorlw	1	; case 77
 10481  003716  B4D8               	btfsc	status,2,c
 10482  003718  D60C               	goto	l9016
 10483  00371A  0A03               	xorlw	3	; case 78
 10484  00371C  B4D8               	btfsc	status,2,c
 10485  00371E  D610               	goto	l9018
 10486  003720  0A01               	xorlw	1	; case 79
 10487  003722  B4D8               	btfsc	status,2,c
 10488  003724  D614               	goto	l9020
 10489  003726  0A1F               	xorlw	31	; case 80
 10490  003728  B4D8               	btfsc	status,2,c
 10491  00372A  D618               	goto	l9022
 10492  00372C  0A01               	xorlw	1	; case 81
 10493  00372E  B4D8               	btfsc	status,2,c
 10494  003730  D61C               	goto	l9024
 10495  003732  0A03               	xorlw	3	; case 82
 10496  003734  B4D8               	btfsc	status,2,c
 10497  003736  D620               	goto	l9026
 10498  003738  0A01               	xorlw	1	; case 83
 10499  00373A  B4D8               	btfsc	status,2,c
 10500  00373C  D624               	goto	l9028
 10501  00373E  0A07               	xorlw	7	; case 84
 10502  003740  B4D8               	btfsc	status,2,c
 10503  003742  D628               	goto	l9030
 10504  003744  0A01               	xorlw	1	; case 85
 10505  003746  B4D8               	btfsc	status,2,c
 10506  003748  D62C               	goto	l9032
 10507  00374A  0A03               	xorlw	3	; case 86
 10508  00374C  B4D8               	btfsc	status,2,c
 10509  00374E  D630               	goto	l9034
 10510  003750  0A01               	xorlw	1	; case 87
 10511  003752  B4D8               	btfsc	status,2,c
 10512  003754  D634               	goto	l9036
 10513  003756  0A0F               	xorlw	15	; case 88
 10514  003758  B4D8               	btfsc	status,2,c
 10515  00375A  D638               	goto	l9038
 10516  00375C  0A01               	xorlw	1	; case 89
 10517  00375E  B4D8               	btfsc	status,2,c
 10518  003760  D63C               	goto	l9040
 10519  003762  0A03               	xorlw	3	; case 90
 10520  003764  B4D8               	btfsc	status,2,c
 10521  003766  D640               	goto	l9042
 10522  003768  0A01               	xorlw	1	; case 91
 10523  00376A  B4D8               	btfsc	status,2,c
 10524  00376C  D644               	goto	l9044
 10525  00376E  0A07               	xorlw	7	; case 92
 10526  003770  B4D8               	btfsc	status,2,c
 10527  003772  D648               	goto	l9046
 10528  003774  0A01               	xorlw	1	; case 93
 10529  003776  B4D8               	btfsc	status,2,c
 10530  003778  D64C               	goto	l9048
 10531  00377A  0A03               	xorlw	3	; case 94
 10532  00377C  B4D8               	btfsc	status,2,c
 10533  00377E  D650               	goto	l9050
 10534  003780  0A01               	xorlw	1	; case 95
 10535  003782  B4D8               	btfsc	status,2,c
 10536  003784  D654               	goto	l9052
 10537  003786  0A3F               	xorlw	63	; case 96
 10538  003788  B4D8               	btfsc	status,2,c
 10539  00378A  D658               	goto	l9054
 10540  00378C  0A01               	xorlw	1	; case 97
 10541  00378E  B4D8               	btfsc	status,2,c
 10542  003790  D65C               	goto	l9056
 10543  003792  0A03               	xorlw	3	; case 98
 10544  003794  B4D8               	btfsc	status,2,c
 10545  003796  D660               	goto	l9058
 10546  003798  0A01               	xorlw	1	; case 99
 10547  00379A  B4D8               	btfsc	status,2,c
 10548  00379C  D664               	goto	l9060
 10549  00379E  0A07               	xorlw	7	; case 100
 10550  0037A0  B4D8               	btfsc	status,2,c
 10551  0037A2  D668               	goto	l9062
 10552  0037A4  0A01               	xorlw	1	; case 101
 10553  0037A6  B4D8               	btfsc	status,2,c
 10554  0037A8  D66C               	goto	l9064
 10555  0037AA  0A03               	xorlw	3	; case 102
 10556  0037AC  B4D8               	btfsc	status,2,c
 10557  0037AE  D670               	goto	l9066
 10558  0037B0  0A01               	xorlw	1	; case 103
 10559  0037B2  B4D8               	btfsc	status,2,c
 10560  0037B4  D674               	goto	l9068
 10561  0037B6  0A0F               	xorlw	15	; case 104
 10562  0037B8  B4D8               	btfsc	status,2,c
 10563  0037BA  D678               	goto	l9070
 10564  0037BC  0A01               	xorlw	1	; case 105
 10565  0037BE  B4D8               	btfsc	status,2,c
 10566  0037C0  D67C               	goto	l9072
 10567  0037C2  0A03               	xorlw	3	; case 106
 10568  0037C4  B4D8               	btfsc	status,2,c
 10569  0037C6  D680               	goto	l9074
 10570  0037C8  0A01               	xorlw	1	; case 107
 10571  0037CA  B4D8               	btfsc	status,2,c
 10572  0037CC  D684               	goto	l9076
 10573  0037CE  0A07               	xorlw	7	; case 108
 10574  0037D0  B4D8               	btfsc	status,2,c
 10575  0037D2  D688               	goto	l9078
 10576  0037D4  0A01               	xorlw	1	; case 109
 10577  0037D6  B4D8               	btfsc	status,2,c
 10578  0037D8  D68C               	goto	l9080
 10579  0037DA  0A03               	xorlw	3	; case 110
 10580  0037DC  B4D8               	btfsc	status,2,c
 10581  0037DE  D690               	goto	l9082
 10582  0037E0  0A01               	xorlw	1	; case 111
 10583  0037E2  B4D8               	btfsc	status,2,c
 10584  0037E4  D694               	goto	l9084
 10585  0037E6  0A1F               	xorlw	31	; case 112
 10586  0037E8  B4D8               	btfsc	status,2,c
 10587  0037EA  D698               	goto	l9086
 10588  0037EC  0A01               	xorlw	1	; case 113
 10589  0037EE  B4D8               	btfsc	status,2,c
 10590  0037F0  D69C               	goto	l9088
 10591  0037F2  0A03               	xorlw	3	; case 114
 10592  0037F4  B4D8               	btfsc	status,2,c
 10593  0037F6  D6A0               	goto	l9090
 10594  0037F8  0A01               	xorlw	1	; case 115
 10595  0037FA  B4D8               	btfsc	status,2,c
 10596  0037FC  D6A4               	goto	l9092
 10597  0037FE  0A07               	xorlw	7	; case 116
 10598  003800  B4D8               	btfsc	status,2,c
 10599  003802  D6A8               	goto	l410
 10600  003804  0A01               	xorlw	1	; case 117
 10601  003806  B4D8               	btfsc	status,2,c
 10602  003808  D6A8               	goto	l9094
 10603  00380A  0A03               	xorlw	3	; case 118
 10604  00380C  B4D8               	btfsc	status,2,c
 10605  00380E  D6AE               	goto	l9096
 10606  003810  0A01               	xorlw	1	; case 119
 10607  003812  B4D8               	btfsc	status,2,c
 10608  003814  D6B2               	goto	l9098
 10609  003816  D6B8               	goto	l9100
 10610  003818                     l9106:
 10611                           
 10612                           ;main.c: 1845: else if (1 == vscp_page_select) {
 10613  003818  0432               	decf	_vscp_page_select,w,c
 10614  00381A  1033               	iorwf	_vscp_page_select+1,w,c
 10615  00381C  A4D8               	btfss	status,2,c
 10616  00381E  D02B               	goto	l9122
 10617                           
 10618                           ;main.c: 1847: if (reg < 0x48) {
 10619  003820  0E48               	movlw	72
 10620  003822  5C26               	subwf	vscp_readAppReg@reg,w,c
 10621  003824  B0D8               	btfsc	status,0,c
 10622  003826  D009               	goto	l9112
 10623                           
 10624                           ;main.c: 1848: rv = readEEPROM(0xAA + reg ) ;
 10625  003828  0EAA               	movlw	170
 10626  00382A  2426               	addwf	vscp_readAppReg@reg,w,c
 10627  00382C  6E1E               	movwf	readEEPROM@address,c
 10628  00382E  6A1F               	clrf	readEEPROM@address+1,c
 10629  003830  0E00               	movlw	0
 10630  003832  221F               	addwfc	readEEPROM@address+1,f,c
 10631  003834  EC6F  F03A         	call	_readEEPROM	;wreg free
 10632  003838  D01D               	goto	L139
 10633  00383A                     l9112:
 10634                           
 10635                           ;main.c: 1850: else if (reg < 0x54) {
 10636  00383A  0E54               	movlw	84
 10637  00383C  5C26               	subwf	vscp_readAppReg@reg,w,c
 10638  00383E  B0D8               	btfsc	status,0,c
 10639  003840  D01A               	goto	l9122
 10640                           
 10641                           ;main.c: 1852: uint8_t pos = reg - 0x48;
 10642  003842  5026               	movf	vscp_readAppReg@reg,w,c
 10643  003844  0FB8               	addlw	184
 10644  003846  6E25               	movwf	vscp_readAppReg@pos,c
 10645                           
 10646                           ;main.c: 1853: if (0 == pos) pos = 11;
 10647  003848  6625               	tstfsz	vscp_readAppReg@pos,c
 10648  00384A  D002               	goto	l9120
 10649  00384C  0E0B               	movlw	11
 10650  00384E  6E25               	movwf	vscp_readAppReg@pos,c
 10651  003850                     l9120:
 10652                           
 10653                           ;main.c: 1854: rv = adc[reg - 0x48];
 10654  003850  0EB8               	movlw	184
 10655  003852  6E21               	movwf	??_vscp_readAppReg& (0+255),c
 10656  003854  0EFF               	movlw	255
 10657  003856  6E22               	movwf	(??_vscp_readAppReg+1)& (0+255),c
 10658  003858  5026               	movf	vscp_readAppReg@reg,w,c
 10659  00385A  6E23               	movwf	(??_vscp_readAppReg+2)& (0+255),c
 10660  00385C  6A24               	clrf	(??_vscp_readAppReg+3)& (0+255),c
 10661  00385E  5021               	movf	??_vscp_readAppReg,w,c
 10662  003860  2623               	addwf	??_vscp_readAppReg+2,f,c
 10663  003862  5022               	movf	??_vscp_readAppReg+1,w,c
 10664  003864  2224               	addwfc	??_vscp_readAppReg+3,f,c
 10665  003866  0EA4               	movlw	low _adc
 10666  003868  2423               	addwf	??_vscp_readAppReg+2,w,c
 10667  00386A  6ED9               	movwf	fsr2l,c
 10668  00386C  0E01               	movlw	high _adc
 10669  00386E  2024               	addwfc	??_vscp_readAppReg+3,w,c
 10670  003870  6EDA               	movwf	fsr2h,c
 10671  003872  50DF               	movf	indf2,w,c
 10672  003874                     L139:
 10673  003874  6E27               	movwf	vscp_readAppReg@rv,c
 10674  003876                     l9122:
 10675                           
 10676                           ;main.c: 1855: }
 10677                           ;main.c: 1856: }
 10678                           ;main.c: 1858: return rv;
 10679  003876  5027               	movf	vscp_readAppReg@rv,w,c
 10680  003878  0012               	return	
 10681  00387A                     __end_of_vscp_readAppReg:
 10682                           	opt stack 0
 10683                           tblptru	equ	0xFF8
 10684                           tblptrh	equ	0xFF7
 10685                           tblptrl	equ	0xFF6
 10686                           tablat	equ	0xFF5
 10687                           prodh	equ	0xFF4
 10688                           prodl	equ	0xFF3
 10689                           postinc0	equ	0xFEE
 10690                           wreg	equ	0xFE8
 10691                           postdec1	equ	0xFE5
 10692                           fsr1h	equ	0xFE2
 10693                           fsr1l	equ	0xFE1
 10694                           indf2	equ	0xFDF
 10695                           fsr2h	equ	0xFDA
 10696                           fsr2l	equ	0xFD9
 10697                           status	equ	0xFD8
 10698                           
 10699 ;; *************** function _vscp_newNodeOnline *****************
 10700 ;; Defined at:
 10701 ;;		line 490 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;		None
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;		None               void
 10708 ;; Registers used:
 10709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10715 ;;      Params:         0       0       0       0       0       0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0
 10717 ;;      Temps:          0       1       0       0       0       0       0
 10718 ;;      Totals:         0       1       0       0       0       0       0
 10719 ;;Total ram usage:        1 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    7
 10722 ;; This function calls:
 10723 ;;		_vscp_sendEvent
 10724 ;; This function is called by:
 10725 ;;		_vscp_handleProtocolEvent
 10726 ;; This function uses a non-reentrant model
 10727 ;;
 10728                           
 10729                           	psect	text25
 10730  006FEA                     __ptext25:
 10731                           	opt stack 0
 10732  006FEA                     _vscp_newNodeOnline:
 10733                           	opt stack 22
 10734                           
 10735                           ;vscp_firmware.c: 492: if ((1 == (vscp_imsg.flags & 0x0f)) &&
 10736                           ;vscp_firmware.c: 493: (vscp_nickname == vscp_imsg.data[ 0 ])) {
 10737                           
 10738                           ;incstack = 0
 10739  006FEA  C03B  F09F         	movff	_vscp_imsg,??_vscp_newNodeOnline
 10740  006FEE  0E0F               	movlw	15
 10741  006FF0  0100               	movlb	0	; () banked
 10742  006FF2  179F               	andwf	??_vscp_newNodeOnline& (0+255),f,b
 10743  006FF4  0100               	movlb	0	; () banked
 10744  006FF6  519F               	movf	??_vscp_newNodeOnline& (0+255),w,b
 10745  006FF8  0A01               	xorlw	1
 10746  006FFA  A4D8               	btfss	status,2,c
 10747  006FFC  D017               	goto	l1064
 10748                           
 10749                           ; BSR set to: 0
 10750  006FFE  0100               	movlb	0	; () banked
 10751  007000  51D2               	movf	_vscp_nickname& (0+255),w,b
 10752  007002  EE20  F041         	lfsr	2,_vscp_imsg+6
 10753  007006  62DF               	cpfseq	indf2,c
 10754  007008  D011               	goto	l1064
 10755                           
 10756                           ; BSR set to: 0
 10757                           ;vscp_firmware.c: 499: vscp_omsg.flags = 0x80;
 10758  00700A  0E80               	movlw	128
 10759  00700C  0100               	movlb	0	; () banked
 10760  00700E  6FD4               	movwf	_vscp_omsg& (0+255),b
 10761                           
 10762                           ;vscp_firmware.c: 500: vscp_omsg.priority = 0x00;
 10763  007010  0E00               	movlw	0
 10764  007012  0100               	movlb	0	; () banked
 10765  007014  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 10766                           
 10767                           ;vscp_firmware.c: 501: vscp_omsg.vscp_class = 0;
 10768  007016  0E00               	movlw	0
 10769  007018  0100               	movlb	0	; () banked
 10770  00701A  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 10771  00701C  0E00               	movlw	0
 10772  00701E  0100               	movlb	0	; () banked
 10773  007020  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 10774                           
 10775                           ;vscp_firmware.c: 502: vscp_omsg.vscp_type = 3;
 10776  007022  0E03               	movlw	3
 10777  007024  0100               	movlb	0	; () banked
 10778  007026  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;vscp_firmware.c: 503: vscp_sendEvent();
 10782  007028  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 10783  00702C                     l1064:
 10784  00702C  0012               	return	
 10785  00702E                     __end_of_vscp_newNodeOnline:
 10786                           	opt stack 0
 10787                           tblptru	equ	0xFF8
 10788                           tblptrh	equ	0xFF7
 10789                           tblptrl	equ	0xFF6
 10790                           tablat	equ	0xFF5
 10791                           prodh	equ	0xFF4
 10792                           prodl	equ	0xFF3
 10793                           postinc0	equ	0xFEE
 10794                           wreg	equ	0xFE8
 10795                           postdec1	equ	0xFE5
 10796                           fsr1h	equ	0xFE2
 10797                           fsr1l	equ	0xFE1
 10798                           indf2	equ	0xFDF
 10799                           fsr2h	equ	0xFDA
 10800                           fsr2l	equ	0xFD9
 10801                           status	equ	0xFD8
 10802                           
 10803 ;; *************** function _vscp_handleSetNickname *****************
 10804 ;; Defined at:
 10805 ;;		line 410 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;		None
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;		None
 10810 ;; Return value:  Size  Location     Type
 10811 ;;		None               void
 10812 ;; Registers used:
 10813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10819 ;;      Params:         0       0       0       0       0       0       0
 10820 ;;      Locals:         0       0       0       0       0       0       0
 10821 ;;      Temps:          1       0       0       0       0       0       0
 10822 ;;      Totals:         1       0       0       0       0       0       0
 10823 ;;Total ram usage:        1 bytes
 10824 ;; Hardware stack levels used:    1
 10825 ;; Hardware stack levels required when called:    4
 10826 ;; This function calls:
 10827 ;;		_vscp_setSegmentCRC
 10828 ;;		_vscp_writeNicknamePermanent
 10829 ;; This function is called by:
 10830 ;;		_vscp_handleProtocolEvent
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text26
 10835  00721C                     __ptext26:
 10836                           	opt stack 0
 10837  00721C                     _vscp_handleSetNickname:
 10838                           	opt stack 25
 10839                           
 10840                           ;vscp_firmware.c: 412: if ((2 == (vscp_imsg.flags & 0x0f)) &&
 10841                           ;vscp_firmware.c: 413: (vscp_nickname == vscp_imsg.data[ 0 ])) {
 10842                           
 10843                           ;incstack = 0
 10844  00721C  C03B  F01C         	movff	_vscp_imsg,??_vscp_handleSetNickname
 10845  007220  0E0F               	movlw	15
 10846  007222  161C               	andwf	??_vscp_handleSetNickname,f,c
 10847  007224  501C               	movf	??_vscp_handleSetNickname,w,c
 10848  007226  0A02               	xorlw	2
 10849  007228  A4D8               	btfss	status,2,c
 10850  00722A  D00F               	goto	l1053
 10851  00722C  0100               	movlb	0	; () banked
 10852  00722E  51D2               	movf	_vscp_nickname& (0+255),w,b
 10853  007230  EE20  F041         	lfsr	2,_vscp_imsg+6
 10854  007234  62DF               	cpfseq	indf2,c
 10855  007236  D009               	goto	l1053
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;vscp_firmware.c: 416: vscp_nickname = vscp_imsg.data[ 1 ];
 10859  007238  C042  F0D2         	movff	_vscp_imsg+7,_vscp_nickname
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;vscp_firmware.c: 417: vscp_writeNicknamePermanent(vscp_nickname);
 10863  00723C  0100               	movlb	0	; () banked
 10864  00723E  51D2               	movf	_vscp_nickname& (0+255),w,b
 10865  007240  EC36  F03A         	call	_vscp_writeNicknamePermanent
 10866                           
 10867                           ;vscp_firmware.c: 418: vscp_setSegmentCRC(0x40);
 10868  007244  0E40               	movlw	64
 10869  007246  EC40  F03A         	call	_vscp_setSegmentCRC
 10870  00724A                     l1053:
 10871  00724A  0012               	return	
 10872  00724C                     __end_of_vscp_handleSetNickname:
 10873                           	opt stack 0
 10874                           tblptru	equ	0xFF8
 10875                           tblptrh	equ	0xFF7
 10876                           tblptrl	equ	0xFF6
 10877                           tablat	equ	0xFF5
 10878                           prodh	equ	0xFF4
 10879                           prodl	equ	0xFF3
 10880                           postinc0	equ	0xFEE
 10881                           wreg	equ	0xFE8
 10882                           postdec1	equ	0xFE5
 10883                           fsr1h	equ	0xFE2
 10884                           fsr1l	equ	0xFE1
 10885                           indf2	equ	0xFDF
 10886                           fsr2h	equ	0xFDA
 10887                           fsr2l	equ	0xFD9
 10888                           status	equ	0xFD8
 10889                           
 10890 ;; *************** function _vscp_handleHeartbeat *****************
 10891 ;; Defined at:
 10892 ;;		line 384 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;		None
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;		None
 10897 ;; Return value:  Size  Location     Type
 10898 ;;		None               void
 10899 ;; Registers used:
 10900 ;;		wreg, status,2, status,0, cstack
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10906 ;;      Params:         0       0       0       0       0       0       0
 10907 ;;      Locals:         0       0       0       0       0       0       0
 10908 ;;      Temps:          1       0       0       0       0       0       0
 10909 ;;      Totals:         1       0       0       0       0       0       0
 10910 ;;Total ram usage:        1 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:    4
 10913 ;; This function calls:
 10914 ;;		_vscp_getSegmentCRC
 10915 ;;		_vscp_setSegmentCRC
 10916 ;;		_vscp_writeNicknamePermanent
 10917 ;; This function is called by:
 10918 ;;		_vscp_handleProtocolEvent
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text27
 10923  00702E                     __ptext27:
 10924                           	opt stack 0
 10925  00702E                     _vscp_handleHeartbeat:
 10926                           	opt stack 25
 10927                           
 10928                           ;vscp_firmware.c: 386: if ( !vscp_getSegmentCRC() ) {
 10929                           
 10930                           ;incstack = 0
 10931  00702E  EC96  F03A         	call	_vscp_getSegmentCRC	;wreg free
 10932  007032  0900               	iorlw	0
 10933  007034  A4D8               	btfss	status,2,c
 10934  007036  D019               	goto	l9766
 10935                           
 10936                           ;vscp_firmware.c: 387: if ( ( 5 == (vscp_imsg.flags & 0x0f ) ) &&
 10937                           ;vscp_firmware.c: 388: (vscp_getSegmentCRC() != vscp_imsg.data[ 0 ])) {
 10938  007038  C03B  F021         	movff	_vscp_imsg,??_vscp_handleHeartbeat
 10939  00703C  0E0F               	movlw	15
 10940  00703E  1621               	andwf	??_vscp_handleHeartbeat,f,c
 10941  007040  5021               	movf	??_vscp_handleHeartbeat,w,c
 10942  007042  0A05               	xorlw	5
 10943  007044  A4D8               	btfss	status,2,c
 10944  007046  D014               	goto	l1049
 10945  007048  EC96  F03A         	call	_vscp_getSegmentCRC	;wreg free
 10946  00704C  1841               	xorwf	_vscp_imsg+6,w,c
 10947  00704E  B4D8               	btfsc	status,2,c
 10948  007050  D00F               	goto	l1049
 10949                           
 10950                           ;vscp_firmware.c: 392: vscp_setSegmentCRC(vscp_imsg.data[ 0 ]);
 10951  007052  5041               	movf	_vscp_imsg+6,w,c
 10952  007054  EC40  F03A         	call	_vscp_setSegmentCRC
 10953                           
 10954                           ;vscp_firmware.c: 395: vscp_nickname = 0xff;
 10955  007058  0100               	movlb	0	; () banked
 10956  00705A  69D2               	setf	_vscp_nickname& (0+255),b
 10957                           
 10958                           ;vscp_firmware.c: 396: vscp_writeNicknamePermanent(0xff);
 10959  00705C  0EFF               	movlw	255
 10960  00705E  EC36  F03A         	call	_vscp_writeNicknamePermanent
 10961                           
 10962                           ;vscp_firmware.c: 397: vscp_node_state = 0x01;
 10963  007062  0E01               	movlw	1
 10964  007064  0100               	movlb	0	; () banked
 10965  007066  6FD3               	movwf	_vscp_node_state& (0+255),b
 10966  007068  D003               	goto	l1049
 10967  00706A                     l9766:
 10968                           
 10969                           ;vscp_firmware.c: 400: else {
 10970                           ;vscp_firmware.c: 402: vscp_setSegmentCRC(vscp_imsg.data[ 0 ]);
 10971  00706A  5041               	movf	_vscp_imsg+6,w,c
 10972  00706C  EC40  F03A         	call	_vscp_setSegmentCRC
 10973  007070                     l1049:
 10974  007070  0012               	return	
 10975  007072                     __end_of_vscp_handleHeartbeat:
 10976                           	opt stack 0
 10977                           tblptru	equ	0xFF8
 10978                           tblptrh	equ	0xFF7
 10979                           tblptrl	equ	0xFF6
 10980                           tablat	equ	0xFF5
 10981                           prodh	equ	0xFF4
 10982                           prodl	equ	0xFF3
 10983                           postinc0	equ	0xFEE
 10984                           wreg	equ	0xFE8
 10985                           postdec1	equ	0xFE5
 10986                           fsr1h	equ	0xFE2
 10987                           fsr1l	equ	0xFE1
 10988                           indf2	equ	0xFDF
 10989                           fsr2h	equ	0xFDA
 10990                           fsr2l	equ	0xFD9
 10991                           status	equ	0xFD8
 10992                           
 10993 ;; *************** function _vscp_handleDropNickname *****************
 10994 ;; Defined at:
 10995 ;;		line 426 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;		None
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;  bytes           1   32[COMRAM] unsigned char 
 11000 ;; Return value:  Size  Location     Type
 11001 ;;		None               void
 11002 ;; Registers used:
 11003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11009 ;;      Params:         0       0       0       0       0       0       0
 11010 ;;      Locals:         1       0       0       0       0       0       0
 11011 ;;      Temps:          0       0       0       0       0       0       0
 11012 ;;      Totals:         1       0       0       0       0       0       0
 11013 ;;Total ram usage:        1 bytes
 11014 ;; Hardware stack levels used:    1
 11015 ;; Hardware stack levels required when called:    5
 11016 ;; This function calls:
 11017 ;;		_vscp_init
 11018 ;;		_vscp_writeNicknamePermanent
 11019 ;; This function is called by:
 11020 ;;		_vscp_handleProtocolEvent
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	text28
 11025  0071AE                     __ptext28:
 11026                           	opt stack 0
 11027  0071AE                     _vscp_handleDropNickname:
 11028                           	opt stack 24
 11029                           
 11030                           ;vscp_firmware.c: 428: uint8_t bytes = vscp_imsg.flags & 0x0f;
 11031                           
 11032                           ;incstack = 0
 11033  0071AE  503B               	movf	_vscp_imsg,w,c
 11034  0071B0  0B0F               	andlw	15
 11035  0071B2  6E21               	movwf	vscp_handleDropNickname@bytes,c
 11036                           
 11037                           ;vscp_firmware.c: 434: if ((bytes >= 1) && (vscp_nickname == vscp_imsg.data[ 0 ])) {
 11038  0071B4  5021               	movf	vscp_handleDropNickname@bytes,w,c
 11039  0071B6  B4D8               	btfsc	status,2,c
 11040  0071B8  D015               	goto	l1060
 11041  0071BA  0100               	movlb	0	; () banked
 11042  0071BC  51D2               	movf	_vscp_nickname& (0+255),w,b
 11043  0071BE  EE20  F041         	lfsr	2,_vscp_imsg+6
 11044  0071C2  62DF               	cpfseq	indf2,c
 11045  0071C4  D00F               	goto	l1060
 11046                           
 11047                           ; BSR set to: 0
 11048                           ;vscp_firmware.c: 466: if ((bytes == 1) || ((bytes > 1) && (vscp_imsg.data[1] == 0))) {
 11049  0071C6  0421               	decf	vscp_handleDropNickname@bytes,w,c
 11050  0071C8  B4D8               	btfsc	status,2,c
 11051  0071CA  D005               	goto	l1059
 11052                           
 11053                           ; BSR set to: 0
 11054  0071CC  0E01               	movlw	1
 11055  0071CE  6421               	cpfsgt	vscp_handleDropNickname@bytes,c
 11056  0071D0  D009               	goto	l1060
 11057                           
 11058                           ; BSR set to: 0
 11059  0071D2  6642               	tstfsz	_vscp_imsg+7,c
 11060  0071D4  D007               	goto	l1060
 11061  0071D6                     l1059:
 11062                           
 11063                           ; BSR set to: 0
 11064                           ;vscp_firmware.c: 468: vscp_nickname = 0xff;
 11065  0071D6  0100               	movlb	0	; () banked
 11066  0071D8  69D2               	setf	_vscp_nickname& (0+255),b
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;vscp_firmware.c: 469: vscp_writeNicknamePermanent(0xff);
 11070  0071DA  0EFF               	movlw	255
 11071  0071DC  EC36  F03A         	call	_vscp_writeNicknamePermanent
 11072                           
 11073                           ;vscp_firmware.c: 470: vscp_init();
 11074  0071E0  ECF2  F034         	call	_vscp_init	;wreg free
 11075  0071E4                     l1060:
 11076  0071E4  0012               	return	
 11077  0071E6                     __end_of_vscp_handleDropNickname:
 11078                           	opt stack 0
 11079                           tblptru	equ	0xFF8
 11080                           tblptrh	equ	0xFF7
 11081                           tblptrl	equ	0xFF6
 11082                           tablat	equ	0xFF5
 11083                           prodh	equ	0xFF4
 11084                           prodl	equ	0xFF3
 11085                           postinc0	equ	0xFEE
 11086                           wreg	equ	0xFE8
 11087                           postdec1	equ	0xFE5
 11088                           fsr1h	equ	0xFE2
 11089                           fsr1l	equ	0xFE1
 11090                           indf2	equ	0xFDF
 11091                           fsr2h	equ	0xFDA
 11092                           fsr2l	equ	0xFD9
 11093                           status	equ	0xFD8
 11094                           
 11095 ;; *************** function _vscp_init *****************
 11096 ;; Defined at:
 11097 ;;		line 113 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;		None
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;		None
 11102 ;; Return value:  Size  Location     Type
 11103 ;;		None               void
 11104 ;; Registers used:
 11105 ;;		wreg, status,2, cstack
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11111 ;;      Params:         0       0       0       0       0       0       0
 11112 ;;      Locals:         0       0       0       0       0       0       0
 11113 ;;      Temps:          0       0       0       0       0       0       0
 11114 ;;      Totals:         0       0       0       0       0       0       0
 11115 ;;Total ram usage:        0 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:    4
 11118 ;; This function calls:
 11119 ;;		_vscp_readNicknamePermanent
 11120 ;; This function is called by:
 11121 ;;		_main
 11122 ;;		_vscp_handleDropNickname
 11123 ;;		_vscp_handleProtocolEvent
 11124 ;;		_vscp_handlePreActiveState
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text29
 11129  0069E4                     __ptext29:
 11130                           	opt stack 0
 11131  0069E4                     _vscp_init:
 11132                           	opt stack 26
 11133                           
 11134                           ;vscp_firmware.c: 115: vscp_initledfunc = 0x02;
 11135                           
 11136                           ;incstack = 0
 11137  0069E4  0E02               	movlw	2
 11138  0069E6  6E38               	movwf	_vscp_initledfunc,c
 11139                           
 11140                           ;vscp_firmware.c: 118: vscp_nickname = vscp_readNicknamePermanent();
 11141  0069E8  EC81  F03A         	call	_vscp_readNicknamePermanent	;wreg free
 11142  0069EC  0100               	movlb	0	; () banked
 11143  0069EE  6FD2               	movwf	_vscp_nickname& (0+255),b
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;vscp_firmware.c: 121: if (!vscp_nickname) vscp_nickname = 0xff;
 11147  0069F0  0100               	movlb	0	; () banked
 11148  0069F2  67D2               	tstfsz	_vscp_nickname& (0+255),b
 11149  0069F4  D002               	goto	l8868
 11150                           
 11151                           ; BSR set to: 0
 11152  0069F6  0100               	movlb	0	; () banked
 11153  0069F8  69D2               	setf	_vscp_nickname& (0+255),b
 11154  0069FA                     l8868:
 11155                           
 11156                           ; BSR set to: 0
 11157                           ;vscp_firmware.c: 124: vscp_imsg.flags = 0;
 11158  0069FA  0E00               	movlw	0
 11159  0069FC  6E3B               	movwf	_vscp_imsg,c
 11160                           
 11161                           ;vscp_firmware.c: 125: vscp_imsg.priority = 0;
 11162  0069FE  0E00               	movlw	0
 11163  006A00  6E3C               	movwf	_vscp_imsg+1,c
 11164                           
 11165                           ;vscp_firmware.c: 126: vscp_imsg.vscp_class = 0;
 11166  006A02  0E00               	movlw	0
 11167  006A04  6E3E               	movwf	_vscp_imsg+3,c
 11168  006A06  0E00               	movlw	0
 11169  006A08  6E3D               	movwf	_vscp_imsg+2,c
 11170                           
 11171                           ;vscp_firmware.c: 127: vscp_imsg.vscp_type = 0;
 11172  006A0A  0E00               	movlw	0
 11173  006A0C  6E3F               	movwf	_vscp_imsg+4,c
 11174                           
 11175                           ;vscp_firmware.c: 130: vscp_omsg.flags = 0;
 11176  006A0E  0E00               	movlw	0
 11177  006A10  0100               	movlb	0	; () banked
 11178  006A12  6FD4               	movwf	_vscp_omsg& (0+255),b
 11179                           
 11180                           ;vscp_firmware.c: 131: vscp_omsg.priority = 0;
 11181  006A14  0E00               	movlw	0
 11182  006A16  0100               	movlb	0	; () banked
 11183  006A18  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 11184                           
 11185                           ;vscp_firmware.c: 132: vscp_omsg.vscp_class = 0;
 11186  006A1A  0E00               	movlw	0
 11187  006A1C  0100               	movlb	0	; () banked
 11188  006A1E  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 11189  006A20  0E00               	movlw	0
 11190  006A22  0100               	movlb	0	; () banked
 11191  006A24  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 11192                           
 11193                           ;vscp_firmware.c: 133: vscp_omsg.vscp_type = 0;
 11194  006A26  0E00               	movlw	0
 11195  006A28  0100               	movlb	0	; () banked
 11196  006A2A  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 11197                           
 11198                           ;vscp_firmware.c: 135: vscp_errorcnt = 0;
 11199  006A2C  0E00               	movlw	0
 11200  006A2E  0101               	movlb	1	; () banked
 11201  006A30  6F20               	movwf	_vscp_errorcnt& (0+255),b
 11202                           
 11203                           ;vscp_firmware.c: 136: vscp_alarmstatus = 0;
 11204  006A32  0E00               	movlw	0
 11205  006A34  0100               	movlb	0	; () banked
 11206  006A36  6FCF               	movwf	_vscp_alarmstatus& (0+255),b
 11207                           
 11208                           ;vscp_firmware.c: 138: vscp_probe_address = 0;
 11209  006A38  0E00               	movlw	0
 11210  006A3A  6E39               	movwf	_vscp_probe_address,c
 11211                           
 11212                           ;vscp_firmware.c: 141: vscp_node_state = 0x00;
 11213  006A3C  0E00               	movlw	0
 11214  006A3E  0100               	movlb	0	; () banked
 11215  006A40  6FD3               	movwf	_vscp_node_state& (0+255),b
 11216                           
 11217                           ;vscp_firmware.c: 142: vscp_node_substate = 0x00;
 11218  006A42  0E00               	movlw	0
 11219  006A44  0101               	movlb	1	; () banked
 11220  006A46  6F23               	movwf	_vscp_node_substate& (0+255),b
 11221                           
 11222                           ;vscp_firmware.c: 144: vscp_probe_cnt = 0;
 11223  006A48  0E00               	movlw	0
 11224  006A4A  0101               	movlb	1	; () banked
 11225  006A4C  6F24               	movwf	_vscp_probe_cnt& (0+255),b
 11226                           
 11227                           ;vscp_firmware.c: 145: vscp_page_select = 0;
 11228  006A4E  0E00               	movlw	0
 11229  006A50  6E33               	movwf	_vscp_page_select+1,c
 11230  006A52  0E00               	movlw	0
 11231  006A54  6E32               	movwf	_vscp_page_select,c
 11232                           
 11233                           ;vscp_firmware.c: 148: vscp_timer = 0;
 11234  006A56  0E00               	movlw	0
 11235  006A58  6E35               	movwf	_vscp_timer+1,c	;volatile
 11236  006A5A  0E00               	movlw	0
 11237  006A5C  6E34               	movwf	_vscp_timer,c	;volatile
 11238                           
 11239                           ;vscp_firmware.c: 149: vscp_configtimer = 0;
 11240  006A5E  0E00               	movlw	0
 11241  006A60  0101               	movlb	1	; () banked
 11242  006A62  6F1D               	movwf	(_vscp_configtimer+1)& (0+255),b	;volatile
 11243  006A64  0E00               	movlw	0
 11244  006A66  0101               	movlb	1	; () banked
 11245  006A68  6F1C               	movwf	_vscp_configtimer& (0+255),b	;volatile
 11246                           
 11247                           ;vscp_firmware.c: 150: vscp_second = 0;
 11248  006A6A  0E00               	movlw	0
 11249  006A6C  0101               	movlb	1	; () banked
 11250  006A6E  6F25               	movwf	_vscp_second& (0+255),b
 11251                           
 11252                           ;vscp_firmware.c: 151: vscp_minute = 0;
 11253  006A70  0E00               	movlw	0
 11254  006A72  0101               	movlb	1	; () banked
 11255  006A74  6F22               	movwf	_vscp_minute& (0+255),b
 11256                           
 11257                           ;vscp_firmware.c: 152: vscp_hour = 0;
 11258  006A76  0E00               	movlw	0
 11259  006A78  0101               	movlb	1	; () banked
 11260  006A7A  6F21               	movwf	_vscp_hour& (0+255),b
 11261                           
 11262                           ; BSR set to: 1
 11263  006A7C  0012               	return	
 11264  006A7E                     __end_of_vscp_init:
 11265                           	opt stack 0
 11266                           tblptru	equ	0xFF8
 11267                           tblptrh	equ	0xFF7
 11268                           tblptrl	equ	0xFF6
 11269                           tablat	equ	0xFF5
 11270                           prodh	equ	0xFF4
 11271                           prodl	equ	0xFF3
 11272                           postinc0	equ	0xFEE
 11273                           wreg	equ	0xFE8
 11274                           postdec1	equ	0xFE5
 11275                           fsr1h	equ	0xFE2
 11276                           fsr1l	equ	0xFE1
 11277                           indf2	equ	0xFDF
 11278                           fsr2h	equ	0xFDA
 11279                           fsr2l	equ	0xFD9
 11280                           status	equ	0xFD8
 11281                           
 11282 ;; *************** function _vscp_readNicknamePermanent *****************
 11283 ;; Defined at:
 11284 ;;		line 2745 in file "../main.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      unsigned char 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, cstack
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11298 ;;      Params:         0       0       0       0       0       0       0
 11299 ;;      Locals:         0       0       0       0       0       0       0
 11300 ;;      Temps:          0       0       0       0       0       0       0
 11301 ;;      Totals:         0       0       0       0       0       0       0
 11302 ;;Total ram usage:        0 bytes
 11303 ;; Hardware stack levels used:    1
 11304 ;; Hardware stack levels required when called:    3
 11305 ;; This function calls:
 11306 ;;		_readEEPROM
 11307 ;; This function is called by:
 11308 ;;		_vscp_init
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text30
 11313  007502                     __ptext30:
 11314                           	opt stack 0
 11315  007502                     _vscp_readNicknamePermanent:
 11316                           	opt stack 26
 11317                           
 11318                           ;main.c: 2747: return readEEPROM( 0x01 );
 11319                           
 11320                           ; BSR set to: 1
 11321                           ;incstack = 0
 11322  007502  0E00               	movlw	0
 11323  007504  6E1F               	movwf	readEEPROM@address+1,c
 11324  007506  0E01               	movlw	1
 11325  007508  6E1E               	movwf	readEEPROM@address,c
 11326  00750A  EC6F  F03A         	call	_readEEPROM	;wreg free
 11327  00750E  0012               	return	
 11328  007510                     __end_of_vscp_readNicknamePermanent:
 11329                           	opt stack 0
 11330                           tblptru	equ	0xFF8
 11331                           tblptrh	equ	0xFF7
 11332                           tblptrl	equ	0xFF6
 11333                           tablat	equ	0xFF5
 11334                           prodh	equ	0xFF4
 11335                           prodl	equ	0xFF3
 11336                           postinc0	equ	0xFEE
 11337                           wreg	equ	0xFE8
 11338                           postdec1	equ	0xFE5
 11339                           fsr1h	equ	0xFE2
 11340                           fsr1l	equ	0xFE1
 11341                           indf2	equ	0xFDF
 11342                           fsr2h	equ	0xFDA
 11343                           fsr2l	equ	0xFD9
 11344                           status	equ	0xFD8
 11345                           
 11346 ;; *************** function _vscp_goBootloaderMode *****************
 11347 ;; Defined at:
 11348 ;;		line 2730 in file "../main.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;		None
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;		None
 11353 ;; Return value:  Size  Location     Type
 11354 ;;		None               void
 11355 ;; Registers used:
 11356 ;;		wreg, status,2, cstack
 11357 ;; Tracked objects:
 11358 ;;		On entry : 0/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11362 ;;      Params:         0       0       0       0       0       0       0
 11363 ;;      Locals:         0       0       0       0       0       0       0
 11364 ;;      Temps:          0       0       0       0       0       0       0
 11365 ;;      Totals:         0       0       0       0       0       0       0
 11366 ;;Total ram usage:        0 bytes
 11367 ;; Hardware stack levels used:    1
 11368 ;; Hardware stack levels required when called:    3
 11369 ;; This function calls:
 11370 ;;		_writeEEPROM
 11371 ;; This function is called by:
 11372 ;;		_vscp_handleProtocolEvent
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           	psect	text31
 11377  007458                     __ptext31:
 11378                           	opt stack 0
 11379  007458                     _vscp_goBootloaderMode:
 11380                           	opt stack 26
 11381                           
 11382                           ;main.c: 2734: writeEEPROM(0x00, 0xff);
 11383                           
 11384                           ;incstack = 0
 11385  007458  0E00               	movlw	0
 11386  00745A  6E19               	movwf	writeEEPROM@address+1,c
 11387  00745C  0E00               	movlw	0
 11388  00745E  6E18               	movwf	writeEEPROM@address,c
 11389  007460  0EFF               	movlw	255
 11390  007462  6E1A               	movwf	writeEEPROM@data,c
 11391  007464  EC8E  F039         	call	_writeEEPROM	;wreg free
 11392  007468  00FF               	reset		;# 
 11393  00746A  0012               	return	
 11394  00746C                     __end_of_vscp_goBootloaderMode:
 11395                           	opt stack 0
 11396                           tblptru	equ	0xFF8
 11397                           tblptrh	equ	0xFF7
 11398                           tblptrl	equ	0xFF6
 11399                           tablat	equ	0xFF5
 11400                           prodh	equ	0xFF4
 11401                           prodl	equ	0xFF3
 11402                           postinc0	equ	0xFEE
 11403                           wreg	equ	0xFE8
 11404                           postdec1	equ	0xFE5
 11405                           fsr1h	equ	0xFE2
 11406                           fsr1l	equ	0xFE1
 11407                           indf2	equ	0xFDF
 11408                           fsr2h	equ	0xFDA
 11409                           fsr2l	equ	0xFD9
 11410                           status	equ	0xFD8
 11411                           
 11412 ;; *************** function _vscp_getMatrixInfo *****************
 11413 ;; Defined at:
 11414 ;;		line 2665 in file "../main.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;  pData           2   23[COMRAM] PTR unsigned char 
 11417 ;;		 -> vscp_omsg(13), 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;  i               1   25[COMRAM] unsigned char 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;		None               void
 11422 ;; Registers used:
 11423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11429 ;;      Params:         2       0       0       0       0       0       0
 11430 ;;      Locals:         1       0       0       0       0       0       0
 11431 ;;      Temps:          0       0       0       0       0       0       0
 11432 ;;      Totals:         3       0       0       0       0       0       0
 11433 ;;Total ram usage:        3 bytes
 11434 ;; Hardware stack levels used:    1
 11435 ;; Hardware stack levels required when called:    2
 11436 ;; This function calls:
 11437 ;;		Nothing
 11438 ;; This function is called by:
 11439 ;;		_vscp_handleProtocolEvent
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text32
 11444  007342                     __ptext32:
 11445                           	opt stack 0
 11446  007342                     _vscp_getMatrixInfo:
 11447                           	opt stack 27
 11448                           
 11449                           ;main.c: 2667: uint8_t i;
 11450                           ;main.c: 2671: for (i = 0; i < 8; i++) {
 11451                           
 11452                           ;incstack = 0
 11453  007342  0E00               	movlw	0
 11454  007344  6E1A               	movwf	vscp_getMatrixInfo@i,c
 11455  007346  D00B               	goto	L143
 11456  007348                     l6806:
 11457                           
 11458                           ;main.c: 2672: pData[ i ] = 0;
 11459  007348  501A               	movf	vscp_getMatrixInfo@i,w,c
 11460  00734A  0D01               	mullw	1
 11461  00734C  50F3               	movf	prodl,w,c
 11462  00734E  2418               	addwf	vscp_getMatrixInfo@pData,w,c
 11463  007350  6ED9               	movwf	fsr2l,c
 11464  007352  50F4               	movf	prodh,w,c
 11465  007354  2019               	addwfc	vscp_getMatrixInfo@pData+1,w,c
 11466  007356  6EDA               	movwf	fsr2h,c
 11467  007358  0E00               	movlw	0
 11468  00735A  6EDF               	movwf	indf2,c
 11469  00735C  2A1A               	incf	vscp_getMatrixInfo@i,f,c
 11470  00735E                     L143:
 11471  00735E  0E07               	movlw	7
 11472  007360  641A               	cpfsgt	vscp_getMatrixInfo@i,c
 11473  007362  D7F2               	goto	l6806
 11474  007364  0012               	return	
 11475  007366                     __end_of_vscp_getMatrixInfo:
 11476                           	opt stack 0
 11477                           tblptru	equ	0xFF8
 11478                           tblptrh	equ	0xFF7
 11479                           tblptrl	equ	0xFF6
 11480                           tablat	equ	0xFF5
 11481                           prodh	equ	0xFF4
 11482                           prodl	equ	0xFF3
 11483                           postinc0	equ	0xFEE
 11484                           wreg	equ	0xFE8
 11485                           postdec1	equ	0xFE5
 11486                           fsr1h	equ	0xFE2
 11487                           fsr1l	equ	0xFE1
 11488                           indf2	equ	0xFDF
 11489                           fsr2h	equ	0xFDA
 11490                           fsr2l	equ	0xFD9
 11491                           status	equ	0xFD8
 11492                           
 11493 ;; *************** function ___awmod *****************
 11494 ;; Defined at:
 11495 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  dividend        2   23[COMRAM] int 
 11498 ;;  divisor         2   25[COMRAM] int 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  sign            1   28[COMRAM] unsigned char 
 11501 ;;  counter         1   27[COMRAM] unsigned char 
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  2   23[COMRAM] int 
 11504 ;; Registers used:
 11505 ;;		wreg, status,2, status,0, prodl
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11511 ;;      Params:         4       0       0       0       0       0       0
 11512 ;;      Locals:         2       0       0       0       0       0       0
 11513 ;;      Temps:          0       0       0       0       0       0       0
 11514 ;;      Totals:         6       0       0       0       0       0       0
 11515 ;;Total ram usage:        6 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:    2
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_vscp_handleProtocolEvent
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text33
 11526  006B14                     __ptext33:
 11527                           	opt stack 0
 11528  006B14                     ___awmod:
 11529                           	opt stack 27
 11530                           
 11531                           ;incstack = 0
 11532  006B14  0E00               	movlw	0
 11533  006B16  6E1D               	movwf	___awmod@sign,c
 11534  006B18  5019               	movf	___awmod@dividend+1,w,c
 11535  006B1A  0A80               	xorlw	128
 11536  006B1C  6EF3               	movwf	prodl,c
 11537  006B1E  0E80               	movlw	128
 11538  006B20  5CF3               	subwf	prodl,w,c
 11539  006B22  0E00               	movlw	0
 11540  006B24  B4D8               	btfsc	status,2,c
 11541  006B26  5C18               	subwf	___awmod@dividend,w,c
 11542  006B28  B0D8               	btfsc	status,0,c
 11543  006B2A  D006               	goto	l6968
 11544  006B2C  6C18               	negf	___awmod@dividend,c
 11545  006B2E  1E19               	comf	___awmod@dividend+1,f,c
 11546  006B30  B0D8               	btfsc	status,0,c
 11547  006B32  2A19               	incf	___awmod@dividend+1,f,c
 11548  006B34  0E01               	movlw	1
 11549  006B36  6E1D               	movwf	___awmod@sign,c
 11550  006B38                     l6968:
 11551  006B38  501B               	movf	___awmod@divisor+1,w,c
 11552  006B3A  0A80               	xorlw	128
 11553  006B3C  6EF3               	movwf	prodl,c
 11554  006B3E  0E80               	movlw	128
 11555  006B40  5CF3               	subwf	prodl,w,c
 11556  006B42  0E00               	movlw	0
 11557  006B44  B4D8               	btfsc	status,2,c
 11558  006B46  5C1A               	subwf	___awmod@divisor,w,c
 11559  006B48  B0D8               	btfsc	status,0,c
 11560  006B4A  D004               	goto	l6972
 11561  006B4C  6C1A               	negf	___awmod@divisor,c
 11562  006B4E  1E1B               	comf	___awmod@divisor+1,f,c
 11563  006B50  B0D8               	btfsc	status,0,c
 11564  006B52  2A1B               	incf	___awmod@divisor+1,f,c
 11565  006B54                     l6972:
 11566  006B54  501B               	movf	___awmod@divisor+1,w,c
 11567  006B56  101A               	iorwf	___awmod@divisor,w,c
 11568  006B58  B4D8               	btfsc	status,2,c
 11569  006B5A  D018               	goto	l6988
 11570  006B5C  0E01               	movlw	1
 11571  006B5E  6E1C               	movwf	___awmod@counter,c
 11572  006B60  D004               	goto	l6978
 11573  006B62                     l6976:
 11574  006B62  90D8               	bcf	status,0,c
 11575  006B64  361A               	rlcf	___awmod@divisor,f,c
 11576  006B66  361B               	rlcf	___awmod@divisor+1,f,c
 11577  006B68  2A1C               	incf	___awmod@counter,f,c
 11578  006B6A                     l6978:
 11579  006B6A  AE1B               	btfss	___awmod@divisor+1,7,c
 11580  006B6C  D7FA               	goto	l6976
 11581  006B6E                     l6980:
 11582  006B6E  501A               	movf	___awmod@divisor,w,c
 11583  006B70  5C18               	subwf	___awmod@dividend,w,c
 11584  006B72  501B               	movf	___awmod@divisor+1,w,c
 11585  006B74  5819               	subwfb	___awmod@dividend+1,w,c
 11586  006B76  A0D8               	btfss	status,0,c
 11587  006B78  D004               	goto	l6984
 11588  006B7A  501A               	movf	___awmod@divisor,w,c
 11589  006B7C  5E18               	subwf	___awmod@dividend,f,c
 11590  006B7E  501B               	movf	___awmod@divisor+1,w,c
 11591  006B80  5A19               	subwfb	___awmod@dividend+1,f,c
 11592  006B82                     l6984:
 11593  006B82  90D8               	bcf	status,0,c
 11594  006B84  321B               	rrcf	___awmod@divisor+1,f,c
 11595  006B86  321A               	rrcf	___awmod@divisor,f,c
 11596  006B88  2E1C               	decfsz	___awmod@counter,f,c
 11597  006B8A  D7F1               	goto	l6980
 11598  006B8C                     l6988:
 11599  006B8C  501D               	movf	___awmod@sign,w,c
 11600  006B8E  B4D8               	btfsc	status,2,c
 11601  006B90  D004               	goto	l6992
 11602  006B92  6C18               	negf	___awmod@dividend,c
 11603  006B94  1E19               	comf	___awmod@dividend+1,f,c
 11604  006B96  B0D8               	btfsc	status,0,c
 11605  006B98  2A19               	incf	___awmod@dividend+1,f,c
 11606  006B9A                     l6992:
 11607  006B9A  C018  F018         	movff	___awmod@dividend,?___awmod
 11608  006B9E  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
 11609  006BA2  0012               	return	
 11610  006BA4                     __end_of___awmod:
 11611                           	opt stack 0
 11612                           tblptru	equ	0xFF8
 11613                           tblptrh	equ	0xFF7
 11614                           tblptrl	equ	0xFF6
 11615                           tablat	equ	0xFF5
 11616                           prodh	equ	0xFF4
 11617                           prodl	equ	0xFF3
 11618                           postinc0	equ	0xFEE
 11619                           wreg	equ	0xFE8
 11620                           postdec1	equ	0xFE5
 11621                           fsr1h	equ	0xFE2
 11622                           fsr1l	equ	0xFE1
 11623                           indf2	equ	0xFDF
 11624                           fsr2h	equ	0xFDA
 11625                           fsr2l	equ	0xFD9
 11626                           status	equ	0xFD8
 11627                           
 11628 ;; *************** function _vscp_handleProbeState *****************
 11629 ;; Defined at:
 11630 ;;		line 196 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;		None
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;		None               void
 11637 ;; Registers used:
 11638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11644 ;;      Params:         0       0       0       0       0       0       0
 11645 ;;      Locals:         0       0       0       0       0       0       0
 11646 ;;      Temps:          0       0       0       0       0       0       0
 11647 ;;      Totals:         0       0       0       0       0       0       0
 11648 ;;Total ram usage:        0 bytes
 11649 ;; Hardware stack levels used:    1
 11650 ;; Hardware stack levels required when called:    8
 11651 ;; This function calls:
 11652 ;;		_vscp_goActiveState
 11653 ;;		_vscp_sendEvent
 11654 ;;		_vscp_setSegmentCRC
 11655 ;;		_vscp_writeNicknamePermanent
 11656 ;; This function is called by:
 11657 ;;		_main
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text34
 11662  005F50                     __ptext34:
 11663                           	opt stack 0
 11664  005F50                     _vscp_handleProbeState:
 11665                           	opt stack 22
 11666                           
 11667                           ;vscp_firmware.c: 198: switch (vscp_node_substate) {
 11668                           
 11669                           ;incstack = 0
 11670  005F50  D07D               	goto	l9980
 11671  005F52                     l9918:
 11672                           
 11673                           ;vscp_firmware.c: 202: if (0xff != vscp_probe_address) {
 11674  005F52  2839               	incf	_vscp_probe_address,w,c
 11675  005F54  B4D8               	btfsc	status,2,c
 11676  005F56  D017               	goto	l9930
 11677                           
 11678                           ;vscp_firmware.c: 204: vscp_omsg.flags = 0x80 + 1;
 11679  005F58  0E81               	movlw	129
 11680  005F5A  0100               	movlb	0	; () banked
 11681  005F5C  6FD4               	movwf	_vscp_omsg& (0+255),b
 11682                           
 11683                           ;vscp_firmware.c: 205: vscp_omsg.priority = 0x00;
 11684  005F5E  0E00               	movlw	0
 11685  005F60  0100               	movlb	0	; () banked
 11686  005F62  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 11687                           
 11688                           ;vscp_firmware.c: 206: vscp_omsg.vscp_class = 0;
 11689  005F64  0E00               	movlw	0
 11690  005F66  0100               	movlb	0	; () banked
 11691  005F68  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 11692  005F6A  0E00               	movlw	0
 11693  005F6C  0100               	movlb	0	; () banked
 11694  005F6E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 11695                           
 11696                           ;vscp_firmware.c: 207: vscp_omsg.vscp_type = 2;
 11697  005F70  0E02               	movlw	2
 11698  005F72  0100               	movlb	0	; () banked
 11699  005F74  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;vscp_firmware.c: 208: vscp_omsg.data[ 0 ] = vscp_probe_address;
 11703  005F76  C039  F0D9         	movff	_vscp_probe_address,_vscp_omsg+5
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;vscp_firmware.c: 211: vscp_sendEvent();
 11707  005F7A  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 11708                           
 11709                           ;vscp_firmware.c: 213: vscp_node_substate = 0x01;
 11710  005F7E  0E01               	movlw	1
 11711  005F80  0101               	movlb	1	; () banked
 11712  005F82  6F23               	movwf	_vscp_node_substate& (0+255),b
 11713  005F84  D026               	goto	L144
 11714  005F86                     l9930:
 11715                           
 11716                           ;vscp_firmware.c: 219: vscp_node_state = 0x04;
 11717  005F86  0E04               	movlw	4
 11718  005F88  0100               	movlb	0	; () banked
 11719  005F8A  6FD3               	movwf	_vscp_node_state& (0+255),b
 11720                           
 11721                           ;vscp_firmware.c: 222: vscp_omsg.flags = 0x80 + 1;
 11722  005F8C  0E81               	movlw	129
 11723  005F8E  0100               	movlb	0	; () banked
 11724  005F90  6FD4               	movwf	_vscp_omsg& (0+255),b
 11725                           
 11726                           ; BSR set to: 0
 11727                           ;vscp_firmware.c: 223: vscp_omsg.data[ 0 ] = 0xff;
 11728  005F92  0100               	movlb	0	; () banked
 11729  005F94  69D9               	setf	(_vscp_omsg+5)& (0+255),b
 11730                           
 11731                           ;vscp_firmware.c: 224: vscp_omsg.priority = 0x07;
 11732  005F96  0E07               	movlw	7
 11733  005F98  0100               	movlb	0	; () banked
 11734  005F9A  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 11735                           
 11736                           ;vscp_firmware.c: 225: vscp_omsg.vscp_class = 0;
 11737  005F9C  0E00               	movlw	0
 11738  005F9E  0100               	movlb	0	; () banked
 11739  005FA0  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 11740  005FA2  0E00               	movlw	0
 11741  005FA4  0100               	movlb	0	; () banked
 11742  005FA6  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 11743                           
 11744                           ;vscp_firmware.c: 226: vscp_omsg.vscp_type = 3;
 11745  005FA8  0E03               	movlw	3
 11746  005FAA  0100               	movlb	0	; () banked
 11747  005FAC  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;vscp_firmware.c: 229: vscp_sendEvent();
 11751  005FAE  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 11752  005FB2  D057               	goto	l9982
 11753  005FB4                     l1017:
 11754                           
 11755                           ; BSR set to: 1
 11756                           ;vscp_firmware.c: 236: if (vscp_imsg.flags & 0x80) {
 11757  005FB4  AE3B               	btfss	_vscp_imsg,7,c
 11758  005FB6  D017               	goto	l9950
 11759                           
 11760                           ; BSR set to: 1
 11761                           ;vscp_firmware.c: 239: if ((0 == vscp_imsg.vscp_class) &&
 11762                           ;vscp_firmware.c: 240: (3 == vscp_imsg.vscp_type)) {
 11763  005FB8  503E               	movf	_vscp_imsg+3,w,c
 11764  005FBA  103D               	iorwf	_vscp_imsg+2,w,c
 11765  005FBC  A4D8               	btfss	status,2,c
 11766  005FBE  D051               	goto	l9982
 11767                           
 11768                           ; BSR set to: 1
 11769  005FC0  503F               	movf	_vscp_imsg+4,w,c
 11770  005FC2  0A03               	xorlw	3
 11771  005FC4  A4D8               	btfss	status,2,c
 11772  005FC6  D04D               	goto	l9982
 11773                           
 11774                           ; BSR set to: 1
 11775                           ;vscp_firmware.c: 243: if (0 == vscp_probe_address) {
 11776  005FC8  6639               	tstfsz	_vscp_probe_address,c
 11777  005FCA  D008               	goto	l9944
 11778                           
 11779                           ; BSR set to: 1
 11780                           ;vscp_firmware.c: 247: vscp_node_state = 0x02;
 11781  005FCC  0E02               	movlw	2
 11782  005FCE  0100               	movlb	0	; () banked
 11783  005FD0  6FD3               	movwf	_vscp_node_state& (0+255),b
 11784  005FD2                     L144:
 11785                           
 11786                           ;vscp_firmware.c: 248: vscp_timer = 0;
 11787  005FD2  0E00               	movlw	0
 11788  005FD4  6E35               	movwf	_vscp_timer+1,c	;volatile
 11789  005FD6  0E00               	movlw	0
 11790  005FD8  6E34               	movwf	_vscp_timer,c	;volatile
 11791                           
 11792                           ;vscp_firmware.c: 250: } else {
 11793  005FDA  D043               	goto	l9982
 11794  005FDC                     l9944:
 11795                           
 11796                           ;vscp_firmware.c: 253: vscp_probe_address++;
 11797  005FDC  2A39               	incf	_vscp_probe_address,f,c
 11798                           
 11799                           ;vscp_firmware.c: 254: vscp_node_substate = 0x00;
 11800  005FDE  0E00               	movlw	0
 11801  005FE0  0101               	movlb	1	; () banked
 11802  005FE2  6F23               	movwf	_vscp_node_substate& (0+255),b
 11803  005FE4  D016               	goto	L145
 11804  005FE6                     l9950:
 11805                           
 11806                           ; BSR set to: 1
 11807                           ;vscp_firmware.c: 261: if (vscp_timer > 1000) {
 11808  005FE6  0EE9               	movlw	233
 11809  005FE8  5C34               	subwf	_vscp_timer,w,c	;volatile
 11810  005FEA  0E03               	movlw	3
 11811  005FEC  5835               	subwfb	_vscp_timer+1,w,c	;volatile
 11812  005FEE  A0D8               	btfss	status,0,c
 11813  005FF0  D038               	goto	l9982
 11814                           
 11815                           ; BSR set to: 1
 11816                           ;vscp_firmware.c: 263: vscp_probe_cnt++;
 11817  005FF2  0101               	movlb	1	; () banked
 11818  005FF4  2B24               	incf	_vscp_probe_cnt& (0+255),f,b
 11819                           
 11820                           ; BSR set to: 1
 11821                           ;vscp_firmware.c: 265: if (vscp_probe_cnt >= 3) {
 11822  005FF6  0E02               	movlw	2
 11823  005FF8  0101               	movlb	1	; () banked
 11824  005FFA  6524               	cpfsgt	_vscp_probe_cnt& (0+255),b
 11825  005FFC  D023               	goto	l9976
 11826                           
 11827                           ; BSR set to: 1
 11828                           ;vscp_firmware.c: 268: if (0 == vscp_probe_address) {
 11829  005FFE  6639               	tstfsz	_vscp_probe_address,c
 11830  006000  D00C               	goto	l1025
 11831                           
 11832                           ; BSR set to: 1
 11833                           ;vscp_firmware.c: 271: vscp_probe_address++;
 11834  006002  2A39               	incf	_vscp_probe_address,f,c
 11835                           
 11836                           ; BSR set to: 1
 11837                           ;vscp_firmware.c: 272: vscp_node_substate = 0x00;
 11838  006004  0E00               	movlw	0
 11839  006006  0101               	movlb	1	; () banked
 11840  006008  6F23               	movwf	_vscp_node_substate& (0+255),b
 11841                           
 11842                           ; BSR set to: 1
 11843                           ;vscp_firmware.c: 273: vscp_timer = 0;
 11844  00600A  0E00               	movlw	0
 11845  00600C  6E35               	movwf	_vscp_timer+1,c	;volatile
 11846  00600E  0E00               	movlw	0
 11847  006010  6E34               	movwf	_vscp_timer,c	;volatile
 11848  006012                     L145:
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;vscp_firmware.c: 274: vscp_probe_cnt = 0;
 11852  006012  0E00               	movlw	0
 11853  006014  0101               	movlb	1	; () banked
 11854  006016  6F24               	movwf	_vscp_probe_cnt& (0+255),b
 11855                           
 11856                           ;vscp_firmware.c: 276: } else {
 11857  006018  D024               	goto	l9982
 11858  00601A                     l1025:
 11859                           
 11860                           ; BSR set to: 1
 11861                           ;vscp_firmware.c: 279: vscp_nickname = vscp_probe_address;
 11862  00601A  C039  F0D2         	movff	_vscp_probe_address,_vscp_nickname
 11863                           
 11864                           ; BSR set to: 1
 11865                           ;vscp_firmware.c: 280: vscp_node_state = 0x03;
 11866  00601E  0E03               	movlw	3
 11867  006020  0100               	movlb	0	; () banked
 11868  006022  6FD3               	movwf	_vscp_node_state& (0+255),b
 11869                           
 11870                           ;vscp_firmware.c: 281: vscp_node_substate = 0x00;
 11871  006024  0E00               	movlw	0
 11872  006026  0101               	movlb	1	; () banked
 11873  006028  6F23               	movwf	_vscp_node_substate& (0+255),b
 11874                           
 11875                           ; BSR set to: 1
 11876                           ;vscp_firmware.c: 282: vscp_writeNicknamePermanent(vscp_nickname);
 11877  00602A  0100               	movlb	0	; () banked
 11878  00602C  51D2               	movf	_vscp_nickname& (0+255),w,b
 11879  00602E  EC36  F03A         	call	_vscp_writeNicknamePermanent
 11880                           
 11881                           ;vscp_firmware.c: 283: vscp_setSegmentCRC(0x40);
 11882  006032  0E40               	movlw	64
 11883  006034  EC40  F03A         	call	_vscp_setSegmentCRC
 11884                           
 11885                           ;vscp_firmware.c: 286: vscp_probe_cnt = 0;
 11886  006038  0E00               	movlw	0
 11887  00603A  0101               	movlb	1	; () banked
 11888  00603C  6F24               	movwf	_vscp_probe_cnt& (0+255),b
 11889                           
 11890                           ; BSR set to: 1
 11891                           ;vscp_firmware.c: 287: vscp_goActiveState();
 11892  00603E  EC26  F039         	call	_vscp_goActiveState	;wreg free
 11893  006042  D00F               	goto	l9982
 11894  006044                     l9976:
 11895                           
 11896                           ; BSR set to: 1
 11897                           ;vscp_firmware.c: 302: vscp_node_substate = 0x00;
 11898  006044  0E00               	movlw	0
 11899  006046  0101               	movlb	1	; () banked
 11900  006048  6F23               	movwf	_vscp_node_substate& (0+255),b
 11901                           
 11902                           ;vscp_firmware.c: 303: break;
 11903  00604A  D00B               	goto	l9982
 11904  00604C                     l9980:
 11905  00604C  0101               	movlb	1	; () banked
 11906  00604E  5123               	movf	_vscp_node_substate& (0+255),w,b
 11907                           
 11908                           ; Switch size 1, requested type "space"
 11909                           ; Number of cases is 3, Range of values is 0 to 2
 11910                           ; switch strategies available:
 11911                           ; Name         Instructions Cycles
 11912                           ; simple_byte           10     6 (average)
 11913                           ;	Chosen strategy is simple_byte
 11914  006050  0A00               	xorlw	0	; case 0
 11915  006052  B4D8               	btfsc	status,2,c
 11916  006054  D77E               	goto	l9918
 11917  006056  0A01               	xorlw	1	; case 1
 11918  006058  B4D8               	btfsc	status,2,c
 11919  00605A  D7AC               	goto	l1017
 11920  00605C  0A03               	xorlw	3	; case 2
 11921  00605E  A4D8               	btfss	status,2,c
 11922  006060  D7F1               	goto	l9976
 11923  006062                     l9982:
 11924                           
 11925                           ;vscp_firmware.c: 306: vscp_imsg.flags = 0;
 11926  006062  0E00               	movlw	0
 11927  006064  6E3B               	movwf	_vscp_imsg,c
 11928  006066  0012               	return	
 11929  006068                     __end_of_vscp_handleProbeState:
 11930                           	opt stack 0
 11931                           tblptru	equ	0xFF8
 11932                           tblptrh	equ	0xFF7
 11933                           tblptrl	equ	0xFF6
 11934                           tablat	equ	0xFF5
 11935                           prodh	equ	0xFF4
 11936                           prodl	equ	0xFF3
 11937                           postinc0	equ	0xFEE
 11938                           wreg	equ	0xFE8
 11939                           postdec1	equ	0xFE5
 11940                           fsr1h	equ	0xFE2
 11941                           fsr1l	equ	0xFE1
 11942                           indf2	equ	0xFDF
 11943                           fsr2h	equ	0xFDA
 11944                           fsr2l	equ	0xFD9
 11945                           status	equ	0xFD8
 11946                           
 11947 ;; *************** function _vscp_goActiveState *****************
 11948 ;; Defined at:
 11949 ;;		line 346 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;		None
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;		None
 11954 ;; Return value:  Size  Location     Type
 11955 ;;		None               void
 11956 ;; Registers used:
 11957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11958 ;; Tracked objects:
 11959 ;;		On entry : 0/0
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11963 ;;      Params:         0       0       0       0       0       0       0
 11964 ;;      Locals:         0       0       0       0       0       0       0
 11965 ;;      Temps:          0       0       0       0       0       0       0
 11966 ;;      Totals:         0       0       0       0       0       0       0
 11967 ;;Total ram usage:        0 bytes
 11968 ;; Hardware stack levels used:    1
 11969 ;; Hardware stack levels required when called:    7
 11970 ;; This function calls:
 11971 ;;		_vscp_sendEvent
 11972 ;; This function is called by:
 11973 ;;		_main
 11974 ;;		_vscp_handleProbeState
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           	psect	text35
 11979  00724C                     __ptext35:
 11980                           	opt stack 0
 11981  00724C                     _vscp_goActiveState:
 11982                           	opt stack 22
 11983                           
 11984                           ;vscp_firmware.c: 348: vscp_omsg.flags = 0x80 + 1;
 11985                           
 11986                           ;incstack = 0
 11987  00724C  0E81               	movlw	129
 11988  00724E  0100               	movlb	0	; () banked
 11989  007250  6FD4               	movwf	_vscp_omsg& (0+255),b
 11990                           
 11991                           ;vscp_firmware.c: 349: vscp_omsg.priority = 0x00;
 11992  007252  0E00               	movlw	0
 11993  007254  0100               	movlb	0	; () banked
 11994  007256  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 11995                           
 11996                           ;vscp_firmware.c: 350: vscp_omsg.vscp_class = 0;
 11997  007258  0E00               	movlw	0
 11998  00725A  0100               	movlb	0	; () banked
 11999  00725C  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 12000  00725E  0E00               	movlw	0
 12001  007260  0100               	movlb	0	; () banked
 12002  007262  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 12003                           
 12004                           ;vscp_firmware.c: 351: vscp_omsg.vscp_type = 2;
 12005  007264  0E02               	movlw	2
 12006  007266  0100               	movlb	0	; () banked
 12007  007268  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;vscp_firmware.c: 352: vscp_omsg.data[ 0 ] = vscp_nickname;
 12011  00726A  C0D2  F0D9         	movff	_vscp_nickname,_vscp_omsg+5
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;vscp_firmware.c: 355: vscp_sendEvent();
 12015  00726E  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 12016                           
 12017                           ;vscp_firmware.c: 357: vscp_initledfunc = 0x01;
 12018  007272  0E01               	movlw	1
 12019  007274  6E38               	movwf	_vscp_initledfunc,c
 12020  007276  0012               	return	
 12021  007278                     __end_of_vscp_goActiveState:
 12022                           	opt stack 0
 12023                           tblptru	equ	0xFF8
 12024                           tblptrh	equ	0xFF7
 12025                           tblptrl	equ	0xFF6
 12026                           tablat	equ	0xFF5
 12027                           prodh	equ	0xFF4
 12028                           prodl	equ	0xFF3
 12029                           postinc0	equ	0xFEE
 12030                           wreg	equ	0xFE8
 12031                           postdec1	equ	0xFE5
 12032                           fsr1h	equ	0xFE2
 12033                           fsr1l	equ	0xFE1
 12034                           indf2	equ	0xFDF
 12035                           fsr2h	equ	0xFDA
 12036                           fsr2l	equ	0xFD9
 12037                           status	equ	0xFD8
 12038                           
 12039 ;; *************** function _vscp_getEvent *****************
 12040 ;; Defined at:
 12041 ;;		line 1291 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  rv              1   48[COMRAM] unsigned char 
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      unsigned char 
 12048 ;; Registers used:
 12049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12055 ;;      Params:         0       0       0       0       0       0       0
 12056 ;;      Locals:         1       0       0       0       0       0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0
 12058 ;;      Totals:         1       0       0       0       0       0       0
 12059 ;;Total ram usage:        1 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    6
 12062 ;; This function calls:
 12063 ;;		_getVSCPFrame
 12064 ;; This function is called by:
 12065 ;;		_main
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           	psect	text36
 12070  006E02                     __ptext36:
 12071                           	opt stack 0
 12072  006E02                     _vscp_getEvent:
 12073                           	opt stack 24
 12074                           
 12075                           ;vscp_firmware.c: 1293: int8_t rv;
 12076                           ;vscp_firmware.c: 1299: if (vscp_imsg.flags & 0x80) return !0;
 12077                           
 12078                           ;incstack = 0
 12079  006E02  BE3B               	btfsc	_vscp_imsg,7,c
 12080  006E04  D02A               	goto	l1249
 12081                           
 12082                           ;vscp_firmware.c: 1302: if ((rv = getVSCPFrame(&vscp_imsg.vscp_class,
 12083                           ;vscp_firmware.c: 1303: &vscp_imsg.vscp_type,
 12084                           ;vscp_firmware.c: 1304: &vscp_imsg.oaddr,
 12085                           ;vscp_firmware.c: 1305: &vscp_imsg.priority,
 12086                           ;vscp_firmware.c: 1306: &vscp_imsg.flags,
 12087                           ;vscp_firmware.c: 1307: vscp_imsg.data))) {
 12088                           
 12089                           ;	Return value of _vscp_getEvent is never used
 12090  006E06  0E00               	movlw	high (_vscp_imsg+2)
 12091  006E08  0100               	movlb	0	; () banked
 12092  006E0A  6F67               	movwf	(getVSCPFrame@pvscpclass+1)& (0+255),b
 12093  006E0C  0E3D               	movlw	low (_vscp_imsg+2)
 12094  006E0E  0100               	movlb	0	; () banked
 12095  006E10  6F66               	movwf	getVSCPFrame@pvscpclass& (0+255),b
 12096  006E12  0E00               	movlw	high (_vscp_imsg+4)
 12097  006E14  0100               	movlb	0	; () banked
 12098  006E16  6F69               	movwf	(getVSCPFrame@pvscptype+1)& (0+255),b
 12099  006E18  0E3F               	movlw	low (_vscp_imsg+4)
 12100  006E1A  0100               	movlb	0	; () banked
 12101  006E1C  6F68               	movwf	getVSCPFrame@pvscptype& (0+255),b
 12102  006E1E  0E00               	movlw	high (_vscp_imsg+5)
 12103  006E20  0100               	movlb	0	; () banked
 12104  006E22  6F6B               	movwf	(getVSCPFrame@pNodeId+1)& (0+255),b
 12105  006E24  0E40               	movlw	low (_vscp_imsg+5)
 12106  006E26  0100               	movlb	0	; () banked
 12107  006E28  6F6A               	movwf	getVSCPFrame@pNodeId& (0+255),b
 12108  006E2A  0E00               	movlw	high (_vscp_imsg+1)
 12109  006E2C  0100               	movlb	0	; () banked
 12110  006E2E  6F6D               	movwf	(getVSCPFrame@pPriority+1)& (0+255),b
 12111  006E30  0E3C               	movlw	low (_vscp_imsg+1)
 12112  006E32  0100               	movlb	0	; () banked
 12113  006E34  6F6C               	movwf	getVSCPFrame@pPriority& (0+255),b
 12114  006E36  0E00               	movlw	high _vscp_imsg
 12115  006E38  0100               	movlb	0	; () banked
 12116  006E3A  6F6F               	movwf	(getVSCPFrame@pSize+1)& (0+255),b
 12117  006E3C  0E3B               	movlw	low _vscp_imsg
 12118  006E3E  0100               	movlb	0	; () banked
 12119  006E40  6F6E               	movwf	getVSCPFrame@pSize& (0+255),b
 12120  006E42  0E00               	movlw	high (_vscp_imsg+6)
 12121  006E44  0100               	movlb	0	; () banked
 12122  006E46  6F71               	movwf	(getVSCPFrame@pData+1)& (0+255),b
 12123  006E48  0E41               	movlw	low (_vscp_imsg+6)
 12124  006E4A  0100               	movlb	0	; () banked
 12125  006E4C  6F70               	movwf	getVSCPFrame@pData& (0+255),b
 12126  006E4E  EC4D  F032         	call	_getVSCPFrame	;wreg free
 12127  006E52  6E31               	movwf	vscp_getEvent@rv,c
 12128  006E54  5031               	movf	vscp_getEvent@rv& (0+255),w,c
 12129  006E56  A4D8               	btfss	status,2,c
 12130                           
 12131                           ;vscp_firmware.c: 1309: vscp_imsg.flags |= 0x80;
 12132  006E58  8E3B               	bsf	_vscp_imsg,7,c
 12133  006E5A                     l1249:
 12134  006E5A  0012               	return	
 12135  006E5C                     __end_of_vscp_getEvent:
 12136                           	opt stack 0
 12137                           tblptru	equ	0xFF8
 12138                           tblptrh	equ	0xFF7
 12139                           tblptrl	equ	0xFF6
 12140                           tablat	equ	0xFF5
 12141                           prodh	equ	0xFF4
 12142                           prodl	equ	0xFF3
 12143                           postinc0	equ	0xFEE
 12144                           wreg	equ	0xFE8
 12145                           postdec1	equ	0xFE5
 12146                           fsr1h	equ	0xFE2
 12147                           fsr1l	equ	0xFE1
 12148                           indf2	equ	0xFDF
 12149                           fsr2h	equ	0xFDA
 12150                           fsr2l	equ	0xFD9
 12151                           status	equ	0xFD8
 12152                           
 12153 ;; *************** function _getVSCPFrame *****************
 12154 ;; Defined at:
 12155 ;;		line 2855 in file "../main.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  pvscpclass      2    6[BANK0 ] PTR unsigned short 
 12158 ;;		 -> vscp_imsg(14), 
 12159 ;;  pvscptype       2    8[BANK0 ] PTR unsigned char 
 12160 ;;		 -> vscp_imsg(14), 
 12161 ;;  pNodeId         2   10[BANK0 ] PTR unsigned char 
 12162 ;;		 -> vscp_imsg(14), 
 12163 ;;  pPriority       2   12[BANK0 ] PTR unsigned char 
 12164 ;;		 -> vscp_imsg(14), 
 12165 ;;  pSize           2   14[BANK0 ] PTR unsigned char 
 12166 ;;		 -> vscp_imsg(14), 
 12167 ;;  pData           2   16[BANK0 ] PTR unsigned char 
 12168 ;;		 -> vscp_imsg(14), 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;  id              4   24[BANK0 ] unsigned long 
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  1    wreg      unsigned char 
 12173 ;; Registers used:
 12174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12180 ;;      Params:         0      12       0       0       0       0       0
 12181 ;;      Locals:         0       4       0       0       0       0       0
 12182 ;;      Temps:          0       6       0       0       0       0       0
 12183 ;;      Totals:         0      22       0       0       0       0       0
 12184 ;;Total ram usage:       22 bytes
 12185 ;; Hardware stack levels used:    1
 12186 ;; Hardware stack levels required when called:    5
 12187 ;; This function calls:
 12188 ;;		_getCANFrame
 12189 ;; This function is called by:
 12190 ;;		_vscp_getEvent
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text37
 12195  00649A                     __ptext37:
 12196                           	opt stack 0
 12197  00649A                     _getVSCPFrame:
 12198                           	opt stack 24
 12199                           
 12200                           ;main.c: 2862: uint32_t id;
 12201                           ;main.c: 2864: if (!getCANFrame(&id, pSize, pData)) {
 12202                           
 12203                           ;incstack = 0
 12204  00649A  0100               	movlb	0	; () banked
 12205  00649C  0E00               	movlw	high getVSCPFrame@id
 12206  00649E  0100               	movlb	0	; () banked
 12207  0064A0  6F61               	movwf	(getCANFrame@pid+1)& (0+255),b
 12208  0064A2  0100               	movlb	0	; () banked
 12209  0064A4  0E78               	movlw	low getVSCPFrame@id
 12210  0064A6  0100               	movlb	0	; () banked
 12211  0064A8  6F60               	movwf	getCANFrame@pid& (0+255),b
 12212  0064AA  0100               	movlb	0	; () banked
 12213  0064AC  C06F  F063         	movff	getVSCPFrame@pSize+1,getCANFrame@pdlc+1
 12214  0064B0  0100               	movlb	0	; () banked
 12215  0064B2  C06E  F062         	movff	getVSCPFrame@pSize,getCANFrame@pdlc
 12216  0064B6  0100               	movlb	0	; () banked
 12217  0064B8  C071  F065         	movff	getVSCPFrame@pData+1,getCANFrame@pdata+1
 12218  0064BC  0100               	movlb	0	; () banked
 12219  0064BE  C070  F064         	movff	getVSCPFrame@pData,getCANFrame@pdata
 12220  0064C2  ECD1  F037         	call	_getCANFrame	;wreg free
 12221  0064C6  0900               	iorlw	0
 12222  0064C8  A4D8               	btfss	status,2,c
 12223  0064CA  D002               	goto	l9736
 12224                           
 12225                           ;main.c: 2865: return 0;
 12226  0064CC  0E00               	movlw	0
 12227  0064CE  D058               	goto	l620
 12228  0064D0                     l9736:
 12229                           
 12230                           ;main.c: 2866: }
 12231                           ;main.c: 2868: *pNodeId = id & 0x0ff;
 12232  0064D0  C06A  FFD9         	movff	getVSCPFrame@pNodeId,fsr2l
 12233  0064D4  C06B  FFDA         	movff	getVSCPFrame@pNodeId+1,fsr2h
 12234  0064D8  0100               	movlb	0	; () banked
 12235  0064DA  C078  FFDF         	movff	getVSCPFrame@id,indf2
 12236                           
 12237                           ;main.c: 2869: *pvscptype = (id >> 8) & 0xff;
 12238  0064DE  C068  FFD9         	movff	getVSCPFrame@pvscptype,fsr2l
 12239  0064E2  C069  FFDA         	movff	getVSCPFrame@pvscptype+1,fsr2h
 12240  0064E6  0100               	movlb	0	; () banked
 12241  0064E8  C079  FFDF         	movff	getVSCPFrame@id+1,indf2
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;main.c: 2870: *pvscpclass = (id >> 16) & 0x1ff;
 12245  0064EC  0EFF               	movlw	255
 12246  0064EE  0100               	movlb	0	; () banked
 12247  0064F0  6F72               	movwf	??_getVSCPFrame& (0+255),b
 12248  0064F2  0E01               	movlw	1
 12249  0064F4  6F73               	movwf	(??_getVSCPFrame+1)& (0+255),b
 12250  0064F6  0100               	movlb	0	; () banked
 12251  0064F8  C078  F074         	movff	getVSCPFrame@id,??_getVSCPFrame+2
 12252  0064FC  0100               	movlb	0	; () banked
 12253  0064FE  C079  F075         	movff	getVSCPFrame@id+1,??_getVSCPFrame+3
 12254  006502  0100               	movlb	0	; () banked
 12255  006504  C07A  F076         	movff	getVSCPFrame@id+2,??_getVSCPFrame+4
 12256  006508  0100               	movlb	0	; () banked
 12257  00650A  C07B  F077         	movff	getVSCPFrame@id+3,??_getVSCPFrame+5
 12258  00650E  0E11               	movlw	17
 12259  006510  D006               	goto	u10020
 12260  006512                     u10025:
 12261  006512  0100               	movlb	0	; () banked
 12262  006514  90D8               	bcf	status,0,c
 12263  006516  3377               	rrcf	(??_getVSCPFrame+5)& (0+255),f,b
 12264  006518  3376               	rrcf	(??_getVSCPFrame+4)& (0+255),f,b
 12265  00651A  3375               	rrcf	(??_getVSCPFrame+3)& (0+255),f,b
 12266  00651C  3374               	rrcf	(??_getVSCPFrame+2)& (0+255),f,b
 12267  00651E                     u10020:
 12268  00651E  2EE8               	decfsz	wreg,f,c
 12269  006520  D7F8               	goto	u10025
 12270  006522  0100               	movlb	0	; () banked
 12271  006524  5172               	movf	??_getVSCPFrame& (0+255),w,b
 12272  006526  0100               	movlb	0	; () banked
 12273  006528  1774               	andwf	(??_getVSCPFrame+2)& (0+255),f,b
 12274  00652A  0100               	movlb	0	; () banked
 12275  00652C  5173               	movf	(??_getVSCPFrame+1)& (0+255),w,b
 12276  00652E  0100               	movlb	0	; () banked
 12277  006530  1775               	andwf	(??_getVSCPFrame+3)& (0+255),f,b
 12278  006532  C066  FFD9         	movff	getVSCPFrame@pvscpclass,fsr2l
 12279  006536  C067  FFDA         	movff	getVSCPFrame@pvscpclass+1,fsr2h
 12280  00653A  C074  FFDE         	movff	??_getVSCPFrame+2,postinc2
 12281  00653E  C075  FFDD         	movff	??_getVSCPFrame+3,postdec2
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;main.c: 2871: *pPriority = (uint16_t) (0x07 & (id >> 26));
 12285  006542  0100               	movlb	0	; () banked
 12286  006544  C078  F072         	movff	getVSCPFrame@id,??_getVSCPFrame
 12287  006548  0100               	movlb	0	; () banked
 12288  00654A  C079  F073         	movff	getVSCPFrame@id+1,??_getVSCPFrame+1
 12289  00654E  0100               	movlb	0	; () banked
 12290  006550  C07A  F074         	movff	getVSCPFrame@id+2,??_getVSCPFrame+2
 12291  006554  0100               	movlb	0	; () banked
 12292  006556  C07B  F075         	movff	getVSCPFrame@id+3,??_getVSCPFrame+3
 12293  00655A  0E1B               	movlw	27
 12294  00655C  D006               	goto	u10030
 12295  00655E                     u10035:
 12296  00655E  0100               	movlb	0	; () banked
 12297  006560  90D8               	bcf	status,0,c
 12298  006562  3375               	rrcf	(??_getVSCPFrame+3)& (0+255),f,b
 12299  006564  3374               	rrcf	(??_getVSCPFrame+2)& (0+255),f,b
 12300  006566  3373               	rrcf	(??_getVSCPFrame+1)& (0+255),f,b
 12301  006568  3372               	rrcf	??_getVSCPFrame& (0+255),f,b
 12302  00656A                     u10030:
 12303  00656A  2EE8               	decfsz	wreg,f,c
 12304  00656C  D7F8               	goto	u10035
 12305  00656E  0100               	movlb	0	; () banked
 12306  006570  5172               	movf	??_getVSCPFrame& (0+255),w,b
 12307  006572  0B07               	andlw	7
 12308  006574  C06C  FFD9         	movff	getVSCPFrame@pPriority,fsr2l
 12309  006578  C06D  FFDA         	movff	getVSCPFrame@pPriority+1,fsr2h
 12310  00657C  6EDF               	movwf	indf2,c
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;main.c: 2873: return 1;
 12314  00657E  0E01               	movlw	1
 12315  006580                     l620:
 12316  006580  0012               	return	
 12317  006582                     __end_of_getVSCPFrame:
 12318                           	opt stack 0
 12319                           tblptru	equ	0xFF8
 12320                           tblptrh	equ	0xFF7
 12321                           tblptrl	equ	0xFF6
 12322                           tablat	equ	0xFF5
 12323                           prodh	equ	0xFF4
 12324                           prodl	equ	0xFF3
 12325                           postinc0	equ	0xFEE
 12326                           wreg	equ	0xFE8
 12327                           postdec1	equ	0xFE5
 12328                           fsr1h	equ	0xFE2
 12329                           fsr1l	equ	0xFE1
 12330                           indf2	equ	0xFDF
 12331                           postinc2	equ	0xFDE
 12332                           postdec2	equ	0xFDD
 12333                           fsr2h	equ	0xFDA
 12334                           fsr2l	equ	0xFD9
 12335                           status	equ	0xFD8
 12336                           
 12337 ;; *************** function _getCANFrame *****************
 12338 ;; Defined at:
 12339 ;;		line 2902 in file "../main.c"
 12340 ;; Parameters:    Size  Location     Type
 12341 ;;  pid             2    0[BANK0 ] PTR unsigned long 
 12342 ;;		 -> getVSCPFrame@id(4), 
 12343 ;;  pdlc            2    2[BANK0 ] PTR unsigned char 
 12344 ;;		 -> vscp_imsg(14), 
 12345 ;;  pdata           2    4[BANK0 ] PTR unsigned char 
 12346 ;;		 -> vscp_imsg(14), 
 12347 ;; Auto vars:     Size  Location     Type
 12348 ;;  flags           1   47[COMRAM] enum E16417
 12349 ;; Return value:  Size  Location     Type
 12350 ;;                  1    wreg      unsigned char 
 12351 ;; Registers used:
 12352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12353 ;; Tracked objects:
 12354 ;;		On entry : 0/0
 12355 ;;		On exit  : 0/0
 12356 ;;		Unchanged: 0/0
 12357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12358 ;;      Params:         0       6       0       0       0       0       0
 12359 ;;      Locals:         1       0       0       0       0       0       0
 12360 ;;      Temps:          0       0       0       0       0       0       0
 12361 ;;      Totals:         1       6       0       0       0       0       0
 12362 ;;Total ram usage:        7 bytes
 12363 ;; Hardware stack levels used:    1
 12364 ;; Hardware stack levels required when called:    4
 12365 ;; This function calls:
 12366 ;;		_ECANReceiveMessage
 12367 ;; This function is called by:
 12368 ;;		_getVSCPFrame
 12369 ;; This function uses a non-reentrant model
 12370 ;;
 12371                           
 12372                           	psect	text38
 12373  006FA2                     __ptext38:
 12374                           	opt stack 0
 12375  006FA2                     _getCANFrame:
 12376                           	opt stack 24
 12377                           
 12378                           ;main.c: 2904: ECAN_RX_MSG_FLAGS flags;
 12379                           ;main.c: 2908: if (vscp_imsg.flags & 0x80) return 0;
 12380                           
 12381                           ;incstack = 0
 12382  006FA2  BE3B               	btfsc	_vscp_imsg,7,c
 12383  006FA4  D020               	goto	l9370
 12384                           
 12385                           ;main.c: 2910: if (ECANReceiveMessage((unsigned long *) pid, (BYTE*) pdata, (BYTE*) pdlc
      +                          , &flags)) {
 12386  006FA6  0100               	movlb	0	; () banked
 12387  006FA8  C061  F022         	movff	getCANFrame@pid+1,ECANReceiveMessage@id+1
 12388  006FAC  0100               	movlb	0	; () banked
 12389  006FAE  C060  F021         	movff	getCANFrame@pid,ECANReceiveMessage@id
 12390  006FB2  0100               	movlb	0	; () banked
 12391  006FB4  C065  F024         	movff	getCANFrame@pdata+1,ECANReceiveMessage@data+1
 12392  006FB8  0100               	movlb	0	; () banked
 12393  006FBA  C064  F023         	movff	getCANFrame@pdata,ECANReceiveMessage@data
 12394  006FBE  0100               	movlb	0	; () banked
 12395  006FC0  C063  F026         	movff	getCANFrame@pdlc+1,ECANReceiveMessage@dataLen+1
 12396  006FC4  0100               	movlb	0	; () banked
 12397  006FC6  C062  F025         	movff	getCANFrame@pdlc,ECANReceiveMessage@dataLen
 12398  006FCA  0E00               	movlw	high getCANFrame@flags
 12399  006FCC  6E28               	movwf	ECANReceiveMessage@msgFlags+1,c
 12400  006FCE  0E30               	movlw	low getCANFrame@flags
 12401  006FD0  6E27               	movwf	ECANReceiveMessage@msgFlags,c
 12402  006FD2  ECEA  F025         	call	_ECANReceiveMessage	;wreg free
 12403  006FD6  0900               	iorlw	0
 12404  006FD8  A4D8               	btfss	status,2,c
 12405                           
 12406                           ;main.c: 2912: if (flags & ECAN_RX_RTR_FRAME) return 0;
 12407  006FDA  BC30               	btfsc	getCANFrame@flags,6,c
 12408  006FDC  D004               	goto	l9370
 12409                           
 12410                           ;main.c: 2915: if (!(flags & ECAN_RX_XTD_FRAME)) return 0;
 12411  006FDE  AA30               	btfss	getCANFrame@flags,5,c
 12412  006FE0  D002               	goto	l9370
 12413                           
 12414                           ;main.c: 2917: return 1;
 12415  006FE2  0E01               	movlw	1
 12416  006FE4  D001               	goto	l631
 12417  006FE6                     l9370:
 12418                           
 12419                           ;main.c: 2918: }
 12420                           ;main.c: 2920: return 0;
 12421  006FE6  0E00               	movlw	0
 12422  006FE8                     l631:
 12423  006FE8  0012               	return	
 12424  006FEA                     __end_of_getCANFrame:
 12425                           	opt stack 0
 12426                           tblptru	equ	0xFF8
 12427                           tblptrh	equ	0xFF7
 12428                           tblptrl	equ	0xFF6
 12429                           tablat	equ	0xFF5
 12430                           prodh	equ	0xFF4
 12431                           prodl	equ	0xFF3
 12432                           postinc0	equ	0xFEE
 12433                           wreg	equ	0xFE8
 12434                           postdec1	equ	0xFE5
 12435                           fsr1h	equ	0xFE2
 12436                           fsr1l	equ	0xFE1
 12437                           indf2	equ	0xFDF
 12438                           postinc2	equ	0xFDE
 12439                           postdec2	equ	0xFDD
 12440                           fsr2h	equ	0xFDA
 12441                           fsr2l	equ	0xFD9
 12442                           status	equ	0xFD8
 12443                           
 12444 ;; *************** function _ECANReceiveMessage *****************
 12445 ;; Defined at:
 12446 ;;		line 799 in file "../ECAN.c"
 12447 ;; Parameters:    Size  Location     Type
 12448 ;;  id              2   32[COMRAM] PTR unsigned long 
 12449 ;;		 -> getVSCPFrame@id(4), 
 12450 ;;  data            2   34[COMRAM] PTR unsigned char 
 12451 ;;		 -> vscp_imsg(14), 
 12452 ;;  dataLen         2   36[COMRAM] PTR unsigned char 
 12453 ;;		 -> vscp_imsg(14), 
 12454 ;;  msgFlags        2   38[COMRAM] PTR enum E16332
 12455 ;;		 -> getCANFrame@flags(1), 
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;  ptr             2   45[COMRAM] PTR unsigned char 
 12458 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 12459 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 12460 ;;  savedPtr        2   40[COMRAM] PTR unsigned char 
 12461 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 12462 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 12463 ;;  temp            1   44[COMRAM] struct .
 12464 ;;  mode            1   43[COMRAM] unsigned char 
 12465 ;;  i               1   42[COMRAM] unsigned char 
 12466 ;; Return value:  Size  Location     Type
 12467 ;;                  1    wreg      enum E15663
 12468 ;; Registers used:
 12469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12470 ;; Tracked objects:
 12471 ;;		On entry : 0/0
 12472 ;;		On exit  : 0/0
 12473 ;;		Unchanged: 0/0
 12474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12475 ;;      Params:         8       0       0       0       0       0       0
 12476 ;;      Locals:         7       0       0       0       0       0       0
 12477 ;;      Temps:          0       0       0       0       0       0       0
 12478 ;;      Totals:        15       0       0       0       0       0       0
 12479 ;;Total ram usage:       15 bytes
 12480 ;; Hardware stack levels used:    1
 12481 ;; Hardware stack levels required when called:    3
 12482 ;; This function calls:
 12483 ;;		__ECANPointBuffer
 12484 ;;		__RegsToCANID
 12485 ;; This function is called by:
 12486 ;;		_getCANFrame
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           	psect	text39
 12491  004BD4                     __ptext39:
 12492                           	opt stack 0
 12493  004BD4                     _ECANReceiveMessage:
 12494                           	opt stack 24
 12495                           
 12496                           ;ECAN.c: 805: BYTE mode;
 12497                           ;ECAN.c: 808: BYTE *ptr, *savedPtr;
 12498                           ;ECAN.c: 809: char i;
 12499                           ;ECAN.c: 810: BYTE_VAL temp;
 12500                           ;ECAN.c: 812: _ECANRxFilterHitInfo.Val = 0;
 12501                           
 12502                           ;incstack = 0
 12503  004BD4  0E00               	movlw	0
 12504  004BD6  0101               	movlb	1	; () banked
 12505  004BD8  6F1E               	movwf	__ECANRxFilterHitInfo& (0+255),b
 12506                           
 12507                           ; BSR set to: 1
 12508                           ;ECAN.c: 815: mode = ECANCON&0xC0;
 12509  004BDA  5077               	movf	3959,w,c	;volatile
 12510  004BDC  0BC0               	andlw	192
 12511  004BDE  6E2C               	movwf	ECANReceiveMessage@mode,c
 12512                           
 12513                           ; BSR set to: 1
 12514                           ;ECAN.c: 816: if ( mode == 0x00 )
 12515  004BE0  662C               	tstfsz	ECANReceiveMessage@mode,c
 12516  004BE2  D03B               	goto	l8654
 12517                           
 12518                           ; BSR set to: 1
 12519                           ;ECAN.c: 822: {
 12520                           ;ECAN.c: 824: if ( RXB0FUL )
 12521  004BE4  AE60               	btfss	3936,7,c	;volatile
 12522  004BE6  D015               	goto	l827
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;ECAN.c: 825: {
 12526                           ;ECAN.c: 827: RXB0IF = 0;
 12527  004BE8  90A4               	bcf	4004,0,c	;volatile
 12528                           
 12529                           ;ECAN.c: 830: if ( RXB0OVFL )
 12530  004BEA  AE74               	btfss	3956,7,c	;volatile
 12531  004BEC  D007               	goto	l8630
 12532                           
 12533                           ; BSR set to: 1
 12534                           ;ECAN.c: 831: {
 12535                           ;ECAN.c: 832: *msgFlags |= ECAN_RX_OVERFLOW;
 12536  004BEE  C027  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 12537  004BF2  C028  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 12538  004BF6  0E00               	movlw	0
 12539  004BF8  86DB               	bsf	plusw2,3,c
 12540                           
 12541                           ; BSR set to: 1
 12542                           ;ECAN.c: 833: RXB0OVFL = 0;
 12543  004BFA  9E74               	bcf	3956,7,c	;volatile
 12544  004BFC                     l8630:
 12545                           
 12546                           ; BSR set to: 1
 12547                           ;ECAN.c: 834: }
 12548                           ;ECAN.c: 836: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
 12549  004BFC  A060               	btfss	3936,0,c	;volatile
 12550  004BFE  D003               	bra	u8825
 12551  004C00  0101               	movlb	1	; () banked
 12552  004C02  811E               	bsf	__ECANRxFilterHitInfo& (0+255),0,b
 12553  004C04  D002               	bra	u8827
 12554  004C06                     u8825:
 12555  004C06  0101               	movlb	1	; () banked
 12556  004C08  911E               	bcf	__ECANRxFilterHitInfo& (0+255),0,b
 12557  004C0A                     u8827:
 12558                           
 12559                           ; BSR set to: 1
 12560                           ;ECAN.c: 838: ptr = (BYTE*)&RXB0CON;
 12561  004C0A  0E0F               	movlw	15	;volatile
 12562  004C0C  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12563  004C0E  0E60               	movlw	96	;volatile
 12564  004C10  D022               	goto	L146
 12565  004C12                     l827:
 12566                           
 12567                           ; BSR set to: 1
 12568                           ;ECAN.c: 841: else if ( RXB1CONbits.RXFUL )
 12569  004C12  010F               	movlb	15	; () banked
 12570  004C14  AF50               	btfss	80,7,b	;volatile
 12571  004C16  D086               	goto	l8694
 12572                           
 12573                           ; BSR set to: 15
 12574                           ;ECAN.c: 842: {
 12575                           ;ECAN.c: 844: RXB1IF = 0;
 12576  004C18  92A4               	bcf	4004,1,c	;volatile
 12577                           
 12578                           ;ECAN.c: 847: if ( RXB1OVFL )
 12579  004C1A  AC74               	btfss	3956,6,c	;volatile
 12580  004C1C  D007               	goto	l8640
 12581                           
 12582                           ; BSR set to: 15
 12583                           ;ECAN.c: 848: {
 12584                           ;ECAN.c: 849: *msgFlags |= ECAN_RX_OVERFLOW;
 12585  004C1E  C027  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 12586  004C22  C028  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 12587  004C26  0E00               	movlw	0
 12588  004C28  86DB               	bsf	plusw2,3,c
 12589                           
 12590                           ; BSR set to: 15
 12591                           ;ECAN.c: 850: RXB1OVFL = 0;
 12592  004C2A  9C74               	bcf	3956,6,c	;volatile
 12593  004C2C                     l8640:
 12594                           
 12595                           ; BSR set to: 15
 12596                           ;ECAN.c: 851: }
 12597                           ;ECAN.c: 853: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
 12598  004C2C  010F               	movlb	15	; () banked
 12599  004C2E  5150               	movf	80,w,b	;volatile
 12600  004C30  0B07               	andlw	7
 12601  004C32  0101               	movlb	1	; () banked
 12602  004C34  6F1E               	movwf	__ECANRxFilterHitInfo& (0+255),b
 12603                           
 12604                           ; BSR set to: 1
 12605                           ;ECAN.c: 855: if ( _ECANRxFilterHitInfo.Val < 0x02 )
 12606  004C36  0E02               	movlw	2
 12607  004C38  0101               	movlb	1	; () banked
 12608  004C3A  5D1E               	subwf	__ECANRxFilterHitInfo& (0+255),w,b
 12609  004C3C  B0D8               	btfsc	status,0,c
 12610  004C3E  D006               	goto	l8646
 12611                           
 12612                           ; BSR set to: 1
 12613                           ;ECAN.c: 856: *msgFlags |= ECAN_RX_DBL_BUFFERED;
 12614  004C40  C027  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 12615  004C44  C028  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 12616  004C48  0E00               	movlw	0
 12617  004C4A  8EDB               	bsf	plusw2,7,c
 12618  004C4C                     l8646:
 12619                           
 12620                           ; BSR set to: 1
 12621                           ;ECAN.c: 859: ptr = (BYTE*)&RXB1CON;
 12622  004C4C  010F               	movlb	15	; () banked
 12623  004C4E  0E0F               	movlw	15	;volatile
 12624  004C50  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12625  004C52  010F               	movlb	15	; () banked
 12626  004C54  0E50               	movlw	80	;volatile
 12627  004C56                     L146:
 12628  004C56  6E2E               	movwf	ECANReceiveMessage@ptr,c
 12629                           
 12630                           ;ECAN.c: 860: }
 12631  004C58  D079               	goto	l8708
 12632  004C5A                     l8654:
 12633                           
 12634                           ;ECAN.c: 869: else if ( mode == 0x40 )
 12635  004C5A  502C               	movf	ECANReceiveMessage@mode,w,c
 12636  004C5C  0A40               	xorlw	64
 12637  004C5E  A4D8               	btfss	status,2,c
 12638  004C60  D056               	goto	l837
 12639                           
 12640                           ;ECAN.c: 875: {
 12641                           ;ECAN.c: 876: if ( RXB0FUL )
 12642  004C62  AE60               	btfss	3936,7,c	;volatile
 12643  004C64  D004               	goto	l838
 12644                           
 12645                           ;ECAN.c: 877: ptr = (BYTE*)&RXB0CON;
 12646  004C66  0E0F               	movlw	15	;volatile
 12647  004C68  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12648  004C6A  0E60               	movlw	96	;volatile
 12649  004C6C  D04E               	goto	L153
 12650  004C6E                     l838:
 12651                           
 12652                           ;ECAN.c: 879: else if (RXB1CONbits.RXFUL)
 12653  004C6E  010F               	movlb	15	; () banked
 12654  004C70  AF50               	btfss	80,7,b	;volatile
 12655  004C72  D006               	goto	l840
 12656                           
 12657                           ; BSR set to: 15
 12658                           ;ECAN.c: 880: ptr = (BYTE*)&RXB1CON;
 12659  004C74  010F               	movlb	15	; () banked
 12660  004C76  0E0F               	movlw	15	;volatile
 12661  004C78  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12662  004C7A  010F               	movlb	15	; () banked
 12663  004C7C  0E50               	movlw	80	;volatile
 12664  004C7E  D045               	goto	L153
 12665  004C80                     l840:
 12666                           
 12667                           ; BSR set to: 15
 12668                           ;ECAN.c: 882: else if ( (B0TXEN==0) && B0RXFUL )
 12669  004C80  010D               	movlb	13
 12670  004C82  B5F8               	btfsc	248,2,b	;volatile
 12671  004C84  D009               	goto	l842
 12672  004C86  010E               	movlb	14
 12673  004C88  AF20               	btfss	32,7,b	;volatile
 12674  004C8A  D006               	goto	l842
 12675                           
 12676                           ;ECAN.c: 883: ptr = (BYTE*)&B0CON;
 12677  004C8C  010E               	movlb	14	; () banked
 12678  004C8E  0E0E               	movlw	14	;volatile
 12679  004C90  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12680  004C92  010E               	movlb	14	; () banked
 12681  004C94  0E20               	movlw	32	;volatile
 12682  004C96  D039               	goto	L153
 12683  004C98                     l842:
 12684                           
 12685                           ;ECAN.c: 885: else if ( (B1TXEN==0) && B1RXFUL )
 12686  004C98  010D               	movlb	13
 12687  004C9A  B7F8               	btfsc	248,3,b	;volatile
 12688  004C9C  D009               	goto	l844
 12689  004C9E  010E               	movlb	14
 12690  004CA0  AF30               	btfss	48,7,b	;volatile
 12691  004CA2  D006               	goto	l844
 12692                           
 12693                           ;ECAN.c: 886: ptr = (BYTE*)&B1CON;
 12694  004CA4  010E               	movlb	14	; () banked
 12695  004CA6  0E0E               	movlw	14	;volatile
 12696  004CA8  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12697  004CAA  010E               	movlb	14	; () banked
 12698  004CAC  0E30               	movlw	48	;volatile
 12699  004CAE  D02D               	goto	L153
 12700  004CB0                     l844:
 12701                           
 12702                           ;ECAN.c: 888: else if ( (B2TXEN==0) && B2RXFUL )
 12703  004CB0  010D               	movlb	13
 12704  004CB2  B9F8               	btfsc	248,4,b	;volatile
 12705  004CB4  D009               	goto	l846
 12706  004CB6  010E               	movlb	14
 12707  004CB8  AF40               	btfss	64,7,b	;volatile
 12708  004CBA  D006               	goto	l846
 12709                           
 12710                           ;ECAN.c: 889: ptr = (BYTE*)&B2CON;
 12711  004CBC  010E               	movlb	14	; () banked
 12712  004CBE  0E0E               	movlw	14	;volatile
 12713  004CC0  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12714  004CC2  010E               	movlb	14	; () banked
 12715  004CC4  0E40               	movlw	64	;volatile
 12716  004CC6  D021               	goto	L153
 12717  004CC8                     l846:
 12718                           
 12719                           ;ECAN.c: 891: else if ( (B3TXEN==0) && B3RXFUL )
 12720  004CC8  010D               	movlb	13
 12721  004CCA  BBF8               	btfsc	248,5,b	;volatile
 12722  004CCC  D008               	goto	l848
 12723  004CCE  010E               	movlb	14
 12724  004CD0  AF50               	btfss	80,7,b	;volatile
 12725  004CD2  D005               	goto	l848
 12726                           
 12727                           ;ECAN.c: 892: ptr = (BYTE*)&B3CON;
 12728  004CD4  010E               	movlb	14	; () banked
 12729  004CD6  0E0E               	movlw	14	;volatile
 12730  004CD8  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12731  004CDA  010E               	movlb	14	; () banked
 12732  004CDC  D7CF               	goto	L155
 12733  004CDE                     l848:
 12734                           
 12735                           ;ECAN.c: 894: else if ( (B4TXEN==0) && B4RXFUL )
 12736  004CDE  010D               	movlb	13
 12737  004CE0  BDF8               	btfsc	248,6,b	;volatile
 12738  004CE2  D008               	goto	l850
 12739  004CE4  010E               	movlb	14
 12740  004CE6  AF60               	btfss	96,7,b	;volatile
 12741  004CE8  D005               	goto	l850
 12742                           
 12743                           ;ECAN.c: 895: ptr = (BYTE*)&B4CON;
 12744  004CEA  010E               	movlb	14	; () banked
 12745  004CEC  0E0E               	movlw	14	;volatile
 12746  004CEE  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12747  004CF0  010E               	movlb	14	; () banked
 12748  004CF2  D7BB               	goto	L156
 12749  004CF4                     l850:
 12750                           
 12751                           ;ECAN.c: 897: else if ( (B5TXEN==0) && B5RXFUL )
 12752  004CF4  010D               	movlb	13
 12753  004CF6  BFF8               	btfsc	248,7,b	;volatile
 12754  004CF8  D015               	goto	l8694
 12755  004CFA  010E               	movlb	14
 12756  004CFC  AF70               	btfss	112,7,b	;volatile
 12757  004CFE  D012               	goto	l8694
 12758                           
 12759                           ;ECAN.c: 898: ptr = (BYTE*)&B5CON;
 12760  004D00  010E               	movlb	14	; () banked
 12761  004D02  0E0E               	movlw	14	;volatile
 12762  004D04  6E2F               	movwf	ECANReceiveMessage@ptr+1,c
 12763  004D06  010E               	movlb	14	; () banked
 12764  004D08  0E70               	movlw	112	;volatile
 12765  004D0A                     L153:
 12766  004D0A  6E2E               	movwf	ECANReceiveMessage@ptr,c
 12767  004D0C  D00D               	goto	l8698
 12768  004D0E                     l837:
 12769                           
 12770                           ;ECAN.c: 910: else
 12771                           ;ECAN.c: 915: {
 12772                           ;ECAN.c: 916: if ( FIFOEMPTY == 1 )
 12773  004D0E  AE74               	btfss	3956,7,c	;volatile
 12774  004D10  D009               	goto	l8694
 12775                           
 12776                           ;ECAN.c: 917: {
 12777                           ;ECAN.c: 918: ptr = (BYTE*)_ECANPointBuffer(CANCON&0x07);
 12778  004D12  506F               	movf	3951,w,c	;volatile
 12779  004D14  0B07               	andlw	7
 12780  004D16  EC3F  F035         	call	__ECANPointBuffer
 12781  004D1A  C018  F02E         	movff	?__ECANPointBuffer,ECANReceiveMessage@ptr
 12782  004D1E  C019  F02F         	movff	?__ECANPointBuffer+1,ECANReceiveMessage@ptr+1
 12783                           
 12784                           ;ECAN.c: 920: goto _SaveMode12Message;
 12785  004D22  D002               	goto	l8698
 12786  004D24                     l8694:
 12787                           
 12788                           ;ECAN.c: 921: }
 12789                           ;ECAN.c: 923: return FALSE;
 12790  004D24  0E00               	movlw	0
 12791  004D26  D089               	goto	l834
 12792  004D28                     l8698:
 12793                           
 12794                           ;ECAN.c: 930: _ECANRxFilterHitInfo.Val = *ptr & 0x1f;
 12795  004D28  C02E  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 12796  004D2C  C02F  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 12797  004D30  50DF               	movf	indf2,w,c
 12798  004D32  0B1F               	andlw	31
 12799  004D34  0101               	movlb	1	; () banked
 12800  004D36  6F1E               	movwf	__ECANRxFilterHitInfo& (0+255),b
 12801                           
 12802                           ; BSR set to: 1
 12803                           ;ECAN.c: 932: RXB1IF = 0;
 12804  004D38  92A4               	bcf	4004,1,c	;volatile
 12805                           
 12806                           ; BSR set to: 1
 12807                           ;ECAN.c: 934: if ( RXB1OVFL )
 12808  004D3A  AC74               	btfss	3956,6,c	;volatile
 12809  004D3C  D007               	goto	l8708
 12810                           
 12811                           ; BSR set to: 1
 12812                           ;ECAN.c: 935: {
 12813                           ;ECAN.c: 936: *msgFlags |= ECAN_RX_OVERFLOW;
 12814  004D3E  C027  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 12815  004D42  C028  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 12816  004D46  0E00               	movlw	0
 12817  004D48  86DB               	bsf	plusw2,3,c
 12818                           
 12819                           ; BSR set to: 1
 12820                           ;ECAN.c: 937: RXB1OVFL = 0;
 12821  004D4A  9C74               	bcf	3956,6,c	;volatile
 12822  004D4C                     l8708:
 12823                           
 12824                           ;ECAN.c: 942: savedPtr = ptr;
 12825  004D4C  C02F  F02A         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
 12826  004D50  C02E  F029         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
 12827                           
 12828                           ;ECAN.c: 943: *msgFlags = 0;
 12829  004D54  C027  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 12830  004D58  C028  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 12831  004D5C  0E00               	movlw	0
 12832  004D5E  6EDF               	movwf	indf2,c
 12833                           
 12834                           ;ECAN.c: 946: temp.Val = *(ptr+5);
 12835  004D60  EE20 F005          	lfsr	2,5
 12836  004D64  502E               	movf	ECANReceiveMessage@ptr,w,c
 12837  004D66  26D9               	addwf	fsr2l,f,c
 12838  004D68  502F               	movf	ECANReceiveMessage@ptr+1,w,c
 12839  004D6A  22DA               	addwfc	fsr2h,f,c
 12840  004D6C  50DF               	movf	indf2,w,c
 12841  004D6E  6E2D               	movwf	ECANReceiveMessage@temp,c
 12842                           
 12843                           ;ECAN.c: 947: *dataLen = temp.Val & 0b00001111;
 12844  004D70  502D               	movf	ECANReceiveMessage@temp,w,c
 12845  004D72  0B0F               	andlw	15
 12846  004D74  C025  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
 12847  004D78  C026  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
 12848  004D7C  6EDF               	movwf	indf2,c
 12849                           
 12850                           ;ECAN.c: 950: if ( temp.bits.b6 )
 12851  004D7E  AC2D               	btfss	ECANReceiveMessage@temp,6,c
 12852  004D80  D006               	goto	l858
 12853                           
 12854                           ;ECAN.c: 951: *msgFlags |= ECAN_RX_RTR_FRAME;
 12855  004D82  C027  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 12856  004D86  C028  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 12857  004D8A  0E00               	movlw	0
 12858  004D8C  8CDB               	bsf	plusw2,6,c
 12859  004D8E                     l858:
 12860                           
 12861                           ;ECAN.c: 954: temp.Val = *(ptr+2);
 12862  004D8E  EE20 F002          	lfsr	2,2
 12863  004D92  502E               	movf	ECANReceiveMessage@ptr,w,c
 12864  004D94  26D9               	addwf	fsr2l,f,c
 12865  004D96  502F               	movf	ECANReceiveMessage@ptr+1,w,c
 12866  004D98  22DA               	addwfc	fsr2h,f,c
 12867  004D9A  50DF               	movf	indf2,w,c
 12868  004D9C  6E2D               	movwf	ECANReceiveMessage@temp,c
 12869                           
 12870                           ;ECAN.c: 955: if ( temp.bits.b3 )
 12871  004D9E  A62D               	btfss	ECANReceiveMessage@temp,3,c
 12872  004DA0  D008               	goto	l8726
 12873                           
 12874                           ;ECAN.c: 956: {
 12875                           ;ECAN.c: 957: *msgFlags |= ECAN_RX_XTD_FRAME;
 12876  004DA2  C027  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 12877  004DA6  C028  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 12878  004DAA  0E00               	movlw	0
 12879  004DAC  8ADB               	bsf	plusw2,5,c
 12880                           
 12881                           ;ECAN.c: 958: temp.Val = 1;
 12882  004DAE  0E01               	movlw	1
 12883  004DB0  D001               	goto	L154
 12884  004DB2                     l8726:
 12885                           
 12886                           ;ECAN.c: 960: else
 12887                           ;ECAN.c: 961: temp.Val = 0;
 12888  004DB2  0E00               	movlw	0
 12889  004DB4                     L154:
 12890  004DB4  6E2D               	movwf	ECANReceiveMessage@temp,c
 12891                           
 12892                           ;ECAN.c: 963: _RegsToCANID(ptr+1, id, temp.Val);
 12893  004DB6  0E01               	movlw	1
 12894  004DB8  242E               	addwf	ECANReceiveMessage@ptr,w,c
 12895  004DBA  6E18               	movwf	__RegsToCANID@ptr,c
 12896  004DBC  0E00               	movlw	0
 12897  004DBE  202F               	addwfc	ECANReceiveMessage@ptr+1,w,c
 12898  004DC0  6E19               	movwf	__RegsToCANID@ptr+1,c
 12899  004DC2  C022  F01B         	movff	ECANReceiveMessage@id+1,__RegsToCANID@val+1
 12900  004DC6  C021  F01A         	movff	ECANReceiveMessage@id,__RegsToCANID@val
 12901  004DCA  C02D  F01C         	movff	ECANReceiveMessage@temp,__RegsToCANID@type
 12902  004DCE  EC8A  F02A         	call	__RegsToCANID	;wreg free
 12903                           
 12904                           ;ECAN.c: 966: ptr += 6;
 12905  004DD2  0E06               	movlw	6
 12906  004DD4  262E               	addwf	ECANReceiveMessage@ptr,f,c
 12907  004DD6  0E00               	movlw	0
 12908  004DD8  222F               	addwfc	ECANReceiveMessage@ptr+1,f,c
 12909                           
 12910                           ;ECAN.c: 967: temp.Val = *dataLen;
 12911  004DDA  C025  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
 12912  004DDE  C026  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
 12913  004DE2  50DF               	movf	indf2,w,c
 12914  004DE4  6E2D               	movwf	ECANReceiveMessage@temp,c
 12915                           
 12916                           ;ECAN.c: 968: for ( i = 0; i < temp.Val; i++ )
 12917  004DE6  0E00               	movlw	0
 12918  004DE8  6E2B               	movwf	ECANReceiveMessage@i,c
 12919  004DEA  D00F               	goto	l8744
 12920  004DEC                     l8736:
 12921                           
 12922                           ;ECAN.c: 969: *data++ = *ptr++;
 12923  004DEC  C02E  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 12924  004DF0  C02F  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 12925  004DF4  C023  FFE1         	movff	ECANReceiveMessage@data,fsr1l
 12926  004DF8  C024  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
 12927  004DFC  CFDF FFE7          	movff	indf2,indf1
 12928  004E00  4A2E               	infsnz	ECANReceiveMessage@ptr,f,c
 12929  004E02  2A2F               	incf	ECANReceiveMessage@ptr+1,f,c
 12930  004E04  4A23               	infsnz	ECANReceiveMessage@data,f,c
 12931  004E06  2A24               	incf	ECANReceiveMessage@data+1,f,c
 12932  004E08  2A2B               	incf	ECANReceiveMessage@i,f,c
 12933  004E0A                     l8744:
 12934  004E0A  502D               	movf	ECANReceiveMessage@temp,w,c
 12935  004E0C  5C2B               	subwf	ECANReceiveMessage@i,w,c
 12936  004E0E  A0D8               	btfss	status,0,c
 12937  004E10  D7ED               	goto	l8736
 12938                           
 12939                           ;ECAN.c: 972: if ( IRXIF )
 12940  004E12  AEA4               	btfss	4004,7,c	;volatile
 12941  004E14  D007               	goto	l8750
 12942                           
 12943                           ;ECAN.c: 973: {
 12944                           ;ECAN.c: 974: *msgFlags |= ECAN_RX_INVALID_MSG;
 12945  004E16  C027  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 12946  004E1A  C028  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 12947  004E1E  0E00               	movlw	0
 12948  004E20  88DB               	bsf	plusw2,4,c
 12949                           
 12950                           ;ECAN.c: 975: IRXIF = 0;
 12951  004E22  9EA4               	bcf	4004,7,c	;volatile
 12952  004E24                     l8750:
 12953                           
 12954                           ;ECAN.c: 976: }
 12955                           ;ECAN.c: 979: *savedPtr &= 0x7f;
 12956  004E24  C029  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
 12957  004E28  C02A  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
 12958  004E2C  0E7F               	movlw	127
 12959  004E2E  16DF               	andwf	indf2,f,c
 12960                           
 12961                           ;ECAN.c: 983: if ( mode == 0x80 )
 12962  004E30  502C               	movf	ECANReceiveMessage@mode,w,c
 12963  004E32  0A80               	xorlw	128
 12964  004E34  B4D8               	btfsc	status,2,c
 12965                           
 12966                           ;ECAN.c: 984: FIFOEMPTY = 0;
 12967  004E36  9E74               	bcf	3956,7,c	;volatile
 12968                           
 12969                           ;ECAN.c: 990: return TRUE;
 12970  004E38  0E01               	movlw	1
 12971  004E3A                     l834:
 12972  004E3A  0012               	return	
 12973  004E3C                     __end_of_ECANReceiveMessage:
 12974                           	opt stack 0
 12975                           tblptru	equ	0xFF8
 12976                           tblptrh	equ	0xFF7
 12977                           tblptrl	equ	0xFF6
 12978                           tablat	equ	0xFF5
 12979                           prodh	equ	0xFF4
 12980                           prodl	equ	0xFF3
 12981                           postinc0	equ	0xFEE
 12982                           wreg	equ	0xFE8
 12983                           indf1	equ	0xFE7
 12984                           postdec1	equ	0xFE5
 12985                           fsr1h	equ	0xFE2
 12986                           fsr1l	equ	0xFE1
 12987                           indf2	equ	0xFDF
 12988                           postinc2	equ	0xFDE
 12989                           postdec2	equ	0xFDD
 12990                           plusw2	equ	0xFDB
 12991                           fsr2h	equ	0xFDA
 12992                           fsr2l	equ	0xFD9
 12993                           status	equ	0xFD8
 12994                           
 12995 ;; *************** function __RegsToCANID *****************
 12996 ;; Defined at:
 12997 ;;		line 1153 in file "../ECAN.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;  ptr             2   23[COMRAM] PTR unsigned char 
 13000 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 13001 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 13002 ;;  val             2   25[COMRAM] PTR unsigned long 
 13003 ;;		 -> getVSCPFrame@id(4), 
 13004 ;;  type            1   27[COMRAM] unsigned char 
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;  Value           2   30[COMRAM] PTR struct _CAN_MESSAGE_
 13007 ;;		 -> getVSCPFrame@id(4), 
 13008 ;; Return value:  Size  Location     Type
 13009 ;;		None               void
 13010 ;; Registers used:
 13011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13017 ;;      Params:         5       0       0       0       0       0       0
 13018 ;;      Locals:         2       0       0       0       0       0       0
 13019 ;;      Temps:          2       0       0       0       0       0       0
 13020 ;;      Totals:         9       0       0       0       0       0       0
 13021 ;;Total ram usage:        9 bytes
 13022 ;; Hardware stack levels used:    1
 13023 ;; Hardware stack levels required when called:    2
 13024 ;; This function calls:
 13025 ;;		Nothing
 13026 ;; This function is called by:
 13027 ;;		_ECANReceiveMessage
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           	psect	text40
 13032  005514                     __ptext40:
 13033                           	opt stack 0
 13034  005514                     __RegsToCANID:
 13035                           	opt stack 24
 13036                           
 13037                           ;ECAN.c: 1157: CAN_MESSAGE_ID *Value;
 13038                           ;ECAN.c: 1159: Value = (CAN_MESSAGE_ID*)val;
 13039                           
 13040                           ;incstack = 0
 13041  005514  C01B  F020         	movff	__RegsToCANID@val+1,__RegsToCANID@Value+1
 13042  005518  C01A  F01F         	movff	__RegsToCANID@val,__RegsToCANID@Value
 13043                           
 13044                           ;ECAN.c: 1161: if ( type == 0 )
 13045  00551C  661C               	tstfsz	__RegsToCANID@type,c
 13046  00551E  D04A               	goto	l8382
 13047                           
 13048                           ;ECAN.c: 1162: {
 13049                           ;ECAN.c: 1164: Value->BYTES.BYTE_1 = (*ptr << 3);
 13050  005520  C018  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 13051  005524  C019  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 13052  005528  50DF               	movf	indf2,w,c
 13053  00552A  6E1D               	movwf	??__RegsToCANID& (0+255),c
 13054  00552C  90D8               	bcf	status,0,c
 13055  00552E  361D               	rlcf	??__RegsToCANID,f,c
 13056  005530  90D8               	bcf	status,0,c
 13057  005532  361D               	rlcf	??__RegsToCANID,f,c
 13058  005534  90D8               	bcf	status,0,c
 13059  005536  341D               	rlcf	??__RegsToCANID,w,c
 13060  005538  C01F  FFD9         	movff	__RegsToCANID@Value,fsr2l
 13061  00553C  C020  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
 13062  005540  6EDF               	movwf	indf2,c
 13063                           
 13064                           ;ECAN.c: 1165: Value->BYTES.BYTE_2 = *ptr >> 5;
 13065  005542  EE20 F001          	lfsr	2,1
 13066  005546  501F               	movf	__RegsToCANID@Value,w,c
 13067  005548  26D9               	addwf	fsr2l,f,c
 13068  00554A  5020               	movf	__RegsToCANID@Value+1,w,c
 13069  00554C  22DA               	addwfc	fsr2h,f,c
 13070  00554E  C018  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 13071  005552  C019  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 13072  005556  50E7               	movf	indf1,w,c
 13073  005558  6E1D               	movwf	??__RegsToCANID& (0+255),c
 13074  00555A  0E05               	movlw	5
 13075  00555C  6E1E               	movwf	(??__RegsToCANID+1)& (0+255),c
 13076  00555E                     u8415:
 13077  00555E  90D8               	bcf	status,0,c
 13078  005560  321D               	rrcf	??__RegsToCANID,f,c
 13079  005562  2E1E               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 13080  005564  D7FC               	goto	u8415
 13081  005566  501D               	movf	??__RegsToCANID,w,c
 13082  005568  6EDF               	movwf	indf2,c
 13083                           
 13084                           ;ECAN.c: 1166: ptr++;
 13085  00556A  4A18               	infsnz	__RegsToCANID@ptr,f,c
 13086  00556C  2A19               	incf	__RegsToCANID@ptr+1,f,c
 13087                           
 13088                           ;ECAN.c: 1167: Value->BYTES.BYTE_1 |= (*ptr >> 5);
 13089  00556E  C018  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 13090  005572  C019  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 13091  005576  50DF               	movf	indf2,w,c
 13092  005578  6E1D               	movwf	??__RegsToCANID& (0+255),c
 13093  00557A  0E05               	movlw	5
 13094  00557C  6E1E               	movwf	(??__RegsToCANID+1)& (0+255),c
 13095  00557E                     u8425:
 13096  00557E  90D8               	bcf	status,0,c
 13097  005580  321D               	rrcf	??__RegsToCANID,f,c
 13098  005582  2E1E               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 13099  005584  D7FC               	goto	u8425
 13100  005586  C01F  FFD9         	movff	__RegsToCANID@Value,fsr2l
 13101  00558A  C020  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
 13102  00558E  501D               	movf	??__RegsToCANID,w,c
 13103  005590  12DF               	iorwf	indf2,f,c
 13104                           
 13105                           ;ECAN.c: 1168: Value->BYTES.BYTE_3 = 0x00;
 13106  005592  EE20 F002          	lfsr	2,2
 13107  005596  501F               	movf	__RegsToCANID@Value,w,c
 13108  005598  26D9               	addwf	fsr2l,f,c
 13109  00559A  5020               	movf	__RegsToCANID@Value+1,w,c
 13110  00559C  22DA               	addwfc	fsr2h,f,c
 13111  00559E  0E00               	movlw	0
 13112  0055A0  6EDF               	movwf	indf2,c
 13113                           
 13114                           ;ECAN.c: 1169: Value->BYTES.BYTE_4 = 0x00;
 13115  0055A2  EE20 F003          	lfsr	2,3
 13116  0055A6  501F               	movf	__RegsToCANID@Value,w,c
 13117  0055A8  26D9               	addwf	fsr2l,f,c
 13118  0055AA  5020               	movf	__RegsToCANID@Value+1,w,c
 13119  0055AC  22DA               	addwfc	fsr2h,f,c
 13120  0055AE  0E00               	movlw	0
 13121  0055B0  6EDF               	movwf	indf2,c
 13122                           
 13123                           ;ECAN.c: 1170: }
 13124  0055B2  D069               	goto	l881
 13125  0055B4                     l8382:
 13126                           
 13127                           ;ECAN.c: 1171: else
 13128                           ;ECAN.c: 1172: {
 13129                           ;ECAN.c: 1174: Value->BYTES.BYTE_3 = (*ptr << 5);
 13130  0055B4  EE20 F002          	lfsr	2,2
 13131  0055B8  501F               	movf	__RegsToCANID@Value,w,c
 13132  0055BA  26D9               	addwf	fsr2l,f,c
 13133  0055BC  5020               	movf	__RegsToCANID@Value+1,w,c
 13134  0055BE  22DA               	addwfc	fsr2h,f,c
 13135  0055C0  C018  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 13136  0055C4  C019  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 13137  0055C8  50E7               	movf	indf1,w,c
 13138  0055CA  6E1D               	movwf	??__RegsToCANID& (0+255),c
 13139  0055CC  0E05               	movlw	5
 13140  0055CE  6E1E               	movwf	(??__RegsToCANID+1)& (0+255),c
 13141  0055D0                     u8435:
 13142  0055D0  90D8               	bcf	status,0,c
 13143  0055D2  361D               	rlcf	??__RegsToCANID,f,c
 13144  0055D4  2E1E               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 13145  0055D6  D7FC               	goto	u8435
 13146  0055D8  501D               	movf	??__RegsToCANID,w,c
 13147  0055DA  6EDF               	movwf	indf2,c
 13148                           
 13149                           ;ECAN.c: 1175: Value->BYTES.BYTE_4 = (*ptr >> 3);
 13150  0055DC  EE20 F003          	lfsr	2,3
 13151  0055E0  501F               	movf	__RegsToCANID@Value,w,c
 13152  0055E2  26D9               	addwf	fsr2l,f,c
 13153  0055E4  5020               	movf	__RegsToCANID@Value+1,w,c
 13154  0055E6  22DA               	addwfc	fsr2h,f,c
 13155  0055E8  C018  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 13156  0055EC  C019  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 13157  0055F0  50E7               	movf	indf1,w,c
 13158  0055F2  6E1D               	movwf	??__RegsToCANID& (0+255),c
 13159  0055F4  90D8               	bcf	status,0,c
 13160  0055F6  321D               	rrcf	??__RegsToCANID,f,c
 13161  0055F8  90D8               	bcf	status,0,c
 13162  0055FA  321D               	rrcf	??__RegsToCANID,f,c
 13163  0055FC  90D8               	bcf	status,0,c
 13164  0055FE  301D               	rrcf	??__RegsToCANID,w,c
 13165  005600  6EDF               	movwf	indf2,c
 13166                           
 13167                           ;ECAN.c: 1176: ptr++;
 13168  005602  4A18               	infsnz	__RegsToCANID@ptr,f,c
 13169  005604  2A19               	incf	__RegsToCANID@ptr+1,f,c
 13170                           
 13171                           ;ECAN.c: 1177: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
 13172  005606  C018  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 13173  00560A  C019  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 13174  00560E  50DF               	movf	indf2,w,c
 13175  005610  6E1D               	movwf	??__RegsToCANID& (0+255),c
 13176  005612  0E03               	movlw	3
 13177  005614  161D               	andwf	??__RegsToCANID,f,c
 13178  005616  EE20 F002          	lfsr	2,2
 13179  00561A  501F               	movf	__RegsToCANID@Value,w,c
 13180  00561C  26D9               	addwf	fsr2l,f,c
 13181  00561E  5020               	movf	__RegsToCANID@Value+1,w,c
 13182  005620  22DA               	addwfc	fsr2h,f,c
 13183  005622  501D               	movf	??__RegsToCANID,w,c
 13184  005624  12DF               	iorwf	indf2,f,c
 13185                           
 13186                           ;ECAN.c: 1179: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
 13187  005626  C018  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 13188  00562A  C019  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 13189  00562E  50DF               	movf	indf2,w,c
 13190  005630  6E1D               	movwf	??__RegsToCANID& (0+255),c
 13191  005632  90D8               	bcf	status,0,c
 13192  005634  321D               	rrcf	??__RegsToCANID,f,c
 13193  005636  90D8               	bcf	status,0,c
 13194  005638  321D               	rrcf	??__RegsToCANID,f,c
 13195  00563A  90D8               	bcf	status,0,c
 13196  00563C  321D               	rrcf	??__RegsToCANID,f,c
 13197  00563E  0E1C               	movlw	28
 13198  005640  161D               	andwf	??__RegsToCANID,f,c
 13199  005642  EE20 F002          	lfsr	2,2
 13200  005646  501F               	movf	__RegsToCANID@Value,w,c
 13201  005648  26D9               	addwf	fsr2l,f,c
 13202  00564A  5020               	movf	__RegsToCANID@Value+1,w,c
 13203  00564C  22DA               	addwfc	fsr2h,f,c
 13204  00564E  501D               	movf	??__RegsToCANID,w,c
 13205  005650  12DF               	iorwf	indf2,f,c
 13206                           
 13207                           ;ECAN.c: 1180: ptr++;
 13208  005652  4A18               	infsnz	__RegsToCANID@ptr,f,c
 13209  005654  2A19               	incf	__RegsToCANID@ptr+1,f,c
 13210                           
 13211                           ;ECAN.c: 1181: Value->BYTES.BYTE_2 = *ptr;
 13212  005656  C018  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 13213  00565A  C019  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 13214  00565E  EE10 F001          	lfsr	1,1
 13215  005662  501F               	movf	__RegsToCANID@Value,w,c
 13216  005664  26E1               	addwf	fsr1l,f,c
 13217  005666  5020               	movf	__RegsToCANID@Value+1,w,c
 13218  005668  22E2               	addwfc	fsr1h,f,c
 13219  00566A  CFDF FFE7          	movff	indf2,indf1
 13220                           
 13221                           ;ECAN.c: 1182: ptr++;
 13222  00566E  4A18               	infsnz	__RegsToCANID@ptr,f,c
 13223  005670  2A19               	incf	__RegsToCANID@ptr+1,f,c
 13224                           
 13225                           ;ECAN.c: 1183: Value->BYTES.BYTE_1 = *ptr;
 13226  005672  C018  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 13227  005676  C019  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 13228  00567A  C01F  FFE1         	movff	__RegsToCANID@Value,fsr1l
 13229  00567E  C020  FFE2         	movff	__RegsToCANID@Value+1,fsr1h
 13230  005682  CFDF FFE7          	movff	indf2,indf1
 13231  005686                     l881:
 13232  005686  0012               	return	
 13233  005688                     __end_of__RegsToCANID:
 13234                           	opt stack 0
 13235                           tblptru	equ	0xFF8
 13236                           tblptrh	equ	0xFF7
 13237                           tblptrl	equ	0xFF6
 13238                           tablat	equ	0xFF5
 13239                           prodh	equ	0xFF4
 13240                           prodl	equ	0xFF3
 13241                           postinc0	equ	0xFEE
 13242                           wreg	equ	0xFE8
 13243                           indf1	equ	0xFE7
 13244                           postdec1	equ	0xFE5
 13245                           fsr1h	equ	0xFE2
 13246                           fsr1l	equ	0xFE1
 13247                           indf2	equ	0xFDF
 13248                           postinc2	equ	0xFDE
 13249                           postdec2	equ	0xFDD
 13250                           plusw2	equ	0xFDB
 13251                           fsr2h	equ	0xFDA
 13252                           fsr2l	equ	0xFD9
 13253                           status	equ	0xFD8
 13254                           
 13255 ;; *************** function __ECANPointBuffer *****************
 13256 ;; Defined at:
 13257 ;;		line 1206 in file "../ECAN.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  b               1    wreg     unsigned char 
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;  b               1   25[COMRAM] unsigned char 
 13262 ;;  pt              2   26[COMRAM] PTR unsigned char 
 13263 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 13264 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  2   23[COMRAM] PTR unsigned char 
 13267 ;; Registers used:
 13268 ;;		wreg, status,2, status,0
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13274 ;;      Params:         2       0       0       0       0       0       0
 13275 ;;      Locals:         3       0       0       0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0
 13277 ;;      Totals:         5       0       0       0       0       0       0
 13278 ;;Total ram usage:        5 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    2
 13281 ;; This function calls:
 13282 ;;		Nothing
 13283 ;; This function is called by:
 13284 ;;		_ECANReceiveMessage
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           	psect	text41
 13289  006A7E                     __ptext41:
 13290                           	opt stack 0
 13291  006A7E                     __ECANPointBuffer:
 13292                           	opt stack 24
 13293                           
 13294                           ;incstack = 0
 13295                           ;__ECANPointBuffer@b stored from wreg
 13296  006A7E  6E1A               	movwf	__ECANPointBuffer@b,c
 13297                           
 13298                           ;ECAN.c: 1208: BYTE* pt;
 13299                           ;ECAN.c: 1210: switch(b)
 13300  006A80  D02D               	goto	l8364
 13301  006A82                     l8346:
 13302                           
 13303                           ;ECAN.c: 1213: pt=(BYTE*)&RXB0CON;
 13304  006A82  0E0F               	movlw	15	;volatile
 13305  006A84  6E1C               	movwf	__ECANPointBuffer@pt+1,c
 13306  006A86  0E60               	movlw	96	;volatile
 13307  006A88  D027               	goto	L163
 13308  006A8A                     l8348:
 13309                           
 13310                           ;ECAN.c: 1216: pt=(BYTE*)&RXB1CON;
 13311  006A8A  010F               	movlb	15	; () banked
 13312  006A8C  0E0F               	movlw	15	;volatile
 13313  006A8E  6E1C               	movwf	__ECANPointBuffer@pt+1,c
 13314  006A90  010F               	movlb	15	; () banked
 13315  006A92  0E50               	movlw	80	;volatile
 13316  006A94  D021               	goto	L163
 13317  006A96                     l8350:
 13318                           
 13319                           ;ECAN.c: 1219: pt=(BYTE*)&B0CON;
 13320  006A96  010E               	movlb	14	; () banked
 13321  006A98  0E0E               	movlw	14	;volatile
 13322  006A9A  6E1C               	movwf	__ECANPointBuffer@pt+1,c
 13323  006A9C  010E               	movlb	14	; () banked
 13324  006A9E  0E20               	movlw	32	;volatile
 13325  006AA0  D01B               	goto	L163
 13326  006AA2                     l8352:
 13327                           
 13328                           ;ECAN.c: 1222: pt=(BYTE*)&B1CON;
 13329  006AA2  010E               	movlb	14	; () banked
 13330  006AA4  0E0E               	movlw	14	;volatile
 13331  006AA6  6E1C               	movwf	__ECANPointBuffer@pt+1,c
 13332  006AA8  010E               	movlb	14	; () banked
 13333  006AAA  0E30               	movlw	48	;volatile
 13334  006AAC  D015               	goto	L163
 13335  006AAE                     l8354:
 13336                           
 13337                           ;ECAN.c: 1225: pt=(BYTE*)&B2CON;
 13338  006AAE  010E               	movlb	14	; () banked
 13339  006AB0  0E0E               	movlw	14	;volatile
 13340  006AB2  6E1C               	movwf	__ECANPointBuffer@pt+1,c
 13341  006AB4  010E               	movlb	14	; () banked
 13342  006AB6  0E40               	movlw	64	;volatile
 13343  006AB8  D00F               	goto	L163
 13344  006ABA                     l8356:
 13345                           
 13346                           ;ECAN.c: 1228: pt=(BYTE*)&B3CON;
 13347  006ABA  010E               	movlb	14	; () banked
 13348  006ABC  0E0E               	movlw	14	;volatile
 13349  006ABE  6E1C               	movwf	__ECANPointBuffer@pt+1,c
 13350  006AC0  010E               	movlb	14	; () banked
 13351  006AC2  D7E7               	goto	L164
 13352  006AC4                     l8358:
 13353                           
 13354                           ;ECAN.c: 1231: pt=(BYTE*)&B4CON;
 13355  006AC4  010E               	movlb	14	; () banked
 13356  006AC6  0E0E               	movlw	14	;volatile
 13357  006AC8  6E1C               	movwf	__ECANPointBuffer@pt+1,c
 13358  006ACA  010E               	movlb	14	; () banked
 13359  006ACC  D7DC               	goto	L165
 13360  006ACE                     l8360:
 13361                           
 13362                           ;ECAN.c: 1234: pt=(BYTE*)&B5CON;
 13363  006ACE  010E               	movlb	14	; () banked
 13364  006AD0  0E0E               	movlw	14	;volatile
 13365  006AD2  6E1C               	movwf	__ECANPointBuffer@pt+1,c
 13366  006AD4  010E               	movlb	14	; () banked
 13367  006AD6  0E70               	movlw	112	;volatile
 13368  006AD8                     L163:
 13369  006AD8  6E1B               	movwf	__ECANPointBuffer@pt,c
 13370                           
 13371                           ;ECAN.c: 1235: break;
 13372  006ADA  D017               	goto	l886
 13373  006ADC                     l8364:
 13374  006ADC  501A               	movf	__ECANPointBuffer@b,w,c
 13375                           
 13376                           ; Switch size 1, requested type "space"
 13377                           ; Number of cases is 7, Range of values is 0 to 6
 13378                           ; switch strategies available:
 13379                           ; Name         Instructions Cycles
 13380                           ; simple_byte           22    12 (average)
 13381                           ;	Chosen strategy is simple_byte
 13382  006ADE  0A00               	xorlw	0	; case 0
 13383  006AE0  B4D8               	btfsc	status,2,c
 13384  006AE2  D7CF               	goto	l8346
 13385  006AE4  0A01               	xorlw	1	; case 1
 13386  006AE6  B4D8               	btfsc	status,2,c
 13387  006AE8  D7D0               	goto	l8348
 13388  006AEA  0A03               	xorlw	3	; case 2
 13389  006AEC  B4D8               	btfsc	status,2,c
 13390  006AEE  D7D3               	goto	l8350
 13391  006AF0  0A01               	xorlw	1	; case 3
 13392  006AF2  B4D8               	btfsc	status,2,c
 13393  006AF4  D7D6               	goto	l8352
 13394  006AF6  0A07               	xorlw	7	; case 4
 13395  006AF8  B4D8               	btfsc	status,2,c
 13396  006AFA  D7D9               	goto	l8354
 13397  006AFC  0A01               	xorlw	1	; case 5
 13398  006AFE  B4D8               	btfsc	status,2,c
 13399  006B00  D7DC               	goto	l8356
 13400  006B02  0A03               	xorlw	3	; case 6
 13401  006B04  B4D8               	btfsc	status,2,c
 13402  006B06  D7DE               	goto	l8358
 13403  006B08  D7E2               	goto	l8360
 13404  006B0A                     l886:
 13405                           
 13406                           ;ECAN.c: 1237: return (pt);
 13407  006B0A  C01C  F019         	movff	__ECANPointBuffer@pt+1,?__ECANPointBuffer+1
 13408  006B0E  C01B  F018         	movff	__ECANPointBuffer@pt,?__ECANPointBuffer
 13409  006B12  0012               	return	
 13410  006B14                     __end_of__ECANPointBuffer:
 13411                           	opt stack 0
 13412                           tblptru	equ	0xFF8
 13413                           tblptrh	equ	0xFF7
 13414                           tblptrl	equ	0xFF6
 13415                           tablat	equ	0xFF5
 13416                           prodh	equ	0xFF4
 13417                           prodl	equ	0xFF3
 13418                           postinc0	equ	0xFEE
 13419                           wreg	equ	0xFE8
 13420                           indf1	equ	0xFE7
 13421                           postdec1	equ	0xFE5
 13422                           fsr1h	equ	0xFE2
 13423                           fsr1l	equ	0xFE1
 13424                           indf2	equ	0xFDF
 13425                           postinc2	equ	0xFDE
 13426                           postdec2	equ	0xFDD
 13427                           plusw2	equ	0xFDB
 13428                           fsr2h	equ	0xFDA
 13429                           fsr2l	equ	0xFD9
 13430                           status	equ	0xFD8
 13431                           
 13432 ;; *************** function _vscp_error *****************
 13433 ;; Defined at:
 13434 ;;		line 187 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;		None
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;		None
 13439 ;; Return value:  Size  Location     Type
 13440 ;;		None               void
 13441 ;; Registers used:
 13442 ;;		wreg, status,2
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13448 ;;      Params:         0       0       0       0       0       0       0
 13449 ;;      Locals:         0       0       0       0       0       0       0
 13450 ;;      Temps:          0       0       0       0       0       0       0
 13451 ;;      Totals:         0       0       0       0       0       0       0
 13452 ;;Total ram usage:        0 bytes
 13453 ;; Hardware stack levels used:    1
 13454 ;; Hardware stack levels required when called:    2
 13455 ;; This function calls:
 13456 ;;		Nothing
 13457 ;; This function is called by:
 13458 ;;		_main
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           	psect	text42
 13463  007544                     __ptext42:
 13464                           	opt stack 0
 13465  007544                     _vscp_error:
 13466                           	opt stack 28
 13467                           
 13468                           ;vscp_firmware.c: 189: vscp_initledfunc = 0x00;
 13469                           
 13470                           ;incstack = 0
 13471  007544  0E00               	movlw	0
 13472  007546  6E38               	movwf	_vscp_initledfunc,c
 13473  007548  0012               	return	
 13474  00754A                     __end_of_vscp_error:
 13475                           	opt stack 0
 13476                           tblptru	equ	0xFF8
 13477                           tblptrh	equ	0xFF7
 13478                           tblptrl	equ	0xFF6
 13479                           tablat	equ	0xFF5
 13480                           prodh	equ	0xFF4
 13481                           prodl	equ	0xFF3
 13482                           postinc0	equ	0xFEE
 13483                           wreg	equ	0xFE8
 13484                           indf1	equ	0xFE7
 13485                           postdec1	equ	0xFE5
 13486                           fsr1h	equ	0xFE2
 13487                           fsr1l	equ	0xFE1
 13488                           indf2	equ	0xFDF
 13489                           postinc2	equ	0xFDE
 13490                           postdec2	equ	0xFDD
 13491                           plusw2	equ	0xFDB
 13492                           fsr2h	equ	0xFDA
 13493                           fsr2l	equ	0xFD9
 13494                           status	equ	0xFD8
 13495                           
 13496 ;; *************** function _vscp_doOneSecondWork *****************
 13497 ;; Defined at:
 13498 ;;		line 512 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;		None
 13501 ;; Auto vars:     Size  Location     Type
 13502 ;;		None
 13503 ;; Return value:  Size  Location     Type
 13504 ;;		None               void
 13505 ;; Registers used:
 13506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13512 ;;      Params:         0       0       0       0       0       0       0
 13513 ;;      Locals:         0       0       0       0       0       0       0
 13514 ;;      Temps:          0       1       0       0       0       0       0
 13515 ;;      Totals:         0       1       0       0       0       0       0
 13516 ;;Total ram usage:        1 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:    8
 13519 ;; This function calls:
 13520 ;;		_vscp_getSubzone
 13521 ;;		_vscp_getZone
 13522 ;;		_vscp_sendHeartBeat
 13523 ;; This function is called by:
 13524 ;;		_main
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           
 13528                           	psect	text43
 13529  006D2A                     __ptext43:
 13530                           	opt stack 0
 13531  006D2A                     _vscp_doOneSecondWork:
 13532                           	opt stack 22
 13533                           
 13534                           ;vscp_firmware.c: 515: ++vscp_second;
 13535                           
 13536                           ;incstack = 0
 13537  006D2A  0101               	movlb	1	; () banked
 13538  006D2C  2B25               	incf	_vscp_second& (0+255),f,b
 13539                           
 13540                           ; BSR set to: 1
 13541                           ;vscp_firmware.c: 517: if (vscp_second > 59) {
 13542  006D2E  0E3B               	movlw	59
 13543  006D30  0101               	movlb	1	; () banked
 13544  006D32  6525               	cpfsgt	_vscp_second& (0+255),b
 13545  006D34  D012               	goto	l10524
 13546                           
 13547                           ; BSR set to: 1
 13548                           ;vscp_firmware.c: 518: vscp_second = 0;
 13549  006D36  0E00               	movlw	0
 13550  006D38  0101               	movlb	1	; () banked
 13551  006D3A  6F25               	movwf	_vscp_second& (0+255),b
 13552                           
 13553                           ; BSR set to: 1
 13554                           ;vscp_firmware.c: 519: vscp_minute++;
 13555  006D3C  0101               	movlb	1	; () banked
 13556  006D3E  2B22               	incf	_vscp_minute& (0+255),f,b
 13557                           
 13558                           ; BSR set to: 1
 13559                           ;vscp_firmware.c: 522: if (0x03 == vscp_node_state) {
 13560  006D40  0100               	movlb	0	; () banked
 13561  006D42  51D3               	movf	_vscp_node_state& (0+255),w,b
 13562  006D44  0A03               	xorlw	3
 13563  006D46  A4D8               	btfss	status,2,c
 13564  006D48  D008               	goto	l10524
 13565                           
 13566                           ; BSR set to: 0
 13567                           ;vscp_firmware.c: 523: vscp_sendHeartBeat(vscp_getZone(),
 13568                           ;vscp_firmware.c: 524: vscp_getSubzone());
 13569  006D4A  EC8F  F03A         	call	_vscp_getSubzone	;wreg free
 13570  006D4E  0100               	movlb	0	; () banked
 13571  006D50  6F9F               	movwf	vscp_sendHeartBeat@subzone& (0+255),b
 13572  006D52  EC88  F03A         	call	_vscp_getZone	;wreg free
 13573  006D56  ECF3  F038         	call	_vscp_sendHeartBeat
 13574  006D5A                     l10524:
 13575                           
 13576                           ;vscp_firmware.c: 525: }
 13577                           ;vscp_firmware.c: 526: }
 13578                           ;vscp_firmware.c: 528: if (vscp_minute > 59) {
 13579  006D5A  0E3B               	movlw	59
 13580  006D5C  0101               	movlb	1	; () banked
 13581  006D5E  6522               	cpfsgt	_vscp_minute& (0+255),b
 13582  006D60  D005               	goto	l10530
 13583                           
 13584                           ; BSR set to: 1
 13585                           ;vscp_firmware.c: 529: vscp_minute = 0;
 13586  006D62  0E00               	movlw	0
 13587  006D64  0101               	movlb	1	; () banked
 13588  006D66  6F22               	movwf	_vscp_minute& (0+255),b
 13589                           
 13590                           ; BSR set to: 1
 13591                           ;vscp_firmware.c: 530: vscp_hour++;
 13592  006D68  0101               	movlb	1	; () banked
 13593  006D6A  2B21               	incf	_vscp_hour& (0+255),f,b
 13594  006D6C                     l10530:
 13595                           
 13596                           ; BSR set to: 1
 13597                           ;vscp_firmware.c: 531: }
 13598                           ;vscp_firmware.c: 533: if (vscp_hour > 23) vscp_hour = 0;
 13599  006D6C  0E17               	movlw	23
 13600  006D6E  0101               	movlb	1	; () banked
 13601  006D70  6521               	cpfsgt	_vscp_hour& (0+255),b
 13602  006D72  D003               	goto	l10534
 13603                           
 13604                           ; BSR set to: 1
 13605  006D74  0E00               	movlw	0
 13606  006D76  0101               	movlb	1	; () banked
 13607  006D78  6F21               	movwf	_vscp_hour& (0+255),b
 13608  006D7A                     l10534:
 13609                           
 13610                           ; BSR set to: 1
 13611                           ;vscp_firmware.c: 537: if (0x03 == vscp_node_state) {
 13612  006D7A  0100               	movlb	0	; () banked
 13613  006D7C  51D3               	movf	_vscp_node_state& (0+255),w,b
 13614  006D7E  0A03               	xorlw	3
 13615  006D80  A4D8               	btfss	status,2,c
 13616  006D82  D00F               	goto	l1073
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;vscp_firmware.c: 538: vscp_guid_reset++;
 13620  006D84  0100               	movlb	0	; () banked
 13621  006D86  2BD0               	incf	_vscp_guid_reset& (0+255),f,b
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;vscp_firmware.c: 539: if ((vscp_guid_reset & 0x0f) >= 2) {
 13625  006D88  C0D0  F0A1         	movff	_vscp_guid_reset,??_vscp_doOneSecondWork
 13626  006D8C  0E0F               	movlw	15
 13627  006D8E  0100               	movlb	0	; () banked
 13628  006D90  17A1               	andwf	??_vscp_doOneSecondWork& (0+255),f,b
 13629  006D92  0E02               	movlw	2
 13630  006D94  0100               	movlb	0	; () banked
 13631  006D96  5DA1               	subwf	??_vscp_doOneSecondWork& (0+255),w,b
 13632  006D98  A0D8               	btfss	status,0,c
 13633  006D9A  D003               	goto	l1073
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;vscp_firmware.c: 540: vscp_guid_reset = 0;
 13637  006D9C  0E00               	movlw	0
 13638  006D9E  0100               	movlb	0	; () banked
 13639  006DA0  6FD0               	movwf	_vscp_guid_reset& (0+255),b
 13640  006DA2                     l1073:
 13641                           
 13642                           ; BSR set to: 0
 13643  006DA2  0012               	return	
 13644  006DA4                     __end_of_vscp_doOneSecondWork:
 13645                           	opt stack 0
 13646                           tblptru	equ	0xFF8
 13647                           tblptrh	equ	0xFF7
 13648                           tblptrl	equ	0xFF6
 13649                           tablat	equ	0xFF5
 13650                           prodh	equ	0xFF4
 13651                           prodl	equ	0xFF3
 13652                           postinc0	equ	0xFEE
 13653                           wreg	equ	0xFE8
 13654                           indf1	equ	0xFE7
 13655                           postdec1	equ	0xFE5
 13656                           fsr1h	equ	0xFE2
 13657                           fsr1l	equ	0xFE1
 13658                           indf2	equ	0xFDF
 13659                           postinc2	equ	0xFDE
 13660                           postdec2	equ	0xFDD
 13661                           plusw2	equ	0xFDB
 13662                           fsr2h	equ	0xFDA
 13663                           fsr2l	equ	0xFD9
 13664                           status	equ	0xFD8
 13665                           
 13666 ;; *************** function _vscp_sendHeartBeat *****************
 13667 ;; Defined at:
 13668 ;;		line 366 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  zone            1    wreg     unsigned char 
 13671 ;;  subzone         1   63[BANK0 ] unsigned char 
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;  zone            1   64[BANK0 ] unsigned char 
 13674 ;; Return value:  Size  Location     Type
 13675 ;;		None               void
 13676 ;; Registers used:
 13677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 0/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13683 ;;      Params:         0       1       0       0       0       0       0
 13684 ;;      Locals:         0       1       0       0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0       0       0
 13686 ;;      Totals:         0       2       0       0       0       0       0
 13687 ;;Total ram usage:        2 bytes
 13688 ;; Hardware stack levels used:    1
 13689 ;; Hardware stack levels required when called:    7
 13690 ;; This function calls:
 13691 ;;		_vscp_sendEvent
 13692 ;; This function is called by:
 13693 ;;		_vscp_doOneSecondWork
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text44
 13698  0071E6                     __ptext44:
 13699                           	opt stack 0
 13700  0071E6                     _vscp_sendHeartBeat:
 13701                           	opt stack 22
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;incstack = 0
 13705                           ;vscp_sendHeartBeat@zone stored from wreg
 13706  0071E6  0100               	movlb	0	; () banked
 13707  0071E8  6FA0               	movwf	vscp_sendHeartBeat@zone& (0+255),b
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;vscp_firmware.c: 368: vscp_omsg.flags = 0x80 + 3;
 13711  0071EA  0E83               	movlw	131
 13712  0071EC  0100               	movlb	0	; () banked
 13713  0071EE  6FD4               	movwf	_vscp_omsg& (0+255),b
 13714                           
 13715                           ;vscp_firmware.c: 369: vscp_omsg.priority = 0x07;
 13716  0071F0  0E07               	movlw	7
 13717  0071F2  0100               	movlb	0	; () banked
 13718  0071F4  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 13719                           
 13720                           ;vscp_firmware.c: 370: vscp_omsg.vscp_class = 20;
 13721  0071F6  0E00               	movlw	0
 13722  0071F8  0100               	movlb	0	; () banked
 13723  0071FA  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 13724  0071FC  0E14               	movlw	20
 13725  0071FE  0100               	movlb	0	; () banked
 13726  007200  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 13727                           
 13728                           ;vscp_firmware.c: 371: vscp_omsg.vscp_type = 9;
 13729  007202  0E09               	movlw	9
 13730  007204  0100               	movlb	0	; () banked
 13731  007206  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 13732                           
 13733                           ;vscp_firmware.c: 372: vscp_omsg.data[ 0 ] = 0;
 13734  007208  0E00               	movlw	0
 13735  00720A  0100               	movlb	0	; () banked
 13736  00720C  6FD9               	movwf	(_vscp_omsg+5)& (0+255),b
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;vscp_firmware.c: 373: vscp_omsg.data[ 1 ] = zone;
 13740  00720E  C0A0  F0DA         	movff	vscp_sendHeartBeat@zone,_vscp_omsg+6
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;vscp_firmware.c: 374: vscp_omsg.data[ 2 ] = subzone;
 13744  007212  C09F  F0DB         	movff	vscp_sendHeartBeat@subzone,_vscp_omsg+7
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;vscp_firmware.c: 377: vscp_sendEvent();
 13748  007216  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 13749  00721A  0012               	return	
 13750  00721C                     __end_of_vscp_sendHeartBeat:
 13751                           	opt stack 0
 13752                           tblptru	equ	0xFF8
 13753                           tblptrh	equ	0xFF7
 13754                           tblptrl	equ	0xFF6
 13755                           tablat	equ	0xFF5
 13756                           prodh	equ	0xFF4
 13757                           prodl	equ	0xFF3
 13758                           postinc0	equ	0xFEE
 13759                           wreg	equ	0xFE8
 13760                           indf1	equ	0xFE7
 13761                           postdec1	equ	0xFE5
 13762                           fsr1h	equ	0xFE2
 13763                           fsr1l	equ	0xFE1
 13764                           indf2	equ	0xFDF
 13765                           postinc2	equ	0xFDE
 13766                           postdec2	equ	0xFDD
 13767                           plusw2	equ	0xFDB
 13768                           fsr2h	equ	0xFDA
 13769                           fsr2l	equ	0xFD9
 13770                           status	equ	0xFD8
 13771                           
 13772 ;; *************** function _vscp_getZone *****************
 13773 ;; Defined at:
 13774 ;;		line 2712 in file "../main.c"
 13775 ;; Parameters:    Size  Location     Type
 13776 ;;		None
 13777 ;; Auto vars:     Size  Location     Type
 13778 ;;		None
 13779 ;; Return value:  Size  Location     Type
 13780 ;;                  1    wreg      unsigned char 
 13781 ;; Registers used:
 13782 ;;		wreg, status,2, cstack
 13783 ;; Tracked objects:
 13784 ;;		On entry : 0/0
 13785 ;;		On exit  : 0/0
 13786 ;;		Unchanged: 0/0
 13787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13788 ;;      Params:         0       0       0       0       0       0       0
 13789 ;;      Locals:         0       0       0       0       0       0       0
 13790 ;;      Temps:          0       0       0       0       0       0       0
 13791 ;;      Totals:         0       0       0       0       0       0       0
 13792 ;;Total ram usage:        0 bytes
 13793 ;; Hardware stack levels used:    1
 13794 ;; Hardware stack levels required when called:    3
 13795 ;; This function calls:
 13796 ;;		_readEEPROM
 13797 ;; This function is called by:
 13798 ;;		_vscp_doOneSecondWork
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802                           	psect	text45
 13803  007510                     __ptext45:
 13804                           	opt stack 0
 13805  007510                     _vscp_getZone:
 13806                           	opt stack 26
 13807                           
 13808                           ;main.c: 2714: return readEEPROM(0x41);
 13809                           
 13810                           ;incstack = 0
 13811  007510  0E00               	movlw	0
 13812  007512  6E1F               	movwf	readEEPROM@address+1,c
 13813  007514  0E41               	movlw	65
 13814  007516  6E1E               	movwf	readEEPROM@address,c
 13815  007518  EC6F  F03A         	call	_readEEPROM	;wreg free
 13816  00751C  0012               	return	
 13817  00751E                     __end_of_vscp_getZone:
 13818                           	opt stack 0
 13819                           tblptru	equ	0xFF8
 13820                           tblptrh	equ	0xFF7
 13821                           tblptrl	equ	0xFF6
 13822                           tablat	equ	0xFF5
 13823                           prodh	equ	0xFF4
 13824                           prodl	equ	0xFF3
 13825                           postinc0	equ	0xFEE
 13826                           wreg	equ	0xFE8
 13827                           indf1	equ	0xFE7
 13828                           postdec1	equ	0xFE5
 13829                           fsr1h	equ	0xFE2
 13830                           fsr1l	equ	0xFE1
 13831                           indf2	equ	0xFDF
 13832                           postinc2	equ	0xFDE
 13833                           postdec2	equ	0xFDD
 13834                           plusw2	equ	0xFDB
 13835                           fsr2h	equ	0xFDA
 13836                           fsr2l	equ	0xFD9
 13837                           status	equ	0xFD8
 13838                           
 13839 ;; *************** function _vscp_getSubzone *****************
 13840 ;; Defined at:
 13841 ;;		line 2721 in file "../main.c"
 13842 ;; Parameters:    Size  Location     Type
 13843 ;;		None
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;		None
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1    wreg      unsigned char 
 13848 ;; Registers used:
 13849 ;;		wreg, status,2, cstack
 13850 ;; Tracked objects:
 13851 ;;		On entry : 0/0
 13852 ;;		On exit  : 0/0
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13855 ;;      Params:         0       0       0       0       0       0       0
 13856 ;;      Locals:         0       0       0       0       0       0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0
 13858 ;;      Totals:         0       0       0       0       0       0       0
 13859 ;;Total ram usage:        0 bytes
 13860 ;; Hardware stack levels used:    1
 13861 ;; Hardware stack levels required when called:    3
 13862 ;; This function calls:
 13863 ;;		_readEEPROM
 13864 ;; This function is called by:
 13865 ;;		_vscp_doOneSecondWork
 13866 ;; This function uses a non-reentrant model
 13867 ;;
 13868                           
 13869                           	psect	text46
 13870  00751E                     __ptext46:
 13871                           	opt stack 0
 13872  00751E                     _vscp_getSubzone:
 13873                           	opt stack 26
 13874                           
 13875                           ;main.c: 2723: return readEEPROM(0x42);
 13876                           
 13877                           ;incstack = 0
 13878  00751E  0E00               	movlw	0
 13879  007520  6E1F               	movwf	readEEPROM@address+1,c
 13880  007522  0E42               	movlw	66
 13881  007524  6E1E               	movwf	readEEPROM@address,c
 13882  007526  EC6F  F03A         	call	_readEEPROM	;wreg free
 13883  00752A  0012               	return	
 13884  00752C                     __end_of_vscp_getSubzone:
 13885                           	opt stack 0
 13886                           tblptru	equ	0xFF8
 13887                           tblptrh	equ	0xFF7
 13888                           tblptrl	equ	0xFF6
 13889                           tablat	equ	0xFF5
 13890                           prodh	equ	0xFF4
 13891                           prodl	equ	0xFF3
 13892                           postinc0	equ	0xFEE
 13893                           wreg	equ	0xFE8
 13894                           indf1	equ	0xFE7
 13895                           postdec1	equ	0xFE5
 13896                           fsr1h	equ	0xFE2
 13897                           fsr1l	equ	0xFE1
 13898                           indf2	equ	0xFDF
 13899                           postinc2	equ	0xFDE
 13900                           postdec2	equ	0xFDD
 13901                           plusw2	equ	0xFDB
 13902                           fsr2h	equ	0xFDA
 13903                           fsr2l	equ	0xFD9
 13904                           status	equ	0xFD8
 13905                           
 13906 ;; *************** function _vscp_check_pstorage *****************
 13907 ;; Defined at:
 13908 ;;		line 162 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;		None
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;		None
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  1    wreg      unsigned char 
 13915 ;; Registers used:
 13916 ;;		wreg, status,2, status,0, cstack
 13917 ;; Tracked objects:
 13918 ;;		On entry : 0/0
 13919 ;;		On exit  : 0/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13922 ;;      Params:         0       0       0       0       0       0       0
 13923 ;;      Locals:         0       0       0       0       0       0       0
 13924 ;;      Temps:          1       0       0       0       0       0       0
 13925 ;;      Totals:         1       0       0       0       0       0       0
 13926 ;;Total ram usage:        1 bytes
 13927 ;; Hardware stack levels used:    1
 13928 ;; Hardware stack levels required when called:    4
 13929 ;; This function calls:
 13930 ;;		_vscp_getSegmentCRC
 13931 ;;		_vscp_setControlByte
 13932 ;;		_vscp_setSegmentCRC
 13933 ;;		_vscp_writeNicknamePermanent
 13934 ;; This function is called by:
 13935 ;;		_main
 13936 ;; This function uses a non-reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text47
 13940  007278                     __ptext47:
 13941                           	opt stack 0
 13942  007278                     _vscp_check_pstorage:
 13943                           	opt stack 26
 13944                           
 13945                           ;vscp_firmware.c: 166: if ((vscp_getSegmentCRC() & 0xc0) == 0x40) {
 13946                           
 13947                           ;incstack = 0
 13948  007278  EC96  F03A         	call	_vscp_getSegmentCRC	;wreg free
 13949  00727C  6E21               	movwf	??_vscp_check_pstorage& (0+255),c
 13950  00727E  0EC0               	movlw	192
 13951  007280  1621               	andwf	??_vscp_check_pstorage,f,c
 13952  007282  5021               	movf	??_vscp_check_pstorage,w,c
 13953  007284  0A40               	xorlw	64
 13954  007286  A4D8               	btfss	status,2,c
 13955  007288  D002               	goto	l9900
 13956                           
 13957                           ;vscp_firmware.c: 167: return !0;
 13958  00728A  0E01               	movlw	1
 13959  00728C  D00A               	goto	l1006
 13960  00728E                     l9900:
 13961                           
 13962                           ;vscp_firmware.c: 168: }
 13963                           ;vscp_firmware.c: 171: vscp_writeNicknamePermanent(0xff);
 13964  00728E  0EFF               	movlw	255
 13965  007290  EC36  F03A         	call	_vscp_writeNicknamePermanent
 13966                           
 13967                           ;vscp_firmware.c: 174: vscp_setSegmentCRC(0x00);
 13968  007294  0E00               	movlw	0
 13969  007296  EC40  F03A         	call	_vscp_setSegmentCRC
 13970                           
 13971                           ;vscp_firmware.c: 178: vscp_setControlByte(0xA0);
 13972  00729A  0EA0               	movlw	160
 13973  00729C  EC4A  F03A         	call	_vscp_setControlByte
 13974                           
 13975                           ;vscp_firmware.c: 180: return 0;
 13976  0072A0  0E00               	movlw	0
 13977  0072A2                     l1006:
 13978  0072A2  0012               	return	
 13979  0072A4                     __end_of_vscp_check_pstorage:
 13980                           	opt stack 0
 13981                           tblptru	equ	0xFF8
 13982                           tblptrh	equ	0xFF7
 13983                           tblptrl	equ	0xFF6
 13984                           tablat	equ	0xFF5
 13985                           prodh	equ	0xFF4
 13986                           prodl	equ	0xFF3
 13987                           postinc0	equ	0xFEE
 13988                           wreg	equ	0xFE8
 13989                           indf1	equ	0xFE7
 13990                           postdec1	equ	0xFE5
 13991                           fsr1h	equ	0xFE2
 13992                           fsr1l	equ	0xFE1
 13993                           indf2	equ	0xFDF
 13994                           postinc2	equ	0xFDE
 13995                           postdec2	equ	0xFDD
 13996                           plusw2	equ	0xFDB
 13997                           fsr2h	equ	0xFDA
 13998                           fsr2l	equ	0xFD9
 13999                           status	equ	0xFD8
 14000                           
 14001 ;; *************** function _vscp_writeNicknamePermanent *****************
 14002 ;; Defined at:
 14003 ;;		line 2754 in file "../main.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;  nickname        1    wreg     unsigned char 
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;  nickname        1   26[COMRAM] unsigned char 
 14008 ;; Return value:  Size  Location     Type
 14009 ;;		None               void
 14010 ;; Registers used:
 14011 ;;		wreg, status,2, cstack
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14017 ;;      Params:         0       0       0       0       0       0       0
 14018 ;;      Locals:         1       0       0       0       0       0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0
 14020 ;;      Totals:         1       0       0       0       0       0       0
 14021 ;;Total ram usage:        1 bytes
 14022 ;; Hardware stack levels used:    1
 14023 ;; Hardware stack levels required when called:    3
 14024 ;; This function calls:
 14025 ;;		_writeEEPROM
 14026 ;; This function is called by:
 14027 ;;		_vscp_check_pstorage
 14028 ;;		_vscp_handleProbeState
 14029 ;;		_vscp_handleHeartbeat
 14030 ;;		_vscp_handleSetNickname
 14031 ;;		_vscp_handleDropNickname
 14032 ;;		_vscp_handlePreActiveState
 14033 ;; This function uses a non-reentrant model
 14034 ;;
 14035                           
 14036                           	psect	text48
 14037  00746C                     __ptext48:
 14038                           	opt stack 0
 14039  00746C                     _vscp_writeNicknamePermanent:
 14040                           	opt stack 25
 14041                           
 14042                           ;incstack = 0
 14043                           ;vscp_writeNicknamePermanent@nickname stored from wreg
 14044  00746C  6E1B               	movwf	vscp_writeNicknamePermanent@nickname,c
 14045                           
 14046                           ;main.c: 2756: writeEEPROM( 0x01, nickname );
 14047  00746E  0E00               	movlw	0
 14048  007470  6E19               	movwf	writeEEPROM@address+1,c
 14049  007472  0E01               	movlw	1
 14050  007474  6E18               	movwf	writeEEPROM@address,c
 14051  007476  C01B  F01A         	movff	vscp_writeNicknamePermanent@nickname,writeEEPROM@data
 14052  00747A  EC8E  F039         	call	_writeEEPROM	;wreg free
 14053  00747E  0012               	return	
 14054  007480                     __end_of_vscp_writeNicknamePermanent:
 14055                           	opt stack 0
 14056                           tblptru	equ	0xFF8
 14057                           tblptrh	equ	0xFF7
 14058                           tblptrl	equ	0xFF6
 14059                           tablat	equ	0xFF5
 14060                           prodh	equ	0xFF4
 14061                           prodl	equ	0xFF3
 14062                           postinc0	equ	0xFEE
 14063                           wreg	equ	0xFE8
 14064                           indf1	equ	0xFE7
 14065                           postdec1	equ	0xFE5
 14066                           fsr1h	equ	0xFE2
 14067                           fsr1l	equ	0xFE1
 14068                           indf2	equ	0xFDF
 14069                           postinc2	equ	0xFDE
 14070                           postdec2	equ	0xFDD
 14071                           plusw2	equ	0xFDB
 14072                           fsr2h	equ	0xFDA
 14073                           fsr2l	equ	0xFD9
 14074                           status	equ	0xFD8
 14075                           
 14076 ;; *************** function _vscp_setSegmentCRC *****************
 14077 ;; Defined at:
 14078 ;;		line 2772 in file "../main.c"
 14079 ;; Parameters:    Size  Location     Type
 14080 ;;  crc             1    wreg     unsigned char 
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;  crc             1   26[COMRAM] unsigned char 
 14083 ;; Return value:  Size  Location     Type
 14084 ;;		None               void
 14085 ;; Registers used:
 14086 ;;		wreg, status,2, cstack
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/0
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14092 ;;      Params:         0       0       0       0       0       0       0
 14093 ;;      Locals:         1       0       0       0       0       0       0
 14094 ;;      Temps:          0       0       0       0       0       0       0
 14095 ;;      Totals:         1       0       0       0       0       0       0
 14096 ;;Total ram usage:        1 bytes
 14097 ;; Hardware stack levels used:    1
 14098 ;; Hardware stack levels required when called:    3
 14099 ;; This function calls:
 14100 ;;		_writeEEPROM
 14101 ;; This function is called by:
 14102 ;;		_vscp_check_pstorage
 14103 ;;		_vscp_handleProbeState
 14104 ;;		_vscp_handleHeartbeat
 14105 ;;		_vscp_handleSetNickname
 14106 ;;		_vscp_handlePreActiveState
 14107 ;; This function uses a non-reentrant model
 14108 ;;
 14109                           
 14110                           	psect	text49
 14111  007480                     __ptext49:
 14112                           	opt stack 0
 14113  007480                     _vscp_setSegmentCRC:
 14114                           	opt stack 25
 14115                           
 14116                           ;incstack = 0
 14117                           ;vscp_setSegmentCRC@crc stored from wreg
 14118  007480  6E1B               	movwf	vscp_setSegmentCRC@crc,c
 14119                           
 14120                           ;main.c: 2774: writeEEPROM(0x02, crc);
 14121  007482  0E00               	movlw	0
 14122  007484  6E19               	movwf	writeEEPROM@address+1,c
 14123  007486  0E02               	movlw	2
 14124  007488  6E18               	movwf	writeEEPROM@address,c
 14125  00748A  C01B  F01A         	movff	vscp_setSegmentCRC@crc,writeEEPROM@data
 14126  00748E  EC8E  F039         	call	_writeEEPROM	;wreg free
 14127  007492  0012               	return	
 14128  007494                     __end_of_vscp_setSegmentCRC:
 14129                           	opt stack 0
 14130                           tblptru	equ	0xFF8
 14131                           tblptrh	equ	0xFF7
 14132                           tblptrl	equ	0xFF6
 14133                           tablat	equ	0xFF5
 14134                           prodh	equ	0xFF4
 14135                           prodl	equ	0xFF3
 14136                           postinc0	equ	0xFEE
 14137                           wreg	equ	0xFE8
 14138                           indf1	equ	0xFE7
 14139                           postdec1	equ	0xFE5
 14140                           fsr1h	equ	0xFE2
 14141                           fsr1l	equ	0xFE1
 14142                           indf2	equ	0xFDF
 14143                           postinc2	equ	0xFDE
 14144                           postdec2	equ	0xFDD
 14145                           plusw2	equ	0xFDB
 14146                           fsr2h	equ	0xFDA
 14147                           fsr2l	equ	0xFD9
 14148                           status	equ	0xFD8
 14149                           
 14150 ;; *************** function _vscp_setControlByte *****************
 14151 ;; Defined at:
 14152 ;;		line 2781 in file "../main.c"
 14153 ;; Parameters:    Size  Location     Type
 14154 ;;  ctrl            1    wreg     unsigned char 
 14155 ;; Auto vars:     Size  Location     Type
 14156 ;;  ctrl            1   26[COMRAM] unsigned char 
 14157 ;; Return value:  Size  Location     Type
 14158 ;;		None               void
 14159 ;; Registers used:
 14160 ;;		wreg, status,2, cstack
 14161 ;; Tracked objects:
 14162 ;;		On entry : 0/0
 14163 ;;		On exit  : 0/0
 14164 ;;		Unchanged: 0/0
 14165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14166 ;;      Params:         0       0       0       0       0       0       0
 14167 ;;      Locals:         1       0       0       0       0       0       0
 14168 ;;      Temps:          0       0       0       0       0       0       0
 14169 ;;      Totals:         1       0       0       0       0       0       0
 14170 ;;Total ram usage:        1 bytes
 14171 ;; Hardware stack levels used:    1
 14172 ;; Hardware stack levels required when called:    3
 14173 ;; This function calls:
 14174 ;;		_writeEEPROM
 14175 ;; This function is called by:
 14176 ;;		_vscp_check_pstorage
 14177 ;; This function uses a non-reentrant model
 14178 ;;
 14179                           
 14180                           	psect	text50
 14181  007494                     __ptext50:
 14182                           	opt stack 0
 14183  007494                     _vscp_setControlByte:
 14184                           	opt stack 26
 14185                           
 14186                           ;incstack = 0
 14187                           ;vscp_setControlByte@ctrl stored from wreg
 14188  007494  6E1B               	movwf	vscp_setControlByte@ctrl,c
 14189                           
 14190                           ;main.c: 2783: writeEEPROM(0x03, ctrl);
 14191  007496  0E00               	movlw	0
 14192  007498  6E19               	movwf	writeEEPROM@address+1,c
 14193  00749A  0E03               	movlw	3
 14194  00749C  6E18               	movwf	writeEEPROM@address,c
 14195  00749E  C01B  F01A         	movff	vscp_setControlByte@ctrl,writeEEPROM@data
 14196  0074A2  EC8E  F039         	call	_writeEEPROM	;wreg free
 14197  0074A6  0012               	return	
 14198  0074A8                     __end_of_vscp_setControlByte:
 14199                           	opt stack 0
 14200                           tblptru	equ	0xFF8
 14201                           tblptrh	equ	0xFF7
 14202                           tblptrl	equ	0xFF6
 14203                           tablat	equ	0xFF5
 14204                           prodh	equ	0xFF4
 14205                           prodl	equ	0xFF3
 14206                           postinc0	equ	0xFEE
 14207                           wreg	equ	0xFE8
 14208                           indf1	equ	0xFE7
 14209                           postdec1	equ	0xFE5
 14210                           fsr1h	equ	0xFE2
 14211                           fsr1l	equ	0xFE1
 14212                           indf2	equ	0xFDF
 14213                           postinc2	equ	0xFDE
 14214                           postdec2	equ	0xFDD
 14215                           plusw2	equ	0xFDB
 14216                           fsr2h	equ	0xFDA
 14217                           fsr2l	equ	0xFD9
 14218                           status	equ	0xFD8
 14219                           
 14220 ;; *************** function _vscp_getSegmentCRC *****************
 14221 ;; Defined at:
 14222 ;;		line 2763 in file "../main.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;		None
 14225 ;; Auto vars:     Size  Location     Type
 14226 ;;		None
 14227 ;; Return value:  Size  Location     Type
 14228 ;;                  1    wreg      unsigned char 
 14229 ;; Registers used:
 14230 ;;		wreg, status,2, cstack
 14231 ;; Tracked objects:
 14232 ;;		On entry : 0/0
 14233 ;;		On exit  : 0/0
 14234 ;;		Unchanged: 0/0
 14235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14236 ;;      Params:         0       0       0       0       0       0       0
 14237 ;;      Locals:         0       0       0       0       0       0       0
 14238 ;;      Temps:          0       0       0       0       0       0       0
 14239 ;;      Totals:         0       0       0       0       0       0       0
 14240 ;;Total ram usage:        0 bytes
 14241 ;; Hardware stack levels used:    1
 14242 ;; Hardware stack levels required when called:    3
 14243 ;; This function calls:
 14244 ;;		_readEEPROM
 14245 ;; This function is called by:
 14246 ;;		_vscp_check_pstorage
 14247 ;;		_vscp_handleHeartbeat
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           	psect	text51
 14252  00752C                     __ptext51:
 14253                           	opt stack 0
 14254  00752C                     _vscp_getSegmentCRC:
 14255                           	opt stack 25
 14256                           
 14257                           ;main.c: 2765: return readEEPROM(0x02);
 14258                           
 14259                           ;incstack = 0
 14260  00752C  0E00               	movlw	0
 14261  00752E  6E1F               	movwf	readEEPROM@address+1,c
 14262  007530  0E02               	movlw	2
 14263  007532  6E1E               	movwf	readEEPROM@address,c
 14264  007534  EC6F  F03A         	call	_readEEPROM	;wreg free
 14265  007538  0012               	return	
 14266  00753A                     __end_of_vscp_getSegmentCRC:
 14267                           	opt stack 0
 14268                           tblptru	equ	0xFF8
 14269                           tblptrh	equ	0xFF7
 14270                           tblptrl	equ	0xFF6
 14271                           tablat	equ	0xFF5
 14272                           prodh	equ	0xFF4
 14273                           prodl	equ	0xFF3
 14274                           postinc0	equ	0xFEE
 14275                           wreg	equ	0xFE8
 14276                           indf1	equ	0xFE7
 14277                           postdec1	equ	0xFE5
 14278                           fsr1h	equ	0xFE2
 14279                           fsr1l	equ	0xFE1
 14280                           indf2	equ	0xFDF
 14281                           postinc2	equ	0xFDE
 14282                           postdec2	equ	0xFDD
 14283                           plusw2	equ	0xFDB
 14284                           fsr2h	equ	0xFDA
 14285                           fsr2l	equ	0xFD9
 14286                           status	equ	0xFD8
 14287                           
 14288 ;; *************** function _init *****************
 14289 ;; Defined at:
 14290 ;;		line 880 in file "../main.c"
 14291 ;; Parameters:    Size  Location     Type
 14292 ;;		None
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;		None
 14295 ;; Return value:  Size  Location     Type
 14296 ;;		None               void
 14297 ;; Registers used:
 14298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14299 ;; Tracked objects:
 14300 ;;		On entry : 0/0
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14304 ;;      Params:         0       0       0       0       0       0       0
 14305 ;;      Locals:         0       0       0       0       0       0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0
 14307 ;;      Totals:         0       0       0       0       0       0       0
 14308 ;;Total ram usage:        0 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; Hardware stack levels required when called:    5
 14311 ;; This function calls:
 14312 ;;		_ConvertADC
 14313 ;;		_ECANInitialize
 14314 ;;		_OpenADC
 14315 ;;		_OpenTimer0
 14316 ;;		_WriteTimer0
 14317 ;;		_init_app_ram
 14318 ;; This function is called by:
 14319 ;;		_main
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text52
 14324  0070B4                     __ptext52:
 14325                           	opt stack 0
 14326  0070B4                     _init:
 14327                           	opt stack 25
 14328                           
 14329                           ;main.c: 885: init_app_ram();
 14330                           
 14331                           ;incstack = 0
 14332  0070B4  EC19  F036         	call	_init_app_ram	;wreg free
 14333                           
 14334                           ;main.c: 893: TRISA = 0x07;
 14335  0070B8  0E07               	movlw	7
 14336  0070BA  6E92               	movwf	3986,c	;volatile
 14337                           
 14338                           ;main.c: 904: TRISB = 0x1B;
 14339  0070BC  0E1B               	movlw	27
 14340  0070BE  6E93               	movwf	3987,c	;volatile
 14341                           
 14342                           ;main.c: 914: TRISC = 0x01;
 14343  0070C0  0E01               	movlw	1
 14344  0070C2  6E94               	movwf	3988,c	;volatile
 14345                           
 14346                           ;main.c: 915: PORTC = 0x00;
 14347  0070C4  0E00               	movlw	0
 14348  0070C6  6E82               	movwf	3970,c	;volatile
 14349                           
 14350                           ;main.c: 917: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110010);
 14351  0070C8  0E92               	movlw	146
 14352  0070CA  ECC3  F039         	call	_OpenTimer0
 14353                           
 14354                           ;main.c: 918: WriteTimer0(0xfb1d);
 14355  0070CE  0EFB               	movlw	251
 14356  0070D0  6E19               	movwf	WriteTimer0@timer0+1,c
 14357  0070D2  0E1D               	movlw	29
 14358  0070D4  6E18               	movwf	WriteTimer0@timer0,c
 14359  0070D6  EC66  F03A         	call	_WriteTimer0	;wreg free
 14360                           
 14361                           ;main.c: 920: OpenADC(0b11101111 & 0b11111111 & 0b11111111,
 14362                           ;main.c: 921: 0b10000111 & 0b11111111 & 0b11110100 &
 14363                           ;main.c: 922: 0b11111110 & 0b11111101,
 14364                           ;main.c: 923: 15);
 14365  0070DA  0E84               	movlw	132
 14366  0070DC  6E18               	movwf	OpenADC@config2,c
 14367  0070DE  0E0F               	movlw	15
 14368  0070E0  6E19               	movwf	OpenADC@portconfig,c
 14369  0070E2  0EEF               	movlw	239
 14370  0070E4  ECD2  F036         	call	_OpenADC
 14371                           
 14372                           ;main.c: 926: ECANInitialize();
 14373  0070E8  EC49  F031         	call	_ECANInitialize	;wreg free
 14374                           
 14375                           ;main.c: 947: INTCONbits.GIE = 1;
 14376  0070EC  8EF2               	bsf	intcon,7,c	;volatile
 14377                           
 14378                           ;main.c: 949: ConvertADC();
 14379  0070EE  ECB1  F03A         	call	_ConvertADC	;wreg free
 14380                           
 14381                           ;main.c: 951: return;
 14382  0070F2  0012               	return	
 14383  0070F4                     __end_of_init:
 14384                           	opt stack 0
 14385                           tblptru	equ	0xFF8
 14386                           tblptrh	equ	0xFF7
 14387                           tblptrl	equ	0xFF6
 14388                           tablat	equ	0xFF5
 14389                           prodh	equ	0xFF4
 14390                           prodl	equ	0xFF3
 14391                           intcon	equ	0xFF2
 14392                           postinc0	equ	0xFEE
 14393                           wreg	equ	0xFE8
 14394                           indf1	equ	0xFE7
 14395                           postdec1	equ	0xFE5
 14396                           fsr1h	equ	0xFE2
 14397                           fsr1l	equ	0xFE1
 14398                           indf2	equ	0xFDF
 14399                           postinc2	equ	0xFDE
 14400                           postdec2	equ	0xFDD
 14401                           plusw2	equ	0xFDB
 14402                           fsr2h	equ	0xFDA
 14403                           fsr2l	equ	0xFD9
 14404                           status	equ	0xFD8
 14405                           
 14406 ;; *************** function _init_app_ram *****************
 14407 ;; Defined at:
 14408 ;;		line 976 in file "../main.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;		None
 14411 ;; Auto vars:     Size  Location     Type
 14412 ;;  i               1   41[COMRAM] unsigned char 
 14413 ;; Return value:  Size  Location     Type
 14414 ;;		None               void
 14415 ;; Registers used:
 14416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14417 ;; Tracked objects:
 14418 ;;		On entry : 0/0
 14419 ;;		On exit  : 0/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14422 ;;      Params:         0       0       0       0       0       0       0
 14423 ;;      Locals:         1       0       0       0       0       0       0
 14424 ;;      Temps:          0       0       0       0       0       0       0
 14425 ;;      Totals:         1       0       0       0       0       0       0
 14426 ;;Total ram usage:        1 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; Hardware stack levels required when called:    4
 14429 ;; This function calls:
 14430 ;;		_writeCoeffs2Ram
 14431 ;; This function is called by:
 14432 ;;		_init
 14433 ;;		_vscp_restoreDefaults
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text53
 14438  006C32                     __ptext53:
 14439                           	opt stack 0
 14440  006C32                     _init_app_ram:
 14441                           	opt stack 23
 14442                           
 14443                           ;main.c: 978: char i;
 14444                           ;main.c: 980: measurement_clock = 0;
 14445                           
 14446                           ;incstack = 0
 14447  006C32  0E00               	movlw	0
 14448  006C34  0101               	movlb	1	; () banked
 14449  006C36  6F12               	movwf	_measurement_clock& (0+255),b
 14450  006C38  0E00               	movlw	0
 14451  006C3A  0101               	movlb	1	; () banked
 14452  006C3C  6F13               	movwf	(_measurement_clock+1)& (0+255),b
 14453  006C3E  0E00               	movlw	0
 14454  006C40  0101               	movlb	1	; () banked
 14455  006C42  6F14               	movwf	(_measurement_clock+2)& (0+255),b
 14456  006C44  0E00               	movlw	0
 14457  006C46  0101               	movlb	1	; () banked
 14458  006C48  6F15               	movwf	(_measurement_clock+3)& (0+255),b
 14459                           
 14460                           ;main.c: 981: seconds = 0;
 14461  006C4A  0E00               	movlw	0
 14462  006C4C  0101               	movlb	1	; () banked
 14463  006C4E  6F1F               	movwf	_seconds& (0+255),b
 14464                           
 14465                           ;main.c: 984: for (i = 0; i < 6; i++) {
 14466  006C50  0E00               	movlw	0
 14467  006C52  6E2A               	movwf	init_app_ram@i,c
 14468  006C54  D01B               	goto	L166
 14469  006C56                     l8322:
 14470                           
 14471                           ; BSR set to: 1
 14472                           ;main.c: 985: seconds_temp[i] = 0;
 14473  006C56  502A               	movf	init_app_ram@i,w,c
 14474  006C58  0D01               	mullw	1
 14475  006C5A  0101               	movlb	1	; () banked
 14476  006C5C  0E0C               	movlw	low _seconds_temp
 14477  006C5E  24F3               	addwf	prodl,w,c
 14478  006C60  6ED9               	movwf	fsr2l,c
 14479  006C62  0101               	movlb	1	; () banked
 14480  006C64  0E01               	movlw	high _seconds_temp
 14481  006C66  20F4               	addwfc	prodh,w,c
 14482  006C68  6EDA               	movwf	fsr2h,c
 14483  006C6A  0E00               	movlw	0
 14484  006C6C  6EDF               	movwf	indf2,c
 14485                           
 14486                           ;main.c: 986: current_temp[i] = 0;
 14487  006C6E  502A               	movf	init_app_ram@i,w,c
 14488  006C70  0D02               	mullw	2
 14489  006C72  0101               	movlb	1	; () banked
 14490  006C74  0E00               	movlw	low _current_temp
 14491  006C76  24F3               	addwf	prodl,w,c
 14492  006C78  6ED9               	movwf	fsr2l,c
 14493  006C7A  0101               	movlb	1	; () banked
 14494  006C7C  0E01               	movlw	high _current_temp
 14495  006C7E  20F4               	addwfc	prodh,w,c
 14496  006C80  6EDA               	movwf	fsr2h,c
 14497  006C82  0E00               	movlw	0
 14498  006C84  6EDE               	movwf	postinc2,c
 14499  006C86  0E00               	movlw	0
 14500  006C88  6EDD               	movwf	postdec2,c
 14501                           
 14502                           ; BSR set to: 1
 14503  006C8A  2A2A               	incf	init_app_ram@i,f,c
 14504  006C8C                     L166:
 14505                           
 14506                           ; BSR set to: 1
 14507  006C8C  0E05               	movlw	5
 14508  006C8E  642A               	cpfsgt	init_app_ram@i,c
 14509  006C90  D7E2               	goto	l8322
 14510                           
 14511                           ; BSR set to: 1
 14512                           ;main.c: 987: }
 14513                           ;main.c: 990: adc_conversion_flags = 0;
 14514                           
 14515                           ; BSR set to: 1
 14516  006C92  0E00               	movlw	0
 14517  006C94  0100               	movlb	0	; () banked
 14518  006C96  6FCB               	movwf	_adc_conversion_flags& (0+255),b
 14519                           
 14520                           ;main.c: 993: adc_series_counter = 0;
 14521  006C98  0E00               	movlw	0
 14522  006C9A  6E36               	movwf	_adc_series_counter,c
 14523                           
 14524                           ;main.c: 996: low_alarm = 0;
 14525  006C9C  0E00               	movlw	0
 14526  006C9E  0100               	movlb	0	; () banked
 14527  006CA0  6FCD               	movwf	_low_alarm& (0+255),b
 14528                           
 14529                           ;main.c: 999: high_alarm = 0;
 14530  006CA2  0E00               	movlw	0
 14531  006CA4  0100               	movlb	0	; () banked
 14532  006CA6  6FCC               	movwf	_high_alarm& (0+255),b
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;main.c: 1002: writeCoeffs2Ram();
 14536  006CA8  EC2D  F033         	call	_writeCoeffs2Ram	;wreg free
 14537  006CAC  0012               	return	
 14538  006CAE                     __end_of_init_app_ram:
 14539                           	opt stack 0
 14540                           tblptru	equ	0xFF8
 14541                           tblptrh	equ	0xFF7
 14542                           tblptrl	equ	0xFF6
 14543                           tablat	equ	0xFF5
 14544                           prodh	equ	0xFF4
 14545                           prodl	equ	0xFF3
 14546                           intcon	equ	0xFF2
 14547                           postinc0	equ	0xFEE
 14548                           wreg	equ	0xFE8
 14549                           indf1	equ	0xFE7
 14550                           postdec1	equ	0xFE5
 14551                           fsr1h	equ	0xFE2
 14552                           fsr1l	equ	0xFE1
 14553                           indf2	equ	0xFDF
 14554                           postinc2	equ	0xFDE
 14555                           postdec2	equ	0xFDD
 14556                           plusw2	equ	0xFDB
 14557                           fsr2h	equ	0xFDA
 14558                           fsr2l	equ	0xFD9
 14559                           status	equ	0xFD8
 14560                           
 14561 ;; *************** function _writeCoeffs2Ram *****************
 14562 ;; Defined at:
 14563 ;;		line 958 in file "../main.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;		None
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;  c               3   34[COMRAM] unsigned char [3]
 14568 ;;  j               2   39[COMRAM] int 
 14569 ;;  i               2   37[COMRAM] int 
 14570 ;; Return value:  Size  Location     Type
 14571 ;;		None               void
 14572 ;; Registers used:
 14573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14579 ;;      Params:         0       0       0       0       0       0       0
 14580 ;;      Locals:         7       0       0       0       0       0       0
 14581 ;;      Temps:          2       0       0       0       0       0       0
 14582 ;;      Totals:         9       0       0       0       0       0       0
 14583 ;;Total ram usage:        9 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    3
 14586 ;; This function calls:
 14587 ;;		___wmul
 14588 ;;		_readEEPROM
 14589 ;; This function is called by:
 14590 ;;		_init_app_ram
 14591 ;;		_vscp_writeAppReg
 14592 ;; This function uses a non-reentrant model
 14593 ;;
 14594                           
 14595                           	psect	text54
 14596  00665A                     __ptext54:
 14597                           	opt stack 0
 14598  00665A                     _writeCoeffs2Ram:
 14599                           	opt stack 23
 14600                           
 14601                           ;main.c: 960: int i, j;
 14602                           ;main.c: 961: uint8_t c[3];
 14603                           ;main.c: 963: for (i = 0; i < 6; i++) {
 14604                           
 14605                           ;incstack = 0
 14606  00665A  0E00               	movlw	0
 14607  00665C  6E27               	movwf	writeCoeffs2Ram@i+1,c
 14608  00665E  0E00               	movlw	0
 14609  006660  6E26               	movwf	writeCoeffs2Ram@i,c
 14610  006662  5027               	movf	writeCoeffs2Ram@i+1,w,c
 14611  006664  0A80               	xorlw	128
 14612  006666  0F80               	addlw	-128
 14613  006668  0E06               	movlw	6
 14614  00666A  B4D8               	btfsc	status,2,c
 14615  00666C  5C26               	subwf	writeCoeffs2Ram@i,w,c
 14616  00666E  B0D8               	btfsc	status,0,c
 14617  006670  D056               	goto	l269
 14618                           
 14619                           ;main.c: 964: for (j = 2; j > 0; j--) {
 14620  006672  0E00               	movlw	0
 14621  006674  6E29               	movwf	writeCoeffs2Ram@j+1,c
 14622  006676  0E02               	movlw	2
 14623  006678  6E28               	movwf	writeCoeffs2Ram@j,c
 14624  00667A  5029               	movf	writeCoeffs2Ram@j+1,w,c
 14625  00667C  0A80               	xorlw	128
 14626  00667E  6EF3               	movwf	prodl,c
 14627  006680  0E80               	movlw	128
 14628  006682  5CF3               	subwf	prodl,w,c
 14629  006684  0E01               	movlw	1
 14630  006686  B4D8               	btfsc	status,2,c
 14631  006688  5C28               	subwf	writeCoeffs2Ram@j,w,c
 14632  00668A  A0D8               	btfss	status,0,c
 14633  00668C  D02D               	goto	l8188
 14634                           
 14635                           ;main.c: 966: c[2 - j] = readEEPROM(0xAA + i * 3 + j);
 14636  00668E  C028  F021         	movff	writeCoeffs2Ram@j,??_writeCoeffs2Ram
 14637  006692  C029  F022         	movff	writeCoeffs2Ram@j+1,??_writeCoeffs2Ram+1
 14638  006696  1E21               	comf	??_writeCoeffs2Ram,f,c
 14639  006698  1E22               	comf	??_writeCoeffs2Ram+1,f,c
 14640  00669A  4A21               	infsnz	??_writeCoeffs2Ram,f,c
 14641  00669C  2A22               	incf	??_writeCoeffs2Ram+1,f,c
 14642  00669E  0E02               	movlw	2
 14643  0066A0  2621               	addwf	??_writeCoeffs2Ram,f,c
 14644  0066A2  0E00               	movlw	0
 14645  0066A4  2222               	addwfc	??_writeCoeffs2Ram+1,f,c
 14646  0066A6  0E23               	movlw	low writeCoeffs2Ram@c
 14647  0066A8  2421               	addwf	??_writeCoeffs2Ram,w,c
 14648  0066AA  6ED9               	movwf	fsr2l,c
 14649  0066AC  0E00               	movlw	high writeCoeffs2Ram@c
 14650  0066AE  2022               	addwfc	??_writeCoeffs2Ram+1,w,c
 14651  0066B0  6EDA               	movwf	fsr2h,c
 14652  0066B2  C026  F018         	movff	writeCoeffs2Ram@i,___wmul@multiplier
 14653  0066B6  C027  F019         	movff	writeCoeffs2Ram@i+1,___wmul@multiplier+1
 14654  0066BA  0E00               	movlw	0
 14655  0066BC  6E1B               	movwf	___wmul@multiplicand+1,c
 14656  0066BE  0E03               	movlw	3
 14657  0066C0  6E1A               	movwf	___wmul@multiplicand,c
 14658  0066C2  EC7B  F039         	call	___wmul	;wreg free
 14659  0066C6  5028               	movf	writeCoeffs2Ram@j,w,c
 14660  0066C8  2618               	addwf	?___wmul,f,c
 14661  0066CA  5029               	movf	writeCoeffs2Ram@j+1,w,c
 14662  0066CC  2219               	addwfc	?___wmul+1,f,c
 14663  0066CE  0EAA               	movlw	170
 14664  0066D0  2418               	addwf	?___wmul,w,c
 14665  0066D2  6E1E               	movwf	readEEPROM@address,c
 14666  0066D4  0E00               	movlw	0
 14667  0066D6  2019               	addwfc	?___wmul+1,w,c
 14668  0066D8  6E1F               	movwf	readEEPROM@address+1,c
 14669  0066DA  EC6F  F03A         	call	_readEEPROM	;wreg free
 14670  0066DE  6EDF               	movwf	indf2,c
 14671  0066E0  0628               	decf	writeCoeffs2Ram@j,f,c
 14672  0066E2  A0D8               	btfss	status,0,c
 14673  0066E4  0629               	decf	writeCoeffs2Ram@j+1,f,c
 14674  0066E6  D7C9               	goto	L167
 14675  0066E8                     l8188:
 14676                           
 14677                           ;main.c: 967: }
 14678                           ;main.c: 968: sh_coefficients[i] = *((double*) c);
 14679  0066E8  0E26               	movlw	low _sh_coefficients
 14680  0066EA  6E21               	movwf	??_writeCoeffs2Ram& (0+255),c
 14681  0066EC  0E01               	movlw	high _sh_coefficients
 14682  0066EE  6E22               	movwf	(??_writeCoeffs2Ram+1)& (0+255),c
 14683  0066F0  90D8               	bcf	status,0,c
 14684  0066F2  3426               	rlcf	writeCoeffs2Ram@i,w,c
 14685  0066F4  6ED9               	movwf	fsr2l,c
 14686  0066F6  3427               	rlcf	writeCoeffs2Ram@i+1,w,c
 14687  0066F8  6EDA               	movwf	fsr2h,c
 14688  0066FA  90D8               	bcf	status,0,c
 14689  0066FC  36D9               	rlcf	fsr2l,f,c
 14690  0066FE  36DA               	rlcf	fsr2h,f,c
 14691  006700  5021               	movf	??_writeCoeffs2Ram,w,c
 14692  006702  26D9               	addwf	fsr2l,f,c
 14693  006704  5022               	movf	??_writeCoeffs2Ram+1,w,c
 14694  006706  22DA               	addwfc	fsr2h,f,c
 14695  006708  C023  FFDE         	movff	writeCoeffs2Ram@c,postinc2
 14696  00670C  C024  FFDE         	movff	writeCoeffs2Ram@c+1,postinc2
 14697  006710  C025  FFDE         	movff	writeCoeffs2Ram@c+2,postinc2
 14698  006714  C026  FFDE         	movff	writeCoeffs2Ram@c+3,postinc2
 14699  006718  4A26               	infsnz	writeCoeffs2Ram@i,f,c
 14700  00671A  2A27               	incf	writeCoeffs2Ram@i+1,f,c
 14701  00671C  D7A2               	goto	L168
 14702  00671E                     l269:
 14703  00671E  0012               	return	
 14704  006720                     __end_of_writeCoeffs2Ram:
 14705                           	opt stack 0
 14706                           tblptru	equ	0xFF8
 14707                           tblptrh	equ	0xFF7
 14708                           tblptrl	equ	0xFF6
 14709                           tablat	equ	0xFF5
 14710                           prodh	equ	0xFF4
 14711                           prodl	equ	0xFF3
 14712                           intcon	equ	0xFF2
 14713                           postinc0	equ	0xFEE
 14714                           wreg	equ	0xFE8
 14715                           indf1	equ	0xFE7
 14716                           postdec1	equ	0xFE5
 14717                           fsr1h	equ	0xFE2
 14718                           fsr1l	equ	0xFE1
 14719                           indf2	equ	0xFDF
 14720                           postinc2	equ	0xFDE
 14721                           postdec2	equ	0xFDD
 14722                           plusw2	equ	0xFDB
 14723                           fsr2h	equ	0xFDA
 14724                           fsr2l	equ	0xFD9
 14725                           status	equ	0xFD8
 14726                           
 14727 ;; *************** function ___wmul *****************
 14728 ;; Defined at:
 14729 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;  multiplier      2   23[COMRAM] unsigned int 
 14732 ;;  multiplicand    2   25[COMRAM] unsigned int 
 14733 ;; Auto vars:     Size  Location     Type
 14734 ;;  product         2   27[COMRAM] unsigned int 
 14735 ;; Return value:  Size  Location     Type
 14736 ;;                  2   23[COMRAM] unsigned int 
 14737 ;; Registers used:
 14738 ;;		wreg, status,2, status,0, prodl, prodh
 14739 ;; Tracked objects:
 14740 ;;		On entry : 0/0
 14741 ;;		On exit  : 0/0
 14742 ;;		Unchanged: 0/0
 14743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14744 ;;      Params:         4       0       0       0       0       0       0
 14745 ;;      Locals:         2       0       0       0       0       0       0
 14746 ;;      Temps:          0       0       0       0       0       0       0
 14747 ;;      Totals:         6       0       0       0       0       0       0
 14748 ;;Total ram usage:        6 bytes
 14749 ;; Hardware stack levels used:    1
 14750 ;; Hardware stack levels required when called:    2
 14751 ;; This function calls:
 14752 ;;		Nothing
 14753 ;; This function is called by:
 14754 ;;		_writeCoeffs2Ram
 14755 ;; This function uses a non-reentrant model
 14756 ;;
 14757                           
 14758                           	psect	text55
 14759  0072F6                     __ptext55:
 14760                           	opt stack 0
 14761  0072F6                     ___wmul:
 14762                           	opt stack 23
 14763                           
 14764                           ;incstack = 0
 14765  0072F6  5018               	movf	___wmul@multiplier,w,c
 14766  0072F8  021A               	mulwf	___wmul@multiplicand,c
 14767  0072FA  CFF3 F01C          	movff	prodl,___wmul@product
 14768  0072FE  CFF4 F01D          	movff	prodh,___wmul@product+1
 14769  007302  5018               	movf	___wmul@multiplier,w,c
 14770  007304  021B               	mulwf	___wmul@multiplicand+1,c
 14771  007306  50F3               	movf	prodl,w,c
 14772  007308  261D               	addwf	___wmul@product+1,f,c
 14773  00730A  5019               	movf	___wmul@multiplier+1,w,c
 14774  00730C  021A               	mulwf	___wmul@multiplicand,c
 14775  00730E  50F3               	movf	prodl,w,c
 14776  007310  261D               	addwf	___wmul@product+1,f,c
 14777  007312  C01C  F018         	movff	___wmul@product,?___wmul
 14778  007316  C01D  F019         	movff	___wmul@product+1,?___wmul+1
 14779  00731A  0012               	return	
 14780  00731C                     __end_of___wmul:
 14781                           	opt stack 0
 14782                           tblptru	equ	0xFF8
 14783                           tblptrh	equ	0xFF7
 14784                           tblptrl	equ	0xFF6
 14785                           tablat	equ	0xFF5
 14786                           prodh	equ	0xFF4
 14787                           prodl	equ	0xFF3
 14788                           intcon	equ	0xFF2
 14789                           postinc0	equ	0xFEE
 14790                           wreg	equ	0xFE8
 14791                           indf1	equ	0xFE7
 14792                           postdec1	equ	0xFE5
 14793                           fsr1h	equ	0xFE2
 14794                           fsr1l	equ	0xFE1
 14795                           indf2	equ	0xFDF
 14796                           postinc2	equ	0xFDE
 14797                           postdec2	equ	0xFDD
 14798                           plusw2	equ	0xFDB
 14799                           fsr2h	equ	0xFDA
 14800                           fsr2l	equ	0xFD9
 14801                           status	equ	0xFD8
 14802                           
 14803 ;; *************** function _WriteTimer0 *****************
 14804 ;; Defined at:
 14805 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;  timer0          2   23[COMRAM] unsigned int 
 14808 ;; Auto vars:     Size  Location     Type
 14809 ;;  timer           2   25[COMRAM] struct Timers
 14810 ;; Return value:  Size  Location     Type
 14811 ;;		None               void
 14812 ;; Registers used:
 14813 ;;		None
 14814 ;; Tracked objects:
 14815 ;;		On entry : 0/0
 14816 ;;		On exit  : 0/0
 14817 ;;		Unchanged: 0/0
 14818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14819 ;;      Params:         2       0       0       0       0       0       0
 14820 ;;      Locals:         2       0       0       0       0       0       0
 14821 ;;      Temps:          0       0       0       0       0       0       0
 14822 ;;      Totals:         4       0       0       0       0       0       0
 14823 ;;Total ram usage:        4 bytes
 14824 ;; Hardware stack levels used:    1
 14825 ;; Hardware stack levels required when called:    2
 14826 ;; This function calls:
 14827 ;;		Nothing
 14828 ;; This function is called by:
 14829 ;;		_init
 14830 ;; This function uses a non-reentrant model
 14831 ;;
 14832                           
 14833                           	psect	text56
 14834  0074CC                     __ptext56:
 14835                           	opt stack 0
 14836  0074CC                     _WriteTimer0:
 14837                           	opt stack 27
 14838                           
 14839                           ;incstack = 0
 14840  0074CC  C018  F01A         	movff	WriteTimer0@timer0,WriteTimer0@timer
 14841  0074D0  C019  F01B         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 14842  0074D4  C01B  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 14843  0074D8  C01A  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 14844  0074DC  0012               	return	
 14845  0074DE                     __end_of_WriteTimer0:
 14846                           	opt stack 0
 14847                           tblptru	equ	0xFF8
 14848                           tblptrh	equ	0xFF7
 14849                           tblptrl	equ	0xFF6
 14850                           tablat	equ	0xFF5
 14851                           prodh	equ	0xFF4
 14852                           prodl	equ	0xFF3
 14853                           intcon	equ	0xFF2
 14854                           postinc0	equ	0xFEE
 14855                           wreg	equ	0xFE8
 14856                           indf1	equ	0xFE7
 14857                           postdec1	equ	0xFE5
 14858                           fsr1h	equ	0xFE2
 14859                           fsr1l	equ	0xFE1
 14860                           indf2	equ	0xFDF
 14861                           postinc2	equ	0xFDE
 14862                           postdec2	equ	0xFDD
 14863                           plusw2	equ	0xFDB
 14864                           fsr2h	equ	0xFDA
 14865                           fsr2l	equ	0xFD9
 14866                           status	equ	0xFD8
 14867                           
 14868 ;; *************** function _OpenTimer0 *****************
 14869 ;; Defined at:
 14870 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
 14871 ;; Parameters:    Size  Location     Type
 14872 ;;  config          1    wreg     unsigned char 
 14873 ;; Auto vars:     Size  Location     Type
 14874 ;;  config          1   23[COMRAM] unsigned char 
 14875 ;; Return value:  Size  Location     Type
 14876 ;;		None               void
 14877 ;; Registers used:
 14878 ;;		wreg, status,2, status,0
 14879 ;; Tracked objects:
 14880 ;;		On entry : 0/0
 14881 ;;		On exit  : 0/0
 14882 ;;		Unchanged: 0/0
 14883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14884 ;;      Params:         0       0       0       0       0       0       0
 14885 ;;      Locals:         1       0       0       0       0       0       0
 14886 ;;      Temps:          0       0       0       0       0       0       0
 14887 ;;      Totals:         1       0       0       0       0       0       0
 14888 ;;Total ram usage:        1 bytes
 14889 ;; Hardware stack levels used:    1
 14890 ;; Hardware stack levels required when called:    2
 14891 ;; This function calls:
 14892 ;;		Nothing
 14893 ;; This function is called by:
 14894 ;;		_init
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           	psect	text57
 14899  007386                     __ptext57:
 14900                           	opt stack 0
 14901  007386                     _OpenTimer0:
 14902                           	opt stack 27
 14903                           
 14904                           ;incstack = 0
 14905                           ;OpenTimer0@config stored from wreg
 14906  007386  6E18               	movwf	OpenTimer0@config,c
 14907  007388  5018               	movf	OpenTimer0@config,w,c
 14908  00738A  0B7F               	andlw	127
 14909  00738C  6ED5               	movwf	4053,c	;volatile
 14910  00738E  0E00               	movlw	0
 14911  007390  6ED7               	movwf	4055,c	;volatile
 14912  007392  0E00               	movlw	0
 14913  007394  6ED6               	movwf	4054,c	;volatile
 14914  007396  94F2               	bcf	intcon,2,c	;volatile
 14915  007398  AE18               	btfss	OpenTimer0@config,7,c
 14916  00739A  D002               	goto	l1307
 14917  00739C  8AF2               	bsf	intcon,5,c	;volatile
 14918  00739E  D001               	goto	l1308
 14919  0073A0                     l1307:
 14920  0073A0  9AF2               	bcf	intcon,5,c	;volatile
 14921  0073A2                     l1308:
 14922  0073A2  8ED5               	bsf	4053,7,c	;volatile
 14923  0073A4  0012               	return	
 14924  0073A6                     __end_of_OpenTimer0:
 14925                           	opt stack 0
 14926                           tblptru	equ	0xFF8
 14927                           tblptrh	equ	0xFF7
 14928                           tblptrl	equ	0xFF6
 14929                           tablat	equ	0xFF5
 14930                           prodh	equ	0xFF4
 14931                           prodl	equ	0xFF3
 14932                           intcon	equ	0xFF2
 14933                           postinc0	equ	0xFEE
 14934                           wreg	equ	0xFE8
 14935                           indf1	equ	0xFE7
 14936                           postdec1	equ	0xFE5
 14937                           fsr1h	equ	0xFE2
 14938                           fsr1l	equ	0xFE1
 14939                           indf2	equ	0xFDF
 14940                           postinc2	equ	0xFDE
 14941                           postdec2	equ	0xFDD
 14942                           plusw2	equ	0xFDB
 14943                           fsr2h	equ	0xFDA
 14944                           fsr2l	equ	0xFD9
 14945                           status	equ	0xFD8
 14946                           
 14947 ;; *************** function _OpenADC *****************
 14948 ;; Defined at:
 14949 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\ADC\adcopen.c"
 14950 ;; Parameters:    Size  Location     Type
 14951 ;;  config          1    wreg     unsigned char 
 14952 ;;  config2         1   23[COMRAM] unsigned char 
 14953 ;;  portconfig      1   24[COMRAM] unsigned char 
 14954 ;; Auto vars:     Size  Location     Type
 14955 ;;  config          1   27[COMRAM] unsigned char 
 14956 ;; Return value:  Size  Location     Type
 14957 ;;		None               void
 14958 ;; Registers used:
 14959 ;;		wreg, status,2, status,0
 14960 ;; Tracked objects:
 14961 ;;		On entry : 0/0
 14962 ;;		On exit  : 0/0
 14963 ;;		Unchanged: 0/0
 14964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14965 ;;      Params:         2       0       0       0       0       0       0
 14966 ;;      Locals:         1       0       0       0       0       0       0
 14967 ;;      Temps:          2       0       0       0       0       0       0
 14968 ;;      Totals:         5       0       0       0       0       0       0
 14969 ;;Total ram usage:        5 bytes
 14970 ;; Hardware stack levels used:    1
 14971 ;; Hardware stack levels required when called:    2
 14972 ;; This function calls:
 14973 ;;		Nothing
 14974 ;; This function is called by:
 14975 ;;		_init
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           	psect	text58
 14980  006DA4                     __ptext58:
 14981                           	opt stack 0
 14982  006DA4                     _OpenADC:
 14983                           	opt stack 27
 14984                           
 14985                           ;incstack = 0
 14986                           ;OpenADC@config stored from wreg
 14987  006DA4  6E1C               	movwf	OpenADC@config,c
 14988  006DA6  0E00               	movlw	0
 14989  006DA8  6EC2               	movwf	4034,c	;volatile
 14990  006DAA  0E00               	movlw	0
 14991  006DAC  6EC0               	movwf	4032,c	;volatile
 14992  006DAE  90D8               	bcf	status,0,c
 14993  006DB0  3018               	rrcf	OpenADC@config2,w,c
 14994  006DB2  0B3C               	andlw	60
 14995  006DB4  6EC2               	movwf	4034,c	;volatile
 14996  006DB6  C018  F01A         	movff	OpenADC@config2,??_OpenADC
 14997  006DBA  3A1A               	swapf	??_OpenADC,f,c
 14998  006DBC  0EF0               	movlw	240
 14999  006DBE  161A               	andwf	??_OpenADC,f,c
 15000  006DC0  0E30               	movlw	48
 15001  006DC2  161A               	andwf	??_OpenADC,f,c
 15002  006DC4  5019               	movf	OpenADC@portconfig,w,c
 15003  006DC6  0B0F               	andlw	15
 15004  006DC8  101A               	iorwf	??_OpenADC,w,c
 15005  006DCA  6EC1               	movwf	4033,c	;volatile
 15006  006DCC  C01C  F01A         	movff	OpenADC@config,??_OpenADC
 15007  006DD0  90D8               	bcf	status,0,c
 15008  006DD2  361A               	rlcf	??_OpenADC,f,c
 15009  006DD4  90D8               	bcf	status,0,c
 15010  006DD6  361A               	rlcf	??_OpenADC,f,c
 15011  006DD8  0E38               	movlw	56
 15012  006DDA  161A               	andwf	??_OpenADC,f,c
 15013  006DDC  C01C  F01B         	movff	OpenADC@config,??_OpenADC+1
 15014  006DE0  3A1B               	swapf	??_OpenADC+1,f,c
 15015  006DE2  0E0F               	movlw	15
 15016  006DE4  161B               	andwf	??_OpenADC+1,f,c
 15017  006DE6  0E07               	movlw	7
 15018  006DE8  161B               	andwf	??_OpenADC+1,f,c
 15019  006DEA  501C               	movf	OpenADC@config,w,c
 15020  006DEC  0B80               	andlw	128
 15021  006DEE  101B               	iorwf	??_OpenADC+1,w,c
 15022  006DF0  101A               	iorwf	??_OpenADC,w,c
 15023  006DF2  6EC0               	movwf	4032,c	;volatile
 15024  006DF4  AE18               	btfss	OpenADC@config2,7,c
 15025  006DF6  D003               	goto	l1293
 15026  006DF8  9C9E               	bcf	3998,6,c	;volatile
 15027  006DFA  8C9D               	bsf	3997,6,c	;volatile
 15028  006DFC  8CF2               	bsf	intcon,6,c	;volatile
 15029  006DFE                     l1293:
 15030  006DFE  80C2               	bsf	4034,0,c	;volatile
 15031  006E00  0012               	return	
 15032  006E02                     __end_of_OpenADC:
 15033                           	opt stack 0
 15034                           tblptru	equ	0xFF8
 15035                           tblptrh	equ	0xFF7
 15036                           tblptrl	equ	0xFF6
 15037                           tablat	equ	0xFF5
 15038                           prodh	equ	0xFF4
 15039                           prodl	equ	0xFF3
 15040                           intcon	equ	0xFF2
 15041                           postinc0	equ	0xFEE
 15042                           wreg	equ	0xFE8
 15043                           indf1	equ	0xFE7
 15044                           postdec1	equ	0xFE5
 15045                           fsr1h	equ	0xFE2
 15046                           fsr1l	equ	0xFE1
 15047                           indf2	equ	0xFDF
 15048                           postinc2	equ	0xFDE
 15049                           postdec2	equ	0xFDD
 15050                           plusw2	equ	0xFDB
 15051                           fsr2h	equ	0xFDA
 15052                           fsr2l	equ	0xFD9
 15053                           status	equ	0xFD8
 15054                           
 15055 ;; *************** function _ECANInitialize *****************
 15056 ;; Defined at:
 15057 ;;		line 167 in file "../ECAN.c"
 15058 ;; Parameters:    Size  Location     Type
 15059 ;;		None
 15060 ;; Auto vars:     Size  Location     Type
 15061 ;;		None
 15062 ;; Return value:  Size  Location     Type
 15063 ;;		None               void
 15064 ;; Registers used:
 15065 ;;		wreg, status,2, status,0, cstack
 15066 ;; Tracked objects:
 15067 ;;		On entry : 0/0
 15068 ;;		On exit  : 0/0
 15069 ;;		Unchanged: 0/0
 15070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15071 ;;      Params:         0       0       0       0       0       0       0
 15072 ;;      Locals:         0       0       0       0       0       0       0
 15073 ;;      Temps:          0       0       0       0       0       0       0
 15074 ;;      Totals:         0       0       0       0       0       0       0
 15075 ;;Total ram usage:        0 bytes
 15076 ;; Hardware stack levels used:    1
 15077 ;; Hardware stack levels required when called:    3
 15078 ;; This function calls:
 15079 ;;		_ECANSetOperationMode
 15080 ;; This function is called by:
 15081 ;;		_init
 15082 ;; This function uses a non-reentrant model
 15083 ;;
 15084                           
 15085                           	psect	text59
 15086  006292                     __ptext59:
 15087                           	opt stack 0
 15088  006292                     _ECANInitialize:
 15089                           	opt stack 26
 15090                           
 15091                           ;ECAN.c: 171: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 15092                           
 15093                           ;incstack = 0
 15094  006292  0E80               	movlw	128
 15095  006294  EC03  F03A         	call	_ECANSetOperationMode
 15096                           
 15097                           ;ECAN.c: 175: BRGCON1 = ((1-1) << 6) | (10-1);
 15098  006298  0E09               	movlw	9
 15099  00629A  6E70               	movwf	3952,c	;volatile
 15100                           
 15101                           ;ECAN.c: 176: BRGCON2 = (1 << 7) | (1 << 6) | ((8-1) << 3) | (5-1);
 15102  00629C  0EFC               	movlw	252
 15103  00629E  6E71               	movwf	3953,c	;volatile
 15104                           
 15105                           ;ECAN.c: 180: BRGCON3 = (0 << 7) |
 15106                           ;ECAN.c: 181: (0 << 6) |
 15107                           ;ECAN.c: 182: (2-1);
 15108  0062A0  0E01               	movlw	1
 15109  0062A2  6E72               	movwf	3954,c	;volatile
 15110                           
 15111                           ;ECAN.c: 185: CIOCON = 0 << 7 | 0 << 6 | 1 << 5 | 0;
 15112  0062A4  0E20               	movlw	32
 15113  0062A6  6E73               	movwf	3955,c	;volatile
 15114                           
 15115                           ;ECAN.c: 192: MDSEL1 = 0x80 >> 7;
 15116  0062A8  8E77               	bsf	3959,7,c	;volatile
 15117                           
 15118                           ;ECAN.c: 193: MDSEL0 = 0x80 >> 6;
 15119  0062AA  9C77               	bcf	3959,6,c	;volatile
 15120                           
 15121                           ;ECAN.c: 205: RXB0CON = 0;
 15122  0062AC  0E00               	movlw	0
 15123  0062AE  6E60               	movwf	3936,c	;volatile
 15124                           
 15125                           ;ECAN.c: 211: RXB1CON = 0;
 15126  0062B0  0E00               	movlw	0
 15127  0062B2  010F               	movlb	15	; () banked
 15128  0062B4  6F50               	movwf	80,b	;volatile
 15129                           
 15130                           ; BSR set to: 15
 15131                           ;ECAN.c: 221: B0CON = 0;
 15132  0062B6  0E00               	movlw	0
 15133  0062B8  010E               	movlb	14	; () banked
 15134  0062BA  6F20               	movwf	32,b	;volatile
 15135                           
 15136                           ; BSR set to: 14
 15137                           ;ECAN.c: 231: B1CON = 0;
 15138  0062BC  0E00               	movlw	0
 15139  0062BE  010E               	movlb	14	; () banked
 15140  0062C0  6F30               	movwf	48,b	;volatile
 15141                           
 15142                           ; BSR set to: 14
 15143                           ;ECAN.c: 241: B2CON = 0;
 15144  0062C2  0E00               	movlw	0
 15145  0062C4  010E               	movlb	14	; () banked
 15146  0062C6  6F40               	movwf	64,b	;volatile
 15147                           
 15148                           ; BSR set to: 14
 15149                           ;ECAN.c: 254: B3CON = 0 << 2;
 15150  0062C8  0E00               	movlw	0
 15151  0062CA  010E               	movlb	14	; () banked
 15152  0062CC  6F50               	movwf	80,b	;volatile
 15153                           
 15154                           ; BSR set to: 14
 15155                           ;ECAN.c: 264: B4CON = 0 << 2;
 15156  0062CE  0E00               	movlw	0
 15157  0062D0  010E               	movlb	14	; () banked
 15158  0062D2  6F60               	movwf	96,b	;volatile
 15159                           
 15160                           ; BSR set to: 14
 15161                           ;ECAN.c: 274: B5CON = 0 << 2;
 15162  0062D4  0E00               	movlw	0
 15163  0062D6  010E               	movlb	14	; () banked
 15164  0062D8  6F70               	movwf	112,b	;volatile
 15165                           
 15166                           ; BSR set to: 14
 15167                           ;ECAN.c: 278: BSEL0 = 1 << 7 | 1 << 6 | 1 << 5 | 0 << 4 | 0 << 3 | 0 << 2;
 15168  0062DA  0EE0               	movlw	224
 15169  0062DC  010D               	movlb	13	; () banked
 15170  0062DE  6FF8               	movwf	248,b	;volatile
 15171                           
 15172                           ; BSR set to: 13
 15173                           ;ECAN.c: 295: RXF0SIDH = (long)0x00000000L >> 21L;RXF0SIDL = (((long)0x00000000L >> 13L)
      +                           & 0xe0) | ((long)(0x00000000L) & 0x03L) | 0x08;RXF0EIDH = (long)0x00000000L >> 8L;RXF0E
      +                          IDL = 0x00000000L;;
 15174  0062E0  0E00               	movlw	0
 15175  0062E2  010F               	movlb	15	; () banked
 15176  0062E4  6F00               	movwf	0,b	;volatile
 15177                           
 15178                           ; BSR set to: 15
 15179  0062E6  0E08               	movlw	8
 15180  0062E8  010F               	movlb	15	; () banked
 15181  0062EA  6F01               	movwf	1,b	;volatile
 15182                           
 15183                           ; BSR set to: 15
 15184  0062EC  0E00               	movlw	0
 15185  0062EE  010F               	movlb	15	; () banked
 15186  0062F0  6F02               	movwf	2,b	;volatile
 15187                           
 15188                           ; BSR set to: 15
 15189  0062F2  0E00               	movlw	0
 15190  0062F4  010F               	movlb	15	; () banked
 15191  0062F6  6F03               	movwf	3,b	;volatile
 15192                           
 15193                           ; BSR set to: 15
 15194                           ;ECAN.c: 303: RXF1SIDH = (long)0x001E1A00L >> 21L;RXF1SIDL = (((long)0x001E1A00L >> 13L)
      +                           & 0xe0) | ((long)(0x001E1A00L) & 0x03L) | 0x08;RXF1EIDH = (long)0x001E1A00L >> 8L;RXF1E
      +                          IDL = 0x001E1A00L;;
 15195  0062F8  0E00               	movlw	0
 15196  0062FA  010F               	movlb	15	; () banked
 15197  0062FC  6F04               	movwf	4,b	;volatile
 15198                           
 15199                           ; BSR set to: 15
 15200  0062FE  0EE8               	movlw	232
 15201  006300  010F               	movlb	15	; () banked
 15202  006302  6F05               	movwf	5,b	;volatile
 15203                           
 15204                           ; BSR set to: 15
 15205  006304  0E1A               	movlw	26
 15206  006306  010F               	movlb	15	; () banked
 15207  006308  6F06               	movwf	6,b	;volatile
 15208                           
 15209                           ; BSR set to: 15
 15210  00630A  0E00               	movlw	0
 15211  00630C  010F               	movlb	15	; () banked
 15212  00630E  6F07               	movwf	7,b	;volatile
 15213                           
 15214                           ; BSR set to: 15
 15215                           ;ECAN.c: 428: RXFCON0 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (1 << 1) | (1);
 15216  006310  0E03               	movlw	3
 15217  006312  010D               	movlb	13	; () banked
 15218  006314  6FD4               	movwf	212,b	;volatile
 15219                           
 15220                           ; BSR set to: 13
 15221                           ;ECAN.c: 436: RXFCON1 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (0);
 15222  006316  0E00               	movlw	0
 15223  006318  010D               	movlb	13	; () banked
 15224  00631A  6FD5               	movwf	213,b	;volatile
 15225                           
 15226                           ; BSR set to: 13
 15227                           ;ECAN.c: 449: RXFBCON0 = (0 << 4) | 0;
 15228  00631C  0E00               	movlw	0
 15229  00631E  010D               	movlb	13	; () banked
 15230  006320  6FE0               	movwf	224,b	;volatile
 15231                           
 15232                           ; BSR set to: 13
 15233                           ;ECAN.c: 450: RXFBCON1 = (1 << 4) | 1;
 15234  006322  0E11               	movlw	17
 15235  006324  010D               	movlb	13	; () banked
 15236  006326  6FE1               	movwf	225,b	;volatile
 15237                           
 15238                           ; BSR set to: 13
 15239                           ;ECAN.c: 451: RXFBCON2 = (1 << 4) | 1;
 15240  006328  0E11               	movlw	17
 15241  00632A  010D               	movlb	13	; () banked
 15242  00632C  6FE2               	movwf	226,b	;volatile
 15243                           
 15244                           ; BSR set to: 13
 15245                           ;ECAN.c: 452: RXFBCON3 = (0 << 4) | 0;
 15246  00632E  0E00               	movlw	0
 15247  006330  010D               	movlb	13	; () banked
 15248  006332  6FE3               	movwf	227,b	;volatile
 15249                           
 15250                           ; BSR set to: 13
 15251                           ;ECAN.c: 453: RXFBCON4 = (0 << 4) | 0;
 15252  006334  0E00               	movlw	0
 15253  006336  010D               	movlb	13	; () banked
 15254  006338  6FE4               	movwf	228,b	;volatile
 15255                           
 15256                           ; BSR set to: 13
 15257                           ;ECAN.c: 454: RXFBCON5 = (0 << 4) | 0;
 15258  00633A  0E00               	movlw	0
 15259  00633C  010D               	movlb	13	; () banked
 15260  00633E  6FE5               	movwf	229,b	;volatile
 15261                           
 15262                           ; BSR set to: 13
 15263                           ;ECAN.c: 455: RXFBCON6 = (0 << 4) | 0;
 15264  006340  0E00               	movlw	0
 15265  006342  010D               	movlb	13	; () banked
 15266  006344  6FE6               	movwf	230,b	;volatile
 15267                           
 15268                           ; BSR set to: 13
 15269                           ;ECAN.c: 456: RXFBCON7 = (0 << 4) | 0;
 15270  006346  0E00               	movlw	0
 15271  006348  010D               	movlb	13	; () banked
 15272  00634A  6FE7               	movwf	231,b	;volatile
 15273                           
 15274                           ; BSR set to: 13
 15275                           ;ECAN.c: 458: MSEL0 = 1 << 6 | 1 << 4 | 1 << 2 | 0;;
 15276  00634C  0E54               	movlw	84
 15277  00634E  010D               	movlb	13	; () banked
 15278  006350  6FF0               	movwf	240,b	;volatile
 15279                           
 15280                           ; BSR set to: 13
 15281                           ;ECAN.c: 462: MSEL1 = 0 << 6 | 0 << 4 | 1 << 2 | 1;;
 15282  006352  0E05               	movlw	5
 15283  006354  010D               	movlb	13	; () banked
 15284  006356  6FF1               	movwf	241,b	;volatile
 15285                           
 15286                           ; BSR set to: 13
 15287                           ;ECAN.c: 466: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 15288  006358  0E00               	movlw	0
 15289  00635A  010D               	movlb	13	; () banked
 15290  00635C  6FF2               	movwf	242,b	;volatile
 15291                           
 15292                           ; BSR set to: 13
 15293                           ;ECAN.c: 470: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 15294  00635E  0E00               	movlw	0
 15295  006360  010D               	movlb	13	; () banked
 15296  006362  6FF2               	movwf	242,b	;volatile
 15297                           
 15298                           ; BSR set to: 13
 15299                           ;ECAN.c: 481: RXM0SIDH = (long)0x01FF0000L >> 21L; RXM0SIDL = (((long)0x01FF0000L >> 13L
      +                          ) & 0xe0) | ((long)(0x01FF0000L) & 0x03L); RXM0EIDH = (long)0x01FF0000L >> 8L; RXM0EIDL 
      +                          = 0x01FF0000L;;
 15300  006364  0E0F               	movlw	15
 15301  006366  010F               	movlb	15	; () banked
 15302  006368  6F18               	movwf	24,b	;volatile
 15303                           
 15304                           ; BSR set to: 15
 15305  00636A  0EE0               	movlw	224
 15306  00636C  010F               	movlb	15	; () banked
 15307  00636E  6F19               	movwf	25,b	;volatile
 15308                           
 15309                           ; BSR set to: 15
 15310  006370  0E00               	movlw	0
 15311  006372  010F               	movlb	15	; () banked
 15312  006374  6F1A               	movwf	26,b	;volatile
 15313                           
 15314                           ; BSR set to: 15
 15315  006376  0E00               	movlw	0
 15316  006378  010F               	movlb	15	; () banked
 15317  00637A  6F1B               	movwf	27,b	;volatile
 15318                           
 15319                           ; BSR set to: 15
 15320                           ;ECAN.c: 482: RXM0EXIDM = 1;
 15321  00637C  010F               	movlb	15	; () banked
 15322  00637E  8719               	bsf	25,3,b	;volatile
 15323                           
 15324                           ; BSR set to: 15
 15325                           ;ECAN.c: 489: RXM1SIDH = (long)0x01FFFF00L >> 21L; RXM1SIDL = (((long)0x01FFFF00L >> 13L
      +                          ) & 0xe0) | ((long)(0x01FFFF00L) & 0x03L); RXM1EIDH = (long)0x01FFFF00L >> 8L; RXM1EIDL 
      +                          = 0x01FFFF00L;;
 15326  006380  0E0F               	movlw	15
 15327  006382  010F               	movlb	15	; () banked
 15328  006384  6F1C               	movwf	28,b	;volatile
 15329                           
 15330                           ; BSR set to: 15
 15331  006386  0EE0               	movlw	224
 15332  006388  010F               	movlb	15	; () banked
 15333  00638A  6F1D               	movwf	29,b	;volatile
 15334                           
 15335                           ; BSR set to: 15
 15336  00638C  010F               	movlb	15	; () banked
 15337  00638E  691E               	setf	30,b	;volatile
 15338                           
 15339                           ; BSR set to: 15
 15340  006390  0E00               	movlw	0
 15341  006392  010F               	movlb	15	; () banked
 15342  006394  6F1F               	movwf	31,b	;volatile
 15343                           
 15344                           ; BSR set to: 15
 15345                           ;ECAN.c: 490: RXM1EXIDEN = 1;
 15346  006396  010F               	movlb	15	; () banked
 15347  006398  871D               	bsf	29,3,b	;volatile
 15348                           
 15349                           ;ECAN.c: 498: ECANSetOperationMode(0x00);
 15350  00639A  0E00               	movlw	0
 15351  00639C  EC03  F03A         	call	_ECANSetOperationMode
 15352  0063A0  0012               	return	
 15353  0063A2                     __end_of_ECANInitialize:
 15354                           	opt stack 0
 15355                           tblptru	equ	0xFF8
 15356                           tblptrh	equ	0xFF7
 15357                           tblptrl	equ	0xFF6
 15358                           tablat	equ	0xFF5
 15359                           prodh	equ	0xFF4
 15360                           prodl	equ	0xFF3
 15361                           intcon	equ	0xFF2
 15362                           postinc0	equ	0xFEE
 15363                           wreg	equ	0xFE8
 15364                           indf1	equ	0xFE7
 15365                           postdec1	equ	0xFE5
 15366                           fsr1h	equ	0xFE2
 15367                           fsr1l	equ	0xFE1
 15368                           indf2	equ	0xFDF
 15369                           postinc2	equ	0xFDE
 15370                           postdec2	equ	0xFDD
 15371                           plusw2	equ	0xFDB
 15372                           fsr2h	equ	0xFDA
 15373                           fsr2l	equ	0xFD9
 15374                           status	equ	0xFD8
 15375                           
 15376 ;; *************** function _ECANSetOperationMode *****************
 15377 ;; Defined at:
 15378 ;;		line 1011 in file "../ECAN.c"
 15379 ;; Parameters:    Size  Location     Type
 15380 ;;  mode            1    wreg     enum E16345
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;  mode            1   23[COMRAM] enum E16345
 15383 ;; Return value:  Size  Location     Type
 15384 ;;		None               void
 15385 ;; Registers used:
 15386 ;;		wreg, status,2, status,0
 15387 ;; Tracked objects:
 15388 ;;		On entry : 0/0
 15389 ;;		On exit  : 0/0
 15390 ;;		Unchanged: 0/0
 15391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15392 ;;      Params:         0       0       0       0       0       0       0
 15393 ;;      Locals:         1       0       0       0       0       0       0
 15394 ;;      Temps:          0       0       0       0       0       0       0
 15395 ;;      Totals:         1       0       0       0       0       0       0
 15396 ;;Total ram usage:        1 bytes
 15397 ;; Hardware stack levels used:    1
 15398 ;; Hardware stack levels required when called:    2
 15399 ;; This function calls:
 15400 ;;		Nothing
 15401 ;; This function is called by:
 15402 ;;		_ECANInitialize
 15403 ;; This function uses a non-reentrant model
 15404 ;;
 15405                           
 15406                           	psect	text60
 15407  007406                     __ptext60:
 15408                           	opt stack 0
 15409  007406                     _ECANSetOperationMode:
 15410                           	opt stack 26
 15411                           
 15412                           ;incstack = 0
 15413                           ;ECANSetOperationMode@mode stored from wreg
 15414  007406  6E18               	movwf	ECANSetOperationMode@mode,c
 15415                           
 15416                           ;ECAN.c: 1013: CANCON &= 0x1F;
 15417  007408  0E1F               	movlw	31
 15418  00740A  166F               	andwf	3951,f,c	;volatile
 15419                           
 15420                           ;ECAN.c: 1014: CANCON |= mode;
 15421  00740C  5018               	movf	ECANSetOperationMode@mode,w,c
 15422  00740E  126F               	iorwf	3951,f,c	;volatile
 15423  007410                     l6330:
 15424  007410  506F               	movf	3951,w,c	;volatile
 15425  007412  0BE0               	andlw	224
 15426  007414  1818               	xorwf	ECANSetOperationMode@mode,w,c
 15427  007416  B4D8               	btfsc	status,2,c
 15428  007418  0012               	return	
 15429  00741A  D7FA               	goto	l6330
 15430  00741C                     __end_of_ECANSetOperationMode:
 15431                           	opt stack 0
 15432                           tblptru	equ	0xFF8
 15433                           tblptrh	equ	0xFF7
 15434                           tblptrl	equ	0xFF6
 15435                           tablat	equ	0xFF5
 15436                           prodh	equ	0xFF4
 15437                           prodl	equ	0xFF3
 15438                           intcon	equ	0xFF2
 15439                           postinc0	equ	0xFEE
 15440                           wreg	equ	0xFE8
 15441                           indf1	equ	0xFE7
 15442                           postdec1	equ	0xFE5
 15443                           fsr1h	equ	0xFE2
 15444                           fsr1l	equ	0xFE1
 15445                           indf2	equ	0xFDF
 15446                           postinc2	equ	0xFDE
 15447                           postdec2	equ	0xFDD
 15448                           plusw2	equ	0xFDB
 15449                           fsr2h	equ	0xFDA
 15450                           fsr2l	equ	0xFD9
 15451                           status	equ	0xFD8
 15452                           
 15453 ;; *************** function _ConvertADC *****************
 15454 ;; Defined at:
 15455 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\ADC\adcconv.c"
 15456 ;; Parameters:    Size  Location     Type
 15457 ;;		None
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;		None
 15460 ;; Return value:  Size  Location     Type
 15461 ;;		None               void
 15462 ;; Registers used:
 15463 ;;		None
 15464 ;; Tracked objects:
 15465 ;;		On entry : 0/0
 15466 ;;		On exit  : 0/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15469 ;;      Params:         0       0       0       0       0       0       0
 15470 ;;      Locals:         0       0       0       0       0       0       0
 15471 ;;      Temps:          0       0       0       0       0       0       0
 15472 ;;      Totals:         0       0       0       0       0       0       0
 15473 ;;Total ram usage:        0 bytes
 15474 ;; Hardware stack levels used:    1
 15475 ;; Hardware stack levels required when called:    2
 15476 ;; This function calls:
 15477 ;;		Nothing
 15478 ;; This function is called by:
 15479 ;;		_init
 15480 ;; This function uses a non-reentrant model
 15481 ;;
 15482                           
 15483                           	psect	text61
 15484  007562                     __ptext61:
 15485                           	opt stack 0
 15486  007562                     _ConvertADC:
 15487                           	opt stack 27
 15488                           
 15489                           ;incstack = 0
 15490  007562  82C2               	bsf	4034,1,c	;volatile
 15491  007564  0012               	return	
 15492  007566                     __end_of_ConvertADC:
 15493                           	opt stack 0
 15494                           tblptru	equ	0xFF8
 15495                           tblptrh	equ	0xFF7
 15496                           tblptrl	equ	0xFF6
 15497                           tablat	equ	0xFF5
 15498                           prodh	equ	0xFF4
 15499                           prodl	equ	0xFF3
 15500                           intcon	equ	0xFF2
 15501                           postinc0	equ	0xFEE
 15502                           wreg	equ	0xFE8
 15503                           indf1	equ	0xFE7
 15504                           postdec1	equ	0xFE5
 15505                           fsr1h	equ	0xFE2
 15506                           fsr1l	equ	0xFE1
 15507                           indf2	equ	0xFDF
 15508                           postinc2	equ	0xFDE
 15509                           postdec2	equ	0xFDD
 15510                           plusw2	equ	0xFDB
 15511                           fsr2h	equ	0xFDA
 15512                           fsr2l	equ	0xFD9
 15513                           status	equ	0xFD8
 15514                           
 15515 ;; *************** function _handle_sync *****************
 15516 ;; Defined at:
 15517 ;;		line 1235 in file "../main.c"
 15518 ;; Parameters:    Size  Location     Type
 15519 ;;		None
 15520 ;; Auto vars:     Size  Location     Type
 15521 ;;  i               1   67[BANK0 ] unsigned char 
 15522 ;; Return value:  Size  Location     Type
 15523 ;;		None               void
 15524 ;; Registers used:
 15525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15526 ;; Tracked objects:
 15527 ;;		On entry : 0/0
 15528 ;;		On exit  : 0/0
 15529 ;;		Unchanged: 0/0
 15530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15531 ;;      Params:         0       0       0       0       0       0       0
 15532 ;;      Locals:         0       1       0       0       0       0       0
 15533 ;;      Temps:          0       2       0       0       0       0       0
 15534 ;;      Totals:         0       3       0       0       0       0       0
 15535 ;;Total ram usage:        3 bytes
 15536 ;; Hardware stack levels used:    1
 15537 ;; Hardware stack levels required when called:    8
 15538 ;; This function calls:
 15539 ;;		_readEEPROM
 15540 ;;		_sendTempEvent
 15541 ;; This function is called by:
 15542 ;;		_main
 15543 ;; This function uses a non-reentrant model
 15544 ;;
 15545                           
 15546                           	psect	text62
 15547  006720                     __ptext62:
 15548                           	opt stack 0
 15549  006720                     _handle_sync:
 15550                           	opt stack 22
 15551                           
 15552                           ;main.c: 1237: uint8_t i;
 15553                           ;main.c: 1240: for (i = 0; i < 6; i++) {
 15554                           
 15555                           ;incstack = 0
 15556  006720  0E00               	movlw	0
 15557  006722  0100               	movlb	0	; () banked
 15558  006724  6FA3               	movwf	handle_sync@i& (0+255),b
 15559  006726  D056               	goto	L169
 15560  006728                     l10420:
 15561                           
 15562                           ; BSR set to: 0
 15563                           ;main.c: 1242: if ((0xff != vscp_imsg.data[ 1 ] ||
 15564                           ;main.c: 1243: (readEEPROM(2 * i + 0x73) != vscp_imsg.data[ 1 ])) &&
 15565                           ;main.c: 1244: (0xff != vscp_imsg.data[ 2 ] ||
 15566                           ;main.c: 1245: (readEEPROM(2 * i + 0x74) != vscp_imsg.data[ 2 ]))) {
 15567  006728  2842               	incf	_vscp_imsg+7,w,c
 15568  00672A  A4D8               	btfss	status,2,c
 15569  00672C  D016               	goto	l10424
 15570                           
 15571                           ; BSR set to: 0
 15572  00672E  0100               	movlb	0	; () banked
 15573  006730  51A3               	movf	handle_sync@i& (0+255),w,b
 15574  006732  0100               	movlb	0	; () banked
 15575  006734  6FA1               	movwf	??_handle_sync& (0+255),b
 15576  006736  6BA2               	clrf	(??_handle_sync+1)& (0+255),b
 15577  006738  90D8               	bcf	status,0,c
 15578  00673A  0100               	movlb	0	; () banked
 15579  00673C  37A1               	rlcf	??_handle_sync& (0+255),f,b
 15580  00673E  37A2               	rlcf	(??_handle_sync+1)& (0+255),f,b
 15581  006740  0E73               	movlw	115
 15582  006742  0100               	movlb	0	; () banked
 15583  006744  25A1               	addwf	??_handle_sync& (0+255),w,b
 15584  006746  6E1E               	movwf	readEEPROM@address,c
 15585  006748  0E00               	movlw	0
 15586  00674A  0100               	movlb	0	; () banked
 15587  00674C  21A2               	addwfc	(??_handle_sync+1)& (0+255),w,b
 15588  00674E  6E1F               	movwf	readEEPROM@address+1,c
 15589  006750  EC6F  F03A         	call	_readEEPROM	;wreg free
 15590  006754  1842               	xorwf	_vscp_imsg+7,w,c
 15591  006756  B4D8               	btfsc	status,2,c
 15592  006758  D03B               	goto	l10436
 15593  00675A                     l10424:
 15594  00675A  2843               	incf	_vscp_imsg+8,w,c
 15595  00675C  A4D8               	btfss	status,2,c
 15596  00675E  D016               	goto	l10428
 15597  006760  0100               	movlb	0	; () banked
 15598  006762  51A3               	movf	handle_sync@i& (0+255),w,b
 15599  006764  0100               	movlb	0	; () banked
 15600  006766  6FA1               	movwf	??_handle_sync& (0+255),b
 15601  006768  6BA2               	clrf	(??_handle_sync+1)& (0+255),b
 15602  00676A  90D8               	bcf	status,0,c
 15603  00676C  0100               	movlb	0	; () banked
 15604  00676E  37A1               	rlcf	??_handle_sync& (0+255),f,b
 15605  006770  37A2               	rlcf	(??_handle_sync+1)& (0+255),f,b
 15606  006772  0E74               	movlw	116
 15607  006774  0100               	movlb	0	; () banked
 15608  006776  25A1               	addwf	??_handle_sync& (0+255),w,b
 15609  006778  6E1E               	movwf	readEEPROM@address,c
 15610  00677A  0E00               	movlw	0
 15611  00677C  0100               	movlb	0	; () banked
 15612  00677E  21A2               	addwfc	(??_handle_sync+1)& (0+255),w,b
 15613  006780  6E1F               	movwf	readEEPROM@address+1,c
 15614  006782  EC6F  F03A         	call	_readEEPROM	;wreg free
 15615  006786  1843               	xorwf	_vscp_imsg+8,w,c
 15616  006788  B4D8               	btfsc	status,2,c
 15617  00678A  D022               	goto	l10436
 15618  00678C                     l10428:
 15619                           
 15620                           ;main.c: 1248: timeout_clock = 0;
 15621  00678C  0E00               	movlw	0
 15622  00678E  0101               	movlb	1	; () banked
 15623  006790  6F16               	movwf	_timeout_clock& (0+255),b
 15624  006792  0E00               	movlw	0
 15625  006794  0101               	movlb	1	; () banked
 15626  006796  6F17               	movwf	(_timeout_clock+1)& (0+255),b
 15627  006798  0E00               	movlw	0
 15628  00679A  0101               	movlb	1	; () banked
 15629  00679C  6F18               	movwf	(_timeout_clock+2)& (0+255),b
 15630  00679E  0E00               	movlw	0
 15631  0067A0  0101               	movlb	1	; () banked
 15632  0067A2  6F19               	movwf	(_timeout_clock+3)& (0+255),b
 15633                           
 15634                           ;main.c: 1249: while (!sendTempEvent(i)) {
 15635  0067A4  D00E               	goto	l10434
 15636  0067A6                     l10430:
 15637                           
 15638                           ;main.c: 1250: if (timeout_clock > 1000) break;
 15639  0067A6  0EE9               	movlw	233
 15640  0067A8  0101               	movlb	1	; () banked
 15641  0067AA  5D16               	subwf	_timeout_clock& (0+255),w,b
 15642  0067AC  0E03               	movlw	3
 15643  0067AE  0101               	movlb	1	; () banked
 15644  0067B0  5917               	subwfb	(_timeout_clock+1)& (0+255),w,b
 15645  0067B2  0E00               	movlw	0
 15646  0067B4  0101               	movlb	1	; () banked
 15647  0067B6  5918               	subwfb	(_timeout_clock+2)& (0+255),w,b
 15648  0067B8  0E00               	movlw	0
 15649  0067BA  0101               	movlb	1	; () banked
 15650  0067BC  5919               	subwfb	(_timeout_clock+3)& (0+255),w,b
 15651  0067BE  B0D8               	btfsc	status,0,c
 15652  0067C0  D007               	goto	l10436
 15653  0067C2                     l10434:
 15654                           
 15655                           ; BSR set to: 1
 15656  0067C2  0100               	movlb	0	; () banked
 15657  0067C4  51A3               	movf	handle_sync@i& (0+255),w,b
 15658  0067C6  EC4B  F034         	call	_sendTempEvent
 15659  0067CA  0900               	iorlw	0
 15660  0067CC  B4D8               	btfsc	status,2,c
 15661  0067CE  D7EB               	goto	l10430
 15662  0067D0                     l10436:
 15663  0067D0  0100               	movlb	0	; () banked
 15664  0067D2  2BA3               	incf	handle_sync@i& (0+255),f,b
 15665  0067D4                     L169:
 15666                           
 15667                           ; BSR set to: 0
 15668  0067D4  0E05               	movlw	5
 15669  0067D6  0100               	movlb	0	; () banked
 15670  0067D8  65A3               	cpfsgt	handle_sync@i& (0+255),b
 15671  0067DA  D7A6               	goto	l10420
 15672                           
 15673                           ; BSR set to: 0
 15674                           
 15675                           ; BSR set to: 0
 15676  0067DC  0012               	return	
 15677  0067DE                     __end_of_handle_sync:
 15678                           	opt stack 0
 15679                           tblptru	equ	0xFF8
 15680                           tblptrh	equ	0xFF7
 15681                           tblptrl	equ	0xFF6
 15682                           tablat	equ	0xFF5
 15683                           prodh	equ	0xFF4
 15684                           prodl	equ	0xFF3
 15685                           intcon	equ	0xFF2
 15686                           postinc0	equ	0xFEE
 15687                           wreg	equ	0xFE8
 15688                           indf1	equ	0xFE7
 15689                           postdec1	equ	0xFE5
 15690                           fsr1h	equ	0xFE2
 15691                           fsr1l	equ	0xFE1
 15692                           indf2	equ	0xFDF
 15693                           postinc2	equ	0xFDE
 15694                           postdec2	equ	0xFDD
 15695                           plusw2	equ	0xFDB
 15696                           fsr2h	equ	0xFDA
 15697                           fsr2l	equ	0xFD9
 15698                           status	equ	0xFD8
 15699                           
 15700 ;; *************** function _doWork *****************
 15701 ;; Defined at:
 15702 ;;		line 425 in file "../main.c"
 15703 ;; Parameters:    Size  Location     Type
 15704 ;;		None
 15705 ;; Auto vars:     Size  Location     Type
 15706 ;;  temp            4   49[BANK1 ] unsigned char 
 15707 ;;  avarage         4   42[BANK1 ] unsigned char 
 15708 ;;  resistance      4   38[BANK1 ] unsigned char 
 15709 ;;  v               4   32[BANK1 ] unsigned char 
 15710 ;;  calVoltage      4    4[BANK1 ] unsigned char 
 15711 ;;  Rinf            4    0[BANK1 ] unsigned char 
 15712 ;;  setpoint        2   47[BANK1 ] int 
 15713 ;;  B               2   36[BANK1 ] unsigned short 
 15714 ;;  i               1   53[BANK1 ] unsigned char 
 15715 ;;  j               1   46[BANK1 ] unsigned char 
 15716 ;; Return value:  Size  Location     Type
 15717 ;;		None               void
 15718 ;; Registers used:
 15719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15720 ;; Tracked objects:
 15721 ;;		On entry : 0/0
 15722 ;;		On exit  : 0/0
 15723 ;;		Unchanged: 0/0
 15724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15725 ;;      Params:         0       0       0       0       0       0       0
 15726 ;;      Locals:         0       0      54       0       0       0       0
 15727 ;;      Temps:          0      22       0       0       0       0       0
 15728 ;;      Totals:         0      22      54       0       0       0       0
 15729 ;;Total ram usage:       76 bytes
 15730 ;; Hardware stack levels used:    1
 15731 ;; Hardware stack levels required when called:    7
 15732 ;; This function calls:
 15733 ;;		___aldiv
 15734 ;;		___altofl
 15735 ;;		___fladd
 15736 ;;		___fldiv
 15737 ;;		___flmul
 15738 ;;		___flneg
 15739 ;;		___flsub
 15740 ;;		___fltol
 15741 ;;		___lwtofl
 15742 ;;		_exp
 15743 ;;		_getCalibrationValue
 15744 ;;		_log
 15745 ;;		_readEEPROM
 15746 ;;		_vscp_sendEvent
 15747 ;;		_writeEEPROM
 15748 ;; This function is called by:
 15749 ;;		_main
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           	psect	text63
 15754  00168A                     __ptext63:
 15755                           	opt stack 0
 15756  00168A                     _doWork:
 15757                           	opt stack 23
 15758                           
 15759                           ;main.c: 427: uint8_t i, j;
 15760                           ;main.c: 428: uint16_t B;
 15761                           ;main.c: 429: double avarage;
 15762                           ;main.c: 430: double resistance;
 15763                           ;main.c: 431: double Rinf;
 15764                           ;main.c: 432: double temp;
 15765                           ;main.c: 433: double v;
 15766                           ;main.c: 434: double calVoltage;
 15767                           ;main.c: 435: int setpoint;
 15768                           ;main.c: 437: calVoltage = ((uint16_t) readEEPROM(0xF2)*256 +
 15769                           ;main.c: 438: readEEPROM(0xF3));
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;incstack = 0
 15773  00168A  0E00               	movlw	0
 15774  00168C  6E1F               	movwf	readEEPROM@address+1,c
 15775  00168E  0EF3               	movlw	243
 15776  001690  6E1E               	movwf	readEEPROM@address,c
 15777  001692  EC6F  F03A         	call	_readEEPROM	;wreg free
 15778  001696  0100               	movlb	0	; () banked
 15779  001698  6FB4               	movwf	??_doWork& (0+255),b
 15780  00169A  0E00               	movlw	0
 15781  00169C  6E1F               	movwf	readEEPROM@address+1,c
 15782  00169E  0EF2               	movlw	242
 15783  0016A0  6E1E               	movwf	readEEPROM@address,c
 15784  0016A2  EC6F  F03A         	call	_readEEPROM	;wreg free
 15785  0016A6  6E23               	movwf	___lwtofl@c+1,c
 15786  0016A8  0100               	movlb	0	; () banked
 15787  0016AA  51B4               	movf	??_doWork& (0+255),w,b
 15788  0016AC  6E22               	movwf	___lwtofl@c,c
 15789  0016AE  EC52  F039         	call	___lwtofl	;wreg free
 15790  0016B2  C022  F172         	movff	?___lwtofl,doWork@calVoltage
 15791  0016B6  C023  F173         	movff	?___lwtofl+1,doWork@calVoltage+1
 15792  0016BA  C024  F174         	movff	?___lwtofl+2,doWork@calVoltage+2
 15793  0016BE  C025  F175         	movff	?___lwtofl+3,doWork@calVoltage+3
 15794                           
 15795                           ;main.c: 443: for (i = 0; i < 6; i++) {
 15796  0016C2  0E00               	movlw	0
 15797  0016C4  0101               	movlb	1	; () banked
 15798  0016C6  6FA3               	movwf	doWork@i& (0+255),b
 15799  0016C8  D3F1               	goto	L175
 15800  0016CA                     l10550:
 15801                           
 15802                           ; BSR set to: 1
 15803                           ;main.c: 445: if (adc_conversion_flags & 1 << i) {
 15804  0016CA  C1A3  F0B4         	movff	doWork@i,??_doWork
 15805  0016CE  0E01               	movlw	1
 15806  0016D0  0100               	movlb	0	; () banked
 15807  0016D2  6FB5               	movwf	(??_doWork+1)& (0+255),b
 15808  0016D4  0100               	movlb	0	; () banked
 15809  0016D6  2BB4               	incf	??_doWork& (0+255),f,b
 15810  0016D8  D003               	goto	u11344
 15811  0016DA                     u11345:
 15812  0016DA  0100               	movlb	0	; () banked
 15813  0016DC  90D8               	bcf	status,0,c
 15814  0016DE  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 15815  0016E0                     u11344:
 15816  0016E0  0100               	movlb	0	; () banked
 15817  0016E2  2FB4               	decfsz	??_doWork& (0+255),f,b
 15818  0016E4  D7FA               	goto	u11345
 15819  0016E6  0100               	movlb	0	; () banked
 15820  0016E8  51B5               	movf	(??_doWork+1)& (0+255),w,b
 15821  0016EA  0100               	movlb	0	; () banked
 15822  0016EC  15CB               	andwf	_adc_conversion_flags& (0+255),w,b
 15823  0016EE  0900               	iorlw	0
 15824  0016F0  B4D8               	btfsc	status,2,c
 15825  0016F2  D3DA               	goto	l10606
 15826                           
 15827                           ; BSR set to: 0
 15828                           ;main.c: 448: avarage = 0;
 15829  0016F4  0E00               	movlw	0
 15830  0016F6  0101               	movlb	1	; () banked
 15831  0016F8  6F98               	movwf	doWork@avarage& (0+255),b
 15832  0016FA  0E00               	movlw	0
 15833  0016FC  0101               	movlb	1	; () banked
 15834  0016FE  6F99               	movwf	(doWork@avarage+1)& (0+255),b
 15835  001700  0E00               	movlw	0
 15836  001702  0101               	movlb	1	; () banked
 15837  001704  6F9A               	movwf	(doWork@avarage+2)& (0+255),b
 15838  001706  0E00               	movlw	0
 15839  001708  0101               	movlb	1	; () banked
 15840  00170A  6F9B               	movwf	(doWork@avarage+3)& (0+255),b
 15841                           
 15842                           ;main.c: 449: for (j = 0; j < 80; j++) {
 15843  00170C  0E00               	movlw	0
 15844  00170E  0101               	movlb	1	; () banked
 15845  001710  6F9C               	movwf	doWork@j& (0+255),b
 15846  001712  D05B               	goto	L176
 15847  001714                     l10558:
 15848                           
 15849                           ; BSR set to: 1
 15850                           ;main.c: 450: avarage += ((uint16_t) adc[12 * j + 2 * i])*256 + adc[12 * j + 2 * i + 1];
 15851  001714  C198  F07E         	movff	doWork@avarage,___fladd@f1
 15852  001718  C199  F07F         	movff	doWork@avarage+1,___fladd@f1+1
 15853  00171C  C19A  F080         	movff	doWork@avarage+2,___fladd@f1+2
 15854  001720  C19B  F081         	movff	doWork@avarage+3,___fladd@f1+3
 15855  001724  0101               	movlb	1	; () banked
 15856  001726  519C               	movf	doWork@j& (0+255),w,b
 15857  001728  0D0C               	mullw	12
 15858  00172A  CFF3 F0B4          	movff	prodl,??_doWork
 15859  00172E  CFF4 F0B5          	movff	prodh,??_doWork+1
 15860  001732  0101               	movlb	1	; () banked
 15861  001734  51A3               	movf	doWork@i& (0+255),w,b
 15862  001736  0D02               	mullw	2
 15863  001738  50F3               	movf	prodl,w,c
 15864  00173A  0100               	movlb	0	; () banked
 15865  00173C  27B4               	addwf	??_doWork& (0+255),f,b
 15866  00173E  50F4               	movf	prodh,w,c
 15867  001740  0100               	movlb	0	; () banked
 15868  001742  23B5               	addwfc	(??_doWork+1)& (0+255),f,b
 15869  001744  0E01               	movlw	1
 15870  001746  0100               	movlb	0	; () banked
 15871  001748  27B4               	addwf	??_doWork& (0+255),f,b
 15872  00174A  0E00               	movlw	0
 15873  00174C  23B5               	addwfc	(??_doWork+1)& (0+255),f,b
 15874  00174E  0EA4               	movlw	low _adc
 15875  001750  0100               	movlb	0	; () banked
 15876  001752  25B4               	addwf	??_doWork& (0+255),w,b
 15877  001754  6ED9               	movwf	fsr2l,c
 15878  001756  0E01               	movlw	high _adc
 15879  001758  0100               	movlb	0	; () banked
 15880  00175A  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 15881  00175C  6EDA               	movwf	fsr2h,c
 15882  00175E  50DF               	movf	indf2,w,c
 15883  001760  0100               	movlb	0	; () banked
 15884  001762  6FB6               	movwf	(??_doWork+2)& (0+255),b
 15885  001764  0101               	movlb	1	; () banked
 15886  001766  51A3               	movf	doWork@i& (0+255),w,b
 15887  001768  0100               	movlb	0	; () banked
 15888  00176A  6FB7               	movwf	(??_doWork+3)& (0+255),b
 15889  00176C  6BB8               	clrf	(??_doWork+4)& (0+255),b
 15890  00176E  90D8               	bcf	status,0,c
 15891  001770  0100               	movlb	0	; () banked
 15892  001772  37B7               	rlcf	(??_doWork+3)& (0+255),f,b
 15893  001774  37B8               	rlcf	(??_doWork+4)& (0+255),f,b
 15894  001776  0101               	movlb	1	; () banked
 15895  001778  519C               	movf	doWork@j& (0+255),w,b
 15896  00177A  0D0C               	mullw	12
 15897  00177C  0100               	movlb	0	; () banked
 15898  00177E  51B7               	movf	(??_doWork+3)& (0+255),w,b
 15899  001780  26F3               	addwf	prodl,f,c
 15900  001782  0100               	movlb	0	; () banked
 15901  001784  51B8               	movf	(??_doWork+4)& (0+255),w,b
 15902  001786  22F4               	addwfc	prodh,f,c
 15903  001788  0EA4               	movlw	low _adc
 15904  00178A  24F3               	addwf	prodl,w,c
 15905  00178C  6ED9               	movwf	fsr2l,c
 15906  00178E  0E01               	movlw	high _adc
 15907  001790  20F4               	addwfc	prodh,w,c
 15908  001792  6EDA               	movwf	fsr2h,c
 15909  001794  50DF               	movf	indf2,w,c
 15910  001796  6E23               	movwf	___lwtofl@c+1,c
 15911  001798  0100               	movlb	0	; () banked
 15912  00179A  51B6               	movf	(??_doWork+2)& (0+255),w,b
 15913  00179C  6E22               	movwf	___lwtofl@c,c
 15914  00179E  EC52  F039         	call	___lwtofl	;wreg free
 15915  0017A2  C022  F082         	movff	?___lwtofl,___fladd@f2
 15916  0017A6  C023  F083         	movff	?___lwtofl+1,___fladd@f2+1
 15917  0017AA  C024  F084         	movff	?___lwtofl+2,___fladd@f2+2
 15918  0017AE  C025  F085         	movff	?___lwtofl+3,___fladd@f2+3
 15919  0017B2  EC75  F020         	call	___fladd	;wreg free
 15920  0017B6  C07E  F198         	movff	?___fladd,doWork@avarage
 15921  0017BA  C07F  F199         	movff	?___fladd+1,doWork@avarage+1
 15922  0017BE  C080  F19A         	movff	?___fladd+2,doWork@avarage+2
 15923  0017C2  C081  F19B         	movff	?___fladd+3,doWork@avarage+3
 15924  0017C6  0101               	movlb	1	; () banked
 15925  0017C8  2B9C               	incf	doWork@j& (0+255),f,b
 15926  0017CA                     L176:
 15927                           
 15928                           ; BSR set to: 1
 15929  0017CA  0E4F               	movlw	79
 15930  0017CC  0101               	movlb	1	; () banked
 15931  0017CE  659C               	cpfsgt	doWork@j& (0+255),b
 15932  0017D0  D7A1               	goto	l10558
 15933                           
 15934                           ; BSR set to: 1
 15935                           ;main.c: 454: if (1) {
 15936                           
 15937                           ; BSR set to: 1
 15938  0017D2  C198  F026         	movff	doWork@avarage,___fldiv@f1
 15939  0017D6  C199  F027         	movff	doWork@avarage+1,___fldiv@f1+1
 15940  0017DA  C19A  F028         	movff	doWork@avarage+2,___fldiv@f1+2
 15941  0017DE  C19B  F029         	movff	doWork@avarage+3,___fldiv@f1+3
 15942  0017E2  0E00               	movlw	0
 15943  0017E4  6E2A               	movwf	___fldiv@f2,c
 15944  0017E6  0E00               	movlw	0
 15945  0017E8  6E2B               	movwf	___fldiv@f2+1,c
 15946  0017EA  0EA0               	movlw	160
 15947  0017EC  6E2C               	movwf	___fldiv@f2+2,c
 15948  0017EE  0E42               	movlw	66
 15949  0017F0  6E2D               	movwf	___fldiv@f2+3,c
 15950  0017F2  EC11  F02F         	call	___fldiv	;wreg free
 15951  0017F6  C026  F198         	movff	?___fldiv,doWork@avarage
 15952  0017FA  C027  F199         	movff	?___fldiv+1,doWork@avarage+1
 15953  0017FE  C028  F19A         	movff	?___fldiv+2,doWork@avarage+2
 15954  001802  C029  F19B         	movff	?___fldiv+3,doWork@avarage+3
 15955                           
 15956                           ;main.c: 462: B = (uint16_t) readEEPROM(2 * i + 0x4F)*256 +
 15957                           ;main.c: 463: readEEPROM(2 * i + 0x50);
 15958  001806  0101               	movlb	1	; () banked
 15959  001808  51A3               	movf	doWork@i& (0+255),w,b
 15960  00180A  0100               	movlb	0	; () banked
 15961  00180C  6FB4               	movwf	??_doWork& (0+255),b
 15962  00180E  6BB5               	clrf	(??_doWork+1)& (0+255),b
 15963  001810  90D8               	bcf	status,0,c
 15964  001812  0100               	movlb	0	; () banked
 15965  001814  37B4               	rlcf	??_doWork& (0+255),f,b
 15966  001816  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 15967  001818  0E50               	movlw	80
 15968  00181A  0100               	movlb	0	; () banked
 15969  00181C  25B4               	addwf	??_doWork& (0+255),w,b
 15970  00181E  6E1E               	movwf	readEEPROM@address,c
 15971  001820  0E00               	movlw	0
 15972  001822  0100               	movlb	0	; () banked
 15973  001824  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 15974  001826  6E1F               	movwf	readEEPROM@address+1,c
 15975  001828  EC6F  F03A         	call	_readEEPROM	;wreg free
 15976  00182C  0100               	movlb	0	; () banked
 15977  00182E  6FB6               	movwf	(??_doWork+2)& (0+255),b
 15978  001830  0101               	movlb	1	; () banked
 15979  001832  51A3               	movf	doWork@i& (0+255),w,b
 15980  001834  0100               	movlb	0	; () banked
 15981  001836  6FB7               	movwf	(??_doWork+3)& (0+255),b
 15982  001838  6BB8               	clrf	(??_doWork+4)& (0+255),b
 15983  00183A  90D8               	bcf	status,0,c
 15984  00183C  0100               	movlb	0	; () banked
 15985  00183E  37B7               	rlcf	(??_doWork+3)& (0+255),f,b
 15986  001840  37B8               	rlcf	(??_doWork+4)& (0+255),f,b
 15987  001842  0E4F               	movlw	79
 15988  001844  0100               	movlb	0	; () banked
 15989  001846  25B7               	addwf	(??_doWork+3)& (0+255),w,b
 15990  001848  6E1E               	movwf	readEEPROM@address,c
 15991  00184A  0E00               	movlw	0
 15992  00184C  0100               	movlb	0	; () banked
 15993  00184E  21B8               	addwfc	(??_doWork+4)& (0+255),w,b
 15994  001850  6E1F               	movwf	readEEPROM@address+1,c
 15995  001852  EC6F  F03A         	call	_readEEPROM	;wreg free
 15996  001856  0101               	movlb	1	; () banked
 15997  001858  6F93               	movwf	(doWork@B+1)& (0+255),b
 15998  00185A  0100               	movlb	0	; () banked
 15999  00185C  51B6               	movf	(??_doWork+2)& (0+255),w,b
 16000  00185E  0101               	movlb	1	; () banked
 16001  001860  6F92               	movwf	doWork@B& (0+255),b
 16002                           
 16003                           ;main.c: 466: Rinf = 10000.0 * exp(B / -298.15);
 16004  001862  0E33               	movlw	51
 16005  001864  6E2A               	movwf	___fldiv@f2,c
 16006  001866  0E13               	movlw	19
 16007  001868  6E2B               	movwf	___fldiv@f2+1,c
 16008  00186A  0E95               	movlw	149
 16009  00186C  6E2C               	movwf	___fldiv@f2+2,c
 16010  00186E  0EC3               	movlw	195
 16011  001870  6E2D               	movwf	___fldiv@f2+3,c
 16012  001872  C192  F022         	movff	doWork@B,___lwtofl@c
 16013  001876  C193  F023         	movff	doWork@B+1,___lwtofl@c+1
 16014  00187A  EC52  F039         	call	___lwtofl	;wreg free
 16015  00187E  C022  F026         	movff	?___lwtofl,___fldiv@f1
 16016  001882  C023  F027         	movff	?___lwtofl+1,___fldiv@f1+1
 16017  001886  C024  F028         	movff	?___lwtofl+2,___fldiv@f1+2
 16018  00188A  C025  F029         	movff	?___lwtofl+3,___fldiv@f1+3
 16019  00188E  EC11  F02F         	call	___fldiv	;wreg free
 16020  001892  C026  F176         	movff	?___fldiv,_doWork$2193
 16021  001896  C027  F177         	movff	?___fldiv+1,_doWork$2193+1
 16022  00189A  C028  F178         	movff	?___fldiv+2,_doWork$2193+2
 16023  00189E  C029  F179         	movff	?___fldiv+3,_doWork$2193+3
 16024                           
 16025                           ;main.c: 466: Rinf = 10000.0 * exp(B / -298.15);
 16026  0018A2  C176  F0A5         	movff	_doWork$2193,exp@x
 16027  0018A6  C177  F0A6         	movff	_doWork$2193+1,exp@x+1
 16028  0018AA  C178  F0A7         	movff	_doWork$2193+2,exp@x+2
 16029  0018AE  C179  F0A8         	movff	_doWork$2193+3,exp@x+3
 16030  0018B2  EC58  F023         	call	_exp	;wreg free
 16031  0018B6  C0A5  F17A         	movff	?_exp,_doWork$2194
 16032  0018BA  C0A6  F17B         	movff	?_exp+1,_doWork$2194+1
 16033  0018BE  C0A7  F17C         	movff	?_exp+2,_doWork$2194+2
 16034  0018C2  C0A8  F17D         	movff	?_exp+3,_doWork$2194+3
 16035                           
 16036                           ;main.c: 466: Rinf = 10000.0 * exp(B / -298.15);
 16037  0018C6  C17A  F067         	movff	_doWork$2194,___flmul@f1
 16038  0018CA  C17B  F068         	movff	_doWork$2194+1,___flmul@f1+1
 16039  0018CE  C17C  F069         	movff	_doWork$2194+2,___flmul@f1+2
 16040  0018D2  C17D  F06A         	movff	_doWork$2194+3,___flmul@f1+3
 16041  0018D6  0E00               	movlw	0
 16042  0018D8  0100               	movlb	0	; () banked
 16043  0018DA  6F6B               	movwf	___flmul@f2& (0+255),b
 16044  0018DC  0E40               	movlw	64
 16045  0018DE  0100               	movlb	0	; () banked
 16046  0018E0  6F6C               	movwf	(___flmul@f2+1)& (0+255),b
 16047  0018E2  0E1C               	movlw	28
 16048  0018E4  0100               	movlb	0	; () banked
 16049  0018E6  6F6D               	movwf	(___flmul@f2+2)& (0+255),b
 16050  0018E8  0E46               	movlw	70
 16051  0018EA  0100               	movlb	0	; () banked
 16052  0018EC  6F6E               	movwf	(___flmul@f2+3)& (0+255),b
 16053  0018EE  EC1E  F028         	call	___flmul	;wreg free
 16054  0018F2  C067  F16E         	movff	?___flmul,doWork@Rinf
 16055  0018F6  C068  F16F         	movff	?___flmul+1,doWork@Rinf+1
 16056  0018FA  C069  F170         	movff	?___flmul+2,doWork@Rinf+2
 16057  0018FE  C06A  F171         	movff	?___flmul+3,doWork@Rinf+3
 16058                           
 16059                           ;main.c: 468: v = 5.0 * (double) avarage / 1025;
 16060  001902  0E00               	movlw	0
 16061  001904  0100               	movlb	0	; () banked
 16062  001906  6F6B               	movwf	___flmul@f2& (0+255),b
 16063  001908  0E00               	movlw	0
 16064  00190A  0100               	movlb	0	; () banked
 16065  00190C  6F6C               	movwf	(___flmul@f2+1)& (0+255),b
 16066  00190E  0EA0               	movlw	160
 16067  001910  0100               	movlb	0	; () banked
 16068  001912  6F6D               	movwf	(___flmul@f2+2)& (0+255),b
 16069  001914  0E40               	movlw	64
 16070  001916  0100               	movlb	0	; () banked
 16071  001918  6F6E               	movwf	(___flmul@f2+3)& (0+255),b
 16072  00191A  C198  F067         	movff	doWork@avarage,___flmul@f1
 16073  00191E  C199  F068         	movff	doWork@avarage+1,___flmul@f1+1
 16074  001922  C19A  F069         	movff	doWork@avarage+2,___flmul@f1+2
 16075  001926  C19B  F06A         	movff	doWork@avarage+3,___flmul@f1+3
 16076  00192A  EC1E  F028         	call	___flmul	;wreg free
 16077  00192E  C067  F026         	movff	?___flmul,___fldiv@f1
 16078  001932  C068  F027         	movff	?___flmul+1,___fldiv@f1+1
 16079  001936  C069  F028         	movff	?___flmul+2,___fldiv@f1+2
 16080  00193A  C06A  F029         	movff	?___flmul+3,___fldiv@f1+3
 16081  00193E  0E00               	movlw	0
 16082  001940  6E2A               	movwf	___fldiv@f2,c
 16083  001942  0E20               	movlw	32
 16084  001944  6E2B               	movwf	___fldiv@f2+1,c
 16085  001946  0E80               	movlw	128
 16086  001948  6E2C               	movwf	___fldiv@f2+2,c
 16087  00194A  0E44               	movlw	68
 16088  00194C  6E2D               	movwf	___fldiv@f2+3,c
 16089  00194E  EC11  F02F         	call	___fldiv	;wreg free
 16090  001952  C026  F18E         	movff	?___fldiv,doWork@v
 16091  001956  C027  F18F         	movff	?___fldiv+1,doWork@v+1
 16092  00195A  C028  F190         	movff	?___fldiv+2,doWork@v+2
 16093  00195E  C029  F191         	movff	?___fldiv+3,doWork@v+3
 16094                           
 16095                           ;main.c: 470: resistance = (calVoltage - 10000.0 * v) / v;
 16096  001962  C172  F082         	movff	doWork@calVoltage,___fladd@f2
 16097  001966  C173  F083         	movff	doWork@calVoltage+1,___fladd@f2+1
 16098  00196A  C174  F084         	movff	doWork@calVoltage+2,___fladd@f2+2
 16099  00196E  C175  F085         	movff	doWork@calVoltage+3,___fladd@f2+3
 16100  001972  0E00               	movlw	0
 16101  001974  0100               	movlb	0	; () banked
 16102  001976  6F6B               	movwf	___flmul@f2& (0+255),b
 16103  001978  0E40               	movlw	64
 16104  00197A  0100               	movlb	0	; () banked
 16105  00197C  6F6C               	movwf	(___flmul@f2+1)& (0+255),b
 16106  00197E  0E1C               	movlw	28
 16107  001980  0100               	movlb	0	; () banked
 16108  001982  6F6D               	movwf	(___flmul@f2+2)& (0+255),b
 16109  001984  0E46               	movlw	70
 16110  001986  0100               	movlb	0	; () banked
 16111  001988  6F6E               	movwf	(___flmul@f2+3)& (0+255),b
 16112  00198A  C18E  F067         	movff	doWork@v,___flmul@f1
 16113  00198E  C18F  F068         	movff	doWork@v+1,___flmul@f1+1
 16114  001992  C190  F069         	movff	doWork@v+2,___flmul@f1+2
 16115  001996  C191  F06A         	movff	doWork@v+3,___flmul@f1+3
 16116  00199A  EC1E  F028         	call	___flmul	;wreg free
 16117  00199E  C067  F07A         	movff	?___flmul,___flneg@f1
 16118  0019A2  C068  F07B         	movff	?___flmul+1,___flneg@f1+1
 16119  0019A6  C069  F07C         	movff	?___flmul+2,___flneg@f1+2
 16120  0019AA  C06A  F07D         	movff	?___flmul+3,___flneg@f1+3
 16121  0019AE  ECB9  F038         	call	___flneg	;wreg free
 16122  0019B2  C07A  F07E         	movff	?___flneg,___fladd@f1
 16123  0019B6  C07B  F07F         	movff	?___flneg+1,___fladd@f1+1
 16124  0019BA  C07C  F080         	movff	?___flneg+2,___fladd@f1+2
 16125  0019BE  C07D  F081         	movff	?___flneg+3,___fladd@f1+3
 16126  0019C2  EC75  F020         	call	___fladd	;wreg free
 16127  0019C6  C07E  F026         	movff	?___fladd,___fldiv@f1
 16128  0019CA  C07F  F027         	movff	?___fladd+1,___fldiv@f1+1
 16129  0019CE  C080  F028         	movff	?___fladd+2,___fldiv@f1+2
 16130  0019D2  C081  F029         	movff	?___fladd+3,___fldiv@f1+3
 16131  0019D6  C18E  F02A         	movff	doWork@v,___fldiv@f2
 16132  0019DA  C18F  F02B         	movff	doWork@v+1,___fldiv@f2+1
 16133  0019DE  C190  F02C         	movff	doWork@v+2,___fldiv@f2+2
 16134  0019E2  C191  F02D         	movff	doWork@v+3,___fldiv@f2+3
 16135  0019E6  EC11  F02F         	call	___fldiv	;wreg free
 16136  0019EA  C026  F194         	movff	?___fldiv,doWork@resistance
 16137  0019EE  C027  F195         	movff	?___fldiv+1,doWork@resistance+1
 16138  0019F2  C028  F196         	movff	?___fldiv+2,doWork@resistance+2
 16139  0019F6  C029  F197         	movff	?___fldiv+3,doWork@resistance+3
 16140                           
 16141                           ;main.c: 472: temp = ((double) B) / log(resistance / Rinf);
 16142  0019FA  C16E  F02A         	movff	doWork@Rinf,___fldiv@f2
 16143  0019FE  C16F  F02B         	movff	doWork@Rinf+1,___fldiv@f2+1
 16144  001A02  C170  F02C         	movff	doWork@Rinf+2,___fldiv@f2+2
 16145  001A06  C171  F02D         	movff	doWork@Rinf+3,___fldiv@f2+3
 16146  001A0A  C194  F026         	movff	doWork@resistance,___fldiv@f1
 16147  001A0E  C195  F027         	movff	doWork@resistance+1,___fldiv@f1+1
 16148  001A12  C196  F028         	movff	doWork@resistance+2,___fldiv@f1+2
 16149  001A16  C197  F029         	movff	doWork@resistance+3,___fldiv@f1+3
 16150  001A1A  EC11  F02F         	call	___fldiv	;wreg free
 16151  001A1E  C026  F09D         	movff	?___fldiv,log@x
 16152  001A22  C027  F09E         	movff	?___fldiv+1,log@x+1
 16153  001A26  C028  F09F         	movff	?___fldiv+2,log@x+2
 16154  001A2A  C029  F0A0         	movff	?___fldiv+3,log@x+3
 16155  001A2E  ECC9  F029         	call	_log	;wreg free
 16156  001A32  C09D  F17E         	movff	?_log,_doWork$2195
 16157  001A36  C09E  F17F         	movff	?_log+1,_doWork$2195+1
 16158  001A3A  C09F  F180         	movff	?_log+2,_doWork$2195+2
 16159  001A3E  C0A0  F181         	movff	?_log+3,_doWork$2195+3
 16160                           
 16161                           ;main.c: 472: temp = ((double) B) / log(resistance / Rinf);
 16162  001A42  C192  F022         	movff	doWork@B,___lwtofl@c
 16163  001A46  C193  F023         	movff	doWork@B+1,___lwtofl@c+1
 16164  001A4A  EC52  F039         	call	___lwtofl	;wreg free
 16165  001A4E  C022  F026         	movff	?___lwtofl,___fldiv@f1
 16166  001A52  C023  F027         	movff	?___lwtofl+1,___fldiv@f1+1
 16167  001A56  C024  F028         	movff	?___lwtofl+2,___fldiv@f1+2
 16168  001A5A  C025  F029         	movff	?___lwtofl+3,___fldiv@f1+3
 16169  001A5E  C17E  F02A         	movff	_doWork$2195,___fldiv@f2
 16170  001A62  C17F  F02B         	movff	_doWork$2195+1,___fldiv@f2+1
 16171  001A66  C180  F02C         	movff	_doWork$2195+2,___fldiv@f2+2
 16172  001A6A  C181  F02D         	movff	_doWork$2195+3,___fldiv@f2+3
 16173  001A6E  EC11  F02F         	call	___fldiv	;wreg free
 16174  001A72  C026  F19F         	movff	?___fldiv,doWork@temp
 16175  001A76  C027  F1A0         	movff	?___fldiv+1,doWork@temp+1
 16176  001A7A  C028  F1A1         	movff	?___fldiv+2,doWork@temp+2
 16177  001A7E  C029  F1A2         	movff	?___fldiv+3,doWork@temp+3
 16178                           
 16179                           ;main.c: 474: temp -= 273.15;
 16180  001A82  C19F  F08D         	movff	doWork@temp,___flsub@f1
 16181  001A86  C1A0  F08E         	movff	doWork@temp+1,___flsub@f1+1
 16182  001A8A  C1A1  F08F         	movff	doWork@temp+2,___flsub@f1+2
 16183  001A8E  C1A2  F090         	movff	doWork@temp+3,___flsub@f1+3
 16184  001A92  0E33               	movlw	51
 16185  001A94  0100               	movlb	0	; () banked
 16186  001A96  6F91               	movwf	___flsub@f2& (0+255),b
 16187  001A98  0E93               	movlw	147
 16188  001A9A  0100               	movlb	0	; () banked
 16189  001A9C  6F92               	movwf	(___flsub@f2+1)& (0+255),b
 16190  001A9E  0E88               	movlw	136
 16191  001AA0  0100               	movlb	0	; () banked
 16192  001AA2  6F93               	movwf	(___flsub@f2+2)& (0+255),b
 16193  001AA4  0E43               	movlw	67
 16194  001AA6  0100               	movlb	0	; () banked
 16195  001AA8  6F94               	movwf	(___flsub@f2+3)& (0+255),b
 16196  001AAA  EC84  F037         	call	___flsub	;wreg free
 16197  001AAE  C08D  F19F         	movff	?___flsub,doWork@temp
 16198  001AB2  C08E  F1A0         	movff	?___flsub+1,doWork@temp+1
 16199  001AB6  C08F  F1A1         	movff	?___flsub+2,doWork@temp+2
 16200  001ABA  C090  F1A2         	movff	?___flsub+3,doWork@temp+3
 16201                           
 16202                           ;main.c: 489: current_temp[ i ] = (current_temp[ i ] + ((long) (temp * 100) + getCalibra
      +                          tionValue(i))) / 2;
 16203  001ABE  0101               	movlb	1	; () banked
 16204  001AC0  51A3               	movf	doWork@i& (0+255),w,b
 16205  001AC2  0D02               	mullw	2
 16206  001AC4  0101               	movlb	1	; () banked
 16207  001AC6  0E00               	movlw	low _current_temp
 16208  001AC8  24F3               	addwf	prodl,w,c
 16209  001ACA  6ED9               	movwf	fsr2l,c
 16210  001ACC  0101               	movlb	1	; () banked
 16211  001ACE  0E01               	movlw	high _current_temp
 16212  001AD0  20F4               	addwfc	prodh,w,c
 16213  001AD2  6EDA               	movwf	fsr2h,c
 16214  001AD4  CFDE F0B4          	movff	postinc2,??_doWork
 16215  001AD8  CFDD F0B5          	movff	postdec2,??_doWork+1
 16216  001ADC  C0B4  F0B6         	movff	??_doWork,??_doWork+2
 16217  001AE0  C0B5  F0B7         	movff	??_doWork+1,??_doWork+3
 16218  001AE4  0E00               	movlw	0
 16219  001AE6  0100               	movlb	0	; () banked
 16220  001AE8  BFB7               	btfsc	(??_doWork+3)& (0+255),7,b
 16221  001AEA  0EFF               	movlw	255
 16222  001AEC  6FB8               	movwf	(??_doWork+4)& (0+255),b
 16223  001AEE  6FB9               	movwf	(??_doWork+5)& (0+255),b
 16224  001AF0  0101               	movlb	1	; () banked
 16225  001AF2  51A3               	movf	doWork@i& (0+255),w,b
 16226  001AF4  EC2E  F037         	call	_getCalibrationValue
 16227  001AF8  C021  F0BA         	movff	?_getCalibrationValue,??_doWork+6
 16228  001AFC  C022  F0BB         	movff	?_getCalibrationValue+1,??_doWork+7
 16229  001B00  0E00               	movlw	0
 16230  001B02  0100               	movlb	0	; () banked
 16231  001B04  BFBB               	btfsc	(??_doWork+7)& (0+255),7,b
 16232  001B06  0EFF               	movlw	255
 16233  001B08  6FBC               	movwf	(??_doWork+8)& (0+255),b
 16234  001B0A  6FBD               	movwf	(??_doWork+9)& (0+255),b
 16235  001B0C  0E00               	movlw	0
 16236  001B0E  0100               	movlb	0	; () banked
 16237  001B10  6F6B               	movwf	___flmul@f2& (0+255),b
 16238  001B12  0E00               	movlw	0
 16239  001B14  0100               	movlb	0	; () banked
 16240  001B16  6F6C               	movwf	(___flmul@f2+1)& (0+255),b
 16241  001B18  0EC8               	movlw	200
 16242  001B1A  0100               	movlb	0	; () banked
 16243  001B1C  6F6D               	movwf	(___flmul@f2+2)& (0+255),b
 16244  001B1E  0E42               	movlw	66
 16245  001B20  0100               	movlb	0	; () banked
 16246  001B22  6F6E               	movwf	(___flmul@f2+3)& (0+255),b
 16247  001B24  C19F  F067         	movff	doWork@temp,___flmul@f1
 16248  001B28  C1A0  F068         	movff	doWork@temp+1,___flmul@f1+1
 16249  001B2C  C1A1  F069         	movff	doWork@temp+2,___flmul@f1+2
 16250  001B30  C1A2  F06A         	movff	doWork@temp+3,___flmul@f1+3
 16251  001B34  EC1E  F028         	call	___flmul	;wreg free
 16252  001B38  C067  F07A         	movff	?___flmul,___fltol@f1
 16253  001B3C  C068  F07B         	movff	?___flmul+1,___fltol@f1+1
 16254  001B40  C069  F07C         	movff	?___flmul+2,___fltol@f1+2
 16255  001B44  C06A  F07D         	movff	?___flmul+3,___fltol@f1+3
 16256  001B48  EC9E  F02C         	call	___fltol	;wreg free
 16257  001B4C  C07A  F0BE         	movff	?___fltol,??_doWork+10
 16258  001B50  C07B  F0BF         	movff	?___fltol+1,??_doWork+11
 16259  001B54  C07C  F0C0         	movff	?___fltol+2,??_doWork+12
 16260  001B58  C07D  F0C1         	movff	?___fltol+3,??_doWork+13
 16261  001B5C  0100               	movlb	0	; () banked
 16262  001B5E  51BA               	movf	(??_doWork+6)& (0+255),w,b
 16263  001B60  0100               	movlb	0	; () banked
 16264  001B62  25BE               	addwf	(??_doWork+10)& (0+255),w,b
 16265  001B64  0100               	movlb	0	; () banked
 16266  001B66  6FC2               	movwf	(??_doWork+14)& (0+255),b
 16267  001B68  0100               	movlb	0	; () banked
 16268  001B6A  51BB               	movf	(??_doWork+7)& (0+255),w,b
 16269  001B6C  0100               	movlb	0	; () banked
 16270  001B6E  21BF               	addwfc	(??_doWork+11)& (0+255),w,b
 16271  001B70  0100               	movlb	0	; () banked
 16272  001B72  6FC3               	movwf	(??_doWork+15)& (0+255),b
 16273  001B74  0100               	movlb	0	; () banked
 16274  001B76  51BC               	movf	(??_doWork+8)& (0+255),w,b
 16275  001B78  0100               	movlb	0	; () banked
 16276  001B7A  21C0               	addwfc	(??_doWork+12)& (0+255),w,b
 16277  001B7C  0100               	movlb	0	; () banked
 16278  001B7E  6FC4               	movwf	(??_doWork+16)& (0+255),b
 16279  001B80  0100               	movlb	0	; () banked
 16280  001B82  51BD               	movf	(??_doWork+9)& (0+255),w,b
 16281  001B84  0100               	movlb	0	; () banked
 16282  001B86  21C1               	addwfc	(??_doWork+13)& (0+255),w,b
 16283  001B88  0100               	movlb	0	; () banked
 16284  001B8A  6FC5               	movwf	(??_doWork+17)& (0+255),b
 16285  001B8C  0100               	movlb	0	; () banked
 16286  001B8E  51B6               	movf	(??_doWork+2)& (0+255),w,b
 16287  001B90  0100               	movlb	0	; () banked
 16288  001B92  25C2               	addwf	(??_doWork+14)& (0+255),w,b
 16289  001B94  0100               	movlb	0	; () banked
 16290  001B96  6F84               	movwf	___aldiv@dividend& (0+255),b
 16291  001B98  0100               	movlb	0	; () banked
 16292  001B9A  51B7               	movf	(??_doWork+3)& (0+255),w,b
 16293  001B9C  0100               	movlb	0	; () banked
 16294  001B9E  21C3               	addwfc	(??_doWork+15)& (0+255),w,b
 16295  001BA0  0100               	movlb	0	; () banked
 16296  001BA2  6F85               	movwf	(___aldiv@dividend+1)& (0+255),b
 16297  001BA4  0100               	movlb	0	; () banked
 16298  001BA6  51B8               	movf	(??_doWork+4)& (0+255),w,b
 16299  001BA8  0100               	movlb	0	; () banked
 16300  001BAA  21C4               	addwfc	(??_doWork+16)& (0+255),w,b
 16301  001BAC  0100               	movlb	0	; () banked
 16302  001BAE  6F86               	movwf	(___aldiv@dividend+2)& (0+255),b
 16303  001BB0  0100               	movlb	0	; () banked
 16304  001BB2  51B9               	movf	(??_doWork+5)& (0+255),w,b
 16305  001BB4  0100               	movlb	0	; () banked
 16306  001BB6  21C5               	addwfc	(??_doWork+17)& (0+255),w,b
 16307  001BB8  0100               	movlb	0	; () banked
 16308  001BBA  6F87               	movwf	(___aldiv@dividend+3)& (0+255),b
 16309  001BBC  0E02               	movlw	2
 16310  001BBE  0100               	movlb	0	; () banked
 16311  001BC0  6F88               	movwf	___aldiv@divisor& (0+255),b
 16312  001BC2  0E00               	movlw	0
 16313  001BC4  0100               	movlb	0	; () banked
 16314  001BC6  6F89               	movwf	(___aldiv@divisor+1)& (0+255),b
 16315  001BC8  0E00               	movlw	0
 16316  001BCA  0100               	movlb	0	; () banked
 16317  001BCC  6F8A               	movwf	(___aldiv@divisor+2)& (0+255),b
 16318  001BCE  0E00               	movlw	0
 16319  001BD0  0100               	movlb	0	; () banked
 16320  001BD2  6F8B               	movwf	(___aldiv@divisor+3)& (0+255),b
 16321  001BD4  EC01  F029         	call	___aldiv	;wreg free
 16322  001BD8  C084  F0C6         	movff	?___aldiv,??_doWork+18
 16323  001BDC  C085  F0C7         	movff	?___aldiv+1,??_doWork+19
 16324  001BE0  C086  F0C8         	movff	?___aldiv+2,??_doWork+20
 16325  001BE4  C087  F0C9         	movff	?___aldiv+3,??_doWork+21
 16326  001BE8  0101               	movlb	1	; () banked
 16327  001BEA  51A3               	movf	doWork@i& (0+255),w,b
 16328  001BEC  0D02               	mullw	2
 16329  001BEE  0101               	movlb	1	; () banked
 16330  001BF0  0E00               	movlw	low _current_temp
 16331  001BF2  24F3               	addwf	prodl,w,c
 16332  001BF4  6ED9               	movwf	fsr2l,c
 16333  001BF6  0101               	movlb	1	; () banked
 16334  001BF8  0E01               	movlw	high _current_temp
 16335  001BFA  20F4               	addwfc	prodh,w,c
 16336  001BFC  6EDA               	movwf	fsr2h,c
 16337  001BFE  C0C6  FFDE         	movff	??_doWork+18,postinc2
 16338  001C02  C0C7  FFDD         	movff	??_doWork+19,postdec2
 16339                           
 16340                           ; BSR set to: 1
 16341                           ;main.c: 510: }
 16342                           ;main.c: 512: if (current_temp[ i ] <
 16343                           ;main.c: 513: (int16_t) (readEEPROM(2 * i + 0x7F)*256 +
 16344                           ;main.c: 514: readEEPROM(2 * i + 0x80))) {
 16345                           
 16346                           ; BSR set to: 1
 16347                           
 16348                           ;main.c: 508: current_temp[ i ] = (current_temp[ i ] + ((long) (temp * 100) + getCalibra
      +                          tionValue(i))) / 2;
 16349                           
 16350                           ;main.c: 507: temp = temp - 273.15;
 16351                           
 16352                           ;main.c: 505: temp = 1 / (sh_coefficients[i * 3] + (sh_coefficients[i * 3 + 1] * temp) +
 16353                           ;main.c: 506: (sh_coefficients[i * 3 + 2] * temp * temp * temp));
 16354                           
 16355                           ;main.c: 505: temp = 1 / (sh_coefficients[i * 3] + (sh_coefficients[i * 3 + 1] * temp) +
 16356                           ;main.c: 506: (sh_coefficients[i * 3 + 2] * temp * temp * temp));
 16357                           
 16358                           ;main.c: 505: temp = 1 / (sh_coefficients[i * 3] + (sh_coefficients[i * 3 + 1] * temp) +
 16359                           ;main.c: 506: (sh_coefficients[i * 3 + 2] * temp * temp * temp));
 16360                           
 16361                           ;main.c: 505: temp = 1 / (sh_coefficients[i * 3] + (sh_coefficients[i * 3 + 1] * temp) +
 16362                           ;main.c: 506: (sh_coefficients[i * 3 + 2] * temp * temp * temp));
 16363                           
 16364                           ;main.c: 504: temp = log(resistance);
 16365                           
 16366                           ; BSR set to: 1
 16367                           ;main.c: 492: else {
 16368                           ;main.c: 498: resistance = ((10240000 / adc[2 * i + 1]) - 10000);
 16369                           
 16370                           ; BSR set to: 1
 16371                           
 16372                           ;main.c: 491: }
 16373  001C06  0101               	movlb	1	; () banked
 16374  001C08  51A3               	movf	doWork@i& (0+255),w,b
 16375  001C0A  0100               	movlb	0	; () banked
 16376  001C0C  6FB4               	movwf	??_doWork& (0+255),b
 16377  001C0E  6BB5               	clrf	(??_doWork+1)& (0+255),b
 16378  001C10  90D8               	bcf	status,0,c
 16379  001C12  0100               	movlb	0	; () banked
 16380  001C14  37B4               	rlcf	??_doWork& (0+255),f,b
 16381  001C16  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16382  001C18  0E7F               	movlw	127
 16383  001C1A  0100               	movlb	0	; () banked
 16384  001C1C  25B4               	addwf	??_doWork& (0+255),w,b
 16385  001C1E  6E1E               	movwf	readEEPROM@address,c
 16386  001C20  0E00               	movlw	0
 16387  001C22  0100               	movlb	0	; () banked
 16388  001C24  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 16389  001C26  6E1F               	movwf	readEEPROM@address+1,c
 16390  001C28  EC6F  F03A         	call	_readEEPROM	;wreg free
 16391  001C2C  0100               	movlb	0	; () banked
 16392  001C2E  6FB6               	movwf	(??_doWork+2)& (0+255),b
 16393  001C30  0100               	movlb	0	; () banked
 16394  001C32  51B6               	movf	(??_doWork+2)& (0+255),w,b
 16395  001C34  0100               	movlb	0	; () banked
 16396  001C36  6FB8               	movwf	(??_doWork+4)& (0+255),b
 16397  001C38  6BB7               	clrf	(??_doWork+3)& (0+255),b
 16398  001C3A  0101               	movlb	1	; () banked
 16399  001C3C  51A3               	movf	doWork@i& (0+255),w,b
 16400  001C3E  0100               	movlb	0	; () banked
 16401  001C40  6FB9               	movwf	(??_doWork+5)& (0+255),b
 16402  001C42  6BBA               	clrf	(??_doWork+6)& (0+255),b
 16403  001C44  90D8               	bcf	status,0,c
 16404  001C46  0100               	movlb	0	; () banked
 16405  001C48  37B9               	rlcf	(??_doWork+5)& (0+255),f,b
 16406  001C4A  37BA               	rlcf	(??_doWork+6)& (0+255),f,b
 16407  001C4C  0E80               	movlw	128
 16408  001C4E  0100               	movlb	0	; () banked
 16409  001C50  25B9               	addwf	(??_doWork+5)& (0+255),w,b
 16410  001C52  6E1E               	movwf	readEEPROM@address,c
 16411  001C54  0E00               	movlw	0
 16412  001C56  0100               	movlb	0	; () banked
 16413  001C58  21BA               	addwfc	(??_doWork+6)& (0+255),w,b
 16414  001C5A  6E1F               	movwf	readEEPROM@address+1,c
 16415  001C5C  EC6F  F03A         	call	_readEEPROM	;wreg free
 16416  001C60  0100               	movlb	0	; () banked
 16417  001C62  6FBB               	movwf	(??_doWork+7)& (0+255),b
 16418  001C64  0100               	movlb	0	; () banked
 16419  001C66  51BB               	movf	(??_doWork+7)& (0+255),w,b
 16420  001C68  0100               	movlb	0	; () banked
 16421  001C6A  27B7               	addwf	(??_doWork+3)& (0+255),f,b
 16422  001C6C  0E00               	movlw	0
 16423  001C6E  23B8               	addwfc	(??_doWork+4)& (0+255),f,b
 16424  001C70  0101               	movlb	1	; () banked
 16425  001C72  51A3               	movf	doWork@i& (0+255),w,b
 16426  001C74  0D02               	mullw	2
 16427  001C76  0101               	movlb	1	; () banked
 16428  001C78  0E00               	movlw	low _current_temp
 16429  001C7A  24F3               	addwf	prodl,w,c
 16430  001C7C  6ED9               	movwf	fsr2l,c
 16431  001C7E  0101               	movlb	1	; () banked
 16432  001C80  0E01               	movlw	high _current_temp
 16433  001C82  20F4               	addwfc	prodh,w,c
 16434  001C84  6EDA               	movwf	fsr2h,c
 16435  001C86  CFDE F0BC          	movff	postinc2,??_doWork+8
 16436  001C8A  CFDD F0BD          	movff	postdec2,??_doWork+9
 16437  001C8E  0100               	movlb	0	; () banked
 16438  001C90  51BD               	movf	(??_doWork+9)& (0+255),w,b
 16439  001C92  0A80               	xorlw	128
 16440  001C94  0100               	movlb	0	; () banked
 16441  001C96  6FBE               	movwf	(??_doWork+10)& (0+255),b
 16442  001C98  0100               	movlb	0	; () banked
 16443  001C9A  51B7               	movf	(??_doWork+3)& (0+255),w,b
 16444  001C9C  0100               	movlb	0	; () banked
 16445  001C9E  5DBC               	subwf	(??_doWork+8)& (0+255),w,b
 16446  001CA0  0100               	movlb	0	; () banked
 16447  001CA2  51B8               	movf	(??_doWork+4)& (0+255),w,b
 16448  001CA4  0A80               	xorlw	128
 16449  001CA6  0100               	movlb	0	; () banked
 16450  001CA8  59BE               	subwfb	(??_doWork+10)& (0+255),w,b
 16451  001CAA  B0D8               	btfsc	status,0,c
 16452  001CAC  D04B               	goto	l201
 16453                           
 16454                           ; BSR set to: 0
 16455                           ;main.c: 516: writeEEPROM(2 * i + 0x7F, current_temp[ i ] >> 8);
 16456  001CAE  0101               	movlb	1	; () banked
 16457  001CB0  51A3               	movf	doWork@i& (0+255),w,b
 16458  001CB2  0100               	movlb	0	; () banked
 16459  001CB4  6FB4               	movwf	??_doWork& (0+255),b
 16460  001CB6  6BB5               	clrf	(??_doWork+1)& (0+255),b
 16461  001CB8  90D8               	bcf	status,0,c
 16462  001CBA  0100               	movlb	0	; () banked
 16463  001CBC  37B4               	rlcf	??_doWork& (0+255),f,b
 16464  001CBE  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16465  001CC0  0E7F               	movlw	127
 16466  001CC2  0100               	movlb	0	; () banked
 16467  001CC4  25B4               	addwf	??_doWork& (0+255),w,b
 16468  001CC6  6E18               	movwf	writeEEPROM@address,c
 16469  001CC8  0E00               	movlw	0
 16470  001CCA  0100               	movlb	0	; () banked
 16471  001CCC  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 16472  001CCE  6E19               	movwf	writeEEPROM@address+1,c
 16473  001CD0  0101               	movlb	1	; () banked
 16474  001CD2  51A3               	movf	doWork@i& (0+255),w,b
 16475  001CD4  0D02               	mullw	2
 16476  001CD6  0101               	movlb	1	; () banked
 16477  001CD8  0E00               	movlw	low _current_temp
 16478  001CDA  24F3               	addwf	prodl,w,c
 16479  001CDC  6ED9               	movwf	fsr2l,c
 16480  001CDE  0101               	movlb	1	; () banked
 16481  001CE0  0E01               	movlw	high _current_temp
 16482  001CE2  20F4               	addwfc	prodh,w,c
 16483  001CE4  6EDA               	movwf	fsr2h,c
 16484  001CE6  CFDE F0B6          	movff	postinc2,??_doWork+2
 16485  001CEA  CFDD F0B7          	movff	postdec2,??_doWork+3
 16486  001CEE  C0B7  F0B6         	movff	??_doWork+3,??_doWork+2
 16487  001CF2  0100               	movlb	0	; () banked
 16488  001CF4  6BB7               	clrf	(??_doWork+3)& (0+255),b
 16489  001CF6  BFB6               	btfsc	(??_doWork+2)& (0+255),7,b
 16490  001CF8  69B7               	setf	(??_doWork+3)& (0+255),b
 16491  001CFA  0100               	movlb	0	; () banked
 16492  001CFC  51B6               	movf	(??_doWork+2)& (0+255),w,b
 16493  001CFE  6E1A               	movwf	writeEEPROM@data,c
 16494  001D00  EC8E  F039         	call	_writeEEPROM	;wreg free
 16495                           
 16496                           ;main.c: 517: writeEEPROM(2 * i + 0x80, 0xff & current_temp[ i ]);
 16497  001D04  0101               	movlb	1	; () banked
 16498  001D06  51A3               	movf	doWork@i& (0+255),w,b
 16499  001D08  0100               	movlb	0	; () banked
 16500  001D0A  6FB4               	movwf	??_doWork& (0+255),b
 16501  001D0C  6BB5               	clrf	(??_doWork+1)& (0+255),b
 16502  001D0E  90D8               	bcf	status,0,c
 16503  001D10  0100               	movlb	0	; () banked
 16504  001D12  37B4               	rlcf	??_doWork& (0+255),f,b
 16505  001D14  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16506  001D16  0E80               	movlw	128
 16507  001D18  0100               	movlb	0	; () banked
 16508  001D1A  25B4               	addwf	??_doWork& (0+255),w,b
 16509  001D1C  6E18               	movwf	writeEEPROM@address,c
 16510  001D1E  0E00               	movlw	0
 16511  001D20  0100               	movlb	0	; () banked
 16512  001D22  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 16513  001D24  6E19               	movwf	writeEEPROM@address+1,c
 16514  001D26  0101               	movlb	1	; () banked
 16515  001D28  51A3               	movf	doWork@i& (0+255),w,b
 16516  001D2A  0D02               	mullw	2
 16517  001D2C  0101               	movlb	1	; () banked
 16518  001D2E  0E00               	movlw	low _current_temp
 16519  001D30  24F3               	addwf	prodl,w,c
 16520  001D32  6ED9               	movwf	fsr2l,c
 16521  001D34  0101               	movlb	1	; () banked
 16522  001D36  0E01               	movlw	high _current_temp
 16523  001D38  20F4               	addwfc	prodh,w,c
 16524  001D3A  6EDA               	movwf	fsr2h,c
 16525  001D3C  50DF               	movf	indf2,w,c
 16526  001D3E  6E1A               	movwf	writeEEPROM@data,c
 16527  001D40  EC8E  F039         	call	_writeEEPROM	;wreg free
 16528  001D44                     l201:
 16529                           
 16530                           ;main.c: 518: }
 16531                           ;main.c: 521: if (current_temp[ i ] >
 16532                           ;main.c: 522: (int16_t) (readEEPROM(2 * i + 0x8B)*256 +
 16533                           ;main.c: 523: readEEPROM(2 * i + 0x8C))) {
 16534  001D44  0101               	movlb	1	; () banked
 16535  001D46  51A3               	movf	doWork@i& (0+255),w,b
 16536  001D48  0D02               	mullw	2
 16537  001D4A  0101               	movlb	1	; () banked
 16538  001D4C  0E00               	movlw	low _current_temp
 16539  001D4E  24F3               	addwf	prodl,w,c
 16540  001D50  6ED9               	movwf	fsr2l,c
 16541  001D52  0101               	movlb	1	; () banked
 16542  001D54  0E01               	movlw	high _current_temp
 16543  001D56  20F4               	addwfc	prodh,w,c
 16544  001D58  6EDA               	movwf	fsr2h,c
 16545  001D5A  CFDE F0B4          	movff	postinc2,??_doWork
 16546  001D5E  CFDD F0B5          	movff	postdec2,??_doWork+1
 16547  001D62  0101               	movlb	1	; () banked
 16548  001D64  51A3               	movf	doWork@i& (0+255),w,b
 16549  001D66  0100               	movlb	0	; () banked
 16550  001D68  6FB6               	movwf	(??_doWork+2)& (0+255),b
 16551  001D6A  6BB7               	clrf	(??_doWork+3)& (0+255),b
 16552  001D6C  90D8               	bcf	status,0,c
 16553  001D6E  0100               	movlb	0	; () banked
 16554  001D70  37B6               	rlcf	(??_doWork+2)& (0+255),f,b
 16555  001D72  37B7               	rlcf	(??_doWork+3)& (0+255),f,b
 16556  001D74  0E8B               	movlw	139
 16557  001D76  0100               	movlb	0	; () banked
 16558  001D78  25B6               	addwf	(??_doWork+2)& (0+255),w,b
 16559  001D7A  6E1E               	movwf	readEEPROM@address,c
 16560  001D7C  0E00               	movlw	0
 16561  001D7E  0100               	movlb	0	; () banked
 16562  001D80  21B7               	addwfc	(??_doWork+3)& (0+255),w,b
 16563  001D82  6E1F               	movwf	readEEPROM@address+1,c
 16564  001D84  EC6F  F03A         	call	_readEEPROM	;wreg free
 16565  001D88  0100               	movlb	0	; () banked
 16566  001D8A  6FB8               	movwf	(??_doWork+4)& (0+255),b
 16567  001D8C  0100               	movlb	0	; () banked
 16568  001D8E  51B8               	movf	(??_doWork+4)& (0+255),w,b
 16569  001D90  0100               	movlb	0	; () banked
 16570  001D92  6FBA               	movwf	(??_doWork+6)& (0+255),b
 16571  001D94  6BB9               	clrf	(??_doWork+5)& (0+255),b
 16572  001D96  0101               	movlb	1	; () banked
 16573  001D98  51A3               	movf	doWork@i& (0+255),w,b
 16574  001D9A  0100               	movlb	0	; () banked
 16575  001D9C  6FBB               	movwf	(??_doWork+7)& (0+255),b
 16576  001D9E  6BBC               	clrf	(??_doWork+8)& (0+255),b
 16577  001DA0  90D8               	bcf	status,0,c
 16578  001DA2  0100               	movlb	0	; () banked
 16579  001DA4  37BB               	rlcf	(??_doWork+7)& (0+255),f,b
 16580  001DA6  37BC               	rlcf	(??_doWork+8)& (0+255),f,b
 16581  001DA8  0E8C               	movlw	140
 16582  001DAA  0100               	movlb	0	; () banked
 16583  001DAC  25BB               	addwf	(??_doWork+7)& (0+255),w,b
 16584  001DAE  6E1E               	movwf	readEEPROM@address,c
 16585  001DB0  0E00               	movlw	0
 16586  001DB2  0100               	movlb	0	; () banked
 16587  001DB4  21BC               	addwfc	(??_doWork+8)& (0+255),w,b
 16588  001DB6  6E1F               	movwf	readEEPROM@address+1,c
 16589  001DB8  EC6F  F03A         	call	_readEEPROM	;wreg free
 16590  001DBC  0100               	movlb	0	; () banked
 16591  001DBE  6FBD               	movwf	(??_doWork+9)& (0+255),b
 16592  001DC0  0100               	movlb	0	; () banked
 16593  001DC2  51BD               	movf	(??_doWork+9)& (0+255),w,b
 16594  001DC4  0100               	movlb	0	; () banked
 16595  001DC6  27B9               	addwf	(??_doWork+5)& (0+255),f,b
 16596  001DC8  0E00               	movlw	0
 16597  001DCA  23BA               	addwfc	(??_doWork+6)& (0+255),f,b
 16598  001DCC  0100               	movlb	0	; () banked
 16599  001DCE  51BA               	movf	(??_doWork+6)& (0+255),w,b
 16600  001DD0  0A80               	xorlw	128
 16601  001DD2  0100               	movlb	0	; () banked
 16602  001DD4  6FBE               	movwf	(??_doWork+10)& (0+255),b
 16603  001DD6  0100               	movlb	0	; () banked
 16604  001DD8  51B4               	movf	??_doWork& (0+255),w,b
 16605  001DDA  0100               	movlb	0	; () banked
 16606  001DDC  5DB9               	subwf	(??_doWork+5)& (0+255),w,b
 16607  001DDE  0100               	movlb	0	; () banked
 16608  001DE0  51B5               	movf	(??_doWork+1)& (0+255),w,b
 16609  001DE2  0A80               	xorlw	128
 16610  001DE4  0100               	movlb	0	; () banked
 16611  001DE6  59BE               	subwfb	(??_doWork+10)& (0+255),w,b
 16612  001DE8  B0D8               	btfsc	status,0,c
 16613  001DEA  D04B               	goto	l10604
 16614                           
 16615                           ; BSR set to: 0
 16616                           ;main.c: 525: writeEEPROM(2 * i + 0x8B, current_temp[ i ] >> 8);
 16617  001DEC  0101               	movlb	1	; () banked
 16618  001DEE  51A3               	movf	doWork@i& (0+255),w,b
 16619  001DF0  0100               	movlb	0	; () banked
 16620  001DF2  6FB4               	movwf	??_doWork& (0+255),b
 16621  001DF4  6BB5               	clrf	(??_doWork+1)& (0+255),b
 16622  001DF6  90D8               	bcf	status,0,c
 16623  001DF8  0100               	movlb	0	; () banked
 16624  001DFA  37B4               	rlcf	??_doWork& (0+255),f,b
 16625  001DFC  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16626  001DFE  0E8B               	movlw	139
 16627  001E00  0100               	movlb	0	; () banked
 16628  001E02  25B4               	addwf	??_doWork& (0+255),w,b
 16629  001E04  6E18               	movwf	writeEEPROM@address,c
 16630  001E06  0E00               	movlw	0
 16631  001E08  0100               	movlb	0	; () banked
 16632  001E0A  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 16633  001E0C  6E19               	movwf	writeEEPROM@address+1,c
 16634  001E0E  0101               	movlb	1	; () banked
 16635  001E10  51A3               	movf	doWork@i& (0+255),w,b
 16636  001E12  0D02               	mullw	2
 16637  001E14  0101               	movlb	1	; () banked
 16638  001E16  0E00               	movlw	low _current_temp
 16639  001E18  24F3               	addwf	prodl,w,c
 16640  001E1A  6ED9               	movwf	fsr2l,c
 16641  001E1C  0101               	movlb	1	; () banked
 16642  001E1E  0E01               	movlw	high _current_temp
 16643  001E20  20F4               	addwfc	prodh,w,c
 16644  001E22  6EDA               	movwf	fsr2h,c
 16645  001E24  CFDE F0B6          	movff	postinc2,??_doWork+2
 16646  001E28  CFDD F0B7          	movff	postdec2,??_doWork+3
 16647  001E2C  C0B7  F0B6         	movff	??_doWork+3,??_doWork+2
 16648  001E30  0100               	movlb	0	; () banked
 16649  001E32  6BB7               	clrf	(??_doWork+3)& (0+255),b
 16650  001E34  BFB6               	btfsc	(??_doWork+2)& (0+255),7,b
 16651  001E36  69B7               	setf	(??_doWork+3)& (0+255),b
 16652  001E38  0100               	movlb	0	; () banked
 16653  001E3A  51B6               	movf	(??_doWork+2)& (0+255),w,b
 16654  001E3C  6E1A               	movwf	writeEEPROM@data,c
 16655  001E3E  EC8E  F039         	call	_writeEEPROM	;wreg free
 16656                           
 16657                           ;main.c: 526: writeEEPROM(2 * i + 0x8C, 0xff & current_temp[ i ]);
 16658  001E42  0101               	movlb	1	; () banked
 16659  001E44  51A3               	movf	doWork@i& (0+255),w,b
 16660  001E46  0100               	movlb	0	; () banked
 16661  001E48  6FB4               	movwf	??_doWork& (0+255),b
 16662  001E4A  6BB5               	clrf	(??_doWork+1)& (0+255),b
 16663  001E4C  90D8               	bcf	status,0,c
 16664  001E4E  0100               	movlb	0	; () banked
 16665  001E50  37B4               	rlcf	??_doWork& (0+255),f,b
 16666  001E52  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16667  001E54  0E8C               	movlw	140
 16668  001E56  0100               	movlb	0	; () banked
 16669  001E58  25B4               	addwf	??_doWork& (0+255),w,b
 16670  001E5A  6E18               	movwf	writeEEPROM@address,c
 16671  001E5C  0E00               	movlw	0
 16672  001E5E  0100               	movlb	0	; () banked
 16673  001E60  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 16674  001E62  6E19               	movwf	writeEEPROM@address+1,c
 16675  001E64  0101               	movlb	1	; () banked
 16676  001E66  51A3               	movf	doWork@i& (0+255),w,b
 16677  001E68  0D02               	mullw	2
 16678  001E6A  0101               	movlb	1	; () banked
 16679  001E6C  0E00               	movlw	low _current_temp
 16680  001E6E  24F3               	addwf	prodl,w,c
 16681  001E70  6ED9               	movwf	fsr2l,c
 16682  001E72  0101               	movlb	1	; () banked
 16683  001E74  0E01               	movlw	high _current_temp
 16684  001E76  20F4               	addwfc	prodh,w,c
 16685  001E78  6EDA               	movwf	fsr2h,c
 16686  001E7A  50DF               	movf	indf2,w,c
 16687  001E7C  6E1A               	movwf	writeEEPROM@data,c
 16688  001E7E  EC8E  F039         	call	_writeEEPROM	;wreg free
 16689  001E82                     l10604:
 16690                           
 16691                           ;main.c: 527: }
 16692                           ;main.c: 530: adc_conversion_flags &= ~(1 << i);
 16693  001E82  C1A3  F0B4         	movff	doWork@i,??_doWork
 16694  001E86  0E01               	movlw	1
 16695  001E88  0100               	movlb	0	; () banked
 16696  001E8A  6FB5               	movwf	(??_doWork+1)& (0+255),b
 16697  001E8C  0100               	movlb	0	; () banked
 16698  001E8E  2BB4               	incf	??_doWork& (0+255),f,b
 16699  001E90  D003               	goto	u11404
 16700  001E92                     u11405:
 16701  001E92  0100               	movlb	0	; () banked
 16702  001E94  90D8               	bcf	status,0,c
 16703  001E96  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16704  001E98                     u11404:
 16705  001E98  0100               	movlb	0	; () banked
 16706  001E9A  2FB4               	decfsz	??_doWork& (0+255),f,b
 16707  001E9C  D7FA               	goto	u11405
 16708  001E9E  0100               	movlb	0	; () banked
 16709  001EA0  51B5               	movf	(??_doWork+1)& (0+255),w,b
 16710  001EA2  0AFF               	xorlw	255
 16711  001EA4  0100               	movlb	0	; () banked
 16712  001EA6  17CB               	andwf	_adc_conversion_flags& (0+255),f,b
 16713  001EA8                     l10606:
 16714                           
 16715                           ; BSR set to: 0
 16716  001EA8  0101               	movlb	1	; () banked
 16717  001EAA  2BA3               	incf	doWork@i& (0+255),f,b
 16718  001EAC                     L175:
 16719                           
 16720                           ; BSR set to: 1
 16721  001EAC  0E05               	movlw	5
 16722  001EAE  0101               	movlb	1	; () banked
 16723  001EB0  65A3               	cpfsgt	doWork@i& (0+255),b
 16724  001EB2  D40B               	goto	l10550
 16725                           
 16726                           ; BSR set to: 1
 16727                           ;main.c: 532: }
 16728                           ;main.c: 533: }
 16729                           ;main.c: 536: if (0x03 == vscp_node_state) {
 16730                           
 16731                           ; BSR set to: 1
 16732  001EB4  0100               	movlb	0	; () banked
 16733  001EB6  51D3               	movf	_vscp_node_state& (0+255),w,b
 16734  001EB8  0A03               	xorlw	3
 16735  001EBA  A4D8               	btfss	status,2,c
 16736  001EBC  D326               	goto	l224
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;main.c: 539: for (i = 0; i < 6; i++) {
 16740  001EBE  0E00               	movlw	0
 16741  001EC0  0101               	movlb	1	; () banked
 16742  001EC2  6FA3               	movwf	doWork@i& (0+255),b
 16743  001EC4  D31E               	goto	L177
 16744  001EC6                     l10618:
 16745                           
 16746                           ; BSR set to: 1
 16747                           ;main.c: 542: if (low_alarm & 1 << i) {
 16748  001EC6  C1A3  F0B4         	movff	doWork@i,??_doWork
 16749  001ECA  0E01               	movlw	1
 16750  001ECC  0100               	movlb	0	; () banked
 16751  001ECE  6FB5               	movwf	(??_doWork+1)& (0+255),b
 16752  001ED0  0100               	movlb	0	; () banked
 16753  001ED2  2BB4               	incf	??_doWork& (0+255),f,b
 16754  001ED4  D003               	goto	u11444
 16755  001ED6                     u11445:
 16756  001ED6  0100               	movlb	0	; () banked
 16757  001ED8  90D8               	bcf	status,0,c
 16758  001EDA  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16759  001EDC                     u11444:
 16760  001EDC  0100               	movlb	0	; () banked
 16761  001EDE  2FB4               	decfsz	??_doWork& (0+255),f,b
 16762  001EE0  D7FA               	goto	u11445
 16763  001EE2  0100               	movlb	0	; () banked
 16764  001EE4  51B5               	movf	(??_doWork+1)& (0+255),w,b
 16765  001EE6  0100               	movlb	0	; () banked
 16766  001EE8  15CD               	andwf	_low_alarm& (0+255),w,b
 16767  001EEA  0900               	iorlw	0
 16768  001EEC  B4D8               	btfsc	status,2,c
 16769  001EEE  D07B               	goto	l10626
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;main.c: 545: setpoint =
 16773                           ;main.c: 546: (int16_t) (readEEPROM(2 * i + 0x5B)*256 +
 16774                           ;main.c: 547: readEEPROM(2 * i + 0x5C) +
 16775                           ;main.c: 548: readEEPROM(i + 0x97)*100);
 16776  001EF0  0E97               	movlw	151
 16777  001EF2  0101               	movlb	1	; () banked
 16778  001EF4  25A3               	addwf	doWork@i& (0+255),w,b
 16779  001EF6  6E1E               	movwf	readEEPROM@address,c
 16780  001EF8  6A1F               	clrf	readEEPROM@address+1,c
 16781  001EFA  0E00               	movlw	0
 16782  001EFC  221F               	addwfc	readEEPROM@address+1,f,c
 16783  001EFE  EC6F  F03A         	call	_readEEPROM	;wreg free
 16784  001F02  0100               	movlb	0	; () banked
 16785  001F04  6FB4               	movwf	??_doWork& (0+255),b
 16786  001F06  0100               	movlb	0	; () banked
 16787  001F08  51B4               	movf	??_doWork& (0+255),w,b
 16788  001F0A  0D64               	mullw	100
 16789  001F0C  0101               	movlb	1	; () banked
 16790  001F0E  51A3               	movf	doWork@i& (0+255),w,b
 16791  001F10  0100               	movlb	0	; () banked
 16792  001F12  6FB5               	movwf	(??_doWork+1)& (0+255),b
 16793  001F14  6BB6               	clrf	(??_doWork+2)& (0+255),b
 16794  001F16  90D8               	bcf	status,0,c
 16795  001F18  0100               	movlb	0	; () banked
 16796  001F1A  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16797  001F1C  37B6               	rlcf	(??_doWork+2)& (0+255),f,b
 16798  001F1E  0E5B               	movlw	91
 16799  001F20  0100               	movlb	0	; () banked
 16800  001F22  25B5               	addwf	(??_doWork+1)& (0+255),w,b
 16801  001F24  6E1E               	movwf	readEEPROM@address,c
 16802  001F26  0E00               	movlw	0
 16803  001F28  0100               	movlb	0	; () banked
 16804  001F2A  21B6               	addwfc	(??_doWork+2)& (0+255),w,b
 16805  001F2C  6E1F               	movwf	readEEPROM@address+1,c
 16806  001F2E  EC6F  F03A         	call	_readEEPROM	;wreg free
 16807  001F32  0100               	movlb	0	; () banked
 16808  001F34  6FB7               	movwf	(??_doWork+3)& (0+255),b
 16809  001F36  0100               	movlb	0	; () banked
 16810  001F38  51B7               	movf	(??_doWork+3)& (0+255),w,b
 16811  001F3A  0100               	movlb	0	; () banked
 16812  001F3C  6FB9               	movwf	(??_doWork+5)& (0+255),b
 16813  001F3E  6BB8               	clrf	(??_doWork+4)& (0+255),b
 16814  001F40  0101               	movlb	1	; () banked
 16815  001F42  51A3               	movf	doWork@i& (0+255),w,b
 16816  001F44  0100               	movlb	0	; () banked
 16817  001F46  6FBA               	movwf	(??_doWork+6)& (0+255),b
 16818  001F48  6BBB               	clrf	(??_doWork+7)& (0+255),b
 16819  001F4A  90D8               	bcf	status,0,c
 16820  001F4C  0100               	movlb	0	; () banked
 16821  001F4E  37BA               	rlcf	(??_doWork+6)& (0+255),f,b
 16822  001F50  37BB               	rlcf	(??_doWork+7)& (0+255),f,b
 16823  001F52  0E5C               	movlw	92
 16824  001F54  0100               	movlb	0	; () banked
 16825  001F56  25BA               	addwf	(??_doWork+6)& (0+255),w,b
 16826  001F58  6E1E               	movwf	readEEPROM@address,c
 16827  001F5A  0E00               	movlw	0
 16828  001F5C  0100               	movlb	0	; () banked
 16829  001F5E  21BB               	addwfc	(??_doWork+7)& (0+255),w,b
 16830  001F60  6E1F               	movwf	readEEPROM@address+1,c
 16831  001F62  EC6F  F03A         	call	_readEEPROM	;wreg free
 16832  001F66  0100               	movlb	0	; () banked
 16833  001F68  6FBC               	movwf	(??_doWork+8)& (0+255),b
 16834  001F6A  0100               	movlb	0	; () banked
 16835  001F6C  51BC               	movf	(??_doWork+8)& (0+255),w,b
 16836  001F6E  0100               	movlb	0	; () banked
 16837  001F70  27B8               	addwf	(??_doWork+4)& (0+255),f,b
 16838  001F72  0E00               	movlw	0
 16839  001F74  23B9               	addwfc	(??_doWork+5)& (0+255),f,b
 16840  001F76  50F3               	movf	prodl,w,c
 16841  001F78  0100               	movlb	0	; () banked
 16842  001F7A  25B8               	addwf	(??_doWork+4)& (0+255),w,b
 16843  001F7C  0101               	movlb	1	; () banked
 16844  001F7E  6F9D               	movwf	doWork@setpoint& (0+255),b
 16845  001F80  50F4               	movf	prodh,w,c
 16846  001F82  0100               	movlb	0	; () banked
 16847  001F84  21B9               	addwfc	(??_doWork+5)& (0+255),w,b
 16848  001F86  0101               	movlb	1	; () banked
 16849  001F88  6F9E               	movwf	(doWork@setpoint+1)& (0+255),b
 16850                           
 16851                           ; BSR set to: 1
 16852                           ;main.c: 553: if (current_temp[ i ] > setpoint) {
 16853  001F8A  0101               	movlb	1	; () banked
 16854  001F8C  51A3               	movf	doWork@i& (0+255),w,b
 16855  001F8E  0D02               	mullw	2
 16856  001F90  0101               	movlb	1	; () banked
 16857  001F92  0E00               	movlw	low _current_temp
 16858  001F94  24F3               	addwf	prodl,w,c
 16859  001F96  6ED9               	movwf	fsr2l,c
 16860  001F98  0101               	movlb	1	; () banked
 16861  001F9A  0E01               	movlw	high _current_temp
 16862  001F9C  20F4               	addwfc	prodh,w,c
 16863  001F9E  6EDA               	movwf	fsr2h,c
 16864  001FA0  CFDE F0B4          	movff	postinc2,??_doWork
 16865  001FA4  CFDD F0B5          	movff	postdec2,??_doWork+1
 16866  001FA8  0101               	movlb	1	; () banked
 16867  001FAA  519E               	movf	(doWork@setpoint+1)& (0+255),w,b
 16868  001FAC  0A80               	xorlw	128
 16869  001FAE  0100               	movlb	0	; () banked
 16870  001FB0  6FB6               	movwf	(??_doWork+2)& (0+255),b
 16871  001FB2  0100               	movlb	0	; () banked
 16872  001FB4  51B4               	movf	??_doWork& (0+255),w,b
 16873  001FB6  0101               	movlb	1	; () banked
 16874  001FB8  5D9D               	subwf	doWork@setpoint& (0+255),w,b
 16875  001FBA  0100               	movlb	0	; () banked
 16876  001FBC  51B5               	movf	(??_doWork+1)& (0+255),w,b
 16877  001FBE  0A80               	xorlw	128
 16878  001FC0  0100               	movlb	0	; () banked
 16879  001FC2  59B6               	subwfb	(??_doWork+2)& (0+255),w,b
 16880  001FC4  B0D8               	btfsc	status,0,c
 16881  001FC6  D10B               	goto	l208
 16882                           
 16883                           ; BSR set to: 0
 16884                           ;main.c: 556: low_alarm &= ~(1 << i);
 16885  001FC8  C1A3  F0B4         	movff	doWork@i,??_doWork
 16886  001FCC  0E01               	movlw	1
 16887  001FCE  0100               	movlb	0	; () banked
 16888  001FD0  6FB5               	movwf	(??_doWork+1)& (0+255),b
 16889  001FD2  0100               	movlb	0	; () banked
 16890  001FD4  2BB4               	incf	??_doWork& (0+255),f,b
 16891  001FD6  D003               	goto	u11474
 16892  001FD8                     u11475:
 16893  001FD8  0100               	movlb	0	; () banked
 16894  001FDA  90D8               	bcf	status,0,c
 16895  001FDC  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16896  001FDE                     u11474:
 16897  001FDE  0100               	movlb	0	; () banked
 16898  001FE0  2FB4               	decfsz	??_doWork& (0+255),f,b
 16899  001FE2  D7FA               	goto	u11475
 16900  001FE4  D0F7               	goto	L171
 16901  001FE6                     l10626:
 16902                           
 16903                           ; BSR set to: 0
 16904                           ;main.c: 561: else {
 16905                           ;main.c: 565: setpoint =
 16906                           ;main.c: 566: (int16_t) (readEEPROM(2 * i + 0x5B)*256 +
 16907                           ;main.c: 567: readEEPROM(2 * i + 0x5C));
 16908  001FE6  0101               	movlb	1	; () banked
 16909  001FE8  51A3               	movf	doWork@i& (0+255),w,b
 16910  001FEA  0100               	movlb	0	; () banked
 16911  001FEC  6FB4               	movwf	??_doWork& (0+255),b
 16912  001FEE  6BB5               	clrf	(??_doWork+1)& (0+255),b
 16913  001FF0  90D8               	bcf	status,0,c
 16914  001FF2  0100               	movlb	0	; () banked
 16915  001FF4  37B4               	rlcf	??_doWork& (0+255),f,b
 16916  001FF6  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 16917  001FF8  0E5C               	movlw	92
 16918  001FFA  0100               	movlb	0	; () banked
 16919  001FFC  25B4               	addwf	??_doWork& (0+255),w,b
 16920  001FFE  6E1E               	movwf	readEEPROM@address,c
 16921  002000  0E00               	movlw	0
 16922  002002  0100               	movlb	0	; () banked
 16923  002004  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 16924  002006  6E1F               	movwf	readEEPROM@address+1,c
 16925  002008  EC6F  F03A         	call	_readEEPROM	;wreg free
 16926  00200C  0100               	movlb	0	; () banked
 16927  00200E  6FB6               	movwf	(??_doWork+2)& (0+255),b
 16928  002010  0101               	movlb	1	; () banked
 16929  002012  51A3               	movf	doWork@i& (0+255),w,b
 16930  002014  0100               	movlb	0	; () banked
 16931  002016  6FB7               	movwf	(??_doWork+3)& (0+255),b
 16932  002018  6BB8               	clrf	(??_doWork+4)& (0+255),b
 16933  00201A  90D8               	bcf	status,0,c
 16934  00201C  0100               	movlb	0	; () banked
 16935  00201E  37B7               	rlcf	(??_doWork+3)& (0+255),f,b
 16936  002020  37B8               	rlcf	(??_doWork+4)& (0+255),f,b
 16937  002022  0E5B               	movlw	91
 16938  002024  0100               	movlb	0	; () banked
 16939  002026  25B7               	addwf	(??_doWork+3)& (0+255),w,b
 16940  002028  6E1E               	movwf	readEEPROM@address,c
 16941  00202A  0E00               	movlw	0
 16942  00202C  0100               	movlb	0	; () banked
 16943  00202E  21B8               	addwfc	(??_doWork+4)& (0+255),w,b
 16944  002030  6E1F               	movwf	readEEPROM@address+1,c
 16945  002032  EC6F  F03A         	call	_readEEPROM	;wreg free
 16946  002036  0100               	movlb	0	; () banked
 16947  002038  6FB9               	movwf	(??_doWork+5)& (0+255),b
 16948  00203A  0100               	movlb	0	; () banked
 16949  00203C  51B9               	movf	(??_doWork+5)& (0+255),w,b
 16950  00203E  0100               	movlb	0	; () banked
 16951  002040  6FBB               	movwf	(??_doWork+7)& (0+255),b
 16952  002042  6BBA               	clrf	(??_doWork+6)& (0+255),b
 16953  002044  0100               	movlb	0	; () banked
 16954  002046  51B6               	movf	(??_doWork+2)& (0+255),w,b
 16955  002048  0100               	movlb	0	; () banked
 16956  00204A  25BA               	addwf	(??_doWork+6)& (0+255),w,b
 16957  00204C  0101               	movlb	1	; () banked
 16958  00204E  6F9D               	movwf	doWork@setpoint& (0+255),b
 16959  002050  0100               	movlb	0	; () banked
 16960  002052  0E00               	movlw	0
 16961  002054  0100               	movlb	0	; () banked
 16962  002056  21BB               	addwfc	(??_doWork+7)& (0+255),w,b
 16963  002058  0101               	movlb	1	; () banked
 16964  00205A  6F9E               	movwf	(doWork@setpoint+1)& (0+255),b
 16965                           
 16966                           ; BSR set to: 1
 16967                           ;main.c: 569: if (current_temp[ i ] < setpoint) {
 16968  00205C  0101               	movlb	1	; () banked
 16969  00205E  51A3               	movf	doWork@i& (0+255),w,b
 16970  002060  0D02               	mullw	2
 16971  002062  0101               	movlb	1	; () banked
 16972  002064  0E00               	movlw	low _current_temp
 16973  002066  24F3               	addwf	prodl,w,c
 16974  002068  6ED9               	movwf	fsr2l,c
 16975  00206A  0101               	movlb	1	; () banked
 16976  00206C  0E01               	movlw	high _current_temp
 16977  00206E  20F4               	addwfc	prodh,w,c
 16978  002070  6EDA               	movwf	fsr2h,c
 16979  002072  CFDE F0B4          	movff	postinc2,??_doWork
 16980  002076  CFDD F0B5          	movff	postdec2,??_doWork+1
 16981  00207A  0100               	movlb	0	; () banked
 16982  00207C  51B5               	movf	(??_doWork+1)& (0+255),w,b
 16983  00207E  0A80               	xorlw	128
 16984  002080  0100               	movlb	0	; () banked
 16985  002082  6FB6               	movwf	(??_doWork+2)& (0+255),b
 16986  002084  0101               	movlb	1	; () banked
 16987  002086  519D               	movf	doWork@setpoint& (0+255),w,b
 16988  002088  0100               	movlb	0	; () banked
 16989  00208A  5DB4               	subwf	??_doWork& (0+255),w,b
 16990  00208C  0101               	movlb	1	; () banked
 16991  00208E  519E               	movf	(doWork@setpoint+1)& (0+255),w,b
 16992  002090  0A80               	xorlw	128
 16993  002092  0100               	movlb	0	; () banked
 16994  002094  59B6               	subwfb	(??_doWork+2)& (0+255),w,b
 16995  002096  B0D8               	btfsc	status,0,c
 16996  002098  D0A2               	goto	l208
 16997                           
 16998                           ; BSR set to: 0
 16999                           ;main.c: 572: low_alarm |= (1 << i);
 17000  00209A  C1A3  F0B4         	movff	doWork@i,??_doWork
 17001  00209E  0E01               	movlw	1
 17002  0020A0  0100               	movlb	0	; () banked
 17003  0020A2  6FB5               	movwf	(??_doWork+1)& (0+255),b
 17004  0020A4  0100               	movlb	0	; () banked
 17005  0020A6  2BB4               	incf	??_doWork& (0+255),f,b
 17006  0020A8  D003               	goto	u11494
 17007  0020AA                     u11495:
 17008  0020AA  0100               	movlb	0	; () banked
 17009  0020AC  90D8               	bcf	status,0,c
 17010  0020AE  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17011  0020B0                     u11494:
 17012  0020B0  0100               	movlb	0	; () banked
 17013  0020B2  2FB4               	decfsz	??_doWork& (0+255),f,b
 17014  0020B4  D7FA               	goto	u11495
 17015  0020B6  0100               	movlb	0	; () banked
 17016  0020B8  51B5               	movf	(??_doWork+1)& (0+255),w,b
 17017  0020BA  0100               	movlb	0	; () banked
 17018  0020BC  13CD               	iorwf	_low_alarm& (0+255),f,b
 17019                           
 17020                           ; BSR set to: 0
 17021                           ;main.c: 577: vscp_alarmstatus |= 1;
 17022  0020BE  0100               	movlb	0	; () banked
 17023  0020C0  81CF               	bsf	_vscp_alarmstatus& (0+255),0,b
 17024                           
 17025                           ; BSR set to: 0
 17026                           ;main.c: 580: if (readEEPROM(i + 0x43) & (1<<3)) {
 17027  0020C2  0E43               	movlw	67
 17028  0020C4  0101               	movlb	1	; () banked
 17029  0020C6  25A3               	addwf	doWork@i& (0+255),w,b
 17030  0020C8  6E1E               	movwf	readEEPROM@address,c
 17031  0020CA  6A1F               	clrf	readEEPROM@address+1,c
 17032  0020CC  0E00               	movlw	0
 17033  0020CE  221F               	addwfc	readEEPROM@address+1,f,c
 17034  0020D0  EC6F  F03A         	call	_readEEPROM	;wreg free
 17035  0020D4  0100               	movlb	0	; () banked
 17036  0020D6  6FB4               	movwf	??_doWork& (0+255),b
 17037  0020D8  0100               	movlb	0	; () banked
 17038  0020DA  A7B4               	btfss	??_doWork& (0+255),3,b
 17039  0020DC  D080               	goto	l208
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;main.c: 582: vscp_omsg.vscp_class = 1;
 17043  0020DE  0E00               	movlw	0
 17044  0020E0  0100               	movlb	0	; () banked
 17045  0020E2  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 17046  0020E4  0E01               	movlw	1
 17047  0020E6  0100               	movlb	0	; () banked
 17048  0020E8  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 17049                           
 17050                           ;main.c: 583: vscp_omsg.vscp_type = 2;
 17051  0020EA  0E02               	movlw	2
 17052  0020EC  0100               	movlb	0	; () banked
 17053  0020EE  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 17054                           
 17055                           ;main.c: 584: vscp_omsg.priority = 0x00;
 17056  0020F0  0E00               	movlw	0
 17057  0020F2  0100               	movlb	0	; () banked
 17058  0020F4  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 17059                           
 17060                           ;main.c: 585: vscp_omsg.flags = 0x80 + 3;
 17061  0020F6  0E83               	movlw	131
 17062  0020F8  0100               	movlb	0	; () banked
 17063  0020FA  6FD4               	movwf	_vscp_omsg& (0+255),b
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;main.c: 588: if (readEEPROM(i + 0x43) & (1<<5)) {
 17067  0020FC  0E43               	movlw	67
 17068  0020FE  0101               	movlb	1	; () banked
 17069  002100  25A3               	addwf	doWork@i& (0+255),w,b
 17070  002102  6E1E               	movwf	readEEPROM@address,c
 17071  002104  6A1F               	clrf	readEEPROM@address+1,c
 17072  002106  0E00               	movlw	0
 17073  002108  221F               	addwfc	readEEPROM@address+1,f,c
 17074  00210A  EC6F  F03A         	call	_readEEPROM	;wreg free
 17075  00210E  0100               	movlb	0	; () banked
 17076  002110  6FB4               	movwf	??_doWork& (0+255),b
 17077  002112  0100               	movlb	0	; () banked
 17078  002114  ABB4               	btfss	??_doWork& (0+255),5,b
 17079  002116  D01F               	goto	l10646
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;main.c: 590: if (readEEPROM(i + 0x43) & (1<<6)) {
 17083  002118  0E43               	movlw	67
 17084  00211A  0101               	movlb	1	; () banked
 17085  00211C  25A3               	addwf	doWork@i& (0+255),w,b
 17086  00211E  6E1E               	movwf	readEEPROM@address,c
 17087  002120  6A1F               	clrf	readEEPROM@address+1,c
 17088  002122  0E00               	movlw	0
 17089  002124  221F               	addwfc	readEEPROM@address+1,f,c
 17090  002126  EC6F  F03A         	call	_readEEPROM	;wreg free
 17091  00212A  0100               	movlb	0	; () banked
 17092  00212C  6FB4               	movwf	??_doWork& (0+255),b
 17093  00212E  0100               	movlb	0	; () banked
 17094  002130  ADB4               	btfss	??_doWork& (0+255),6,b
 17095  002132  D008               	goto	l10644
 17096                           
 17097                           ; BSR set to: 0
 17098                           ;main.c: 591: vscp_omsg.vscp_class = 30;
 17099  002134  0E00               	movlw	0
 17100  002136  0100               	movlb	0	; () banked
 17101  002138  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 17102  00213A  0E1E               	movlw	30
 17103  00213C  0100               	movlb	0	; () banked
 17104  00213E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 17105                           
 17106                           ;main.c: 592: vscp_omsg.vscp_type = 5;
 17107  002140  0E05               	movlw	5
 17108  002142  D007               	goto	L172
 17109  002144                     l10644:
 17110                           
 17111                           ; BSR set to: 0
 17112                           ;main.c: 594: vscp_omsg.vscp_class = 30;
 17113  002144  0E00               	movlw	0
 17114  002146  0100               	movlb	0	; () banked
 17115  002148  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 17116  00214A  0E1E               	movlw	30
 17117  00214C  0100               	movlb	0	; () banked
 17118  00214E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 17119                           
 17120                           ;main.c: 595: vscp_omsg.vscp_type = 6;
 17121  002150  0E06               	movlw	6
 17122  002152                     L172:
 17123  002152  0100               	movlb	0	; () banked
 17124  002154  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 17125  002156                     l10646:
 17126                           
 17127                           ; BSR set to: 0
 17128                           ;main.c: 596: }
 17129                           ;main.c: 598: }
 17130                           ;main.c: 600: vscp_omsg.data[ 0 ] = i;
 17131  002156  C1A3  F0D9         	movff	doWork@i,_vscp_omsg+5
 17132                           
 17133                           ; BSR set to: 0
 17134                           ;main.c: 601: vscp_omsg.data[ 1 ] =
 17135                           ;main.c: 602: readEEPROM(2 * i + 0x73);
 17136  00215A  0101               	movlb	1	; () banked
 17137  00215C  51A3               	movf	doWork@i& (0+255),w,b
 17138  00215E  0100               	movlb	0	; () banked
 17139  002160  6FB4               	movwf	??_doWork& (0+255),b
 17140  002162  6BB5               	clrf	(??_doWork+1)& (0+255),b
 17141  002164  90D8               	bcf	status,0,c
 17142  002166  0100               	movlb	0	; () banked
 17143  002168  37B4               	rlcf	??_doWork& (0+255),f,b
 17144  00216A  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17145  00216C  0E73               	movlw	115
 17146  00216E  0100               	movlb	0	; () banked
 17147  002170  25B4               	addwf	??_doWork& (0+255),w,b
 17148  002172  6E1E               	movwf	readEEPROM@address,c
 17149  002174  0E00               	movlw	0
 17150  002176  0100               	movlb	0	; () banked
 17151  002178  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 17152  00217A  6E1F               	movwf	readEEPROM@address+1,c
 17153  00217C  EC6F  F03A         	call	_readEEPROM	;wreg free
 17154  002180  0100               	movlb	0	; () banked
 17155  002182  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
 17156                           
 17157                           ; BSR set to: 0
 17158                           ;main.c: 603: vscp_omsg.data[ 2 ] =
 17159                           ;main.c: 604: readEEPROM(2 * i + 0x74);
 17160  002184  0101               	movlb	1	; () banked
 17161  002186  51A3               	movf	doWork@i& (0+255),w,b
 17162  002188  0100               	movlb	0	; () banked
 17163  00218A  6FB4               	movwf	??_doWork& (0+255),b
 17164  00218C  6BB5               	clrf	(??_doWork+1)& (0+255),b
 17165  00218E  90D8               	bcf	status,0,c
 17166  002190  0100               	movlb	0	; () banked
 17167  002192  37B4               	rlcf	??_doWork& (0+255),f,b
 17168  002194  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17169  002196  0E74               	movlw	116
 17170  002198  0100               	movlb	0	; () banked
 17171  00219A  25B4               	addwf	??_doWork& (0+255),w,b
 17172  00219C  6E1E               	movwf	readEEPROM@address,c
 17173  00219E  0E00               	movlw	0
 17174  0021A0  0100               	movlb	0	; () banked
 17175  0021A2  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 17176  0021A4  6E1F               	movwf	readEEPROM@address+1,c
 17177  0021A6  EC6F  F03A         	call	_readEEPROM	;wreg free
 17178  0021AA  0100               	movlb	0	; () banked
 17179  0021AC  6FDB               	movwf	(_vscp_omsg+7)& (0+255),b
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;main.c: 607: if (!vscp_sendEvent()) {
 17183  0021AE  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 17184  0021B2  0900               	iorlw	0
 17185  0021B4  A4D8               	btfss	status,2,c
 17186  0021B6  D013               	goto	l208
 17187                           
 17188                           ;main.c: 610: low_alarm &= ~(1 << i);
 17189  0021B8  C1A3  F0B4         	movff	doWork@i,??_doWork
 17190  0021BC  0E01               	movlw	1
 17191  0021BE  0100               	movlb	0	; () banked
 17192  0021C0  6FB5               	movwf	(??_doWork+1)& (0+255),b
 17193  0021C2  0100               	movlb	0	; () banked
 17194  0021C4  2BB4               	incf	??_doWork& (0+255),f,b
 17195  0021C6  D003               	goto	u11544
 17196  0021C8                     u11545:
 17197  0021C8  0100               	movlb	0	; () banked
 17198  0021CA  90D8               	bcf	status,0,c
 17199  0021CC  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17200  0021CE                     u11544:
 17201  0021CE  0100               	movlb	0	; () banked
 17202  0021D0  2FB4               	decfsz	??_doWork& (0+255),f,b
 17203  0021D2  D7FA               	goto	u11545
 17204  0021D4                     L171:
 17205  0021D4  0100               	movlb	0	; () banked
 17206  0021D6  51B5               	movf	(??_doWork+1)& (0+255),w,b
 17207  0021D8  0AFF               	xorlw	255
 17208  0021DA  0100               	movlb	0	; () banked
 17209  0021DC  17CD               	andwf	_low_alarm& (0+255),f,b
 17210  0021DE                     l208:
 17211                           
 17212                           ;main.c: 611: }
 17213                           ;main.c: 612: }
 17214                           ;main.c: 613: }
 17215                           ;main.c: 614: }
 17216                           ;main.c: 617: if (high_alarm & (1 << i)) {
 17217  0021DE  C1A3  F0B4         	movff	doWork@i,??_doWork
 17218  0021E2  0E01               	movlw	1
 17219  0021E4  0100               	movlb	0	; () banked
 17220  0021E6  6FB5               	movwf	(??_doWork+1)& (0+255),b
 17221  0021E8  0100               	movlb	0	; () banked
 17222  0021EA  2BB4               	incf	??_doWork& (0+255),f,b
 17223  0021EC  D003               	goto	u11554
 17224  0021EE                     u11555:
 17225  0021EE  0100               	movlb	0	; () banked
 17226  0021F0  90D8               	bcf	status,0,c
 17227  0021F2  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17228  0021F4                     u11554:
 17229  0021F4  0100               	movlb	0	; () banked
 17230  0021F6  2FB4               	decfsz	??_doWork& (0+255),f,b
 17231  0021F8  D7FA               	goto	u11555
 17232  0021FA  0100               	movlb	0	; () banked
 17233  0021FC  51B5               	movf	(??_doWork+1)& (0+255),w,b
 17234  0021FE  0100               	movlb	0	; () banked
 17235  002200  15CC               	andwf	_high_alarm& (0+255),w,b
 17236  002202  0900               	iorlw	0
 17237  002204  B4D8               	btfsc	status,2,c
 17238  002206  D07F               	goto	l10662
 17239                           
 17240                           ; BSR set to: 0
 17241                           ;main.c: 621: setpoint =
 17242                           ;main.c: 622: (int16_t) (readEEPROM(2 * i + 0x67)*256 +
 17243                           ;main.c: 623: readEEPROM(2 * i + 0x68) -
 17244                           ;main.c: 624: readEEPROM(i + 0x97)*100);
 17245  002208  0E97               	movlw	151
 17246  00220A  0101               	movlb	1	; () banked
 17247  00220C  25A3               	addwf	doWork@i& (0+255),w,b
 17248  00220E  6E1E               	movwf	readEEPROM@address,c
 17249  002210  6A1F               	clrf	readEEPROM@address+1,c
 17250  002212  0E00               	movlw	0
 17251  002214  221F               	addwfc	readEEPROM@address+1,f,c
 17252  002216  EC6F  F03A         	call	_readEEPROM	;wreg free
 17253  00221A  0100               	movlb	0	; () banked
 17254  00221C  6FB4               	movwf	??_doWork& (0+255),b
 17255  00221E  0100               	movlb	0	; () banked
 17256  002220  51B4               	movf	??_doWork& (0+255),w,b
 17257  002222  0D64               	mullw	100
 17258  002224  1EF3               	comf	prodl,f,c
 17259  002226  1EF4               	comf	prodh,f,c
 17260  002228  4AF3               	infsnz	prodl,f,c
 17261  00222A  2AF4               	incf	prodh,f,c
 17262  00222C  0101               	movlb	1	; () banked
 17263  00222E  51A3               	movf	doWork@i& (0+255),w,b
 17264  002230  0100               	movlb	0	; () banked
 17265  002232  6FB5               	movwf	(??_doWork+1)& (0+255),b
 17266  002234  6BB6               	clrf	(??_doWork+2)& (0+255),b
 17267  002236  90D8               	bcf	status,0,c
 17268  002238  0100               	movlb	0	; () banked
 17269  00223A  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17270  00223C  37B6               	rlcf	(??_doWork+2)& (0+255),f,b
 17271  00223E  0E67               	movlw	103
 17272  002240  0100               	movlb	0	; () banked
 17273  002242  25B5               	addwf	(??_doWork+1)& (0+255),w,b
 17274  002244  6E1E               	movwf	readEEPROM@address,c
 17275  002246  0E00               	movlw	0
 17276  002248  0100               	movlb	0	; () banked
 17277  00224A  21B6               	addwfc	(??_doWork+2)& (0+255),w,b
 17278  00224C  6E1F               	movwf	readEEPROM@address+1,c
 17279  00224E  EC6F  F03A         	call	_readEEPROM	;wreg free
 17280  002252  0100               	movlb	0	; () banked
 17281  002254  6FB7               	movwf	(??_doWork+3)& (0+255),b
 17282  002256  0100               	movlb	0	; () banked
 17283  002258  51B7               	movf	(??_doWork+3)& (0+255),w,b
 17284  00225A  0100               	movlb	0	; () banked
 17285  00225C  6FB9               	movwf	(??_doWork+5)& (0+255),b
 17286  00225E  6BB8               	clrf	(??_doWork+4)& (0+255),b
 17287  002260  0101               	movlb	1	; () banked
 17288  002262  51A3               	movf	doWork@i& (0+255),w,b
 17289  002264  0100               	movlb	0	; () banked
 17290  002266  6FBA               	movwf	(??_doWork+6)& (0+255),b
 17291  002268  6BBB               	clrf	(??_doWork+7)& (0+255),b
 17292  00226A  90D8               	bcf	status,0,c
 17293  00226C  0100               	movlb	0	; () banked
 17294  00226E  37BA               	rlcf	(??_doWork+6)& (0+255),f,b
 17295  002270  37BB               	rlcf	(??_doWork+7)& (0+255),f,b
 17296  002272  0E68               	movlw	104
 17297  002274  0100               	movlb	0	; () banked
 17298  002276  25BA               	addwf	(??_doWork+6)& (0+255),w,b
 17299  002278  6E1E               	movwf	readEEPROM@address,c
 17300  00227A  0E00               	movlw	0
 17301  00227C  0100               	movlb	0	; () banked
 17302  00227E  21BB               	addwfc	(??_doWork+7)& (0+255),w,b
 17303  002280  6E1F               	movwf	readEEPROM@address+1,c
 17304  002282  EC6F  F03A         	call	_readEEPROM	;wreg free
 17305  002286  0100               	movlb	0	; () banked
 17306  002288  6FBC               	movwf	(??_doWork+8)& (0+255),b
 17307  00228A  0100               	movlb	0	; () banked
 17308  00228C  51BC               	movf	(??_doWork+8)& (0+255),w,b
 17309  00228E  0100               	movlb	0	; () banked
 17310  002290  27B8               	addwf	(??_doWork+4)& (0+255),f,b
 17311  002292  0E00               	movlw	0
 17312  002294  23B9               	addwfc	(??_doWork+5)& (0+255),f,b
 17313  002296  50F3               	movf	prodl,w,c
 17314  002298  0100               	movlb	0	; () banked
 17315  00229A  25B8               	addwf	(??_doWork+4)& (0+255),w,b
 17316  00229C  0101               	movlb	1	; () banked
 17317  00229E  6F9D               	movwf	doWork@setpoint& (0+255),b
 17318  0022A0  50F4               	movf	prodh,w,c
 17319  0022A2  0100               	movlb	0	; () banked
 17320  0022A4  21B9               	addwfc	(??_doWork+5)& (0+255),w,b
 17321  0022A6  0101               	movlb	1	; () banked
 17322  0022A8  6F9E               	movwf	(doWork@setpoint+1)& (0+255),b
 17323                           
 17324                           ; BSR set to: 1
 17325                           ;main.c: 627: if (current_temp[ i ] < setpoint) {
 17326  0022AA  0101               	movlb	1	; () banked
 17327  0022AC  51A3               	movf	doWork@i& (0+255),w,b
 17328  0022AE  0D02               	mullw	2
 17329  0022B0  0101               	movlb	1	; () banked
 17330  0022B2  0E00               	movlw	low _current_temp
 17331  0022B4  24F3               	addwf	prodl,w,c
 17332  0022B6  6ED9               	movwf	fsr2l,c
 17333  0022B8  0101               	movlb	1	; () banked
 17334  0022BA  0E01               	movlw	high _current_temp
 17335  0022BC  20F4               	addwfc	prodh,w,c
 17336  0022BE  6EDA               	movwf	fsr2h,c
 17337  0022C0  CFDE F0B4          	movff	postinc2,??_doWork
 17338  0022C4  CFDD F0B5          	movff	postdec2,??_doWork+1
 17339  0022C8  0100               	movlb	0	; () banked
 17340  0022CA  51B5               	movf	(??_doWork+1)& (0+255),w,b
 17341  0022CC  0A80               	xorlw	128
 17342  0022CE  0100               	movlb	0	; () banked
 17343  0022D0  6FB6               	movwf	(??_doWork+2)& (0+255),b
 17344  0022D2  0101               	movlb	1	; () banked
 17345  0022D4  519D               	movf	doWork@setpoint& (0+255),w,b
 17346  0022D6  0100               	movlb	0	; () banked
 17347  0022D8  5DB4               	subwf	??_doWork& (0+255),w,b
 17348  0022DA  0101               	movlb	1	; () banked
 17349  0022DC  519E               	movf	(doWork@setpoint+1)& (0+255),w,b
 17350  0022DE  0A80               	xorlw	128
 17351  0022E0  0100               	movlb	0	; () banked
 17352  0022E2  59B6               	subwfb	(??_doWork+2)& (0+255),w,b
 17353  0022E4  B0D8               	btfsc	status,0,c
 17354  0022E6  D10B               	goto	l10692
 17355                           
 17356                           ; BSR set to: 0
 17357                           ;main.c: 630: high_alarm &= ~(1 << i);
 17358  0022E8  C1A3  F0B4         	movff	doWork@i,??_doWork
 17359  0022EC  0E01               	movlw	1
 17360  0022EE  0100               	movlb	0	; () banked
 17361  0022F0  6FB5               	movwf	(??_doWork+1)& (0+255),b
 17362  0022F2  0100               	movlb	0	; () banked
 17363  0022F4  2BB4               	incf	??_doWork& (0+255),f,b
 17364  0022F6  D003               	goto	u11584
 17365  0022F8                     u11585:
 17366  0022F8  0100               	movlb	0	; () banked
 17367  0022FA  90D8               	bcf	status,0,c
 17368  0022FC  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17369  0022FE                     u11584:
 17370  0022FE  0100               	movlb	0	; () banked
 17371  002300  2FB4               	decfsz	??_doWork& (0+255),f,b
 17372  002302  D7FA               	goto	u11585
 17373  002304  D0F7               	goto	L173
 17374  002306                     l10662:
 17375                           
 17376                           ; BSR set to: 0
 17377                           ;main.c: 635: else {
 17378                           ;main.c: 640: setpoint = (int16_t) (readEEPROM(2 * i + 0x67)*256 +
 17379                           ;main.c: 641: readEEPROM(2 * i + 0x68));
 17380  002306  0101               	movlb	1	; () banked
 17381  002308  51A3               	movf	doWork@i& (0+255),w,b
 17382  00230A  0100               	movlb	0	; () banked
 17383  00230C  6FB4               	movwf	??_doWork& (0+255),b
 17384  00230E  6BB5               	clrf	(??_doWork+1)& (0+255),b
 17385  002310  90D8               	bcf	status,0,c
 17386  002312  0100               	movlb	0	; () banked
 17387  002314  37B4               	rlcf	??_doWork& (0+255),f,b
 17388  002316  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17389  002318  0E68               	movlw	104
 17390  00231A  0100               	movlb	0	; () banked
 17391  00231C  25B4               	addwf	??_doWork& (0+255),w,b
 17392  00231E  6E1E               	movwf	readEEPROM@address,c
 17393  002320  0E00               	movlw	0
 17394  002322  0100               	movlb	0	; () banked
 17395  002324  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 17396  002326  6E1F               	movwf	readEEPROM@address+1,c
 17397  002328  EC6F  F03A         	call	_readEEPROM	;wreg free
 17398  00232C  0100               	movlb	0	; () banked
 17399  00232E  6FB6               	movwf	(??_doWork+2)& (0+255),b
 17400  002330  0101               	movlb	1	; () banked
 17401  002332  51A3               	movf	doWork@i& (0+255),w,b
 17402  002334  0100               	movlb	0	; () banked
 17403  002336  6FB7               	movwf	(??_doWork+3)& (0+255),b
 17404  002338  6BB8               	clrf	(??_doWork+4)& (0+255),b
 17405  00233A  90D8               	bcf	status,0,c
 17406  00233C  0100               	movlb	0	; () banked
 17407  00233E  37B7               	rlcf	(??_doWork+3)& (0+255),f,b
 17408  002340  37B8               	rlcf	(??_doWork+4)& (0+255),f,b
 17409  002342  0E67               	movlw	103
 17410  002344  0100               	movlb	0	; () banked
 17411  002346  25B7               	addwf	(??_doWork+3)& (0+255),w,b
 17412  002348  6E1E               	movwf	readEEPROM@address,c
 17413  00234A  0E00               	movlw	0
 17414  00234C  0100               	movlb	0	; () banked
 17415  00234E  21B8               	addwfc	(??_doWork+4)& (0+255),w,b
 17416  002350  6E1F               	movwf	readEEPROM@address+1,c
 17417  002352  EC6F  F03A         	call	_readEEPROM	;wreg free
 17418  002356  0100               	movlb	0	; () banked
 17419  002358  6FB9               	movwf	(??_doWork+5)& (0+255),b
 17420  00235A  0100               	movlb	0	; () banked
 17421  00235C  51B9               	movf	(??_doWork+5)& (0+255),w,b
 17422  00235E  0100               	movlb	0	; () banked
 17423  002360  6FBB               	movwf	(??_doWork+7)& (0+255),b
 17424  002362  6BBA               	clrf	(??_doWork+6)& (0+255),b
 17425  002364  0100               	movlb	0	; () banked
 17426  002366  51B6               	movf	(??_doWork+2)& (0+255),w,b
 17427  002368  0100               	movlb	0	; () banked
 17428  00236A  25BA               	addwf	(??_doWork+6)& (0+255),w,b
 17429  00236C  0101               	movlb	1	; () banked
 17430  00236E  6F9D               	movwf	doWork@setpoint& (0+255),b
 17431  002370  0100               	movlb	0	; () banked
 17432  002372  0E00               	movlw	0
 17433  002374  0100               	movlb	0	; () banked
 17434  002376  21BB               	addwfc	(??_doWork+7)& (0+255),w,b
 17435  002378  0101               	movlb	1	; () banked
 17436  00237A  6F9E               	movwf	(doWork@setpoint+1)& (0+255),b
 17437                           
 17438                           ; BSR set to: 1
 17439                           ;main.c: 643: if (current_temp[ i ] > setpoint) {
 17440  00237C  0101               	movlb	1	; () banked
 17441  00237E  51A3               	movf	doWork@i& (0+255),w,b
 17442  002380  0D02               	mullw	2
 17443  002382  0101               	movlb	1	; () banked
 17444  002384  0E00               	movlw	low _current_temp
 17445  002386  24F3               	addwf	prodl,w,c
 17446  002388  6ED9               	movwf	fsr2l,c
 17447  00238A  0101               	movlb	1	; () banked
 17448  00238C  0E01               	movlw	high _current_temp
 17449  00238E  20F4               	addwfc	prodh,w,c
 17450  002390  6EDA               	movwf	fsr2h,c
 17451  002392  CFDE F0B4          	movff	postinc2,??_doWork
 17452  002396  CFDD F0B5          	movff	postdec2,??_doWork+1
 17453  00239A  0101               	movlb	1	; () banked
 17454  00239C  519E               	movf	(doWork@setpoint+1)& (0+255),w,b
 17455  00239E  0A80               	xorlw	128
 17456  0023A0  0100               	movlb	0	; () banked
 17457  0023A2  6FB6               	movwf	(??_doWork+2)& (0+255),b
 17458  0023A4  0100               	movlb	0	; () banked
 17459  0023A6  51B4               	movf	??_doWork& (0+255),w,b
 17460  0023A8  0101               	movlb	1	; () banked
 17461  0023AA  5D9D               	subwf	doWork@setpoint& (0+255),w,b
 17462  0023AC  0100               	movlb	0	; () banked
 17463  0023AE  51B5               	movf	(??_doWork+1)& (0+255),w,b
 17464  0023B0  0A80               	xorlw	128
 17465  0023B2  0100               	movlb	0	; () banked
 17466  0023B4  59B6               	subwfb	(??_doWork+2)& (0+255),w,b
 17467  0023B6  B0D8               	btfsc	status,0,c
 17468  0023B8  D0A2               	goto	l10692
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;main.c: 646: high_alarm |= (1 << i);
 17472  0023BA  C1A3  F0B4         	movff	doWork@i,??_doWork
 17473  0023BE  0E01               	movlw	1
 17474  0023C0  0100               	movlb	0	; () banked
 17475  0023C2  6FB5               	movwf	(??_doWork+1)& (0+255),b
 17476  0023C4  0100               	movlb	0	; () banked
 17477  0023C6  2BB4               	incf	??_doWork& (0+255),f,b
 17478  0023C8  D003               	goto	u11604
 17479  0023CA                     u11605:
 17480  0023CA  0100               	movlb	0	; () banked
 17481  0023CC  90D8               	bcf	status,0,c
 17482  0023CE  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17483  0023D0                     u11604:
 17484  0023D0  0100               	movlb	0	; () banked
 17485  0023D2  2FB4               	decfsz	??_doWork& (0+255),f,b
 17486  0023D4  D7FA               	goto	u11605
 17487  0023D6  0100               	movlb	0	; () banked
 17488  0023D8  51B5               	movf	(??_doWork+1)& (0+255),w,b
 17489  0023DA  0100               	movlb	0	; () banked
 17490  0023DC  13CC               	iorwf	_high_alarm& (0+255),f,b
 17491                           
 17492                           ; BSR set to: 0
 17493                           ;main.c: 652: vscp_alarmstatus |= 2;
 17494  0023DE  0100               	movlb	0	; () banked
 17495  0023E0  83CF               	bsf	_vscp_alarmstatus& (0+255),1,b
 17496                           
 17497                           ; BSR set to: 0
 17498                           ;main.c: 655: if (readEEPROM(i + 0x43) & (1<<4)) {
 17499  0023E2  0E43               	movlw	67
 17500  0023E4  0101               	movlb	1	; () banked
 17501  0023E6  25A3               	addwf	doWork@i& (0+255),w,b
 17502  0023E8  6E1E               	movwf	readEEPROM@address,c
 17503  0023EA  6A1F               	clrf	readEEPROM@address+1,c
 17504  0023EC  0E00               	movlw	0
 17505  0023EE  221F               	addwfc	readEEPROM@address+1,f,c
 17506  0023F0  EC6F  F03A         	call	_readEEPROM	;wreg free
 17507  0023F4  0100               	movlb	0	; () banked
 17508  0023F6  6FB4               	movwf	??_doWork& (0+255),b
 17509  0023F8  0100               	movlb	0	; () banked
 17510  0023FA  A9B4               	btfss	??_doWork& (0+255),4,b
 17511  0023FC  D080               	goto	l10692
 17512                           
 17513                           ; BSR set to: 0
 17514                           ;main.c: 657: vscp_omsg.vscp_class = 1;
 17515  0023FE  0E00               	movlw	0
 17516  002400  0100               	movlb	0	; () banked
 17517  002402  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 17518  002404  0E01               	movlw	1
 17519  002406  0100               	movlb	0	; () banked
 17520  002408  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 17521                           
 17522                           ;main.c: 658: vscp_omsg.vscp_type = 2;
 17523  00240A  0E02               	movlw	2
 17524  00240C  0100               	movlb	0	; () banked
 17525  00240E  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 17526                           
 17527                           ;main.c: 659: vscp_omsg.priority = 0x00;
 17528  002410  0E00               	movlw	0
 17529  002412  0100               	movlb	0	; () banked
 17530  002414  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 17531                           
 17532                           ;main.c: 660: vscp_omsg.flags = 0x80 + 3;
 17533  002416  0E83               	movlw	131
 17534  002418  0100               	movlb	0	; () banked
 17535  00241A  6FD4               	movwf	_vscp_omsg& (0+255),b
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;main.c: 662: if (readEEPROM(i + 0x43) & (1<<5)) {
 17539  00241C  0E43               	movlw	67
 17540  00241E  0101               	movlb	1	; () banked
 17541  002420  25A3               	addwf	doWork@i& (0+255),w,b
 17542  002422  6E1E               	movwf	readEEPROM@address,c
 17543  002424  6A1F               	clrf	readEEPROM@address+1,c
 17544  002426  0E00               	movlw	0
 17545  002428  221F               	addwfc	readEEPROM@address+1,f,c
 17546  00242A  EC6F  F03A         	call	_readEEPROM	;wreg free
 17547  00242E  0100               	movlb	0	; () banked
 17548  002430  6FB4               	movwf	??_doWork& (0+255),b
 17549  002432  0100               	movlb	0	; () banked
 17550  002434  ABB4               	btfss	??_doWork& (0+255),5,b
 17551  002436  D01F               	goto	l10682
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;main.c: 663: if (readEEPROM(i + 0x43) & (1<<6)) {
 17555  002438  0E43               	movlw	67
 17556  00243A  0101               	movlb	1	; () banked
 17557  00243C  25A3               	addwf	doWork@i& (0+255),w,b
 17558  00243E  6E1E               	movwf	readEEPROM@address,c
 17559  002440  6A1F               	clrf	readEEPROM@address+1,c
 17560  002442  0E00               	movlw	0
 17561  002444  221F               	addwfc	readEEPROM@address+1,f,c
 17562  002446  EC6F  F03A         	call	_readEEPROM	;wreg free
 17563  00244A  0100               	movlb	0	; () banked
 17564  00244C  6FB4               	movwf	??_doWork& (0+255),b
 17565  00244E  0100               	movlb	0	; () banked
 17566  002450  ADB4               	btfss	??_doWork& (0+255),6,b
 17567  002452  D008               	goto	l10680
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;main.c: 664: vscp_omsg.vscp_class = 30;
 17571  002454  0E00               	movlw	0
 17572  002456  0100               	movlb	0	; () banked
 17573  002458  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 17574  00245A  0E1E               	movlw	30
 17575  00245C  0100               	movlb	0	; () banked
 17576  00245E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 17577                           
 17578                           ;main.c: 665: vscp_omsg.vscp_type = 6;
 17579  002460  0E06               	movlw	6
 17580  002462  D007               	goto	L174
 17581  002464                     l10680:
 17582                           
 17583                           ; BSR set to: 0
 17584                           ;main.c: 667: vscp_omsg.vscp_class = 30;
 17585  002464  0E00               	movlw	0
 17586  002466  0100               	movlb	0	; () banked
 17587  002468  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 17588  00246A  0E1E               	movlw	30
 17589  00246C  0100               	movlb	0	; () banked
 17590  00246E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 17591                           
 17592                           ;main.c: 668: vscp_omsg.vscp_type = 5;
 17593  002470  0E05               	movlw	5
 17594  002472                     L174:
 17595  002472  0100               	movlb	0	; () banked
 17596  002474  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 17597  002476                     l10682:
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;main.c: 669: }
 17601                           ;main.c: 670: }
 17602                           ;main.c: 672: vscp_omsg.data[ 0 ] = i;
 17603  002476  C1A3  F0D9         	movff	doWork@i,_vscp_omsg+5
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;main.c: 673: vscp_omsg.data[ 1 ] =
 17607                           ;main.c: 674: readEEPROM(2 * i +
 17608                           ;main.c: 675: 0x73);
 17609  00247A  0101               	movlb	1	; () banked
 17610  00247C  51A3               	movf	doWork@i& (0+255),w,b
 17611  00247E  0100               	movlb	0	; () banked
 17612  002480  6FB4               	movwf	??_doWork& (0+255),b
 17613  002482  6BB5               	clrf	(??_doWork+1)& (0+255),b
 17614  002484  90D8               	bcf	status,0,c
 17615  002486  0100               	movlb	0	; () banked
 17616  002488  37B4               	rlcf	??_doWork& (0+255),f,b
 17617  00248A  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17618  00248C  0E73               	movlw	115
 17619  00248E  0100               	movlb	0	; () banked
 17620  002490  25B4               	addwf	??_doWork& (0+255),w,b
 17621  002492  6E1E               	movwf	readEEPROM@address,c
 17622  002494  0E00               	movlw	0
 17623  002496  0100               	movlb	0	; () banked
 17624  002498  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 17625  00249A  6E1F               	movwf	readEEPROM@address+1,c
 17626  00249C  EC6F  F03A         	call	_readEEPROM	;wreg free
 17627  0024A0  0100               	movlb	0	; () banked
 17628  0024A2  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
 17629                           
 17630                           ; BSR set to: 0
 17631                           ;main.c: 676: vscp_omsg.data[ 2 ] =
 17632                           ;main.c: 677: readEEPROM(2 * i +
 17633                           ;main.c: 678: 0x74);
 17634  0024A4  0101               	movlb	1	; () banked
 17635  0024A6  51A3               	movf	doWork@i& (0+255),w,b
 17636  0024A8  0100               	movlb	0	; () banked
 17637  0024AA  6FB4               	movwf	??_doWork& (0+255),b
 17638  0024AC  6BB5               	clrf	(??_doWork+1)& (0+255),b
 17639  0024AE  90D8               	bcf	status,0,c
 17640  0024B0  0100               	movlb	0	; () banked
 17641  0024B2  37B4               	rlcf	??_doWork& (0+255),f,b
 17642  0024B4  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17643  0024B6  0E74               	movlw	116
 17644  0024B8  0100               	movlb	0	; () banked
 17645  0024BA  25B4               	addwf	??_doWork& (0+255),w,b
 17646  0024BC  6E1E               	movwf	readEEPROM@address,c
 17647  0024BE  0E00               	movlw	0
 17648  0024C0  0100               	movlb	0	; () banked
 17649  0024C2  21B5               	addwfc	(??_doWork+1)& (0+255),w,b
 17650  0024C4  6E1F               	movwf	readEEPROM@address+1,c
 17651  0024C6  EC6F  F03A         	call	_readEEPROM	;wreg free
 17652  0024CA  0100               	movlb	0	; () banked
 17653  0024CC  6FDB               	movwf	(_vscp_omsg+7)& (0+255),b
 17654                           
 17655                           ; BSR set to: 0
 17656                           ;main.c: 681: if (!vscp_sendEvent()) {
 17657  0024CE  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 17658  0024D2  0900               	iorlw	0
 17659  0024D4  A4D8               	btfss	status,2,c
 17660  0024D6  D013               	goto	l10692
 17661                           
 17662                           ;main.c: 684: high_alarm &= ~(1 << i);
 17663  0024D8  C1A3  F0B4         	movff	doWork@i,??_doWork
 17664  0024DC  0E01               	movlw	1
 17665  0024DE  0100               	movlb	0	; () banked
 17666  0024E0  6FB5               	movwf	(??_doWork+1)& (0+255),b
 17667  0024E2  0100               	movlb	0	; () banked
 17668  0024E4  2BB4               	incf	??_doWork& (0+255),f,b
 17669  0024E6  D003               	goto	u11654
 17670  0024E8                     u11655:
 17671  0024E8  0100               	movlb	0	; () banked
 17672  0024EA  90D8               	bcf	status,0,c
 17673  0024EC  37B5               	rlcf	(??_doWork+1)& (0+255),f,b
 17674  0024EE                     u11654:
 17675  0024EE  0100               	movlb	0	; () banked
 17676  0024F0  2FB4               	decfsz	??_doWork& (0+255),f,b
 17677  0024F2  D7FA               	goto	u11655
 17678  0024F4                     L173:
 17679  0024F4  0100               	movlb	0	; () banked
 17680  0024F6  51B5               	movf	(??_doWork+1)& (0+255),w,b
 17681  0024F8  0AFF               	xorlw	255
 17682  0024FA  0100               	movlb	0	; () banked
 17683  0024FC  17CC               	andwf	_high_alarm& (0+255),f,b
 17684  0024FE                     l10692:
 17685  0024FE  0101               	movlb	1	; () banked
 17686  002500  2BA3               	incf	doWork@i& (0+255),f,b
 17687  002502                     L177:
 17688  002502  0E05               	movlw	5
 17689  002504  0101               	movlb	1	; () banked
 17690  002506  65A3               	cpfsgt	doWork@i& (0+255),b
 17691  002508  D4DE               	goto	l10618
 17692  00250A                     l224:
 17693  00250A  0012               	return	
 17694  00250C                     __end_of_doWork:
 17695                           	opt stack 0
 17696                           tblptru	equ	0xFF8
 17697                           tblptrh	equ	0xFF7
 17698                           tblptrl	equ	0xFF6
 17699                           tablat	equ	0xFF5
 17700                           prodh	equ	0xFF4
 17701                           prodl	equ	0xFF3
 17702                           intcon	equ	0xFF2
 17703                           postinc0	equ	0xFEE
 17704                           wreg	equ	0xFE8
 17705                           indf1	equ	0xFE7
 17706                           postdec1	equ	0xFE5
 17707                           fsr1h	equ	0xFE2
 17708                           fsr1l	equ	0xFE1
 17709                           indf2	equ	0xFDF
 17710                           postinc2	equ	0xFDE
 17711                           postdec2	equ	0xFDD
 17712                           plusw2	equ	0xFDB
 17713                           fsr2h	equ	0xFDA
 17714                           fsr2l	equ	0xFD9
 17715                           status	equ	0xFD8
 17716                           
 17717 ;; *************** function _writeEEPROM *****************
 17718 ;; Defined at:
 17719 ;;		line 22 in file "../../../../../../vscp_firmware/pic/common/eeprom.c"
 17720 ;; Parameters:    Size  Location     Type
 17721 ;;  address         2   23[COMRAM] unsigned short 
 17722 ;;  data            1   25[COMRAM] unsigned char 
 17723 ;; Auto vars:     Size  Location     Type
 17724 ;;		None
 17725 ;; Return value:  Size  Location     Type
 17726 ;;		None               void
 17727 ;; Registers used:
 17728 ;;		wreg, status,2
 17729 ;; Tracked objects:
 17730 ;;		On entry : 0/0
 17731 ;;		On exit  : 0/0
 17732 ;;		Unchanged: 0/0
 17733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17734 ;;      Params:         3       0       0       0       0       0       0
 17735 ;;      Locals:         0       0       0       0       0       0       0
 17736 ;;      Temps:          0       0       0       0       0       0       0
 17737 ;;      Totals:         3       0       0       0       0       0       0
 17738 ;;Total ram usage:        3 bytes
 17739 ;; Hardware stack levels used:    1
 17740 ;; Hardware stack levels required when called:    2
 17741 ;; This function calls:
 17742 ;;		Nothing
 17743 ;; This function is called by:
 17744 ;;		_main
 17745 ;;		_doWork
 17746 ;;		_init_app_eeprom
 17747 ;;		_vscp_writeAppReg
 17748 ;;		_vscp_setGUID
 17749 ;;		_vscp_setUserID
 17750 ;;		_vscp_setManufacturerId
 17751 ;;		_vscp_goBootloaderMode
 17752 ;;		_vscp_writeNicknamePermanent
 17753 ;;		_vscp_setSegmentCRC
 17754 ;;		_vscp_setControlByte
 17755 ;; This function uses a non-reentrant model
 17756 ;;
 17757                           
 17758                           	psect	text64
 17759  00731C                     __ptext64:
 17760                           	opt stack 0
 17761  00731C                     _writeEEPROM:
 17762                           	opt stack 28
 17763                           
 17764                           ;eeprom.c: 29: EEADR = address & 0xff;
 17765                           
 17766                           ;incstack = 0
 17767  00731C  C018  FFA9         	movff	writeEEPROM@address,4009	;volatile
 17768                           
 17769                           ;eeprom.c: 30: EEDATA = data;
 17770  007320  C01A  FFA8         	movff	writeEEPROM@data,4008	;volatile
 17771                           
 17772                           ;eeprom.c: 31: EECON1bits.EEPGD = 0;
 17773  007324  9EA6               	bcf	4006,7,c	;volatile
 17774                           
 17775                           ;eeprom.c: 32: EECON1bits.CFGS = 0;
 17776  007326  9CA6               	bcf	4006,6,c	;volatile
 17777                           
 17778                           ;eeprom.c: 33: EECON1bits.WREN = 1;
 17779  007328  84A6               	bsf	4006,2,c	;volatile
 17780                           
 17781                           ;eeprom.c: 36: INTCONbits.GIE = 0;
 17782  00732A  9EF2               	bcf	intcon,7,c	;volatile
 17783                           
 17784                           ;eeprom.c: 37: EECON2 = 0x55;
 17785  00732C  0E55               	movlw	85
 17786  00732E  6EA7               	movwf	4007,c	;volatile
 17787                           
 17788                           ;eeprom.c: 38: EECON2 = 0xaa;
 17789  007330  0EAA               	movlw	170
 17790  007332  6EA7               	movwf	4007,c	;volatile
 17791                           
 17792                           ;eeprom.c: 39: EECON1bits.WR = 1;
 17793  007334  82A6               	bsf	4006,1,c	;volatile
 17794                           
 17795                           ;eeprom.c: 40: INTCONbits.GIE = 1;
 17796  007336  8EF2               	bsf	intcon,7,c	;volatile
 17797  007338                     l1265:
 17798  007338  A8A1               	btfss	4001,4,c	;volatile
 17799  00733A  D7FE               	goto	l1265
 17800                           
 17801                           ;eeprom.c: 47: PIR2bits.EEIF = 0;
 17802  00733C  98A1               	bcf	4001,4,c	;volatile
 17803                           
 17804                           ;eeprom.c: 49: EECON1bits.WREN = 0;
 17805  00733E  94A6               	bcf	4006,2,c	;volatile
 17806  007340  0012               	return	
 17807  007342                     __end_of_writeEEPROM:
 17808                           	opt stack 0
 17809                           tblptru	equ	0xFF8
 17810                           tblptrh	equ	0xFF7
 17811                           tblptrl	equ	0xFF6
 17812                           tablat	equ	0xFF5
 17813                           prodh	equ	0xFF4
 17814                           prodl	equ	0xFF3
 17815                           intcon	equ	0xFF2
 17816                           postinc0	equ	0xFEE
 17817                           wreg	equ	0xFE8
 17818                           indf1	equ	0xFE7
 17819                           postdec1	equ	0xFE5
 17820                           fsr1h	equ	0xFE2
 17821                           fsr1l	equ	0xFE1
 17822                           indf2	equ	0xFDF
 17823                           postinc2	equ	0xFDE
 17824                           postdec2	equ	0xFDD
 17825                           plusw2	equ	0xFDB
 17826                           fsr2h	equ	0xFDA
 17827                           fsr2l	equ	0xFD9
 17828                           status	equ	0xFD8
 17829                           
 17830 ;; *************** function _log *****************
 17831 ;; Defined at:
 17832 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\log.c"
 17833 ;; Parameters:    Size  Location     Type
 17834 ;;  x               4   61[BANK0 ] unsigned char 
 17835 ;; Auto vars:     Size  Location     Type
 17836 ;;  exponent        2   65[BANK0 ] int 
 17837 ;; Return value:  Size  Location     Type
 17838 ;;                  4   61[BANK0 ] int 
 17839 ;; Registers used:
 17840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 17841 ;; Tracked objects:
 17842 ;;		On entry : 0/0
 17843 ;;		On exit  : 0/0
 17844 ;;		Unchanged: 0/0
 17845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17846 ;;      Params:         0       4       0       0       0       0       0
 17847 ;;      Locals:         0       2       0       0       0       0       0
 17848 ;;      Temps:          0       0       0       0       0       0       0
 17849 ;;      Totals:         0       6       0       0       0       0       0
 17850 ;;Total ram usage:        6 bytes
 17851 ;; Hardware stack levels used:    1
 17852 ;; Hardware stack levels required when called:    5
 17853 ;; This function calls:
 17854 ;;		___awtofl
 17855 ;;		___fladd
 17856 ;;		___flmul
 17857 ;;		_eval_poly
 17858 ;;		_frexp
 17859 ;; This function is called by:
 17860 ;;		_doWork
 17861 ;; This function uses a non-reentrant model
 17862 ;;
 17863                           
 17864                           	psect	text65
 17865  005392                     __ptext65:
 17866                           	opt stack 0
 17867  005392                     _log:
 17868                           	opt stack 24
 17869                           
 17870                           ;incstack = 0
 17871  005392  0100               	movlb	0	; () banked
 17872  005394  AFA0               	btfss	(log@x+3)& (0+255),7,b
 17873  005396  D005               	goto	l9678
 17874                           
 17875                           ; BSR set to: 0
 17876  005398  0E00               	movlw	0
 17877  00539A  0101               	movlb	1	; () banked
 17878  00539C  6F1B               	movwf	(_errno+1)& (0+255),b
 17879  00539E  0E21               	movlw	33
 17880  0053A0  D00D               	goto	L178
 17881  0053A2                     l9678:
 17882                           
 17883                           ; BSR set to: 0
 17884  0053A2  0100               	movlb	0	; () banked
 17885  0053A4  EE20  F09D         	lfsr	2,log@x
 17886  0053A8  50DE               	movf	postinc2,w,c
 17887  0053AA  10DE               	iorwf	postinc2,w,c
 17888  0053AC  10DE               	iorwf	postinc2,w,c
 17889  0053AE  10DE               	iorwf	postinc2,w,c
 17890  0053B0  A4D8               	btfss	status,2,c
 17891  0053B2  D013               	goto	l9684
 17892                           
 17893                           ; BSR set to: 0
 17894  0053B4  0E00               	movlw	0
 17895  0053B6  0101               	movlb	1	; () banked
 17896  0053B8  6F1B               	movwf	(_errno+1)& (0+255),b
 17897  0053BA  0E22               	movlw	34
 17898  0053BC                     L178:
 17899  0053BC  0101               	movlb	1	; () banked
 17900  0053BE  6F1A               	movwf	_errno& (0+255),b
 17901  0053C0  0E00               	movlw	0
 17902  0053C2  0100               	movlb	0	; () banked
 17903  0053C4  6F9D               	movwf	?_log& (0+255),b
 17904  0053C6  0E00               	movlw	0
 17905  0053C8  0100               	movlb	0	; () banked
 17906  0053CA  6F9E               	movwf	(?_log+1)& (0+255),b
 17907  0053CC  0E00               	movlw	0
 17908  0053CE  0100               	movlb	0	; () banked
 17909  0053D0  6F9F               	movwf	(?_log+2)& (0+255),b
 17910  0053D2  0E00               	movlw	0
 17911  0053D4  0100               	movlb	0	; () banked
 17912  0053D6  6FA0               	movwf	(?_log+3)& (0+255),b
 17913  0053D8  D09C               	goto	l1854
 17914  0053DA                     l9684:
 17915                           
 17916                           ; BSR set to: 0
 17917  0053DA  0E00               	movlw	0
 17918  0053DC  0100               	movlb	0	; () banked
 17919  0053DE  6F6B               	movwf	___flmul@f2& (0+255),b
 17920  0053E0  0E00               	movlw	0
 17921  0053E2  0100               	movlb	0	; () banked
 17922  0053E4  6F6C               	movwf	(___flmul@f2+1)& (0+255),b
 17923  0053E6  0E00               	movlw	0
 17924  0053E8  0100               	movlb	0	; () banked
 17925  0053EA  6F6D               	movwf	(___flmul@f2+2)& (0+255),b
 17926  0053EC  0E40               	movlw	64
 17927  0053EE  0100               	movlb	0	; () banked
 17928  0053F0  6F6E               	movwf	(___flmul@f2+3)& (0+255),b
 17929  0053F2  0100               	movlb	0	; () banked
 17930  0053F4  0E00               	movlw	high log@exponent
 17931  0053F6  6E1D               	movwf	frexp@eptr+1,c
 17932  0053F8  0100               	movlb	0	; () banked
 17933  0053FA  0EA1               	movlw	low log@exponent
 17934  0053FC  6E1C               	movwf	frexp@eptr,c
 17935  0053FE  C09D  F018         	movff	log@x,frexp@value
 17936  005402  C09E  F019         	movff	log@x+1,frexp@value+1
 17937  005406  C09F  F01A         	movff	log@x+2,frexp@value+2
 17938  00540A  C0A0  F01B         	movff	log@x+3,frexp@value+3
 17939  00540E  ECA3  F034         	call	_frexp	;wreg free
 17940  005412  C018  F067         	movff	?_frexp,___flmul@f1
 17941  005416  C019  F068         	movff	?_frexp+1,___flmul@f1+1
 17942  00541A  C01A  F069         	movff	?_frexp+2,___flmul@f1+2
 17943  00541E  C01B  F06A         	movff	?_frexp+3,___flmul@f1+3
 17944  005422  EC1E  F028         	call	___flmul	;wreg free
 17945  005426  C067  F07E         	movff	?___flmul,___fladd@f1
 17946  00542A  C068  F07F         	movff	?___flmul+1,___fladd@f1+1
 17947  00542E  C069  F080         	movff	?___flmul+2,___fladd@f1+2
 17948  005432  C06A  F081         	movff	?___flmul+3,___fladd@f1+3
 17949  005436  0E00               	movlw	0
 17950  005438  0100               	movlb	0	; () banked
 17951  00543A  6F82               	movwf	___fladd@f2& (0+255),b
 17952  00543C  0E00               	movlw	0
 17953  00543E  0100               	movlb	0	; () banked
 17954  005440  6F83               	movwf	(___fladd@f2+1)& (0+255),b
 17955  005442  0E80               	movlw	128
 17956  005444  0100               	movlb	0	; () banked
 17957  005446  6F84               	movwf	(___fladd@f2+2)& (0+255),b
 17958  005448  0EBF               	movlw	191
 17959  00544A  0100               	movlb	0	; () banked
 17960  00544C  6F85               	movwf	(___fladd@f2+3)& (0+255),b
 17961  00544E  EC75  F020         	call	___fladd	;wreg free
 17962  005452  C07E  F09D         	movff	?___fladd,log@x
 17963  005456  C07F  F09E         	movff	?___fladd+1,log@x+1
 17964  00545A  C080  F09F         	movff	?___fladd+2,log@x+2
 17965  00545E  C081  F0A0         	movff	?___fladd+3,log@x+3
 17966  005462  0100               	movlb	0	; () banked
 17967  005464  07A1               	decf	log@exponent& (0+255),f,b
 17968  005466  A0D8               	btfss	status,0,c
 17969  005468  07A2               	decf	(log@exponent+1)& (0+255),f,b
 17970                           
 17971                           ; BSR set to: 0
 17972  00546A  C09D  F08D         	movff	log@x,eval_poly@x
 17973  00546E  C09E  F08E         	movff	log@x+1,eval_poly@x+1
 17974  005472  C09F  F08F         	movff	log@x+2,eval_poly@x+2
 17975  005476  C0A0  F090         	movff	log@x+3,eval_poly@x+3
 17976  00547A  0E06               	movlw	high log@coeff
 17977  00547C  0100               	movlb	0	; () banked
 17978  00547E  6F92               	movwf	(eval_poly@d+1)& (0+255),b
 17979  005480  0E49               	movlw	low log@coeff
 17980  005482  0100               	movlb	0	; () banked
 17981  005484  6F91               	movwf	eval_poly@d& (0+255),b
 17982  005486  0E00               	movlw	0
 17983  005488  0100               	movlb	0	; () banked
 17984  00548A  6F94               	movwf	(eval_poly@n+1)& (0+255),b
 17985  00548C  0E08               	movlw	8
 17986  00548E  0100               	movlb	0	; () banked
 17987  005490  6F93               	movwf	eval_poly@n& (0+255),b
 17988  005492  EC7A  F02E         	call	_eval_poly	;wreg free
 17989  005496  C08D  F09D         	movff	?_eval_poly,log@x
 17990  00549A  C08E  F09E         	movff	?_eval_poly+1,log@x+1
 17991  00549E  C08F  F09F         	movff	?_eval_poly+2,log@x+2
 17992  0054A2  C090  F0A0         	movff	?_eval_poly+3,log@x+3
 17993  0054A6  0E18               	movlw	24
 17994  0054A8  0100               	movlb	0	; () banked
 17995  0054AA  6F6B               	movwf	___flmul@f2& (0+255),b
 17996  0054AC  0E72               	movlw	114
 17997  0054AE  0100               	movlb	0	; () banked
 17998  0054B0  6F6C               	movwf	(___flmul@f2+1)& (0+255),b
 17999  0054B2  0E31               	movlw	49
 18000  0054B4  0100               	movlb	0	; () banked
 18001  0054B6  6F6D               	movwf	(___flmul@f2+2)& (0+255),b
 18002  0054B8  0E3F               	movlw	63
 18003  0054BA  0100               	movlb	0	; () banked
 18004  0054BC  6F6E               	movwf	(___flmul@f2+3)& (0+255),b
 18005  0054BE  C0A1  F022         	movff	log@exponent,___awtofl@c
 18006  0054C2  C0A2  F023         	movff	log@exponent+1,___awtofl@c+1
 18007  0054C6  ECAB  F037         	call	___awtofl	;wreg free
 18008  0054CA  C022  F067         	movff	?___awtofl,___flmul@f1
 18009  0054CE  C023  F068         	movff	?___awtofl+1,___flmul@f1+1
 18010  0054D2  C024  F069         	movff	?___awtofl+2,___flmul@f1+2
 18011  0054D6  C025  F06A         	movff	?___awtofl+3,___flmul@f1+3
 18012  0054DA  EC1E  F028         	call	___flmul	;wreg free
 18013  0054DE  C067  F07E         	movff	?___flmul,___fladd@f1
 18014  0054E2  C068  F07F         	movff	?___flmul+1,___fladd@f1+1
 18015  0054E6  C069  F080         	movff	?___flmul+2,___fladd@f1+2
 18016  0054EA  C06A  F081         	movff	?___flmul+3,___fladd@f1+3
 18017  0054EE  C09D  F082         	movff	log@x,___fladd@f2
 18018  0054F2  C09E  F083         	movff	log@x+1,___fladd@f2+1
 18019  0054F6  C09F  F084         	movff	log@x+2,___fladd@f2+2
 18020  0054FA  C0A0  F085         	movff	log@x+3,___fladd@f2+3
 18021  0054FE  EC75  F020         	call	___fladd	;wreg free
 18022  005502  C07E  F09D         	movff	?___fladd,?_log
 18023  005506  C07F  F09E         	movff	?___fladd+1,?_log+1
 18024  00550A  C080  F09F         	movff	?___fladd+2,?_log+2
 18025  00550E  C081  F0A0         	movff	?___fladd+3,?_log+3
 18026  005512                     l1854:
 18027  005512  0012               	return	
 18028  005514                     __end_of_log:
 18029                           	opt stack 0
 18030                           tblptru	equ	0xFF8
 18031                           tblptrh	equ	0xFF7
 18032                           tblptrl	equ	0xFF6
 18033                           tablat	equ	0xFF5
 18034                           prodh	equ	0xFF4
 18035                           prodl	equ	0xFF3
 18036                           intcon	equ	0xFF2
 18037                           postinc0	equ	0xFEE
 18038                           wreg	equ	0xFE8
 18039                           indf1	equ	0xFE7
 18040                           postdec1	equ	0xFE5
 18041                           fsr1h	equ	0xFE2
 18042                           fsr1l	equ	0xFE1
 18043                           indf2	equ	0xFDF
 18044                           postinc2	equ	0xFDE
 18045                           postdec2	equ	0xFDD
 18046                           plusw2	equ	0xFDB
 18047                           fsr2h	equ	0xFDA
 18048                           fsr2l	equ	0xFD9
 18049                           status	equ	0xFD8
 18050                           
 18051 ;; *************** function _getCalibrationValue *****************
 18052 ;; Defined at:
 18053 ;;		line 866 in file "../main.c"
 18054 ;; Parameters:    Size  Location     Type
 18055 ;;  i               1    wreg     unsigned char 
 18056 ;; Auto vars:     Size  Location     Type
 18057 ;;  i               1   44[COMRAM] unsigned char 
 18058 ;;  cal             2   42[COMRAM] short 
 18059 ;; Return value:  Size  Location     Type
 18060 ;;                  2   32[COMRAM] short 
 18061 ;; Registers used:
 18062 ;;		wreg, status,2, status,0, cstack
 18063 ;; Tracked objects:
 18064 ;;		On entry : 0/0
 18065 ;;		On exit  : 0/0
 18066 ;;		Unchanged: 0/0
 18067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18068 ;;      Params:         2       0       0       0       0       0       0
 18069 ;;      Locals:         3       0       0       0       0       0       0
 18070 ;;      Temps:          8       0       0       0       0       0       0
 18071 ;;      Totals:        13       0       0       0       0       0       0
 18072 ;;Total ram usage:       13 bytes
 18073 ;; Hardware stack levels used:    1
 18074 ;; Hardware stack levels required when called:    3
 18075 ;; This function calls:
 18076 ;;		_readEEPROM
 18077 ;; This function is called by:
 18078 ;;		_doWork
 18079 ;; This function uses a non-reentrant model
 18080 ;;
 18081                           
 18082                           	psect	text66
 18083  006E5C                     __ptext66:
 18084                           	opt stack 0
 18085  006E5C                     _getCalibrationValue:
 18086                           	opt stack 26
 18087                           
 18088                           ;incstack = 0
 18089                           ;getCalibrationValue@i stored from wreg
 18090  006E5C  6E2D               	movwf	getCalibrationValue@i,c
 18091                           
 18092                           ;main.c: 868: int16_t cal;
 18093                           ;main.c: 870: cal = readEEPROM(2 * i + 0x9E) * 256 +
 18094                           ;main.c: 871: readEEPROM(2 * i + 0x9F);
 18095  006E5E  502D               	movf	getCalibrationValue@i,w,c
 18096  006E60  6E23               	movwf	??_getCalibrationValue& (0+255),c
 18097  006E62  6A24               	clrf	(??_getCalibrationValue+1)& (0+255),c
 18098  006E64  90D8               	bcf	status,0,c
 18099  006E66  3623               	rlcf	??_getCalibrationValue,f,c
 18100  006E68  3624               	rlcf	??_getCalibrationValue+1,f,c
 18101  006E6A  0E9F               	movlw	159
 18102  006E6C  2423               	addwf	??_getCalibrationValue,w,c
 18103  006E6E  6E1E               	movwf	readEEPROM@address,c
 18104  006E70  0E00               	movlw	0
 18105  006E72  2024               	addwfc	??_getCalibrationValue+1,w,c
 18106  006E74  6E1F               	movwf	readEEPROM@address+1,c
 18107  006E76  EC6F  F03A         	call	_readEEPROM	;wreg free
 18108  006E7A  6E25               	movwf	(??_getCalibrationValue+2)& (0+255),c
 18109  006E7C  502D               	movf	getCalibrationValue@i,w,c
 18110  006E7E  6E26               	movwf	(??_getCalibrationValue+3)& (0+255),c
 18111  006E80  6A27               	clrf	(??_getCalibrationValue+4)& (0+255),c
 18112  006E82  90D8               	bcf	status,0,c
 18113  006E84  3626               	rlcf	??_getCalibrationValue+3,f,c
 18114  006E86  3627               	rlcf	??_getCalibrationValue+4,f,c
 18115  006E88  0E9E               	movlw	158
 18116  006E8A  2426               	addwf	??_getCalibrationValue+3,w,c
 18117  006E8C  6E1E               	movwf	readEEPROM@address,c
 18118  006E8E  0E00               	movlw	0
 18119  006E90  2027               	addwfc	??_getCalibrationValue+4,w,c
 18120  006E92  6E1F               	movwf	readEEPROM@address+1,c
 18121  006E94  EC6F  F03A         	call	_readEEPROM	;wreg free
 18122  006E98  6E28               	movwf	(??_getCalibrationValue+5)& (0+255),c
 18123  006E9A  5028               	movf	??_getCalibrationValue+5,w,c
 18124  006E9C  6E2A               	movwf	(??_getCalibrationValue+7)& (0+255),c
 18125  006E9E  6A29               	clrf	(??_getCalibrationValue+6)& (0+255),c
 18126  006EA0  5025               	movf	??_getCalibrationValue+2,w,c
 18127  006EA2  2429               	addwf	??_getCalibrationValue+6,w,c
 18128  006EA4  6E2B               	movwf	getCalibrationValue@cal,c
 18129  006EA6  0E00               	movlw	0
 18130  006EA8  202A               	addwfc	??_getCalibrationValue+7,w,c
 18131  006EAA  6E2C               	movwf	getCalibrationValue@cal+1,c
 18132                           
 18133                           ;main.c: 873: return cal;
 18134  006EAC  C02B  F021         	movff	getCalibrationValue@cal,?_getCalibrationValue
 18135  006EB0  C02C  F022         	movff	getCalibrationValue@cal+1,?_getCalibrationValue+1
 18136  006EB4  0012               	return	
 18137  006EB6                     __end_of_getCalibrationValue:
 18138                           	opt stack 0
 18139                           tblptru	equ	0xFF8
 18140                           tblptrh	equ	0xFF7
 18141                           tblptrl	equ	0xFF6
 18142                           tablat	equ	0xFF5
 18143                           prodh	equ	0xFF4
 18144                           prodl	equ	0xFF3
 18145                           intcon	equ	0xFF2
 18146                           postinc0	equ	0xFEE
 18147                           wreg	equ	0xFE8
 18148                           indf1	equ	0xFE7
 18149                           postdec1	equ	0xFE5
 18150                           fsr1h	equ	0xFE2
 18151                           fsr1l	equ	0xFE1
 18152                           indf2	equ	0xFDF
 18153                           postinc2	equ	0xFDE
 18154                           postdec2	equ	0xFDD
 18155                           plusw2	equ	0xFDB
 18156                           fsr2h	equ	0xFDA
 18157                           fsr2l	equ	0xFD9
 18158                           status	equ	0xFD8
 18159                           
 18160 ;; *************** function _exp *****************
 18161 ;; Defined at:
 18162 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\exp.c"
 18163 ;; Parameters:    Size  Location     Type
 18164 ;;  x               4   69[BANK0 ] short 
 18165 ;; Auto vars:     Size  Location     Type
 18166 ;;  exponent        2   81[BANK0 ] int 
 18167 ;;  sign            1   83[BANK0 ] unsigned char 
 18168 ;; Return value:  Size  Location     Type
 18169 ;;                  4   69[BANK0 ] unsigned char 
 18170 ;; Registers used:
 18171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 18172 ;; Tracked objects:
 18173 ;;		On entry : 0/0
 18174 ;;		On exit  : 0/0
 18175 ;;		Unchanged: 0/0
 18176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18177 ;;      Params:         0       4       0       0       0       0       0
 18178 ;;      Locals:         0       7       0       0       0       0       0
 18179 ;;      Temps:          0       4       0       0       0       0       0
 18180 ;;      Totals:         0      15       0       0       0       0       0
 18181 ;;Total ram usage:       15 bytes
 18182 ;; Hardware stack levels used:    1
 18183 ;; Hardware stack levels required when called:    5
 18184 ;; This function calls:
 18185 ;;		___awtofl
 18186 ;;		___fldiv
 18187 ;;		___flge
 18188 ;;		___flmul
 18189 ;;		___flneg
 18190 ;;		___flsub
 18191 ;;		___fltol
 18192 ;;		_eval_poly
 18193 ;;		_floor
 18194 ;;		_ldexp
 18195 ;; This function is called by:
 18196 ;;		_doWork
 18197 ;; This function uses a non-reentrant model
 18198 ;;
 18199                           
 18200                           	psect	text67
 18201  0046B0                     __ptext67:
 18202                           	opt stack 0
 18203  0046B0                     _exp:
 18204                           	opt stack 24
 18205                           
 18206                           ;incstack = 0
 18207  0046B0  0100               	movlb	0	; () banked
 18208  0046B2  EE20  F0A5         	lfsr	2,exp@x
 18209  0046B6  50DE               	movf	postinc2,w,c
 18210  0046B8  10DE               	iorwf	postinc2,w,c
 18211  0046BA  10DE               	iorwf	postinc2,w,c
 18212  0046BC  10DE               	iorwf	postinc2,w,c
 18213  0046BE  A4D8               	btfss	status,2,c
 18214  0046C0  D00B               	goto	l9634
 18215                           
 18216                           ; BSR set to: 0
 18217  0046C2  0E00               	movlw	0
 18218  0046C4  0100               	movlb	0	; () banked
 18219  0046C6  6FA5               	movwf	?_exp& (0+255),b
 18220  0046C8  0E00               	movlw	0
 18221  0046CA  0100               	movlb	0	; () banked
 18222  0046CC  6FA6               	movwf	(?_exp+1)& (0+255),b
 18223  0046CE  0E80               	movlw	128
 18224  0046D0  0100               	movlb	0	; () banked
 18225  0046D2  6FA7               	movwf	(?_exp+2)& (0+255),b
 18226  0046D4  0E3F               	movlw	63
 18227  0046D6  D040               	goto	L180
 18228  0046D8                     l9634:
 18229                           
 18230                           ; BSR set to: 0
 18231  0046D8  0E18               	movlw	24
 18232  0046DA  6E18               	movwf	___flge@ff1,c
 18233  0046DC  0E72               	movlw	114
 18234  0046DE  6E19               	movwf	___flge@ff1+1,c
 18235  0046E0  0E31               	movlw	49
 18236  0046E2  6E1A               	movwf	___flge@ff1+2,c
 18237  0046E4  0E44               	movlw	68
 18238  0046E6  6E1B               	movwf	___flge@ff1+3,c
 18239  0046E8  C0A5  F01C         	movff	exp@x,___flge@ff2
 18240  0046EC  C0A6  F01D         	movff	exp@x+1,___flge@ff2+1
 18241  0046F0  C0A7  F01E         	movff	exp@x+2,___flge@ff2+2
 18242  0046F4  C0A8  F01F         	movff	exp@x+3,___flge@ff2+3
 18243  0046F8  ECEF  F033         	call	___flge	;wreg free
 18244  0046FC  B0D8               	btfsc	status,0,c
 18245  0046FE  D011               	goto	l9640
 18246  004700  0E00               	movlw	0
 18247  004702  0101               	movlb	1	; () banked
 18248  004704  6F1B               	movwf	(_errno+1)& (0+255),b
 18249  004706  0E22               	movlw	34
 18250  004708  0101               	movlb	1	; () banked
 18251  00470A  6F1A               	movwf	_errno& (0+255),b
 18252  00470C  0EFF               	movlw	255
 18253  00470E  0100               	movlb	0	; () banked
 18254  004710  6FA5               	movwf	?_exp& (0+255),b
 18255  004712  0EFF               	movlw	255
 18256  004714  0100               	movlb	0	; () banked
 18257  004716  6FA6               	movwf	(?_exp+1)& (0+255),b
 18258  004718  0E7F               	movlw	127
 18259  00471A  0100               	movlb	0	; () banked
 18260  00471C  6FA7               	movwf	(?_exp+2)& (0+255),b
 18261  00471E  0E7F               	movlw	127
 18262  004720  D01B               	goto	L180
 18263  004722                     l9640:
 18264  004722  C0A5  F018         	movff	exp@x,___flge@ff1
 18265  004726  C0A6  F019         	movff	exp@x+1,___flge@ff1+1
 18266  00472A  C0A7  F01A         	movff	exp@x+2,___flge@ff1+2
 18267  00472E  C0A8  F01B         	movff	exp@x+3,___flge@ff1+3
 18268  004732  0E87               	movlw	135
 18269  004734  6E1C               	movwf	___flge@ff2,c
 18270  004736  0E48               	movlw	72
 18271  004738  6E1D               	movwf	___flge@ff2+1,c
 18272  00473A  0E3A               	movlw	58
 18273  00473C  6E1E               	movwf	___flge@ff2+2,c
 18274  00473E  0EC4               	movlw	196
 18275  004740  6E1F               	movwf	___flge@ff2+3,c
 18276  004742  ECEF  F033         	call	___flge	;wreg free
 18277  004746  B0D8               	btfsc	status,0,c
 18278  004748  D00A               	goto	l9646
 18279  00474A  0E00               	movlw	0
 18280  00474C  0101               	movlb	1	; () banked
 18281  00474E  6F1B               	movwf	(_errno+1)& (0+255),b
 18282  004750  0E22               	movlw	34
 18283  004752  0101               	movlb	1	; () banked
 18284  004754  6F1A               	movwf	_errno& (0+255),b
 18285  004756  D0C7               	goto	u9970
 18286  004758                     L180:
 18287  004758  0100               	movlb	0	; () banked
 18288  00475A  6FA8               	movwf	(?_exp+3)& (0+255),b
 18289  00475C  D0F2               	goto	l1568
 18290  00475E                     l9646:
 18291  00475E  0100               	movlb	0	; () banked
 18292  004760  AFA8               	btfss	(exp@x+3)& (0+255),7,b
 18293  004762  D002               	goto	u9940
 18294  004764  0E01               	movlw	1
 18295  004766  D001               	goto	u9946
 18296  004768                     u9940:
 18297  004768  0E00               	movlw	0
 18298  00476A                     u9946:
 18299  00476A  0100               	movlb	0	; () banked
 18300  00476C  6FB3               	movwf	exp@sign& (0+255),b
 18301  00476E  0100               	movlb	0	; () banked
 18302  004770  51B3               	movf	exp@sign& (0+255),w,b
 18303  004772  B4D8               	btfsc	status,2,c
 18304  004774  D012               	goto	l9650
 18305                           
 18306                           ; BSR set to: 0
 18307  004776  C0A5  F07A         	movff	exp@x,___flneg@f1
 18308  00477A  C0A6  F07B         	movff	exp@x+1,___flneg@f1+1
 18309  00477E  C0A7  F07C         	movff	exp@x+2,___flneg@f1+2
 18310  004782  C0A8  F07D         	movff	exp@x+3,___flneg@f1+3
 18311  004786  ECB9  F038         	call	___flneg	;wreg free
 18312  00478A  C07A  F0A5         	movff	?___flneg,exp@x
 18313  00478E  C07B  F0A6         	movff	?___flneg+1,exp@x+1
 18314  004792  C07C  F0A7         	movff	?___flneg+2,exp@x+2
 18315  004796  C07D  F0A8         	movff	?___flneg+3,exp@x+3
 18316  00479A                     l9650:
 18317  00479A  C0A5  F067         	movff	exp@x,___flmul@f1
 18318  00479E  C0A6  F068         	movff	exp@x+1,___flmul@f1+1
 18319  0047A2  C0A7  F069         	movff	exp@x+2,___flmul@f1+2
 18320  0047A6  C0A8  F06A         	movff	exp@x+3,___flmul@f1+3
 18321  0047AA  0E3B               	movlw	59
 18322  0047AC  0100               	movlb	0	; () banked
 18323  0047AE  6F6B               	movwf	___flmul@f2& (0+255),b
 18324  0047B0  0EAA               	movlw	170
 18325  0047B2  0100               	movlb	0	; () banked
 18326  0047B4  6F6C               	movwf	(___flmul@f2+1)& (0+255),b
 18327  0047B6  0EB8               	movlw	184
 18328  0047B8  0100               	movlb	0	; () banked
 18329  0047BA  6F6D               	movwf	(___flmul@f2+2)& (0+255),b
 18330  0047BC  0E3F               	movlw	63
 18331  0047BE  0100               	movlb	0	; () banked
 18332  0047C0  6F6E               	movwf	(___flmul@f2+3)& (0+255),b
 18333  0047C2  EC1E  F028         	call	___flmul	;wreg free
 18334  0047C6  C067  F0A5         	movff	?___flmul,exp@x
 18335  0047CA  C068  F0A6         	movff	?___flmul+1,exp@x+1
 18336  0047CE  C069  F0A7         	movff	?___flmul+2,exp@x+2
 18337  0047D2  C06A  F0A8         	movff	?___flmul+3,exp@x+3
 18338  0047D6  C0A5  F097         	movff	exp@x,floor@x
 18339  0047DA  C0A6  F098         	movff	exp@x+1,floor@x+1
 18340  0047DE  C0A7  F099         	movff	exp@x+2,floor@x+2
 18341  0047E2  C0A8  F09A         	movff	exp@x+3,floor@x+3
 18342  0047E6  EC3F  F02D         	call	_floor	;wreg free
 18343  0047EA  C097  F0AD         	movff	?_floor,_exp$2199
 18344  0047EE  C098  F0AE         	movff	?_floor+1,_exp$2199+1
 18345  0047F2  C099  F0AF         	movff	?_floor+2,_exp$2199+2
 18346  0047F6  C09A  F0B0         	movff	?_floor+3,_exp$2199+3
 18347  0047FA  C0AD  F07A         	movff	_exp$2199,___fltol@f1
 18348  0047FE  C0AE  F07B         	movff	_exp$2199+1,___fltol@f1+1
 18349  004802  C0AF  F07C         	movff	_exp$2199+2,___fltol@f1+2
 18350  004806  C0B0  F07D         	movff	_exp$2199+3,___fltol@f1+3
 18351  00480A  EC9E  F02C         	call	___fltol	;wreg free
 18352  00480E  C07A  F0A9         	movff	?___fltol,??_exp
 18353  004812  C07B  F0AA         	movff	?___fltol+1,??_exp+1
 18354  004816  C07C  F0AB         	movff	?___fltol+2,??_exp+2
 18355  00481A  C07D  F0AC         	movff	?___fltol+3,??_exp+3
 18356  00481E  C0A9  F0B1         	movff	??_exp,exp@exponent
 18357  004822  C0AA  F0B2         	movff	??_exp+1,exp@exponent+1
 18358  004826  C0A5  F08D         	movff	exp@x,___flsub@f1
 18359  00482A  C0A6  F08E         	movff	exp@x+1,___flsub@f1+1
 18360  00482E  C0A7  F08F         	movff	exp@x+2,___flsub@f1+2
 18361  004832  C0A8  F090         	movff	exp@x+3,___flsub@f1+3
 18362  004836  C0B1  F022         	movff	exp@exponent,___awtofl@c
 18363  00483A  C0B2  F023         	movff	exp@exponent+1,___awtofl@c+1
 18364  00483E  ECAB  F037         	call	___awtofl	;wreg free
 18365  004842  C022  F091         	movff	?___awtofl,___flsub@f2
 18366  004846  C023  F092         	movff	?___awtofl+1,___flsub@f2+1
 18367  00484A  C024  F093         	movff	?___awtofl+2,___flsub@f2+2
 18368  00484E  C025  F094         	movff	?___awtofl+3,___flsub@f2+3
 18369  004852  EC84  F037         	call	___flsub	;wreg free
 18370  004856  C08D  F0A5         	movff	?___flsub,exp@x
 18371  00485A  C08E  F0A6         	movff	?___flsub+1,exp@x+1
 18372  00485E  C08F  F0A7         	movff	?___flsub+2,exp@x+2
 18373  004862  C090  F0A8         	movff	?___flsub+3,exp@x+3
 18374  004866  C0A5  F08D         	movff	exp@x,eval_poly@x
 18375  00486A  C0A6  F08E         	movff	exp@x+1,eval_poly@x+1
 18376  00486E  C0A7  F08F         	movff	exp@x+2,eval_poly@x+2
 18377  004872  C0A8  F090         	movff	exp@x+3,eval_poly@x+3
 18378  004876  0E06               	movlw	high exp@coeff
 18379  004878  0100               	movlb	0	; () banked
 18380  00487A  6F92               	movwf	(eval_poly@d+1)& (0+255),b
 18381  00487C  0E21               	movlw	low exp@coeff
 18382  00487E  0100               	movlb	0	; () banked
 18383  004880  6F91               	movwf	eval_poly@d& (0+255),b
 18384  004882  0E00               	movlw	0
 18385  004884  0100               	movlb	0	; () banked
 18386  004886  6F94               	movwf	(eval_poly@n+1)& (0+255),b
 18387  004888  0E09               	movlw	9
 18388  00488A  0100               	movlb	0	; () banked
 18389  00488C  6F93               	movwf	eval_poly@n& (0+255),b
 18390  00488E  EC7A  F02E         	call	_eval_poly	;wreg free
 18391  004892  C08D  F09D         	movff	?_eval_poly,ldexp@value
 18392  004896  C08E  F09E         	movff	?_eval_poly+1,ldexp@value+1
 18393  00489A  C08F  F09F         	movff	?_eval_poly+2,ldexp@value+2
 18394  00489E  C090  F0A0         	movff	?_eval_poly+3,ldexp@value+3
 18395  0048A2  C0B1  F0A1         	movff	exp@exponent,ldexp@newexp
 18396  0048A6  C0B2  F0A2         	movff	exp@exponent+1,ldexp@newexp+1
 18397  0048AA  ECDE  F02D         	call	_ldexp	;wreg free
 18398  0048AE  C09D  F0A5         	movff	?_ldexp,exp@x
 18399  0048B2  C09E  F0A6         	movff	?_ldexp+1,exp@x+1
 18400  0048B6  C09F  F0A7         	movff	?_ldexp+2,exp@x+2
 18401  0048BA  C0A0  F0A8         	movff	?_ldexp+3,exp@x+3
 18402  0048BE  0100               	movlb	0	; () banked
 18403  0048C0  51B3               	movf	exp@sign& (0+255),w,b
 18404  0048C2  B4D8               	btfsc	status,2,c
 18405  0048C4  D036               	goto	l1572
 18406                           
 18407                           ; BSR set to: 0
 18408  0048C6  0100               	movlb	0	; () banked
 18409  0048C8  EE20  F0A5         	lfsr	2,exp@x
 18410  0048CC  0EFF               	movlw	255
 18411  0048CE  18DE               	xorwf	postinc2,w,c
 18412  0048D0  0EFF               	movlw	255
 18413  0048D2  B4D8               	btfsc	status,2,c
 18414  0048D4  18DE               	xorwf	postinc2,w,c
 18415  0048D6  0E7F               	movlw	127
 18416  0048D8  B4D8               	btfsc	status,2,c
 18417  0048DA  18DE               	xorwf	postinc2,w,c
 18418  0048DC  0E7F               	movlw	127
 18419  0048DE  B4D8               	btfsc	status,2,c
 18420  0048E0  18DE               	xorwf	postinc2,w,c
 18421  0048E2  A4D8               	btfss	status,2,c
 18422  0048E4  D00B               	goto	l9668
 18423  0048E6                     u9970:
 18424                           
 18425                           ; BSR set to: 0
 18426  0048E6  0E00               	movlw	0
 18427  0048E8  0100               	movlb	0	; () banked
 18428  0048EA  6FA5               	movwf	?_exp& (0+255),b
 18429  0048EC  0E00               	movlw	0
 18430  0048EE  0100               	movlb	0	; () banked
 18431  0048F0  6FA6               	movwf	(?_exp+1)& (0+255),b
 18432  0048F2  0E00               	movlw	0
 18433  0048F4  0100               	movlb	0	; () banked
 18434  0048F6  6FA7               	movwf	(?_exp+2)& (0+255),b
 18435  0048F8  0E00               	movlw	0
 18436  0048FA  D72E               	goto	L180
 18437  0048FC                     l9668:
 18438                           
 18439                           ; BSR set to: 0
 18440  0048FC  0E00               	movlw	0
 18441  0048FE  6E26               	movwf	___fldiv@f1,c
 18442  004900  0E00               	movlw	0
 18443  004902  6E27               	movwf	___fldiv@f1+1,c
 18444  004904  0E80               	movlw	128
 18445  004906  6E28               	movwf	___fldiv@f1+2,c
 18446  004908  0E3F               	movlw	63
 18447  00490A  6E29               	movwf	___fldiv@f1+3,c
 18448  00490C  C0A5  F02A         	movff	exp@x,___fldiv@f2
 18449  004910  C0A6  F02B         	movff	exp@x+1,___fldiv@f2+1
 18450  004914  C0A7  F02C         	movff	exp@x+2,___fldiv@f2+2
 18451  004918  C0A8  F02D         	movff	exp@x+3,___fldiv@f2+3
 18452  00491C  EC11  F02F         	call	___fldiv	;wreg free
 18453  004920  C026  F0A5         	movff	?___fldiv,?_exp
 18454  004924  C027  F0A6         	movff	?___fldiv+1,?_exp+1
 18455  004928  C028  F0A7         	movff	?___fldiv+2,?_exp+2
 18456  00492C  C029  F0A8         	movff	?___fldiv+3,?_exp+3
 18457  004930  D008               	goto	l1568
 18458  004932                     l1572:
 18459                           
 18460                           ; BSR set to: 0
 18461  004932  C0A5  F0A5         	movff	exp@x,?_exp
 18462  004936  C0A6  F0A6         	movff	exp@x+1,?_exp+1
 18463  00493A  C0A7  F0A7         	movff	exp@x+2,?_exp+2
 18464  00493E  C0A8  F0A8         	movff	exp@x+3,?_exp+3
 18465  004942                     l1568:
 18466  004942  0012               	return	
 18467  004944                     __end_of_exp:
 18468                           	opt stack 0
 18469                           tblptru	equ	0xFF8
 18470                           tblptrh	equ	0xFF7
 18471                           tblptrl	equ	0xFF6
 18472                           tablat	equ	0xFF5
 18473                           prodh	equ	0xFF4
 18474                           prodl	equ	0xFF3
 18475                           intcon	equ	0xFF2
 18476                           postinc0	equ	0xFEE
 18477                           wreg	equ	0xFE8
 18478                           indf1	equ	0xFE7
 18479                           postdec1	equ	0xFE5
 18480                           fsr1h	equ	0xFE2
 18481                           fsr1l	equ	0xFE1
 18482                           indf2	equ	0xFDF
 18483                           postinc2	equ	0xFDE
 18484                           postdec2	equ	0xFDD
 18485                           plusw2	equ	0xFDB
 18486                           fsr2h	equ	0xFDA
 18487                           fsr2l	equ	0xFD9
 18488                           status	equ	0xFD8
 18489                           
 18490 ;; *************** function _ldexp *****************
 18491 ;; Defined at:
 18492 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\frexp.c"
 18493 ;; Parameters:    Size  Location     Type
 18494 ;;  value           4   61[BANK0 ] unsigned char 
 18495 ;;  newexp          2   65[BANK0 ] int 
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;		None
 18498 ;; Return value:  Size  Location     Type
 18499 ;;                  4   61[BANK0 ] int 
 18500 ;; Registers used:
 18501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl
 18502 ;; Tracked objects:
 18503 ;;		On entry : 0/0
 18504 ;;		On exit  : 0/0
 18505 ;;		Unchanged: 0/0
 18506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18507 ;;      Params:         0       6       0       0       0       0       0
 18508 ;;      Locals:         0       0       0       0       0       0       0
 18509 ;;      Temps:          0       2       0       0       0       0       0
 18510 ;;      Totals:         0       8       0       0       0       0       0
 18511 ;;Total ram usage:        8 bytes
 18512 ;; Hardware stack levels used:    1
 18513 ;; Hardware stack levels required when called:    2
 18514 ;; This function calls:
 18515 ;;		Nothing
 18516 ;; This function is called by:
 18517 ;;		_exp
 18518 ;; This function uses a non-reentrant model
 18519 ;;
 18520                           
 18521                           	psect	text68
 18522  005BBC                     __ptext68:
 18523                           	opt stack 0
 18524  005BBC                     _ldexp:
 18525                           	opt stack 26
 18526                           
 18527                           ;incstack = 0
 18528  005BBC  0100               	movlb	0	; () banked
 18529  005BBE  EE20  F09D         	lfsr	2,ldexp@value
 18530  005BC2  50DE               	movf	postinc2,w,c
 18531  005BC4  10DE               	iorwf	postinc2,w,c
 18532  005BC6  10DE               	iorwf	postinc2,w,c
 18533  005BC8  10DE               	iorwf	postinc2,w,c
 18534  005BCA  B4D8               	btfsc	status,2,c
 18535  005BCC  D033               	goto	L181
 18536                           
 18537                           ; BSR set to: 0
 18538                           
 18539                           ; BSR set to: 0
 18540                           
 18541                           ; BSR set to: 0
 18542                           
 18543                           ; BSR set to: 0
 18544  005BCE  0100               	movlb	0	; () banked
 18545  005BD0  51A0               	movf	(ldexp@value+3)& (0+255),w,b
 18546  005BD2  0B7F               	andlw	127
 18547  005BD4  0100               	movlb	0	; () banked
 18548  005BD6  6FA3               	movwf	??_ldexp& (0+255),b
 18549  005BD8  6BA4               	clrf	(??_ldexp+1)& (0+255),b
 18550  005BDA  90D8               	bcf	status,0,c
 18551  005BDC  0100               	movlb	0	; () banked
 18552  005BDE  37A3               	rlcf	??_ldexp& (0+255),f,b
 18553  005BE0  37A4               	rlcf	(??_ldexp+1)& (0+255),f,b
 18554  005BE2  0100               	movlb	0	; () banked
 18555  005BE4  51A3               	movf	??_ldexp& (0+255),w,b
 18556  005BE6  0100               	movlb	0	; () banked
 18557  005BE8  27A1               	addwf	ldexp@newexp& (0+255),f,b
 18558  005BEA  0100               	movlb	0	; () banked
 18559  005BEC  51A4               	movf	(??_ldexp+1)& (0+255),w,b
 18560  005BEE  0100               	movlb	0	; () banked
 18561  005BF0  23A2               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 18562  005BF2  0100               	movlb	0	; () banked
 18563  005BF4  AF9F               	btfss	(ldexp@value+2)& (0+255),7,b
 18564  005BF6  D004               	goto	u9860
 18565  005BF8  0100               	movlb	0	; () banked
 18566  005BFA  6BA3               	clrf	??_ldexp& (0+255),b
 18567  005BFC  2BA3               	incf	??_ldexp& (0+255),f,b
 18568  005BFE  D002               	goto	u9868
 18569  005C00                     u9860:
 18570  005C00  0100               	movlb	0	; () banked
 18571  005C02  6BA3               	clrf	??_ldexp& (0+255),b
 18572  005C04                     u9868:
 18573  005C04  0100               	movlb	0	; () banked
 18574  005C06  51A3               	movf	??_ldexp& (0+255),w,b
 18575  005C08  0100               	movlb	0	; () banked
 18576  005C0A  27A1               	addwf	ldexp@newexp& (0+255),f,b
 18577  005C0C  0E00               	movlw	0
 18578  005C0E  0100               	movlb	0	; () banked
 18579  005C10  23A2               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 18580                           
 18581                           ; BSR set to: 0
 18582  005C12  0100               	movlb	0	; () banked
 18583  005C14  51A2               	movf	(ldexp@newexp+1)& (0+255),w,b
 18584  005C16  0A80               	xorlw	128
 18585  005C18  6EF3               	movwf	prodl,c
 18586  005C1A  0E80               	movlw	128
 18587  005C1C  5CF3               	subwf	prodl,w,c
 18588  005C1E  0E00               	movlw	0
 18589  005C20  B4D8               	btfsc	status,2,c
 18590  005C22  5DA1               	subwf	ldexp@newexp& (0+255),w,b
 18591  005C24  B0D8               	btfsc	status,0,c
 18592  005C26  D011               	goto	l9590
 18593                           
 18594                           ; BSR set to: 0
 18595  005C28  0E00               	movlw	0
 18596  005C2A  0101               	movlb	1	; () banked
 18597  005C2C  6F1B               	movwf	(_errno+1)& (0+255),b
 18598  005C2E  0E22               	movlw	34
 18599  005C30  0101               	movlb	1	; () banked
 18600  005C32  6F1A               	movwf	_errno& (0+255),b
 18601  005C34                     L181:
 18602  005C34  0E00               	movlw	0
 18603  005C36  0100               	movlb	0	; () banked
 18604  005C38  6F9D               	movwf	?_ldexp& (0+255),b
 18605  005C3A  0E00               	movlw	0
 18606  005C3C  0100               	movlb	0	; () banked
 18607  005C3E  6F9E               	movwf	(?_ldexp+1)& (0+255),b
 18608  005C40  0E00               	movlw	0
 18609  005C42  0100               	movlb	0	; () banked
 18610  005C44  6F9F               	movwf	(?_ldexp+2)& (0+255),b
 18611  005C46  0E00               	movlw	0
 18612  005C48  D027               	goto	L183
 18613  005C4A                     l9590:
 18614                           
 18615                           ; BSR set to: 0
 18616  005C4A  0100               	movlb	0	; () banked
 18617  005C4C  51A2               	movf	(ldexp@newexp+1)& (0+255),w,b
 18618  005C4E  0A80               	xorlw	128
 18619  005C50  0F7F               	addlw	-129
 18620  005C52  0E00               	movlw	0
 18621  005C54  B4D8               	btfsc	status,2,c
 18622  005C56  5DA1               	subwf	ldexp@newexp& (0+255),w,b
 18623  005C58  A0D8               	btfss	status,0,c
 18624  005C5A  D021               	goto	l9606
 18625                           
 18626                           ; BSR set to: 0
 18627  005C5C  0E00               	movlw	0
 18628  005C5E  0101               	movlb	1	; () banked
 18629  005C60  6F1B               	movwf	(_errno+1)& (0+255),b
 18630  005C62  0E22               	movlw	34
 18631  005C64  0101               	movlb	1	; () banked
 18632  005C66  6F1A               	movwf	_errno& (0+255),b
 18633                           
 18634                           ; BSR set to: 1
 18635  005C68  0100               	movlb	0	; () banked
 18636  005C6A  AFA0               	btfss	(ldexp@value+3)& (0+255),7,b
 18637  005C6C  D00B               	goto	l9602
 18638                           
 18639                           ; BSR set to: 0
 18640  005C6E  0EFF               	movlw	255
 18641  005C70  0100               	movlb	0	; () banked
 18642  005C72  6F9D               	movwf	?_ldexp& (0+255),b
 18643  005C74  0EFF               	movlw	255
 18644  005C76  0100               	movlb	0	; () banked
 18645  005C78  6F9E               	movwf	(?_ldexp+1)& (0+255),b
 18646  005C7A  0E7F               	movlw	127
 18647  005C7C  0100               	movlb	0	; () banked
 18648  005C7E  6F9F               	movwf	(?_ldexp+2)& (0+255),b
 18649  005C80  0EFF               	movlw	255
 18650  005C82  D00A               	goto	L183
 18651  005C84                     l9602:
 18652                           
 18653                           ; BSR set to: 0
 18654  005C84  0EFF               	movlw	255
 18655  005C86  0100               	movlb	0	; () banked
 18656  005C88  6F9D               	movwf	?_ldexp& (0+255),b
 18657  005C8A  0EFF               	movlw	255
 18658  005C8C  0100               	movlb	0	; () banked
 18659  005C8E  6F9E               	movwf	(?_ldexp+1)& (0+255),b
 18660  005C90  0E7F               	movlw	127
 18661  005C92  0100               	movlb	0	; () banked
 18662  005C94  6F9F               	movwf	(?_ldexp+2)& (0+255),b
 18663  005C96  0E7F               	movlw	127
 18664  005C98                     L183:
 18665  005C98  0100               	movlb	0	; () banked
 18666  005C9A  6FA0               	movwf	(?_ldexp+3)& (0+255),b
 18667  005C9C  D02A               	goto	l1693
 18668  005C9E                     l9606:
 18669                           
 18670                           ; BSR set to: 0
 18671  005C9E  0100               	movlb	0	; () banked
 18672  005CA0  35A2               	rlcf	(ldexp@newexp+1)& (0+255),w,b
 18673  005CA2  0100               	movlb	0	; () banked
 18674  005CA4  31A2               	rrcf	(ldexp@newexp+1)& (0+255),w,b
 18675  005CA6  0100               	movlb	0	; () banked
 18676  005CA8  6FA4               	movwf	(??_ldexp+1)& (0+255),b
 18677  005CAA  0100               	movlb	0	; () banked
 18678  005CAC  31A1               	rrcf	ldexp@newexp& (0+255),w,b
 18679  005CAE  0100               	movlb	0	; () banked
 18680  005CB0  6FA3               	movwf	??_ldexp& (0+255),b
 18681  005CB2  0100               	movlb	0	; () banked
 18682  005CB4  51A0               	movf	(ldexp@value+3)& (0+255),w,b
 18683  005CB6  0100               	movlb	0	; () banked
 18684  005CB8  19A3               	xorwf	??_ldexp& (0+255),w,b
 18685  005CBA  0B80               	andlw	-128
 18686  005CBC  19A3               	xorwf	??_ldexp& (0+255),w,b
 18687  005CBE  0100               	movlb	0	; () banked
 18688  005CC0  6FA0               	movwf	(ldexp@value+3)& (0+255),b
 18689  005CC2  C0A1  F0A3         	movff	ldexp@newexp,??_ldexp
 18690  005CC6  0E01               	movlw	1
 18691  005CC8  0100               	movlb	0	; () banked
 18692  005CCA  17A3               	andwf	??_ldexp& (0+255),f,b
 18693  005CCC  0100               	movlb	0	; () banked
 18694  005CCE  33A3               	rrcf	??_ldexp& (0+255),f,b
 18695  005CD0  33A3               	rrcf	??_ldexp& (0+255),f,b
 18696  005CD2  0100               	movlb	0	; () banked
 18697  005CD4  519F               	movf	(ldexp@value+2)& (0+255),w,b
 18698  005CD6  0100               	movlb	0	; () banked
 18699  005CD8  19A3               	xorwf	??_ldexp& (0+255),w,b
 18700  005CDA  0B7F               	andlw	-129
 18701  005CDC  19A3               	xorwf	??_ldexp& (0+255),w,b
 18702  005CDE  0100               	movlb	0	; () banked
 18703  005CE0  6F9F               	movwf	(ldexp@value+2)& (0+255),b
 18704                           
 18705                           ; BSR set to: 0
 18706                           
 18707                           ; BSR set to: 0
 18708                           
 18709                           ; BSR set to: 0
 18710  005CE2  C09D  F09D         	movff	ldexp@value,?_ldexp
 18711  005CE6  C09E  F09E         	movff	ldexp@value+1,?_ldexp+1
 18712  005CEA  C09F  F09F         	movff	ldexp@value+2,?_ldexp+2
 18713  005CEE  C0A0  F0A0         	movff	ldexp@value+3,?_ldexp+3
 18714  005CF2                     l1693:
 18715                           
 18716                           ; BSR set to: 0
 18717  005CF2  0012               	return	
 18718  005CF4                     __end_of_ldexp:
 18719                           	opt stack 0
 18720                           tblptru	equ	0xFF8
 18721                           tblptrh	equ	0xFF7
 18722                           tblptrl	equ	0xFF6
 18723                           tablat	equ	0xFF5
 18724                           prodh	equ	0xFF4
 18725                           prodl	equ	0xFF3
 18726                           intcon	equ	0xFF2
 18727                           postinc0	equ	0xFEE
 18728                           wreg	equ	0xFE8
 18729                           indf1	equ	0xFE7
 18730                           postdec1	equ	0xFE5
 18731                           fsr1h	equ	0xFE2
 18732                           fsr1l	equ	0xFE1
 18733                           indf2	equ	0xFDF
 18734                           postinc2	equ	0xFDE
 18735                           postdec2	equ	0xFDD
 18736                           plusw2	equ	0xFDB
 18737                           fsr2h	equ	0xFDA
 18738                           fsr2l	equ	0xFD9
 18739                           status	equ	0xFD8
 18740                           
 18741 ;; *************** function _floor *****************
 18742 ;; Defined at:
 18743 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\floor.c"
 18744 ;; Parameters:    Size  Location     Type
 18745 ;;  x               4   55[BANK0 ] int 
 18746 ;; Auto vars:     Size  Location     Type
 18747 ;;  i               4   59[BANK0 ] int 
 18748 ;;  expon           2   63[BANK0 ] int 
 18749 ;; Return value:  Size  Location     Type
 18750 ;;                  4   55[BANK0 ] int 
 18751 ;; Registers used:
 18752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 18753 ;; Tracked objects:
 18754 ;;		On entry : 0/0
 18755 ;;		On exit  : 0/0
 18756 ;;		Unchanged: 0/0
 18757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18758 ;;      Params:         0       4       0       0       0       0       0
 18759 ;;      Locals:         0       6       0       0       0       0       0
 18760 ;;      Temps:          0       0       0       0       0       0       0
 18761 ;;      Totals:         0      10       0       0       0       0       0
 18762 ;;Total ram usage:       10 bytes
 18763 ;; Hardware stack levels used:    1
 18764 ;; Hardware stack levels required when called:    4
 18765 ;; This function calls:
 18766 ;;		___altofl
 18767 ;;		___fladd
 18768 ;;		___flge
 18769 ;;		___fltol
 18770 ;;		_frexp
 18771 ;; This function is called by:
 18772 ;;		_exp
 18773 ;; This function uses a non-reentrant model
 18774 ;;
 18775                           
 18776                           	psect	text69
 18777  005A7E                     __ptext69:
 18778                           	opt stack 0
 18779  005A7E                     _floor:
 18780                           	opt stack 24
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;incstack = 0
 18784  005A7E  C097  F018         	movff	floor@x,frexp@value
 18785  005A82  C098  F019         	movff	floor@x+1,frexp@value+1
 18786  005A86  C099  F01A         	movff	floor@x+2,frexp@value+2
 18787  005A8A  C09A  F01B         	movff	floor@x+3,frexp@value+3
 18788  005A8E  0100               	movlb	0	; () banked
 18789  005A90  0E00               	movlw	high floor@expon
 18790  005A92  6E1D               	movwf	frexp@eptr+1,c
 18791  005A94  0100               	movlb	0	; () banked
 18792  005A96  0E9F               	movlw	low floor@expon
 18793  005A98  6E1C               	movwf	frexp@eptr,c
 18794  005A9A  ECA3  F034         	call	_frexp	;wreg free
 18795  005A9E  0100               	movlb	0	; () banked
 18796  005AA0  51A0               	movf	(floor@expon+1)& (0+255),w,b
 18797  005AA2  0A80               	xorlw	128
 18798  005AA4  6EF3               	movwf	prodl,c
 18799  005AA6  0E80               	movlw	128
 18800  005AA8  5CF3               	subwf	prodl,w,c
 18801  005AAA  0E00               	movlw	0
 18802  005AAC  B4D8               	btfsc	status,2,c
 18803  005AAE  5D9F               	subwf	floor@expon& (0+255),w,b
 18804  005AB0  B0D8               	btfsc	status,0,c
 18805  005AB2  D01B               	goto	l9558
 18806                           
 18807                           ; BSR set to: 0
 18808  005AB4  0100               	movlb	0	; () banked
 18809  005AB6  AF9A               	btfss	(floor@x+3)& (0+255),7,b
 18810  005AB8  D00B               	goto	l9554
 18811                           
 18812                           ; BSR set to: 0
 18813  005ABA  0E00               	movlw	0
 18814  005ABC  0100               	movlb	0	; () banked
 18815  005ABE  6F97               	movwf	?_floor& (0+255),b
 18816  005AC0  0E00               	movlw	0
 18817  005AC2  0100               	movlb	0	; () banked
 18818  005AC4  6F98               	movwf	(?_floor+1)& (0+255),b
 18819  005AC6  0E80               	movlw	128
 18820  005AC8  0100               	movlb	0	; () banked
 18821  005ACA  6F99               	movwf	(?_floor+2)& (0+255),b
 18822  005ACC  0EBF               	movlw	191
 18823  005ACE  D00A               	goto	L184
 18824  005AD0                     l9554:
 18825                           
 18826                           ; BSR set to: 0
 18827  005AD0  0E00               	movlw	0
 18828  005AD2  0100               	movlb	0	; () banked
 18829  005AD4  6F97               	movwf	?_floor& (0+255),b
 18830  005AD6  0E00               	movlw	0
 18831  005AD8  0100               	movlb	0	; () banked
 18832  005ADA  6F98               	movwf	(?_floor+1)& (0+255),b
 18833  005ADC  0E00               	movlw	0
 18834  005ADE  0100               	movlb	0	; () banked
 18835  005AE0  6F99               	movwf	(?_floor+2)& (0+255),b
 18836  005AE2  0E00               	movlw	0
 18837  005AE4                     L184:
 18838  005AE4  0100               	movlb	0	; () banked
 18839  005AE6  6F9A               	movwf	(?_floor+3)& (0+255),b
 18840  005AE8  D068               	goto	l1662
 18841  005AEA                     l9558:
 18842                           
 18843                           ; BSR set to: 0
 18844  005AEA  0E1D               	movlw	29
 18845  005AEC  0100               	movlb	0	; () banked
 18846  005AEE  5D9F               	subwf	floor@expon& (0+255),w,b
 18847  005AF0  0E00               	movlw	0
 18848  005AF2  0100               	movlb	0	; () banked
 18849  005AF4  59A0               	subwfb	(floor@expon+1)& (0+255),w,b
 18850  005AF6  A0D8               	btfss	status,0,c
 18851  005AF8  D009               	goto	l9562
 18852                           
 18853                           ; BSR set to: 0
 18854  005AFA  C097  F097         	movff	floor@x,?_floor
 18855  005AFE  C098  F098         	movff	floor@x+1,?_floor+1
 18856  005B02  C099  F099         	movff	floor@x+2,?_floor+2
 18857  005B06  C09A  F09A         	movff	floor@x+3,?_floor+3
 18858  005B0A  D057               	goto	l1662
 18859  005B0C                     l9562:
 18860                           
 18861                           ; BSR set to: 0
 18862  005B0C  C097  F07A         	movff	floor@x,___fltol@f1
 18863  005B10  C098  F07B         	movff	floor@x+1,___fltol@f1+1
 18864  005B14  C099  F07C         	movff	floor@x+2,___fltol@f1+2
 18865  005B18  C09A  F07D         	movff	floor@x+3,___fltol@f1+3
 18866  005B1C  EC9E  F02C         	call	___fltol	;wreg free
 18867  005B20  C07A  F092         	movff	?___fltol,___altofl@c
 18868  005B24  C07B  F093         	movff	?___fltol+1,___altofl@c+1
 18869  005B28  C07C  F094         	movff	?___fltol+2,___altofl@c+2
 18870  005B2C  C07D  F095         	movff	?___fltol+3,___altofl@c+3
 18871  005B30  EC57  F036         	call	___altofl	;wreg free
 18872  005B34  C092  F09B         	movff	?___altofl,floor@i
 18873  005B38  C093  F09C         	movff	?___altofl+1,floor@i+1
 18874  005B3C  C094  F09D         	movff	?___altofl+2,floor@i+2
 18875  005B40  C095  F09E         	movff	?___altofl+3,floor@i+3
 18876  005B44  C097  F018         	movff	floor@x,___flge@ff1
 18877  005B48  C098  F019         	movff	floor@x+1,___flge@ff1+1
 18878  005B4C  C099  F01A         	movff	floor@x+2,___flge@ff1+2
 18879  005B50  C09A  F01B         	movff	floor@x+3,___flge@ff1+3
 18880  005B54  C09B  F01C         	movff	floor@i,___flge@ff2
 18881  005B58  C09C  F01D         	movff	floor@i+1,___flge@ff2+1
 18882  005B5C  C09D  F01E         	movff	floor@i+2,___flge@ff2+2
 18883  005B60  C09E  F01F         	movff	floor@i+3,___flge@ff2+3
 18884  005B64  ECEF  F033         	call	___flge	;wreg free
 18885  005B68  B0D8               	btfsc	status,0,c
 18886  005B6A  D01F               	goto	l1664
 18887  005B6C  C09B  F07E         	movff	floor@i,___fladd@f1
 18888  005B70  C09C  F07F         	movff	floor@i+1,___fladd@f1+1
 18889  005B74  C09D  F080         	movff	floor@i+2,___fladd@f1+2
 18890  005B78  C09E  F081         	movff	floor@i+3,___fladd@f1+3
 18891  005B7C  0E00               	movlw	0
 18892  005B7E  0100               	movlb	0	; () banked
 18893  005B80  6F82               	movwf	___fladd@f2& (0+255),b
 18894  005B82  0E00               	movlw	0
 18895  005B84  0100               	movlb	0	; () banked
 18896  005B86  6F83               	movwf	(___fladd@f2+1)& (0+255),b
 18897  005B88  0E80               	movlw	128
 18898  005B8A  0100               	movlb	0	; () banked
 18899  005B8C  6F84               	movwf	(___fladd@f2+2)& (0+255),b
 18900  005B8E  0EBF               	movlw	191
 18901  005B90  0100               	movlb	0	; () banked
 18902  005B92  6F85               	movwf	(___fladd@f2+3)& (0+255),b
 18903  005B94  EC75  F020         	call	___fladd	;wreg free
 18904  005B98  C07E  F097         	movff	?___fladd,?_floor
 18905  005B9C  C07F  F098         	movff	?___fladd+1,?_floor+1
 18906  005BA0  C080  F099         	movff	?___fladd+2,?_floor+2
 18907  005BA4  C081  F09A         	movff	?___fladd+3,?_floor+3
 18908  005BA8  D008               	goto	l1662
 18909  005BAA                     l1664:
 18910  005BAA  C09B  F097         	movff	floor@i,?_floor
 18911  005BAE  C09C  F098         	movff	floor@i+1,?_floor+1
 18912  005BB2  C09D  F099         	movff	floor@i+2,?_floor+2
 18913  005BB6  C09E  F09A         	movff	floor@i+3,?_floor+3
 18914  005BBA                     l1662:
 18915  005BBA  0012               	return	
 18916  005BBC                     __end_of_floor:
 18917                           	opt stack 0
 18918                           tblptru	equ	0xFF8
 18919                           tblptrh	equ	0xFF7
 18920                           tblptrl	equ	0xFF6
 18921                           tablat	equ	0xFF5
 18922                           prodh	equ	0xFF4
 18923                           prodl	equ	0xFF3
 18924                           intcon	equ	0xFF2
 18925                           postinc0	equ	0xFEE
 18926                           wreg	equ	0xFE8
 18927                           indf1	equ	0xFE7
 18928                           postdec1	equ	0xFE5
 18929                           fsr1h	equ	0xFE2
 18930                           fsr1l	equ	0xFE1
 18931                           indf2	equ	0xFDF
 18932                           postinc2	equ	0xFDE
 18933                           postdec2	equ	0xFDD
 18934                           plusw2	equ	0xFDB
 18935                           fsr2h	equ	0xFDA
 18936                           fsr2l	equ	0xFD9
 18937                           status	equ	0xFD8
 18938                           
 18939 ;; *************** function _frexp *****************
 18940 ;; Defined at:
 18941 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\frexp.c"
 18942 ;; Parameters:    Size  Location     Type
 18943 ;;  value           4   23[COMRAM] int 
 18944 ;;  eptr            2   27[COMRAM] PTR int 
 18945 ;;		 -> log@exponent(2), floor@expon(2), 
 18946 ;; Auto vars:     Size  Location     Type
 18947 ;;		None
 18948 ;; Return value:  Size  Location     Type
 18949 ;;                  4   23[COMRAM] PTR int 
 18950 ;; Registers used:
 18951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18952 ;; Tracked objects:
 18953 ;;		On entry : 0/0
 18954 ;;		On exit  : 0/0
 18955 ;;		Unchanged: 0/0
 18956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18957 ;;      Params:         6       0       0       0       0       0       0
 18958 ;;      Locals:         0       0       0       0       0       0       0
 18959 ;;      Temps:          2       0       0       0       0       0       0
 18960 ;;      Totals:         8       0       0       0       0       0       0
 18961 ;;Total ram usage:        8 bytes
 18962 ;; Hardware stack levels used:    1
 18963 ;; Hardware stack levels required when called:    2
 18964 ;; This function calls:
 18965 ;;		Nothing
 18966 ;; This function is called by:
 18967 ;;		_floor
 18968 ;;		_log
 18969 ;; This function uses a non-reentrant model
 18970 ;;
 18971                           
 18972                           	psect	text70
 18973  006946                     __ptext70:
 18974                           	opt stack 0
 18975  006946                     _frexp:
 18976                           	opt stack 26
 18977                           
 18978                           ;incstack = 0
 18979  006946  EE20  F018         	lfsr	2,frexp@value
 18980  00694A  50DE               	movf	postinc2,w,c
 18981  00694C  10DE               	iorwf	postinc2,w,c
 18982  00694E  10DE               	iorwf	postinc2,w,c
 18983  006950  10DE               	iorwf	postinc2,w,c
 18984  006952  A4D8               	btfss	status,2,c
 18985  006954  D011               	goto	l8804
 18986  006956  C01C  FFD9         	movff	frexp@eptr,fsr2l
 18987  00695A  C01D  FFDA         	movff	frexp@eptr+1,fsr2h
 18988  00695E  0E00               	movlw	0
 18989  006960  6EDE               	movwf	postinc2,c
 18990  006962  0E00               	movlw	0
 18991  006964  6EDD               	movwf	postdec2,c
 18992  006966  0E00               	movlw	0
 18993  006968  6E18               	movwf	?_frexp,c
 18994  00696A  0E00               	movlw	0
 18995  00696C  6E19               	movwf	?_frexp+1,c
 18996  00696E  0E00               	movlw	0
 18997  006970  6E1A               	movwf	?_frexp+2,c
 18998  006972  0E00               	movlw	0
 18999  006974  6E1B               	movwf	?_frexp+3,c
 19000  006976  D035               	goto	l1689
 19001  006978                     l8804:
 19002  006978  501B               	movf	frexp@value+3,w,c
 19003  00697A  0B7F               	andlw	127
 19004  00697C  6E1E               	movwf	??_frexp& (0+255),c
 19005  00697E  6A1F               	clrf	(??_frexp+1)& (0+255),c
 19006  006980  90D8               	bcf	status,0,c
 19007  006982  361E               	rlcf	??_frexp,f,c
 19008  006984  361F               	rlcf	??_frexp+1,f,c
 19009  006986  C01C  FFD9         	movff	frexp@eptr,fsr2l
 19010  00698A  C01D  FFDA         	movff	frexp@eptr+1,fsr2h
 19011  00698E  C01E  FFDE         	movff	??_frexp,postinc2
 19012  006992  C01F  FFDD         	movff	??_frexp+1,postdec2
 19013  006996  AE1A               	btfss	frexp@value+2,7,c
 19014  006998  D003               	goto	u9140
 19015  00699A  6A1E               	clrf	??_frexp& (0+255),c
 19016  00699C  2A1E               	incf	??_frexp& (0+255),f,c
 19017  00699E  D001               	goto	u9148
 19018  0069A0                     u9140:
 19019  0069A0  6A1E               	clrf	??_frexp& (0+255),c
 19020  0069A2                     u9148:
 19021  0069A2  501E               	movf	??_frexp,w,c
 19022  0069A4  C01C  FFD9         	movff	frexp@eptr,fsr2l
 19023  0069A8  C01D  FFDA         	movff	frexp@eptr+1,fsr2h
 19024  0069AC  12DE               	iorwf	postinc2,f,c
 19025  0069AE  0E00               	movlw	0
 19026  0069B0  12DD               	iorwf	postdec2,f,c
 19027  0069B2  C01C  FFD9         	movff	frexp@eptr,fsr2l
 19028  0069B6  C01D  FFDA         	movff	frexp@eptr+1,fsr2h
 19029  0069BA  0E82               	movlw	130
 19030  0069BC  26DE               	addwf	postinc2,f,c
 19031  0069BE  0EFF               	movlw	255
 19032  0069C0  22DD               	addwfc	postdec2,f,c
 19033  0069C2  801B               	bsf	frexp@value+3,0,c
 19034  0069C4  821B               	bsf	frexp@value+3,1,c
 19035  0069C6  841B               	bsf	frexp@value+3,2,c
 19036  0069C8  861B               	bsf	frexp@value+3,3,c
 19037  0069CA  881B               	bsf	frexp@value+3,4,c
 19038  0069CC  8A1B               	bsf	frexp@value+3,5,c
 19039  0069CE  9C1B               	bcf	frexp@value+3,6,c
 19040  0069D0  9E1A               	bcf	frexp@value+2,7,c
 19041  0069D2  C018  F018         	movff	frexp@value,?_frexp
 19042  0069D6  C019  F019         	movff	frexp@value+1,?_frexp+1
 19043  0069DA  C01A  F01A         	movff	frexp@value+2,?_frexp+2
 19044  0069DE  C01B  F01B         	movff	frexp@value+3,?_frexp+3
 19045  0069E2                     l1689:
 19046  0069E2  0012               	return	
 19047  0069E4                     __end_of_frexp:
 19048                           	opt stack 0
 19049                           tblptru	equ	0xFF8
 19050                           tblptrh	equ	0xFF7
 19051                           tblptrl	equ	0xFF6
 19052                           tablat	equ	0xFF5
 19053                           prodh	equ	0xFF4
 19054                           prodl	equ	0xFF3
 19055                           intcon	equ	0xFF2
 19056                           postinc0	equ	0xFEE
 19057                           wreg	equ	0xFE8
 19058                           indf1	equ	0xFE7
 19059                           postdec1	equ	0xFE5
 19060                           fsr1h	equ	0xFE2
 19061                           fsr1l	equ	0xFE1
 19062                           indf2	equ	0xFDF
 19063                           postinc2	equ	0xFDE
 19064                           postdec2	equ	0xFDD
 19065                           plusw2	equ	0xFDB
 19066                           fsr2h	equ	0xFDA
 19067                           fsr2l	equ	0xFD9
 19068                           status	equ	0xFD8
 19069                           
 19070 ;; *************** function ___flge *****************
 19071 ;; Defined at:
 19072 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\flge.c"
 19073 ;; Parameters:    Size  Location     Type
 19074 ;;  ff1             4   23[COMRAM] PTR int 
 19075 ;;  ff2             4   27[COMRAM] PTR int 
 19076 ;; Auto vars:     Size  Location     Type
 19077 ;;		None
 19078 ;; Return value:  Size  Location     Type
 19079 ;;		None               void
 19080 ;; Registers used:
 19081 ;;		wreg, status,2, status,0
 19082 ;; Tracked objects:
 19083 ;;		On entry : 0/0
 19084 ;;		On exit  : 0/0
 19085 ;;		Unchanged: 0/0
 19086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19087 ;;      Params:         8       0       0       0       0       0       0
 19088 ;;      Locals:         0       0       0       0       0       0       0
 19089 ;;      Temps:          4       0       0       0       0       0       0
 19090 ;;      Totals:        12       0       0       0       0       0       0
 19091 ;;Total ram usage:       12 bytes
 19092 ;; Hardware stack levels used:    1
 19093 ;; Hardware stack levels required when called:    2
 19094 ;; This function calls:
 19095 ;;		Nothing
 19096 ;; This function is called by:
 19097 ;;		_exp
 19098 ;;		_floor
 19099 ;; This function uses a non-reentrant model
 19100 ;;
 19101                           
 19102                           	psect	text71
 19103  0067DE                     __ptext71:
 19104                           	opt stack 0
 19105  0067DE                     ___flge:
 19106                           	opt stack 25
 19107                           
 19108                           ;incstack = 0
 19109  0067DE  AE1B               	btfss	___flge@ff1+3,7,c
 19110  0067E0  D01D               	goto	l8786
 19111  0067E2  C018  F020         	movff	___flge@ff1,??___flge
 19112  0067E6  C019  F021         	movff	___flge@ff1+1,??___flge+1
 19113  0067EA  C01A  F022         	movff	___flge@ff1+2,??___flge+2
 19114  0067EE  C01B  F023         	movff	___flge@ff1+3,??___flge+3
 19115  0067F2  1E20               	comf	??___flge,f,c
 19116  0067F4  1E21               	comf	??___flge+1,f,c
 19117  0067F6  1E22               	comf	??___flge+2,f,c
 19118  0067F8  1E23               	comf	??___flge+3,f,c
 19119  0067FA  2A20               	incf	??___flge,f,c
 19120  0067FC  0E00               	movlw	0
 19121  0067FE  2221               	addwfc	??___flge+1,f,c
 19122  006800  2222               	addwfc	??___flge+2,f,c
 19123  006802  2223               	addwfc	??___flge+3,f,c
 19124  006804  0E00               	movlw	0
 19125  006806  2420               	addwf	??___flge,w,c
 19126  006808  6E18               	movwf	___flge@ff1,c
 19127  00680A  0E00               	movlw	0
 19128  00680C  2021               	addwfc	??___flge+1,w,c
 19129  00680E  6E19               	movwf	___flge@ff1+1,c
 19130  006810  0E00               	movlw	0
 19131  006812  2022               	addwfc	??___flge+2,w,c
 19132  006814  6E1A               	movwf	___flge@ff1+2,c
 19133  006816  0E80               	movlw	128
 19134  006818  2023               	addwfc	??___flge+3,w,c
 19135  00681A  6E1B               	movwf	___flge@ff1+3,c
 19136  00681C                     l8786:
 19137  00681C  AE1F               	btfss	___flge@ff2+3,7,c
 19138  00681E  D01D               	goto	l1620
 19139  006820  C01C  F020         	movff	___flge@ff2,??___flge
 19140  006824  C01D  F021         	movff	___flge@ff2+1,??___flge+1
 19141  006828  C01E  F022         	movff	___flge@ff2+2,??___flge+2
 19142  00682C  C01F  F023         	movff	___flge@ff2+3,??___flge+3
 19143  006830  1E20               	comf	??___flge,f,c
 19144  006832  1E21               	comf	??___flge+1,f,c
 19145  006834  1E22               	comf	??___flge+2,f,c
 19146  006836  1E23               	comf	??___flge+3,f,c
 19147  006838  2A20               	incf	??___flge,f,c
 19148  00683A  0E00               	movlw	0
 19149  00683C  2221               	addwfc	??___flge+1,f,c
 19150  00683E  2222               	addwfc	??___flge+2,f,c
 19151  006840  2223               	addwfc	??___flge+3,f,c
 19152  006842  0E00               	movlw	0
 19153  006844  2420               	addwf	??___flge,w,c
 19154  006846  6E1C               	movwf	___flge@ff2,c
 19155  006848  0E00               	movlw	0
 19156  00684A  2021               	addwfc	??___flge+1,w,c
 19157  00684C  6E1D               	movwf	___flge@ff2+1,c
 19158  00684E  0E00               	movlw	0
 19159  006850  2022               	addwfc	??___flge+2,w,c
 19160  006852  6E1E               	movwf	___flge@ff2+2,c
 19161  006854  0E80               	movlw	128
 19162  006856  2023               	addwfc	??___flge+3,w,c
 19163  006858  6E1F               	movwf	___flge@ff2+3,c
 19164  00685A                     l1620:
 19165  00685A  0E00               	movlw	0
 19166  00685C  1A18               	xorwf	___flge@ff1,f,c
 19167  00685E  0E00               	movlw	0
 19168  006860  1A19               	xorwf	___flge@ff1+1,f,c
 19169  006862  0E00               	movlw	0
 19170  006864  1A1A               	xorwf	___flge@ff1+2,f,c
 19171  006866  0E80               	movlw	128
 19172  006868  1A1B               	xorwf	___flge@ff1+3,f,c
 19173  00686A  0E00               	movlw	0
 19174  00686C  1A1C               	xorwf	___flge@ff2,f,c
 19175  00686E  0E00               	movlw	0
 19176  006870  1A1D               	xorwf	___flge@ff2+1,f,c
 19177  006872  0E00               	movlw	0
 19178  006874  1A1E               	xorwf	___flge@ff2+2,f,c
 19179  006876  0E80               	movlw	128
 19180  006878  1A1F               	xorwf	___flge@ff2+3,f,c
 19181  00687A  501C               	movf	___flge@ff2,w,c
 19182  00687C  5C18               	subwf	___flge@ff1,w,c
 19183  00687E  501D               	movf	___flge@ff2+1,w,c
 19184  006880  5819               	subwfb	___flge@ff1+1,w,c
 19185  006882  501E               	movf	___flge@ff2+2,w,c
 19186  006884  581A               	subwfb	___flge@ff1+2,w,c
 19187  006886  501F               	movf	___flge@ff2+3,w,c
 19188  006888  581B               	subwfb	___flge@ff1+3,w,c
 19189  00688A  B0D8               	btfsc	status,0,c
 19190  00688C  D002               	goto	l8792
 19191  00688E  90D8               	bcf	status,0,c
 19192  006890  D001               	goto	l1621
 19193  006892                     l8792:
 19194  006892  80D8               	bsf	status,0,c
 19195  006894                     l1621:
 19196  006894  0012               	return	
 19197  006896                     __end_of___flge:
 19198                           	opt stack 0
 19199                           tblptru	equ	0xFF8
 19200                           tblptrh	equ	0xFF7
 19201                           tblptrl	equ	0xFF6
 19202                           tablat	equ	0xFF5
 19203                           prodh	equ	0xFF4
 19204                           prodl	equ	0xFF3
 19205                           intcon	equ	0xFF2
 19206                           postinc0	equ	0xFEE
 19207                           wreg	equ	0xFE8
 19208                           indf1	equ	0xFE7
 19209                           postdec1	equ	0xFE5
 19210                           fsr1h	equ	0xFE2
 19211                           fsr1l	equ	0xFE1
 19212                           indf2	equ	0xFDF
 19213                           postinc2	equ	0xFDE
 19214                           postdec2	equ	0xFDD
 19215                           plusw2	equ	0xFDB
 19216                           fsr2h	equ	0xFDA
 19217                           fsr2l	equ	0xFD9
 19218                           status	equ	0xFD8
 19219                           
 19220 ;; *************** function ___altofl *****************
 19221 ;; Defined at:
 19222 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\altofl.c"
 19223 ;; Parameters:    Size  Location     Type
 19224 ;;  c               4   50[BANK0 ] long 
 19225 ;; Auto vars:     Size  Location     Type
 19226 ;;  sign            1   54[BANK0 ] unsigned char 
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  4   50[BANK0 ] unsigned char 
 19229 ;; Registers used:
 19230 ;;		wreg, status,2, status,0, cstack
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19236 ;;      Params:         0       4       0       0       0       0       0
 19237 ;;      Locals:         0       1       0       0       0       0       0
 19238 ;;      Temps:          0       0       0       0       0       0       0
 19239 ;;      Totals:         0       5       0       0       0       0       0
 19240 ;;Total ram usage:        5 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:    3
 19243 ;; This function calls:
 19244 ;;		___flpack
 19245 ;; This function is called by:
 19246 ;;		_doWork
 19247 ;;		_floor
 19248 ;; This function uses a non-reentrant model
 19249 ;;
 19250                           
 19251                           	psect	text72
 19252  006CAE                     __ptext72:
 19253                           	opt stack 0
 19254  006CAE                     ___altofl:
 19255                           	opt stack 24
 19256                           
 19257                           ;incstack = 0
 19258  006CAE  0E00               	movlw	0
 19259  006CB0  0100               	movlb	0	; () banked
 19260  006CB2  6F96               	movwf	___altofl@sign& (0+255),b
 19261                           
 19262                           ; BSR set to: 0
 19263  006CB4  0100               	movlb	0	; () banked
 19264  006CB6  5195               	movf	(___altofl@c+3)& (0+255),w,b
 19265  006CB8  0A80               	xorlw	128
 19266  006CBA  0F80               	addlw	128
 19267  006CBC  E10B               	bnz	u9085
 19268  006CBE  0E00               	movlw	0
 19269  006CC0  0100               	movlb	0	; () banked
 19270  006CC2  5D94               	subwf	(___altofl@c+2)& (0+255),w,b
 19271  006CC4  E107               	bnz	u9085
 19272  006CC6  0E00               	movlw	0
 19273  006CC8  0100               	movlb	0	; () banked
 19274  006CCA  5D93               	subwf	(___altofl@c+1)& (0+255),w,b
 19275  006CCC  E103               	bnz	u9085
 19276  006CCE  0E00               	movlw	0
 19277  006CD0  0100               	movlb	0	; () banked
 19278  006CD2  5D92               	subwf	___altofl@c& (0+255),w,b
 19279  006CD4                     u9085:
 19280  006CD4  B0D8               	btfsc	status,0,c
 19281  006CD6  D012               	goto	l8768
 19282                           
 19283                           ; BSR set to: 0
 19284  006CD8  0100               	movlb	0	; () banked
 19285  006CDA  1F95               	comf	(___altofl@c+3)& (0+255),f,b
 19286  006CDC  0100               	movlb	0	; () banked
 19287  006CDE  1F94               	comf	(___altofl@c+2)& (0+255),f,b
 19288  006CE0  0100               	movlb	0	; () banked
 19289  006CE2  1F93               	comf	(___altofl@c+1)& (0+255),f,b
 19290  006CE4  0100               	movlb	0	; () banked
 19291  006CE6  6D92               	negf	___altofl@c& (0+255),b
 19292  006CE8  0E00               	movlw	0
 19293  006CEA  0100               	movlb	0	; () banked
 19294  006CEC  2393               	addwfc	(___altofl@c+1)& (0+255),f,b
 19295  006CEE  0100               	movlb	0	; () banked
 19296  006CF0  2394               	addwfc	(___altofl@c+2)& (0+255),f,b
 19297  006CF2  0100               	movlb	0	; () banked
 19298  006CF4  2395               	addwfc	(___altofl@c+3)& (0+255),f,b
 19299                           
 19300                           ; BSR set to: 0
 19301  006CF6  0E01               	movlw	1
 19302  006CF8  0100               	movlb	0	; () banked
 19303  006CFA  6F96               	movwf	___altofl@sign& (0+255),b
 19304  006CFC                     l8768:
 19305                           
 19306                           ; BSR set to: 0
 19307  006CFC  C092  F018         	movff	___altofl@c,___flpack@arg
 19308  006D00  C093  F019         	movff	___altofl@c+1,___flpack@arg+1
 19309  006D04  C094  F01A         	movff	___altofl@c+2,___flpack@arg+2
 19310  006D08  C095  F01B         	movff	___altofl@c+3,___flpack@arg+3
 19311  006D0C  0E96               	movlw	150
 19312  006D0E  6E1C               	movwf	___flpack@exp,c
 19313  006D10  C096  F01D         	movff	___altofl@sign,___flpack@sign
 19314  006D14  ECD1  F031         	call	___flpack	;wreg free
 19315  006D18  C018  F092         	movff	?___flpack,?___altofl
 19316  006D1C  C019  F093         	movff	?___flpack+1,?___altofl+1
 19317  006D20  C01A  F094         	movff	?___flpack+2,?___altofl+2
 19318  006D24  C01B  F095         	movff	?___flpack+3,?___altofl+3
 19319  006D28  0012               	return	
 19320  006D2A                     __end_of___altofl:
 19321                           	opt stack 0
 19322                           tblptru	equ	0xFF8
 19323                           tblptrh	equ	0xFF7
 19324                           tblptrl	equ	0xFF6
 19325                           tablat	equ	0xFF5
 19326                           prodh	equ	0xFF4
 19327                           prodl	equ	0xFF3
 19328                           intcon	equ	0xFF2
 19329                           postinc0	equ	0xFEE
 19330                           wreg	equ	0xFE8
 19331                           indf1	equ	0xFE7
 19332                           postdec1	equ	0xFE5
 19333                           fsr1h	equ	0xFE2
 19334                           fsr1l	equ	0xFE1
 19335                           indf2	equ	0xFDF
 19336                           postinc2	equ	0xFDE
 19337                           postdec2	equ	0xFDD
 19338                           plusw2	equ	0xFDB
 19339                           fsr2h	equ	0xFDA
 19340                           fsr2l	equ	0xFD9
 19341                           status	equ	0xFD8
 19342                           
 19343 ;; *************** function _eval_poly *****************
 19344 ;; Defined at:
 19345 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\evalpoly.c"
 19346 ;; Parameters:    Size  Location     Type
 19347 ;;  x               4   45[BANK0 ] unsigned char 
 19348 ;;  d               2   49[BANK0 ] PTR const 
 19349 ;;		 -> log@coeff(36), exp@coeff(40), 
 19350 ;;  n               2   51[BANK0 ] int 
 19351 ;; Auto vars:     Size  Location     Type
 19352 ;;  res             4   57[BANK0 ] int 
 19353 ;; Return value:  Size  Location     Type
 19354 ;;                  4   45[BANK0 ] int 
 19355 ;; Registers used:
 19356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19357 ;; Tracked objects:
 19358 ;;		On entry : 0/0
 19359 ;;		On exit  : 0/0
 19360 ;;		Unchanged: 0/0
 19361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19362 ;;      Params:         0       8       0       0       0       0       0
 19363 ;;      Locals:         0       4       0       0       0       0       0
 19364 ;;      Temps:          0       4       0       0       0       0       0
 19365 ;;      Totals:         0      16       0       0       0       0       0
 19366 ;;Total ram usage:       16 bytes
 19367 ;; Hardware stack levels used:    1
 19368 ;; Hardware stack levels required when called:    4
 19369 ;; This function calls:
 19370 ;;		___fladd
 19371 ;;		___flmul
 19372 ;; This function is called by:
 19373 ;;		_exp
 19374 ;;		_log
 19375 ;; This function uses a non-reentrant model
 19376 ;;
 19377                           
 19378                           	psect	text73
 19379  005CF4                     __ptext73:
 19380                           	opt stack 0
 19381  005CF4                     _eval_poly:
 19382                           	opt stack 24
 19383                           
 19384                           ;incstack = 0
 19385  005CF4  0100               	movlb	0	; () banked
 19386  005CF6  C093  F095         	movff	eval_poly@n,??_eval_poly
 19387  005CFA  0100               	movlb	0	; () banked
 19388  005CFC  C094  F096         	movff	eval_poly@n+1,??_eval_poly+1
 19389  005D00  0100               	movlb	0	; () banked
 19390  005D02  90D8               	bcf	status,0,c
 19391  005D04  3795               	rlcf	??_eval_poly& (0+255),f,b
 19392  005D06  3796               	rlcf	(??_eval_poly+1)& (0+255),f,b
 19393  005D08  0100               	movlb	0	; () banked
 19394  005D0A  90D8               	bcf	status,0,c
 19395  005D0C  3795               	rlcf	??_eval_poly& (0+255),f,b
 19396  005D0E  3796               	rlcf	(??_eval_poly+1)& (0+255),f,b
 19397  005D10  0100               	movlb	0	; () banked
 19398  005D12  C091  F097         	movff	eval_poly@d,??_eval_poly+2
 19399  005D16  0100               	movlb	0	; () banked
 19400  005D18  C092  F098         	movff	eval_poly@d+1,??_eval_poly+3
 19401  005D1C  0100               	movlb	0	; () banked
 19402  005D1E  5195               	movf	??_eval_poly& (0+255),w,b
 19403  005D20  0100               	movlb	0	; () banked
 19404  005D22  2797               	addwf	(??_eval_poly+2)& (0+255),f,b
 19405  005D24  0100               	movlb	0	; () banked
 19406  005D26  5196               	movf	(??_eval_poly+1)& (0+255),w,b
 19407  005D28  0100               	movlb	0	; () banked
 19408  005D2A  2398               	addwfc	(??_eval_poly+3)& (0+255),f,b
 19409  005D2C  C097  FFF6         	movff	??_eval_poly+2,tblptrl
 19410  005D30  C098  FFF7         	movff	??_eval_poly+3,tblptrh
 19411  005D34                     	if	0	;tblptru may be non-zero
 19412  005D34                     	endif
 19413  005D34                     	if	0	;tblptru may be non-zero
 19414  005D34                     	endif
 19415  005D34  0009               	tblrd		*+
 19416  005D36  0100               	movlb	0	; () banked
 19417  005D38  CFF5 F099          	movff	tablat,eval_poly@res
 19418  005D3C  0009               	tblrd		*+
 19419  005D3E  0100               	movlb	0	; () banked
 19420  005D40  CFF5 F09A          	movff	tablat,eval_poly@res+1
 19421  005D44  0009               	tblrd		*+
 19422  005D46  0100               	movlb	0	; () banked
 19423  005D48  CFF5 F09B          	movff	tablat,eval_poly@res+2
 19424  005D4C  000A               	tblrd		*-
 19425  005D4E  0100               	movlb	0	; () banked
 19426  005D50  CFF5 F09C          	movff	tablat,eval_poly@res+3
 19427  005D54  D058               	goto	l9572
 19428  005D56                     l9570:
 19429                           
 19430                           ; BSR set to: 0
 19431  005D56  C099  F06B         	movff	eval_poly@res,___flmul@f2
 19432  005D5A  C09A  F06C         	movff	eval_poly@res+1,___flmul@f2+1
 19433  005D5E  C09B  F06D         	movff	eval_poly@res+2,___flmul@f2+2
 19434  005D62  C09C  F06E         	movff	eval_poly@res+3,___flmul@f2+3
 19435  005D66  C08D  F067         	movff	eval_poly@x,___flmul@f1
 19436  005D6A  C08E  F068         	movff	eval_poly@x+1,___flmul@f1+1
 19437  005D6E  C08F  F069         	movff	eval_poly@x+2,___flmul@f1+2
 19438  005D72  C090  F06A         	movff	eval_poly@x+3,___flmul@f1+3
 19439  005D76  EC1E  F028         	call	___flmul	;wreg free
 19440  005D7A  C067  F07E         	movff	?___flmul,___fladd@f1
 19441  005D7E  C068  F07F         	movff	?___flmul+1,___fladd@f1+1
 19442  005D82  C069  F080         	movff	?___flmul+2,___fladd@f1+2
 19443  005D86  C06A  F081         	movff	?___flmul+3,___fladd@f1+3
 19444  005D8A  0100               	movlb	0	; () banked
 19445  005D8C  EE20  F093         	lfsr	2,eval_poly@n
 19446  005D90  06DE               	decf	postinc2,f,c
 19447  005D92  0E00               	movlw	0
 19448  005D94  5ADD               	subwfb	postdec2,f,c
 19449  005D96  CFDE F095          	movff	postinc2,??_eval_poly
 19450  005D9A  CFDD F096          	movff	postdec2,??_eval_poly+1
 19451  005D9E  0100               	movlb	0	; () banked
 19452  005DA0  90D8               	bcf	status,0,c
 19453  005DA2  3795               	rlcf	??_eval_poly& (0+255),f,b
 19454  005DA4  3796               	rlcf	(??_eval_poly+1)& (0+255),f,b
 19455  005DA6  0100               	movlb	0	; () banked
 19456  005DA8  90D8               	bcf	status,0,c
 19457  005DAA  3795               	rlcf	??_eval_poly& (0+255),f,b
 19458  005DAC  3796               	rlcf	(??_eval_poly+1)& (0+255),f,b
 19459  005DAE  0100               	movlb	0	; () banked
 19460  005DB0  C091  F097         	movff	eval_poly@d,??_eval_poly+2
 19461  005DB4  0100               	movlb	0	; () banked
 19462  005DB6  C092  F098         	movff	eval_poly@d+1,??_eval_poly+3
 19463  005DBA  0100               	movlb	0	; () banked
 19464  005DBC  5195               	movf	??_eval_poly& (0+255),w,b
 19465  005DBE  0100               	movlb	0	; () banked
 19466  005DC0  2797               	addwf	(??_eval_poly+2)& (0+255),f,b
 19467  005DC2  0100               	movlb	0	; () banked
 19468  005DC4  5196               	movf	(??_eval_poly+1)& (0+255),w,b
 19469  005DC6  0100               	movlb	0	; () banked
 19470  005DC8  2398               	addwfc	(??_eval_poly+3)& (0+255),f,b
 19471  005DCA  C097  FFF6         	movff	??_eval_poly+2,tblptrl
 19472  005DCE  C098  FFF7         	movff	??_eval_poly+3,tblptrh
 19473  005DD2                     	if	0	;tblptru may be non-zero
 19474  005DD2                     	endif
 19475  005DD2                     	if	0	;tblptru may be non-zero
 19476  005DD2                     	endif
 19477  005DD2  0009               	tblrd		*+
 19478  005DD4  0100               	movlb	0	; () banked
 19479  005DD6  CFF5 F082          	movff	tablat,___fladd@f2
 19480  005DDA  0009               	tblrd		*+
 19481  005DDC  0100               	movlb	0	; () banked
 19482  005DDE  CFF5 F083          	movff	tablat,___fladd@f2+1
 19483  005DE2  0009               	tblrd		*+
 19484  005DE4  0100               	movlb	0	; () banked
 19485  005DE6  CFF5 F084          	movff	tablat,___fladd@f2+2
 19486  005DEA  000A               	tblrd		*-
 19487  005DEC  0100               	movlb	0	; () banked
 19488  005DEE  CFF5 F085          	movff	tablat,___fladd@f2+3
 19489  005DF2  EC75  F020         	call	___fladd	;wreg free
 19490  005DF6  C07E  F099         	movff	?___fladd,eval_poly@res
 19491  005DFA  C07F  F09A         	movff	?___fladd+1,eval_poly@res+1
 19492  005DFE  C080  F09B         	movff	?___fladd+2,eval_poly@res+2
 19493  005E02  C081  F09C         	movff	?___fladd+3,eval_poly@res+3
 19494  005E06                     l9572:
 19495  005E06  0100               	movlb	0	; () banked
 19496  005E08  5194               	movf	(eval_poly@n+1)& (0+255),w,b
 19497  005E0A  1193               	iorwf	eval_poly@n& (0+255),w,b
 19498  005E0C  A4D8               	btfss	status,2,c
 19499  005E0E  D7A3               	goto	l9570
 19500                           
 19501                           ; BSR set to: 0
 19502  005E10  C099  F08D         	movff	eval_poly@res,?_eval_poly
 19503  005E14  C09A  F08E         	movff	eval_poly@res+1,?_eval_poly+1
 19504  005E18  C09B  F08F         	movff	eval_poly@res+2,?_eval_poly+2
 19505  005E1C  C09C  F090         	movff	eval_poly@res+3,?_eval_poly+3
 19506                           
 19507                           ; BSR set to: 0
 19508  005E20  0012               	return	
 19509  005E22                     __end_of_eval_poly:
 19510                           	opt stack 0
 19511                           tblptru	equ	0xFF8
 19512                           tblptrh	equ	0xFF7
 19513                           tblptrl	equ	0xFF6
 19514                           tablat	equ	0xFF5
 19515                           prodh	equ	0xFF4
 19516                           prodl	equ	0xFF3
 19517                           intcon	equ	0xFF2
 19518                           postinc0	equ	0xFEE
 19519                           wreg	equ	0xFE8
 19520                           indf1	equ	0xFE7
 19521                           postdec1	equ	0xFE5
 19522                           fsr1h	equ	0xFE2
 19523                           fsr1l	equ	0xFE1
 19524                           indf2	equ	0xFDF
 19525                           postinc2	equ	0xFDE
 19526                           postdec2	equ	0xFDD
 19527                           plusw2	equ	0xFDB
 19528                           fsr2h	equ	0xFDA
 19529                           fsr2l	equ	0xFD9
 19530                           status	equ	0xFD8
 19531                           
 19532 ;; *************** function ___flsub *****************
 19533 ;; Defined at:
 19534 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\flsub.c"
 19535 ;; Parameters:    Size  Location     Type
 19536 ;;  f1              4   45[BANK0 ] int 
 19537 ;;  f2              4   49[BANK0 ] int 
 19538 ;; Auto vars:     Size  Location     Type
 19539 ;;		None
 19540 ;; Return value:  Size  Location     Type
 19541 ;;                  4   45[BANK0 ] int 
 19542 ;; Registers used:
 19543 ;;		wreg, status,2, status,0, cstack
 19544 ;; Tracked objects:
 19545 ;;		On entry : 0/0
 19546 ;;		On exit  : 0/0
 19547 ;;		Unchanged: 0/0
 19548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19549 ;;      Params:         0       8       0       0       0       0       0
 19550 ;;      Locals:         0       0       0       0       0       0       0
 19551 ;;      Temps:          0       0       0       0       0       0       0
 19552 ;;      Totals:         0       8       0       0       0       0       0
 19553 ;;Total ram usage:        8 bytes
 19554 ;; Hardware stack levels used:    1
 19555 ;; Hardware stack levels required when called:    4
 19556 ;; This function calls:
 19557 ;;		___fladd
 19558 ;; This function is called by:
 19559 ;;		_doWork
 19560 ;;		_exp
 19561 ;; This function uses a non-reentrant model
 19562 ;;
 19563                           
 19564                           	psect	text74
 19565  006F08                     __ptext74:
 19566                           	opt stack 0
 19567  006F08                     ___flsub:
 19568                           	opt stack 24
 19569                           
 19570                           ; BSR set to: 0
 19571                           ;incstack = 0
 19572  006F08  0E00               	movlw	0
 19573  006F0A  0100               	movlb	0	; () banked
 19574  006F0C  1B91               	xorwf	___flsub@f2& (0+255),f,b
 19575  006F0E  0E00               	movlw	0
 19576  006F10  0100               	movlb	0	; () banked
 19577  006F12  1B92               	xorwf	(___flsub@f2+1)& (0+255),f,b
 19578  006F14  0E00               	movlw	0
 19579  006F16  0100               	movlb	0	; () banked
 19580  006F18  1B93               	xorwf	(___flsub@f2+2)& (0+255),f,b
 19581  006F1A  0E80               	movlw	128
 19582  006F1C  0100               	movlb	0	; () banked
 19583  006F1E  1B94               	xorwf	(___flsub@f2+3)& (0+255),f,b
 19584                           
 19585                           ; BSR set to: 0
 19586  006F20  C08D  F07E         	movff	___flsub@f1,___fladd@f1
 19587  006F24  C08E  F07F         	movff	___flsub@f1+1,___fladd@f1+1
 19588  006F28  C08F  F080         	movff	___flsub@f1+2,___fladd@f1+2
 19589  006F2C  C090  F081         	movff	___flsub@f1+3,___fladd@f1+3
 19590  006F30  C091  F082         	movff	___flsub@f2,___fladd@f2
 19591  006F34  C092  F083         	movff	___flsub@f2+1,___fladd@f2+1
 19592  006F38  C093  F084         	movff	___flsub@f2+2,___fladd@f2+2
 19593  006F3C  C094  F085         	movff	___flsub@f2+3,___fladd@f2+3
 19594  006F40  EC75  F020         	call	___fladd	;wreg free
 19595  006F44  C07E  F08D         	movff	?___fladd,?___flsub
 19596  006F48  C07F  F08E         	movff	?___fladd+1,?___flsub+1
 19597  006F4C  C080  F08F         	movff	?___fladd+2,?___flsub+2
 19598  006F50  C081  F090         	movff	?___fladd+3,?___flsub+3
 19599  006F54  0012               	return	
 19600  006F56                     __end_of___flsub:
 19601                           	opt stack 0
 19602                           tblptru	equ	0xFF8
 19603                           tblptrh	equ	0xFF7
 19604                           tblptrl	equ	0xFF6
 19605                           tablat	equ	0xFF5
 19606                           prodh	equ	0xFF4
 19607                           prodl	equ	0xFF3
 19608                           intcon	equ	0xFF2
 19609                           postinc0	equ	0xFEE
 19610                           wreg	equ	0xFE8
 19611                           indf1	equ	0xFE7
 19612                           postdec1	equ	0xFE5
 19613                           fsr1h	equ	0xFE2
 19614                           fsr1l	equ	0xFE1
 19615                           indf2	equ	0xFDF
 19616                           postinc2	equ	0xFDE
 19617                           postdec2	equ	0xFDD
 19618                           plusw2	equ	0xFDB
 19619                           fsr2h	equ	0xFDA
 19620                           fsr2l	equ	0xFD9
 19621                           status	equ	0xFD8
 19622                           
 19623 ;; *************** function ___flneg *****************
 19624 ;; Defined at:
 19625 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\flneg.c"
 19626 ;; Parameters:    Size  Location     Type
 19627 ;;  f1              4   26[BANK0 ] int 
 19628 ;; Auto vars:     Size  Location     Type
 19629 ;;		None
 19630 ;; Return value:  Size  Location     Type
 19631 ;;                  4   26[BANK0 ] int 
 19632 ;; Registers used:
 19633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19634 ;; Tracked objects:
 19635 ;;		On entry : 0/0
 19636 ;;		On exit  : 0/0
 19637 ;;		Unchanged: 0/0
 19638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19639 ;;      Params:         0       4       0       0       0       0       0
 19640 ;;      Locals:         0       0       0       0       0       0       0
 19641 ;;      Temps:          0       0       0       0       0       0       0
 19642 ;;      Totals:         0       4       0       0       0       0       0
 19643 ;;Total ram usage:        4 bytes
 19644 ;; Hardware stack levels used:    1
 19645 ;; Hardware stack levels required when called:    2
 19646 ;; This function calls:
 19647 ;;		Nothing
 19648 ;; This function is called by:
 19649 ;;		_doWork
 19650 ;;		_exp
 19651 ;; This function uses a non-reentrant model
 19652 ;;
 19653                           
 19654                           	psect	text75
 19655  007172                     __ptext75:
 19656                           	opt stack 0
 19657  007172                     ___flneg:
 19658                           	opt stack 26
 19659                           
 19660                           ;incstack = 0
 19661  007172  0100               	movlb	0	; () banked
 19662  007174  EE20  F07A         	lfsr	2,___flneg@f1
 19663  007178  50DE               	movf	postinc2,w,c
 19664  00717A  10DE               	iorwf	postinc2,w,c
 19665  00717C  10DE               	iorwf	postinc2,w,c
 19666  00717E  10DE               	iorwf	postinc2,w,c
 19667  007180  B4D8               	btfsc	status,2,c
 19668  007182  D00C               	goto	l9616
 19669                           
 19670                           ; BSR set to: 0
 19671  007184  0E00               	movlw	0
 19672  007186  0100               	movlb	0	; () banked
 19673  007188  1B7A               	xorwf	___flneg@f1& (0+255),f,b
 19674  00718A  0E00               	movlw	0
 19675  00718C  0100               	movlb	0	; () banked
 19676  00718E  1B7B               	xorwf	(___flneg@f1+1)& (0+255),f,b
 19677  007190  0E00               	movlw	0
 19678  007192  0100               	movlb	0	; () banked
 19679  007194  1B7C               	xorwf	(___flneg@f1+2)& (0+255),f,b
 19680  007196  0E80               	movlw	128
 19681  007198  0100               	movlb	0	; () banked
 19682  00719A  1B7D               	xorwf	(___flneg@f1+3)& (0+255),f,b
 19683  00719C                     l9616:
 19684                           
 19685                           ; BSR set to: 0
 19686  00719C  C07A  F07A         	movff	___flneg@f1,?___flneg
 19687  0071A0  C07B  F07B         	movff	___flneg@f1+1,?___flneg+1
 19688  0071A4  C07C  F07C         	movff	___flneg@f1+2,?___flneg+2
 19689  0071A8  C07D  F07D         	movff	___flneg@f1+3,?___flneg+3
 19690                           
 19691                           ; BSR set to: 0
 19692                           
 19693                           ; BSR set to: 0
 19694  0071AC  0012               	return	
 19695  0071AE                     __end_of___flneg:
 19696                           	opt stack 0
 19697                           tblptru	equ	0xFF8
 19698                           tblptrh	equ	0xFF7
 19699                           tblptrl	equ	0xFF6
 19700                           tablat	equ	0xFF5
 19701                           prodh	equ	0xFF4
 19702                           prodl	equ	0xFF3
 19703                           intcon	equ	0xFF2
 19704                           postinc0	equ	0xFEE
 19705                           wreg	equ	0xFE8
 19706                           indf1	equ	0xFE7
 19707                           postdec1	equ	0xFE5
 19708                           fsr1h	equ	0xFE2
 19709                           fsr1l	equ	0xFE1
 19710                           indf2	equ	0xFDF
 19711                           postinc2	equ	0xFDE
 19712                           postdec2	equ	0xFDD
 19713                           plusw2	equ	0xFDB
 19714                           fsr2h	equ	0xFDA
 19715                           fsr2l	equ	0xFD9
 19716                           status	equ	0xFD8
 19717                           
 19718 ;; *************** function ___lwtofl *****************
 19719 ;; Defined at:
 19720 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwtofl.c"
 19721 ;; Parameters:    Size  Location     Type
 19722 ;;  c               2   33[COMRAM] unsigned int 
 19723 ;; Auto vars:     Size  Location     Type
 19724 ;;		None
 19725 ;; Return value:  Size  Location     Type
 19726 ;;                  4   33[COMRAM] unsigned int 
 19727 ;; Registers used:
 19728 ;;		wreg, status,2, status,0, cstack
 19729 ;; Tracked objects:
 19730 ;;		On entry : 0/0
 19731 ;;		On exit  : 0/0
 19732 ;;		Unchanged: 0/0
 19733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19734 ;;      Params:         4       0       0       0       0       0       0
 19735 ;;      Locals:         0       0       0       0       0       0       0
 19736 ;;      Temps:          0       0       0       0       0       0       0
 19737 ;;      Totals:         4       0       0       0       0       0       0
 19738 ;;Total ram usage:        4 bytes
 19739 ;; Hardware stack levels used:    1
 19740 ;; Hardware stack levels required when called:    3
 19741 ;; This function calls:
 19742 ;;		___flpack
 19743 ;; This function is called by:
 19744 ;;		_doWork
 19745 ;; This function uses a non-reentrant model
 19746 ;;
 19747                           
 19748                           	psect	text76
 19749  0072A4                     __ptext76:
 19750                           	opt stack 0
 19751  0072A4                     ___lwtofl:
 19752                           	opt stack 26
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;incstack = 0
 19756  0072A4  C022  F018         	movff	___lwtofl@c,___flpack@arg
 19757  0072A8  C023  F019         	movff	___lwtofl@c+1,___flpack@arg+1
 19758  0072AC  6A1A               	clrf	___flpack@arg+2,c
 19759  0072AE  6A1B               	clrf	___flpack@arg+3,c
 19760  0072B0  0E96               	movlw	150
 19761  0072B2  6E1C               	movwf	___flpack@exp,c
 19762  0072B4  0E00               	movlw	0
 19763  0072B6  6E1D               	movwf	___flpack@sign,c
 19764  0072B8  ECD1  F031         	call	___flpack	;wreg free
 19765  0072BC  C018  F022         	movff	?___flpack,?___lwtofl
 19766  0072C0  C019  F023         	movff	?___flpack+1,?___lwtofl+1
 19767  0072C4  C01A  F024         	movff	?___flpack+2,?___lwtofl+2
 19768  0072C8  C01B  F025         	movff	?___flpack+3,?___lwtofl+3
 19769  0072CC  0012               	return	
 19770  0072CE                     __end_of___lwtofl:
 19771                           	opt stack 0
 19772                           tblptru	equ	0xFF8
 19773                           tblptrh	equ	0xFF7
 19774                           tblptrl	equ	0xFF6
 19775                           tablat	equ	0xFF5
 19776                           prodh	equ	0xFF4
 19777                           prodl	equ	0xFF3
 19778                           intcon	equ	0xFF2
 19779                           postinc0	equ	0xFEE
 19780                           wreg	equ	0xFE8
 19781                           indf1	equ	0xFE7
 19782                           postdec1	equ	0xFE5
 19783                           fsr1h	equ	0xFE2
 19784                           fsr1l	equ	0xFE1
 19785                           indf2	equ	0xFDF
 19786                           postinc2	equ	0xFDE
 19787                           postdec2	equ	0xFDD
 19788                           plusw2	equ	0xFDB
 19789                           fsr2h	equ	0xFDA
 19790                           fsr2l	equ	0xFD9
 19791                           status	equ	0xFD8
 19792                           
 19793 ;; *************** function ___aldiv *****************
 19794 ;; Defined at:
 19795 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
 19796 ;; Parameters:    Size  Location     Type
 19797 ;;  dividend        4   36[BANK0 ] long 
 19798 ;;  divisor         4   40[BANK0 ] long 
 19799 ;; Auto vars:     Size  Location     Type
 19800 ;;  quotient        4   46[BANK0 ] long 
 19801 ;;  sign            1   45[BANK0 ] unsigned char 
 19802 ;;  counter         1   44[BANK0 ] unsigned char 
 19803 ;; Return value:  Size  Location     Type
 19804 ;;                  4   36[BANK0 ] long 
 19805 ;; Registers used:
 19806 ;;		wreg, status,2, status,0
 19807 ;; Tracked objects:
 19808 ;;		On entry : 0/0
 19809 ;;		On exit  : 0/0
 19810 ;;		Unchanged: 0/0
 19811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19812 ;;      Params:         0       8       0       0       0       0       0
 19813 ;;      Locals:         0       6       0       0       0       0       0
 19814 ;;      Temps:          0       0       0       0       0       0       0
 19815 ;;      Totals:         0      14       0       0       0       0       0
 19816 ;;Total ram usage:       14 bytes
 19817 ;; Hardware stack levels used:    1
 19818 ;; Hardware stack levels required when called:    2
 19819 ;; This function calls:
 19820 ;;		Nothing
 19821 ;; This function is called by:
 19822 ;;		_doWork
 19823 ;; This function uses a non-reentrant model
 19824 ;;
 19825                           
 19826                           	psect	text77
 19827  005202                     __ptext77:
 19828                           	opt stack 0
 19829  005202                     ___aldiv:
 19830                           	opt stack 27
 19831                           
 19832                           ;incstack = 0
 19833  005202  0E00               	movlw	0
 19834  005204  0100               	movlb	0	; () banked
 19835  005206  6F8D               	movwf	___aldiv@sign& (0+255),b
 19836                           
 19837                           ; BSR set to: 0
 19838  005208  0100               	movlb	0	; () banked
 19839  00520A  518B               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19840  00520C  0A80               	xorlw	128
 19841  00520E  0F80               	addlw	128
 19842  005210  E10B               	bnz	u10185
 19843  005212  0E00               	movlw	0
 19844  005214  0100               	movlb	0	; () banked
 19845  005216  5D8A               	subwf	(___aldiv@divisor+2)& (0+255),w,b
 19846  005218  E107               	bnz	u10185
 19847  00521A  0E00               	movlw	0
 19848  00521C  0100               	movlb	0	; () banked
 19849  00521E  5D89               	subwf	(___aldiv@divisor+1)& (0+255),w,b
 19850  005220  E103               	bnz	u10185
 19851  005222  0E00               	movlw	0
 19852  005224  0100               	movlb	0	; () banked
 19853  005226  5D88               	subwf	___aldiv@divisor& (0+255),w,b
 19854  005228                     u10185:
 19855  005228  B0D8               	btfsc	status,0,c
 19856  00522A  D012               	goto	l9830
 19857                           
 19858                           ; BSR set to: 0
 19859  00522C  0100               	movlb	0	; () banked
 19860  00522E  1F8B               	comf	(___aldiv@divisor+3)& (0+255),f,b
 19861  005230  0100               	movlb	0	; () banked
 19862  005232  1F8A               	comf	(___aldiv@divisor+2)& (0+255),f,b
 19863  005234  0100               	movlb	0	; () banked
 19864  005236  1F89               	comf	(___aldiv@divisor+1)& (0+255),f,b
 19865  005238  0100               	movlb	0	; () banked
 19866  00523A  6D88               	negf	___aldiv@divisor& (0+255),b
 19867  00523C  0E00               	movlw	0
 19868  00523E  0100               	movlb	0	; () banked
 19869  005240  2389               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 19870  005242  0100               	movlb	0	; () banked
 19871  005244  238A               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 19872  005246  0100               	movlb	0	; () banked
 19873  005248  238B               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 19874                           
 19875                           ; BSR set to: 0
 19876  00524A  0E01               	movlw	1
 19877  00524C  0100               	movlb	0	; () banked
 19878  00524E  6F8D               	movwf	___aldiv@sign& (0+255),b
 19879  005250                     l9830:
 19880                           
 19881                           ; BSR set to: 0
 19882  005250  0100               	movlb	0	; () banked
 19883  005252  5187               	movf	(___aldiv@dividend+3)& (0+255),w,b
 19884  005254  0A80               	xorlw	128
 19885  005256  0F80               	addlw	128
 19886  005258  E10B               	bnz	u10195
 19887  00525A  0E00               	movlw	0
 19888  00525C  0100               	movlb	0	; () banked
 19889  00525E  5D86               	subwf	(___aldiv@dividend+2)& (0+255),w,b
 19890  005260  E107               	bnz	u10195
 19891  005262  0E00               	movlw	0
 19892  005264  0100               	movlb	0	; () banked
 19893  005266  5D85               	subwf	(___aldiv@dividend+1)& (0+255),w,b
 19894  005268  E103               	bnz	u10195
 19895  00526A  0E00               	movlw	0
 19896  00526C  0100               	movlb	0	; () banked
 19897  00526E  5D84               	subwf	___aldiv@dividend& (0+255),w,b
 19898  005270                     u10195:
 19899  005270  B0D8               	btfsc	status,0,c
 19900  005272  D012               	goto	l9836
 19901                           
 19902                           ; BSR set to: 0
 19903  005274  0100               	movlb	0	; () banked
 19904  005276  1F87               	comf	(___aldiv@dividend+3)& (0+255),f,b
 19905  005278  0100               	movlb	0	; () banked
 19906  00527A  1F86               	comf	(___aldiv@dividend+2)& (0+255),f,b
 19907  00527C  0100               	movlb	0	; () banked
 19908  00527E  1F85               	comf	(___aldiv@dividend+1)& (0+255),f,b
 19909  005280  0100               	movlb	0	; () banked
 19910  005282  6D84               	negf	___aldiv@dividend& (0+255),b
 19911  005284  0E00               	movlw	0
 19912  005286  0100               	movlb	0	; () banked
 19913  005288  2385               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 19914  00528A  0100               	movlb	0	; () banked
 19915  00528C  2386               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 19916  00528E  0100               	movlb	0	; () banked
 19917  005290  2387               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 19918                           
 19919                           ; BSR set to: 0
 19920  005292  0E01               	movlw	1
 19921  005294  0100               	movlb	0	; () banked
 19922  005296  1B8D               	xorwf	___aldiv@sign& (0+255),f,b
 19923  005298                     l9836:
 19924                           
 19925                           ; BSR set to: 0
 19926  005298  0E00               	movlw	0
 19927  00529A  0100               	movlb	0	; () banked
 19928  00529C  6F8E               	movwf	___aldiv@quotient& (0+255),b
 19929  00529E  0E00               	movlw	0
 19930  0052A0  0100               	movlb	0	; () banked
 19931  0052A2  6F8F               	movwf	(___aldiv@quotient+1)& (0+255),b
 19932  0052A4  0E00               	movlw	0
 19933  0052A6  0100               	movlb	0	; () banked
 19934  0052A8  6F90               	movwf	(___aldiv@quotient+2)& (0+255),b
 19935  0052AA  0E00               	movlw	0
 19936  0052AC  0100               	movlb	0	; () banked
 19937  0052AE  6F91               	movwf	(___aldiv@quotient+3)& (0+255),b
 19938                           
 19939                           ; BSR set to: 0
 19940  0052B0  0100               	movlb	0	; () banked
 19941  0052B2  518B               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19942  0052B4  1188               	iorwf	___aldiv@divisor& (0+255),w,b
 19943  0052B6  1189               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 19944  0052B8  118A               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 19945  0052BA  B4D8               	btfsc	status,2,c
 19946  0052BC  D04E               	goto	l9858
 19947                           
 19948                           ; BSR set to: 0
 19949  0052BE  0E01               	movlw	1
 19950  0052C0  0100               	movlb	0	; () banked
 19951  0052C2  6F8C               	movwf	___aldiv@counter& (0+255),b
 19952  0052C4  D00C               	goto	l9844
 19953  0052C6                     l9842:
 19954                           
 19955                           ; BSR set to: 0
 19956  0052C6  0100               	movlb	0	; () banked
 19957  0052C8  90D8               	bcf	status,0,c
 19958  0052CA  0100               	movlb	0	; () banked
 19959  0052CC  3788               	rlcf	___aldiv@divisor& (0+255),f,b
 19960  0052CE  0100               	movlb	0	; () banked
 19961  0052D0  3789               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 19962  0052D2  0100               	movlb	0	; () banked
 19963  0052D4  378A               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 19964  0052D6  0100               	movlb	0	; () banked
 19965  0052D8  378B               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 19966  0052DA  0100               	movlb	0	; () banked
 19967  0052DC  2B8C               	incf	___aldiv@counter& (0+255),f,b
 19968  0052DE                     l9844:
 19969                           
 19970                           ; BSR set to: 0
 19971  0052DE  0100               	movlb	0	; () banked
 19972  0052E0  AF8B               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19973  0052E2  D7F1               	goto	l9842
 19974  0052E4                     l9846:
 19975                           
 19976                           ; BSR set to: 0
 19977  0052E4  0100               	movlb	0	; () banked
 19978  0052E6  90D8               	bcf	status,0,c
 19979  0052E8  0100               	movlb	0	; () banked
 19980  0052EA  378E               	rlcf	___aldiv@quotient& (0+255),f,b
 19981  0052EC  0100               	movlb	0	; () banked
 19982  0052EE  378F               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 19983  0052F0  0100               	movlb	0	; () banked
 19984  0052F2  3790               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 19985  0052F4  0100               	movlb	0	; () banked
 19986  0052F6  3791               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 19987                           
 19988                           ; BSR set to: 0
 19989  0052F8  0100               	movlb	0	; () banked
 19990  0052FA  5188               	movf	___aldiv@divisor& (0+255),w,b
 19991  0052FC  0100               	movlb	0	; () banked
 19992  0052FE  5D84               	subwf	___aldiv@dividend& (0+255),w,b
 19993  005300  0100               	movlb	0	; () banked
 19994  005302  5189               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19995  005304  0100               	movlb	0	; () banked
 19996  005306  5985               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 19997  005308  0100               	movlb	0	; () banked
 19998  00530A  518A               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19999  00530C  0100               	movlb	0	; () banked
 20000  00530E  5986               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 20001  005310  0100               	movlb	0	; () banked
 20002  005312  518B               	movf	(___aldiv@divisor+3)& (0+255),w,b
 20003  005314  0100               	movlb	0	; () banked
 20004  005316  5987               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 20005  005318  A0D8               	btfss	status,0,c
 20006  00531A  D012               	goto	l9854
 20007                           
 20008                           ; BSR set to: 0
 20009  00531C  0100               	movlb	0	; () banked
 20010  00531E  5188               	movf	___aldiv@divisor& (0+255),w,b
 20011  005320  0100               	movlb	0	; () banked
 20012  005322  5F84               	subwf	___aldiv@dividend& (0+255),f,b
 20013  005324  0100               	movlb	0	; () banked
 20014  005326  5189               	movf	(___aldiv@divisor+1)& (0+255),w,b
 20015  005328  0100               	movlb	0	; () banked
 20016  00532A  5B85               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 20017  00532C  0100               	movlb	0	; () banked
 20018  00532E  518A               	movf	(___aldiv@divisor+2)& (0+255),w,b
 20019  005330  0100               	movlb	0	; () banked
 20020  005332  5B86               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 20021  005334  0100               	movlb	0	; () banked
 20022  005336  518B               	movf	(___aldiv@divisor+3)& (0+255),w,b
 20023  005338  0100               	movlb	0	; () banked
 20024  00533A  5B87               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 20025                           
 20026                           ; BSR set to: 0
 20027  00533C  0100               	movlb	0	; () banked
 20028  00533E  818E               	bsf	___aldiv@quotient& (0+255),0,b
 20029  005340                     l9854:
 20030                           
 20031                           ; BSR set to: 0
 20032  005340  0100               	movlb	0	; () banked
 20033  005342  90D8               	bcf	status,0,c
 20034  005344  0100               	movlb	0	; () banked
 20035  005346  338B               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 20036  005348  0100               	movlb	0	; () banked
 20037  00534A  338A               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 20038  00534C  0100               	movlb	0	; () banked
 20039  00534E  3389               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 20040  005350  0100               	movlb	0	; () banked
 20041  005352  3388               	rrcf	___aldiv@divisor& (0+255),f,b
 20042                           
 20043                           ; BSR set to: 0
 20044  005354  0100               	movlb	0	; () banked
 20045  005356  2F8C               	decfsz	___aldiv@counter& (0+255),f,b
 20046  005358  D7C5               	goto	l9846
 20047  00535A                     l9858:
 20048                           
 20049                           ; BSR set to: 0
 20050  00535A  0100               	movlb	0	; () banked
 20051  00535C  518D               	movf	___aldiv@sign& (0+255),w,b
 20052  00535E  B4D8               	btfsc	status,2,c
 20053  005360  D00F               	goto	l9862
 20054                           
 20055                           ; BSR set to: 0
 20056  005362  0100               	movlb	0	; () banked
 20057  005364  1F91               	comf	(___aldiv@quotient+3)& (0+255),f,b
 20058  005366  0100               	movlb	0	; () banked
 20059  005368  1F90               	comf	(___aldiv@quotient+2)& (0+255),f,b
 20060  00536A  0100               	movlb	0	; () banked
 20061  00536C  1F8F               	comf	(___aldiv@quotient+1)& (0+255),f,b
 20062  00536E  0100               	movlb	0	; () banked
 20063  005370  6D8E               	negf	___aldiv@quotient& (0+255),b
 20064  005372  0E00               	movlw	0
 20065  005374  0100               	movlb	0	; () banked
 20066  005376  238F               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 20067  005378  0100               	movlb	0	; () banked
 20068  00537A  2390               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 20069  00537C  0100               	movlb	0	; () banked
 20070  00537E  2391               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 20071  005380                     l9862:
 20072                           
 20073                           ; BSR set to: 0
 20074  005380  C08E  F084         	movff	___aldiv@quotient,?___aldiv
 20075  005384  C08F  F085         	movff	___aldiv@quotient+1,?___aldiv+1
 20076  005388  C090  F086         	movff	___aldiv@quotient+2,?___aldiv+2
 20077  00538C  C091  F087         	movff	___aldiv@quotient+3,?___aldiv+3
 20078                           
 20079                           ; BSR set to: 0
 20080                           
 20081                           ; BSR set to: 0
 20082  005390  0012               	return	
 20083  005392                     __end_of___aldiv:
 20084                           	opt stack 0
 20085                           tblptru	equ	0xFF8
 20086                           tblptrh	equ	0xFF7
 20087                           tblptrl	equ	0xFF6
 20088                           tablat	equ	0xFF5
 20089                           prodh	equ	0xFF4
 20090                           prodl	equ	0xFF3
 20091                           intcon	equ	0xFF2
 20092                           postinc0	equ	0xFEE
 20093                           wreg	equ	0xFE8
 20094                           indf1	equ	0xFE7
 20095                           postdec1	equ	0xFE5
 20096                           fsr1h	equ	0xFE2
 20097                           fsr1l	equ	0xFE1
 20098                           indf2	equ	0xFDF
 20099                           postinc2	equ	0xFDE
 20100                           postdec2	equ	0xFDD
 20101                           plusw2	equ	0xFDB
 20102                           fsr2h	equ	0xFDA
 20103                           fsr2l	equ	0xFD9
 20104                           status	equ	0xFD8
 20105                           
 20106 ;; *************** function _doOneSecondWork *****************
 20107 ;; Defined at:
 20108 ;;		line 697 in file "../main.c"
 20109 ;; Parameters:    Size  Location     Type
 20110 ;;		None
 20111 ;; Auto vars:     Size  Location     Type
 20112 ;;  i               1   68[BANK0 ] unsigned char 
 20113 ;;  tmp             1   67[BANK0 ] unsigned char 
 20114 ;; Return value:  Size  Location     Type
 20115 ;;		None               void
 20116 ;; Registers used:
 20117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20118 ;; Tracked objects:
 20119 ;;		On entry : 0/0
 20120 ;;		On exit  : 0/0
 20121 ;;		Unchanged: 0/0
 20122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20123 ;;      Params:         0       0       0       0       0       0       0
 20124 ;;      Locals:         0       2       0       0       0       0       0
 20125 ;;      Temps:          0       2       0       0       0       0       0
 20126 ;;      Totals:         0       4       0       0       0       0       0
 20127 ;;Total ram usage:        4 bytes
 20128 ;; Hardware stack levels used:    1
 20129 ;; Hardware stack levels required when called:    8
 20130 ;; This function calls:
 20131 ;;		_readEEPROM
 20132 ;;		_sendTempEvent
 20133 ;;		_vscp_sendEvent
 20134 ;; This function is called by:
 20135 ;;		_main
 20136 ;; This function uses a non-reentrant model
 20137 ;;
 20138                           
 20139                           	psect	text78
 20140  0043DE                     __ptext78:
 20141                           	opt stack 0
 20142  0043DE                     _doOneSecondWork:
 20143                           	opt stack 22
 20144                           
 20145                           ;main.c: 700: uint8_t tmp;
 20146                           ;main.c: 701: uint8_t i;
 20147                           ;main.c: 704: if ( 0x03 == vscp_node_state ) {
 20148                           
 20149                           ; BSR set to: 0
 20150                           ;incstack = 0
 20151  0043DE  0100               	movlb	0	; () banked
 20152  0043E0  51D3               	movf	_vscp_node_state& (0+255),w,b
 20153  0043E2  0A03               	xorlw	3
 20154  0043E4  A4D8               	btfss	status,2,c
 20155  0043E6  D163               	goto	l245
 20156                           
 20157                           ; BSR set to: 0
 20158                           ;main.c: 706: for (i = 0; i < 6; i++) {
 20159  0043E8  0E00               	movlw	0
 20160  0043EA  0100               	movlb	0	; () banked
 20161  0043EC  6FA4               	movwf	doOneSecondWork@i& (0+255),b
 20162  0043EE  D15B               	goto	L190
 20163  0043F0                     l10448:
 20164                           
 20165                           ; BSR set to: 0
 20166                           ;main.c: 709: tmp = readEEPROM(0x49 + i);
 20167  0043F0  0E49               	movlw	73
 20168  0043F2  0100               	movlb	0	; () banked
 20169  0043F4  25A4               	addwf	doOneSecondWork@i& (0+255),w,b
 20170  0043F6  6E1E               	movwf	readEEPROM@address,c
 20171  0043F8  6A1F               	clrf	readEEPROM@address+1,c
 20172  0043FA  0E00               	movlw	0
 20173  0043FC  221F               	addwfc	readEEPROM@address+1,f,c
 20174  0043FE  EC6F  F03A         	call	_readEEPROM	;wreg free
 20175  004402  0100               	movlb	0	; () banked
 20176  004404  6FA3               	movwf	doOneSecondWork@tmp& (0+255),b
 20177                           
 20178                           ; BSR set to: 0
 20179                           ;main.c: 710: if (tmp && (seconds_temp[i] > tmp)) {
 20180  004406  0100               	movlb	0	; () banked
 20181  004408  51A3               	movf	doOneSecondWork@tmp& (0+255),w,b
 20182  00440A  B4D8               	btfsc	status,2,c
 20183  00440C  D024               	goto	l10458
 20184                           
 20185                           ; BSR set to: 0
 20186  00440E  0100               	movlb	0	; () banked
 20187  004410  51A4               	movf	doOneSecondWork@i& (0+255),w,b
 20188  004412  0D01               	mullw	1
 20189  004414  0101               	movlb	1	; () banked
 20190  004416  0E0C               	movlw	low _seconds_temp
 20191  004418  24F3               	addwf	prodl,w,c
 20192  00441A  6ED9               	movwf	fsr2l,c
 20193  00441C  0101               	movlb	1	; () banked
 20194  00441E  0E01               	movlw	high _seconds_temp
 20195  004420  20F4               	addwfc	prodh,w,c
 20196  004422  6EDA               	movwf	fsr2h,c
 20197  004424  50DF               	movf	indf2,w,c
 20198  004426  0100               	movlb	0	; () banked
 20199  004428  5DA3               	subwf	doOneSecondWork@tmp& (0+255),w,b
 20200  00442A  B0D8               	btfsc	status,0,c
 20201  00442C  D014               	goto	l10458
 20202                           
 20203                           ; BSR set to: 0
 20204                           ;main.c: 713: if (sendTempEvent(i)) {
 20205  00442E  0100               	movlb	0	; () banked
 20206  004430  51A4               	movf	doOneSecondWork@i& (0+255),w,b
 20207  004432  EC4B  F034         	call	_sendTempEvent
 20208  004436  0900               	iorlw	0
 20209  004438  B4D8               	btfsc	status,2,c
 20210  00443A  D00D               	goto	l10458
 20211                           
 20212                           ;main.c: 714: seconds_temp[i] = 0;
 20213  00443C  0100               	movlb	0	; () banked
 20214  00443E  51A4               	movf	doOneSecondWork@i& (0+255),w,b
 20215  004440  0D01               	mullw	1
 20216  004442  0101               	movlb	1	; () banked
 20217  004444  0E0C               	movlw	low _seconds_temp
 20218  004446  24F3               	addwf	prodl,w,c
 20219  004448  6ED9               	movwf	fsr2l,c
 20220  00444A  0101               	movlb	1	; () banked
 20221  00444C  0E01               	movlw	high _seconds_temp
 20222  00444E  20F4               	addwfc	prodh,w,c
 20223  004450  6EDA               	movwf	fsr2h,c
 20224  004452  0E00               	movlw	0
 20225  004454  6EDF               	movwf	indf2,c
 20226  004456                     l10458:
 20227                           
 20228                           ;main.c: 715: }
 20229                           ;main.c: 717: }
 20230                           ;main.c: 720: if (0x80 & readEEPROM(0x43 + i)) {
 20231  004456  0E43               	movlw	67
 20232  004458  0100               	movlb	0	; () banked
 20233  00445A  25A4               	addwf	doOneSecondWork@i& (0+255),w,b
 20234  00445C  6E1E               	movwf	readEEPROM@address,c
 20235  00445E  6A1F               	clrf	readEEPROM@address+1,c
 20236  004460  0E00               	movlw	0
 20237  004462  221F               	addwfc	readEEPROM@address+1,f,c
 20238  004464  EC6F  F03A         	call	_readEEPROM	;wreg free
 20239  004468  0100               	movlb	0	; () banked
 20240  00446A  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20241  00446C  0100               	movlb	0	; () banked
 20242  00446E  AFA1               	btfss	??_doOneSecondWork& (0+255),7,b
 20243  004470  D118               	goto	l10508
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;main.c: 723: if (low_alarm & (1 << i)) {
 20247  004472  C0A4  F0A1         	movff	doOneSecondWork@i,??_doOneSecondWork
 20248  004476  0E01               	movlw	1
 20249  004478  0100               	movlb	0	; () banked
 20250  00447A  6FA2               	movwf	(??_doOneSecondWork+1)& (0+255),b
 20251  00447C  0100               	movlb	0	; () banked
 20252  00447E  2BA1               	incf	??_doOneSecondWork& (0+255),f,b
 20253  004480  D003               	goto	u11164
 20254  004482                     u11165:
 20255  004482  0100               	movlb	0	; () banked
 20256  004484  90D8               	bcf	status,0,c
 20257  004486  37A2               	rlcf	(??_doOneSecondWork+1)& (0+255),f,b
 20258  004488                     u11164:
 20259  004488  0100               	movlb	0	; () banked
 20260  00448A  2FA1               	decfsz	??_doOneSecondWork& (0+255),f,b
 20261  00448C  D7FA               	goto	u11165
 20262  00448E  0100               	movlb	0	; () banked
 20263  004490  51A2               	movf	(??_doOneSecondWork+1)& (0+255),w,b
 20264  004492  0100               	movlb	0	; () banked
 20265  004494  15CD               	andwf	_low_alarm& (0+255),w,b
 20266  004496  0900               	iorlw	0
 20267  004498  B4D8               	btfsc	status,2,c
 20268  00449A  D077               	goto	l10484
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;main.c: 726: if (readEEPROM(i + 0x43) & (1<<3)) {
 20272  00449C  0E43               	movlw	67
 20273  00449E  0100               	movlb	0	; () banked
 20274  0044A0  25A4               	addwf	doOneSecondWork@i& (0+255),w,b
 20275  0044A2  6E1E               	movwf	readEEPROM@address,c
 20276  0044A4  6A1F               	clrf	readEEPROM@address+1,c
 20277  0044A6  0E00               	movlw	0
 20278  0044A8  221F               	addwfc	readEEPROM@address+1,f,c
 20279  0044AA  EC6F  F03A         	call	_readEEPROM	;wreg free
 20280  0044AE  0100               	movlb	0	; () banked
 20281  0044B0  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20282  0044B2  0100               	movlb	0	; () banked
 20283  0044B4  A7A1               	btfss	??_doOneSecondWork& (0+255),3,b
 20284  0044B6  D069               	goto	l10484
 20285                           
 20286                           ; BSR set to: 0
 20287                           ;main.c: 729: vscp_omsg.priority = 0x00;
 20288  0044B8  0E00               	movlw	0
 20289  0044BA  0100               	movlb	0	; () banked
 20290  0044BC  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 20291                           
 20292                           ;main.c: 730: vscp_omsg.flags = 0x80 + 3;
 20293  0044BE  0E83               	movlw	131
 20294  0044C0  0100               	movlb	0	; () banked
 20295  0044C2  6FD4               	movwf	_vscp_omsg& (0+255),b
 20296                           
 20297                           ; BSR set to: 0
 20298                           ;main.c: 732: if (readEEPROM(i + 0x43) & (1<<5)) {
 20299  0044C4  0E43               	movlw	67
 20300  0044C6  0100               	movlb	0	; () banked
 20301  0044C8  25A4               	addwf	doOneSecondWork@i& (0+255),w,b
 20302  0044CA  6E1E               	movwf	readEEPROM@address,c
 20303  0044CC  6A1F               	clrf	readEEPROM@address+1,c
 20304  0044CE  0E00               	movlw	0
 20305  0044D0  221F               	addwfc	readEEPROM@address+1,f,c
 20306  0044D2  EC6F  F03A         	call	_readEEPROM	;wreg free
 20307  0044D6  0100               	movlb	0	; () banked
 20308  0044D8  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20309  0044DA  0100               	movlb	0	; () banked
 20310  0044DC  ABA1               	btfss	??_doOneSecondWork& (0+255),5,b
 20311  0044DE  D01E               	goto	l10474
 20312                           
 20313                           ; BSR set to: 0
 20314                           ;main.c: 734: if (readEEPROM(i + 0x43) & (1<<6)) {
 20315  0044E0  0E43               	movlw	67
 20316  0044E2  0100               	movlb	0	; () banked
 20317  0044E4  25A4               	addwf	doOneSecondWork@i& (0+255),w,b
 20318  0044E6  6E1E               	movwf	readEEPROM@address,c
 20319  0044E8  6A1F               	clrf	readEEPROM@address+1,c
 20320  0044EA  0E00               	movlw	0
 20321  0044EC  221F               	addwfc	readEEPROM@address+1,f,c
 20322  0044EE  EC6F  F03A         	call	_readEEPROM	;wreg free
 20323  0044F2  0100               	movlb	0	; () banked
 20324  0044F4  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20325  0044F6  0100               	movlb	0	; () banked
 20326  0044F8  ADA1               	btfss	??_doOneSecondWork& (0+255),6,b
 20327  0044FA  D008               	goto	l10472
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;main.c: 735: vscp_omsg.vscp_class = 30;
 20331  0044FC  0E00               	movlw	0
 20332  0044FE  0100               	movlb	0	; () banked
 20333  004500  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 20334  004502  0E1E               	movlw	30
 20335  004504  0100               	movlb	0	; () banked
 20336  004506  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 20337                           
 20338                           ;main.c: 736: vscp_omsg.vscp_type = 5;
 20339  004508  0E05               	movlw	5
 20340  00450A  D00F               	goto	L187
 20341  00450C                     l10472:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;main.c: 738: else {
 20345                           ;main.c: 739: vscp_omsg.vscp_class = 30;
 20346  00450C  0E00               	movlw	0
 20347  00450E  0100               	movlb	0	; () banked
 20348  004510  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 20349  004512  0E1E               	movlw	30
 20350  004514  0100               	movlb	0	; () banked
 20351  004516  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 20352                           
 20353                           ;main.c: 740: vscp_omsg.vscp_type = 6;
 20354  004518  0E06               	movlw	6
 20355  00451A  D007               	goto	L187
 20356  00451C                     l10474:
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;main.c: 744: else {
 20360                           ;main.c: 746: vscp_omsg.vscp_class = 1;
 20361  00451C  0E00               	movlw	0
 20362  00451E  0100               	movlb	0	; () banked
 20363  004520  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 20364  004522  0E01               	movlw	1
 20365  004524  0100               	movlb	0	; () banked
 20366  004526  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 20367                           
 20368                           ;main.c: 747: vscp_omsg.vscp_type = 2;
 20369  004528  0E02               	movlw	2
 20370  00452A                     L187:
 20371  00452A  0100               	movlb	0	; () banked
 20372  00452C  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 20373                           
 20374                           ; BSR set to: 0
 20375                           ;main.c: 748: }
 20376                           ;main.c: 750: vscp_omsg.data[ 0 ] = i;
 20377                           
 20378                           ; BSR set to: 0
 20379  00452E  C0A4  F0D9         	movff	doOneSecondWork@i,_vscp_omsg+5
 20380                           
 20381                           ; BSR set to: 0
 20382                           ;main.c: 751: vscp_omsg.data[ 1 ] =
 20383                           ;main.c: 752: readEEPROM(2 * i + 0x73);
 20384  004532  0100               	movlb	0	; () banked
 20385  004534  51A4               	movf	doOneSecondWork@i& (0+255),w,b
 20386  004536  0100               	movlb	0	; () banked
 20387  004538  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20388  00453A  6BA2               	clrf	(??_doOneSecondWork+1)& (0+255),b
 20389  00453C  90D8               	bcf	status,0,c
 20390  00453E  0100               	movlb	0	; () banked
 20391  004540  37A1               	rlcf	??_doOneSecondWork& (0+255),f,b
 20392  004542  37A2               	rlcf	(??_doOneSecondWork+1)& (0+255),f,b
 20393  004544  0E73               	movlw	115
 20394  004546  0100               	movlb	0	; () banked
 20395  004548  25A1               	addwf	??_doOneSecondWork& (0+255),w,b
 20396  00454A  6E1E               	movwf	readEEPROM@address,c
 20397  00454C  0E00               	movlw	0
 20398  00454E  0100               	movlb	0	; () banked
 20399  004550  21A2               	addwfc	(??_doOneSecondWork+1)& (0+255),w,b
 20400  004552  6E1F               	movwf	readEEPROM@address+1,c
 20401  004554  EC6F  F03A         	call	_readEEPROM	;wreg free
 20402  004558  0100               	movlb	0	; () banked
 20403  00455A  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
 20404                           
 20405                           ; BSR set to: 0
 20406                           ;main.c: 753: vscp_omsg.data[ 2 ] =
 20407                           ;main.c: 754: readEEPROM(2 * i + 0x74);
 20408  00455C  0100               	movlb	0	; () banked
 20409  00455E  51A4               	movf	doOneSecondWork@i& (0+255),w,b
 20410  004560  0100               	movlb	0	; () banked
 20411  004562  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20412  004564  6BA2               	clrf	(??_doOneSecondWork+1)& (0+255),b
 20413  004566  90D8               	bcf	status,0,c
 20414  004568  0100               	movlb	0	; () banked
 20415  00456A  37A1               	rlcf	??_doOneSecondWork& (0+255),f,b
 20416  00456C  37A2               	rlcf	(??_doOneSecondWork+1)& (0+255),f,b
 20417  00456E  0E74               	movlw	116
 20418  004570  0100               	movlb	0	; () banked
 20419  004572  25A1               	addwf	??_doOneSecondWork& (0+255),w,b
 20420  004574  6E1E               	movwf	readEEPROM@address,c
 20421  004576  0E00               	movlw	0
 20422  004578  0100               	movlb	0	; () banked
 20423  00457A  21A2               	addwfc	(??_doOneSecondWork+1)& (0+255),w,b
 20424  00457C  6E1F               	movwf	readEEPROM@address+1,c
 20425  00457E  EC6F  F03A         	call	_readEEPROM	;wreg free
 20426  004582  0100               	movlb	0	; () banked
 20427  004584  6FDB               	movwf	(_vscp_omsg+7)& (0+255),b
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;main.c: 759: vscp_sendEvent();
 20431  004586  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 20432  00458A                     l10484:
 20433                           
 20434                           ;main.c: 761: }
 20435                           ;main.c: 762: }
 20436                           ;main.c: 765: if (high_alarm & (1 << i)) {
 20437  00458A  C0A4  F0A1         	movff	doOneSecondWork@i,??_doOneSecondWork
 20438  00458E  0E01               	movlw	1
 20439  004590  0100               	movlb	0	; () banked
 20440  004592  6FA2               	movwf	(??_doOneSecondWork+1)& (0+255),b
 20441  004594  0100               	movlb	0	; () banked
 20442  004596  2BA1               	incf	??_doOneSecondWork& (0+255),f,b
 20443  004598  D003               	goto	u11214
 20444  00459A                     u11215:
 20445  00459A  0100               	movlb	0	; () banked
 20446  00459C  90D8               	bcf	status,0,c
 20447  00459E  37A2               	rlcf	(??_doOneSecondWork+1)& (0+255),f,b
 20448  0045A0                     u11214:
 20449  0045A0  0100               	movlb	0	; () banked
 20450  0045A2  2FA1               	decfsz	??_doOneSecondWork& (0+255),f,b
 20451  0045A4  D7FA               	goto	u11215
 20452  0045A6  0100               	movlb	0	; () banked
 20453  0045A8  51A2               	movf	(??_doOneSecondWork+1)& (0+255),w,b
 20454  0045AA  0100               	movlb	0	; () banked
 20455  0045AC  15CC               	andwf	_high_alarm& (0+255),w,b
 20456  0045AE  0900               	iorlw	0
 20457  0045B0  B4D8               	btfsc	status,2,c
 20458  0045B2  D077               	goto	l10508
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;main.c: 768: if ((readEEPROM(i + 0x43) & (1<<4))) {
 20462  0045B4  0E43               	movlw	67
 20463  0045B6  0100               	movlb	0	; () banked
 20464  0045B8  25A4               	addwf	doOneSecondWork@i& (0+255),w,b
 20465  0045BA  6E1E               	movwf	readEEPROM@address,c
 20466  0045BC  6A1F               	clrf	readEEPROM@address+1,c
 20467  0045BE  0E00               	movlw	0
 20468  0045C0  221F               	addwfc	readEEPROM@address+1,f,c
 20469  0045C2  EC6F  F03A         	call	_readEEPROM	;wreg free
 20470  0045C6  0100               	movlb	0	; () banked
 20471  0045C8  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20472  0045CA  0100               	movlb	0	; () banked
 20473  0045CC  A9A1               	btfss	??_doOneSecondWork& (0+255),4,b
 20474  0045CE  D069               	goto	l10508
 20475                           
 20476                           ; BSR set to: 0
 20477                           ;main.c: 770: vscp_omsg.priority = 0x00;
 20478  0045D0  0E00               	movlw	0
 20479  0045D2  0100               	movlb	0	; () banked
 20480  0045D4  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 20481                           
 20482                           ;main.c: 771: vscp_omsg.flags = 0x80 + 3;
 20483  0045D6  0E83               	movlw	131
 20484  0045D8  0100               	movlb	0	; () banked
 20485  0045DA  6FD4               	movwf	_vscp_omsg& (0+255),b
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;main.c: 773: if (readEEPROM(i + 0x43) & (1<<5)) {
 20489  0045DC  0E43               	movlw	67
 20490  0045DE  0100               	movlb	0	; () banked
 20491  0045E0  25A4               	addwf	doOneSecondWork@i& (0+255),w,b
 20492  0045E2  6E1E               	movwf	readEEPROM@address,c
 20493  0045E4  6A1F               	clrf	readEEPROM@address+1,c
 20494  0045E6  0E00               	movlw	0
 20495  0045E8  221F               	addwfc	readEEPROM@address+1,f,c
 20496  0045EA  EC6F  F03A         	call	_readEEPROM	;wreg free
 20497  0045EE  0100               	movlb	0	; () banked
 20498  0045F0  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20499  0045F2  0100               	movlb	0	; () banked
 20500  0045F4  ABA1               	btfss	??_doOneSecondWork& (0+255),5,b
 20501  0045F6  D01E               	goto	l10498
 20502                           
 20503                           ; BSR set to: 0
 20504                           ;main.c: 774: if (readEEPROM(i + 0x43) & (1<<6)) {
 20505  0045F8  0E43               	movlw	67
 20506  0045FA  0100               	movlb	0	; () banked
 20507  0045FC  25A4               	addwf	doOneSecondWork@i& (0+255),w,b
 20508  0045FE  6E1E               	movwf	readEEPROM@address,c
 20509  004600  6A1F               	clrf	readEEPROM@address+1,c
 20510  004602  0E00               	movlw	0
 20511  004604  221F               	addwfc	readEEPROM@address+1,f,c
 20512  004606  EC6F  F03A         	call	_readEEPROM	;wreg free
 20513  00460A  0100               	movlb	0	; () banked
 20514  00460C  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20515  00460E  0100               	movlb	0	; () banked
 20516  004610  ADA1               	btfss	??_doOneSecondWork& (0+255),6,b
 20517  004612  D008               	goto	l10496
 20518                           
 20519                           ; BSR set to: 0
 20520                           ;main.c: 775: vscp_omsg.vscp_class = 30;
 20521  004614  0E00               	movlw	0
 20522  004616  0100               	movlb	0	; () banked
 20523  004618  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 20524  00461A  0E1E               	movlw	30
 20525  00461C  0100               	movlb	0	; () banked
 20526  00461E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 20527                           
 20528                           ;main.c: 776: vscp_omsg.vscp_type = 6;
 20529  004620  0E06               	movlw	6
 20530  004622  D00F               	goto	L189
 20531  004624                     l10496:
 20532                           
 20533                           ; BSR set to: 0
 20534                           ;main.c: 778: else {
 20535                           ;main.c: 779: vscp_omsg.vscp_class = 30;
 20536  004624  0E00               	movlw	0
 20537  004626  0100               	movlb	0	; () banked
 20538  004628  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 20539  00462A  0E1E               	movlw	30
 20540  00462C  0100               	movlb	0	; () banked
 20541  00462E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 20542                           
 20543                           ;main.c: 780: vscp_omsg.vscp_type = 5;
 20544  004630  0E05               	movlw	5
 20545  004632  D007               	goto	L189
 20546  004634                     l10498:
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;main.c: 783: else {
 20550                           ;main.c: 785: vscp_omsg.vscp_class = 1;
 20551  004634  0E00               	movlw	0
 20552  004636  0100               	movlb	0	; () banked
 20553  004638  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 20554  00463A  0E01               	movlw	1
 20555  00463C  0100               	movlb	0	; () banked
 20556  00463E  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 20557                           
 20558                           ;main.c: 786: vscp_omsg.vscp_type = 2;
 20559  004640  0E02               	movlw	2
 20560  004642                     L189:
 20561  004642  0100               	movlb	0	; () banked
 20562  004644  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 20563                           
 20564                           ; BSR set to: 0
 20565                           ;main.c: 787: }
 20566                           ;main.c: 789: vscp_omsg.data[ 0 ] = i;
 20567                           
 20568                           ; BSR set to: 0
 20569  004646  C0A4  F0D9         	movff	doOneSecondWork@i,_vscp_omsg+5
 20570                           
 20571                           ; BSR set to: 0
 20572                           ;main.c: 790: vscp_omsg.data[ 1 ] = readEEPROM(2 * i +
 20573                           ;main.c: 791: 0x73);
 20574  00464A  0100               	movlb	0	; () banked
 20575  00464C  51A4               	movf	doOneSecondWork@i& (0+255),w,b
 20576  00464E  0100               	movlb	0	; () banked
 20577  004650  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20578  004652  6BA2               	clrf	(??_doOneSecondWork+1)& (0+255),b
 20579  004654  90D8               	bcf	status,0,c
 20580  004656  0100               	movlb	0	; () banked
 20581  004658  37A1               	rlcf	??_doOneSecondWork& (0+255),f,b
 20582  00465A  37A2               	rlcf	(??_doOneSecondWork+1)& (0+255),f,b
 20583  00465C  0E73               	movlw	115
 20584  00465E  0100               	movlb	0	; () banked
 20585  004660  25A1               	addwf	??_doOneSecondWork& (0+255),w,b
 20586  004662  6E1E               	movwf	readEEPROM@address,c
 20587  004664  0E00               	movlw	0
 20588  004666  0100               	movlb	0	; () banked
 20589  004668  21A2               	addwfc	(??_doOneSecondWork+1)& (0+255),w,b
 20590  00466A  6E1F               	movwf	readEEPROM@address+1,c
 20591  00466C  EC6F  F03A         	call	_readEEPROM	;wreg free
 20592  004670  0100               	movlb	0	; () banked
 20593  004672  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
 20594                           
 20595                           ; BSR set to: 0
 20596                           ;main.c: 792: vscp_omsg.data[ 2 ] = readEEPROM(2 * i +
 20597                           ;main.c: 793: 0x74);
 20598  004674  0100               	movlb	0	; () banked
 20599  004676  51A4               	movf	doOneSecondWork@i& (0+255),w,b
 20600  004678  0100               	movlb	0	; () banked
 20601  00467A  6FA1               	movwf	??_doOneSecondWork& (0+255),b
 20602  00467C  6BA2               	clrf	(??_doOneSecondWork+1)& (0+255),b
 20603  00467E  90D8               	bcf	status,0,c
 20604  004680  0100               	movlb	0	; () banked
 20605  004682  37A1               	rlcf	??_doOneSecondWork& (0+255),f,b
 20606  004684  37A2               	rlcf	(??_doOneSecondWork+1)& (0+255),f,b
 20607  004686  0E74               	movlw	116
 20608  004688  0100               	movlb	0	; () banked
 20609  00468A  25A1               	addwf	??_doOneSecondWork& (0+255),w,b
 20610  00468C  6E1E               	movwf	readEEPROM@address,c
 20611  00468E  0E00               	movlw	0
 20612  004690  0100               	movlb	0	; () banked
 20613  004692  21A2               	addwfc	(??_doOneSecondWork+1)& (0+255),w,b
 20614  004694  6E1F               	movwf	readEEPROM@address+1,c
 20615  004696  EC6F  F03A         	call	_readEEPROM	;wreg free
 20616  00469A  0100               	movlb	0	; () banked
 20617  00469C  6FDB               	movwf	(_vscp_omsg+7)& (0+255),b
 20618                           
 20619                           ; BSR set to: 0
 20620                           ;main.c: 798: vscp_sendEvent();
 20621  00469E  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 20622  0046A2                     l10508:
 20623  0046A2  0100               	movlb	0	; () banked
 20624  0046A4  2BA4               	incf	doOneSecondWork@i& (0+255),f,b
 20625  0046A6                     L190:
 20626                           
 20627                           ; BSR set to: 0
 20628  0046A6  0E05               	movlw	5
 20629  0046A8  0100               	movlb	0	; () banked
 20630  0046AA  65A4               	cpfsgt	doOneSecondWork@i& (0+255),b
 20631  0046AC  D6A1               	goto	l10448
 20632  0046AE                     l245:
 20633                           
 20634                           ; BSR set to: 0
 20635  0046AE  0012               	return	
 20636  0046B0                     __end_of_doOneSecondWork:
 20637                           	opt stack 0
 20638                           tblptru	equ	0xFF8
 20639                           tblptrh	equ	0xFF7
 20640                           tblptrl	equ	0xFF6
 20641                           tablat	equ	0xFF5
 20642                           prodh	equ	0xFF4
 20643                           prodl	equ	0xFF3
 20644                           intcon	equ	0xFF2
 20645                           postinc0	equ	0xFEE
 20646                           wreg	equ	0xFE8
 20647                           indf1	equ	0xFE7
 20648                           postdec1	equ	0xFE5
 20649                           fsr1h	equ	0xFE2
 20650                           fsr1l	equ	0xFE1
 20651                           indf2	equ	0xFDF
 20652                           postinc2	equ	0xFDE
 20653                           postdec2	equ	0xFDD
 20654                           plusw2	equ	0xFDB
 20655                           fsr2h	equ	0xFDA
 20656                           fsr2l	equ	0xFD9
 20657                           status	equ	0xFD8
 20658                           
 20659 ;; *************** function _sendTempEvent *****************
 20660 ;; Defined at:
 20661 ;;		line 810 in file "../main.c"
 20662 ;; Parameters:    Size  Location     Type
 20663 ;;  i               1    wreg     unsigned char 
 20664 ;; Auto vars:     Size  Location     Type
 20665 ;;  i               1   64[BANK0 ] unsigned char 
 20666 ;; Return value:  Size  Location     Type
 20667 ;;                  1    wreg      unsigned char 
 20668 ;; Registers used:
 20669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20670 ;; Tracked objects:
 20671 ;;		On entry : 0/0
 20672 ;;		On exit  : 0/0
 20673 ;;		Unchanged: 0/0
 20674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20675 ;;      Params:         0       0       0       0       0       0       0
 20676 ;;      Locals:         0       1       0       0       0       0       0
 20677 ;;      Temps:          0       1       0       0       0       0       0
 20678 ;;      Totals:         0       2       0       0       0       0       0
 20679 ;;Total ram usage:        2 bytes
 20680 ;; Hardware stack levels used:    1
 20681 ;; Hardware stack levels required when called:    7
 20682 ;; This function calls:
 20683 ;;		_readEEPROM
 20684 ;;		_setEventData
 20685 ;;		_vscp_sendEvent
 20686 ;; This function is called by:
 20687 ;;		_doOneSecondWork
 20688 ;;		_handle_sync
 20689 ;; This function uses a non-reentrant model
 20690 ;;
 20691                           
 20692                           	psect	text79
 20693  006896                     __ptext79:
 20694                           	opt stack 0
 20695  006896                     _sendTempEvent:
 20696                           	opt stack 22
 20697                           
 20698                           ; BSR set to: 0
 20699                           ;incstack = 0
 20700                           ;sendTempEvent@i stored from wreg
 20701  006896  0100               	movlb	0	; () banked
 20702  006898  6FA0               	movwf	sendTempEvent@i& (0+255),b
 20703                           
 20704                           ; BSR set to: 0
 20705                           ;main.c: 812: vscp_omsg.priority = 0x03;
 20706  00689A  0E03               	movlw	3
 20707  00689C  0100               	movlb	0	; () banked
 20708  00689E  6FD5               	movwf	(_vscp_omsg+1)& (0+255),b
 20709                           
 20710                           ;main.c: 813: vscp_omsg.flags = 0x80 + 4;
 20711  0068A0  0E84               	movlw	132
 20712  0068A2  0100               	movlb	0	; () banked
 20713  0068A4  6FD4               	movwf	_vscp_omsg& (0+255),b
 20714                           
 20715                           ;main.c: 814: vscp_omsg.vscp_class = 10;
 20716  0068A6  0E00               	movlw	0
 20717  0068A8  0100               	movlb	0	; () banked
 20718  0068AA  6FD7               	movwf	(_vscp_omsg+3)& (0+255),b
 20719  0068AC  0E0A               	movlw	10
 20720  0068AE  0100               	movlb	0	; () banked
 20721  0068B0  6FD6               	movwf	(_vscp_omsg+2)& (0+255),b
 20722                           
 20723                           ;main.c: 815: vscp_omsg.vscp_type = 6;
 20724  0068B2  0E06               	movlw	6
 20725  0068B4  0100               	movlb	0	; () banked
 20726  0068B6  6FD8               	movwf	(_vscp_omsg+4)& (0+255),b
 20727                           
 20728                           ; BSR set to: 0
 20729                           ;main.c: 818: vscp_omsg.data[ 0 ] = 0x80 |
 20730                           ;main.c: 819: ((0x03 & readEEPROM(i + 0x43)) << 3) |
 20731                           ;main.c: 820: i;
 20732  0068B8  0E43               	movlw	67
 20733  0068BA  0100               	movlb	0	; () banked
 20734  0068BC  25A0               	addwf	sendTempEvent@i& (0+255),w,b
 20735  0068BE  6E1E               	movwf	readEEPROM@address,c
 20736  0068C0  6A1F               	clrf	readEEPROM@address+1,c
 20737  0068C2  0E00               	movlw	0
 20738  0068C4  221F               	addwfc	readEEPROM@address+1,f,c
 20739  0068C6  EC6F  F03A         	call	_readEEPROM	;wreg free
 20740  0068CA  0100               	movlb	0	; () banked
 20741  0068CC  6F9F               	movwf	??_sendTempEvent& (0+255),b
 20742  0068CE  0E03               	movlw	3
 20743  0068D0  0100               	movlb	0	; () banked
 20744  0068D2  179F               	andwf	??_sendTempEvent& (0+255),f,b
 20745  0068D4  0100               	movlb	0	; () banked
 20746  0068D6  90D8               	bcf	status,0,c
 20747  0068D8  379F               	rlcf	??_sendTempEvent& (0+255),f,b
 20748  0068DA  0100               	movlb	0	; () banked
 20749  0068DC  90D8               	bcf	status,0,c
 20750  0068DE  379F               	rlcf	??_sendTempEvent& (0+255),f,b
 20751  0068E0  0100               	movlb	0	; () banked
 20752  0068E2  90D8               	bcf	status,0,c
 20753  0068E4  359F               	rlcf	??_sendTempEvent& (0+255),w,b
 20754  0068E6  0100               	movlb	0	; () banked
 20755  0068E8  11A0               	iorwf	sendTempEvent@i& (0+255),w,b
 20756  0068EA  0980               	iorlw	128
 20757  0068EC  0100               	movlb	0	; () banked
 20758  0068EE  6FD9               	movwf	(_vscp_omsg+5)& (0+255),b
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;main.c: 822: vscp_omsg.data[ 1 ] = 0x02;
 20762  0068F0  0E02               	movlw	2
 20763  0068F2  0100               	movlb	0	; () banked
 20764  0068F4  6FDA               	movwf	(_vscp_omsg+6)& (0+255),b
 20765                           
 20766                           ; BSR set to: 0
 20767                           ;main.c: 824: setEventData(current_temp[i], (0x03 & readEEPROM(i + 0x43)));
 20768  0068F6  0100               	movlb	0	; () banked
 20769  0068F8  51A0               	movf	sendTempEvent@i& (0+255),w,b
 20770  0068FA  0D02               	mullw	2
 20771  0068FC  0101               	movlb	1	; () banked
 20772  0068FE  0E00               	movlw	low _current_temp
 20773  006900  24F3               	addwf	prodl,w,c
 20774  006902  6ED9               	movwf	fsr2l,c
 20775  006904  0101               	movlb	1	; () banked
 20776  006906  0E01               	movlw	high _current_temp
 20777  006908  20F4               	addwfc	prodh,w,c
 20778  00690A  6EDA               	movwf	fsr2h,c
 20779  00690C  0100               	movlb	0	; () banked
 20780  00690E  CFDE F091          	movff	postinc2,setEventData@v
 20781  006912  0100               	movlb	0	; () banked
 20782  006914  CFDD F092          	movff	postdec2,setEventData@v+1
 20783  006918  0E43               	movlw	67
 20784  00691A  0100               	movlb	0	; () banked
 20785  00691C  25A0               	addwf	sendTempEvent@i& (0+255),w,b
 20786  00691E  6E1E               	movwf	readEEPROM@address,c
 20787  006920  6A1F               	clrf	readEEPROM@address+1,c
 20788  006922  0E00               	movlw	0
 20789  006924  221F               	addwfc	readEEPROM@address+1,f,c
 20790  006926  EC6F  F03A         	call	_readEEPROM	;wreg free
 20791  00692A  0B03               	andlw	3
 20792  00692C  0100               	movlb	0	; () banked
 20793  00692E  6F93               	movwf	setEventData@unit& (0+255),b
 20794  006930  ECC1  F032         	call	_setEventData	;wreg free
 20795                           
 20796                           ;main.c: 827: if (!vscp_sendEvent()) {
 20797  006934  EC7A  F038         	call	_vscp_sendEvent	;wreg free
 20798  006938  0900               	iorlw	0
 20799  00693A  A4D8               	btfss	status,2,c
 20800  00693C  D002               	goto	l9714
 20801                           
 20802                           ;main.c: 828: return 0;
 20803  00693E  0E00               	movlw	0
 20804  006940  D001               	goto	l249
 20805  006942                     l9714:
 20806                           
 20807                           ;main.c: 829: }
 20808                           ;main.c: 831: return 1;
 20809  006942  0E01               	movlw	1
 20810  006944                     l249:
 20811  006944  0012               	return	
 20812  006946                     __end_of_sendTempEvent:
 20813                           	opt stack 0
 20814                           tblptru	equ	0xFF8
 20815                           tblptrh	equ	0xFF7
 20816                           tblptrl	equ	0xFF6
 20817                           tablat	equ	0xFF5
 20818                           prodh	equ	0xFF4
 20819                           prodl	equ	0xFF3
 20820                           intcon	equ	0xFF2
 20821                           postinc0	equ	0xFEE
 20822                           wreg	equ	0xFE8
 20823                           indf1	equ	0xFE7
 20824                           postdec1	equ	0xFE5
 20825                           fsr1h	equ	0xFE2
 20826                           fsr1l	equ	0xFE1
 20827                           indf2	equ	0xFDF
 20828                           postinc2	equ	0xFDE
 20829                           postdec2	equ	0xFDD
 20830                           plusw2	equ	0xFDB
 20831                           fsr2h	equ	0xFDA
 20832                           fsr2l	equ	0xFD9
 20833                           status	equ	0xFD8
 20834                           
 20835 ;; *************** function _vscp_sendEvent *****************
 20836 ;; Defined at:
 20837 ;;		line 1271 in file "../../../../../../vscp_firmware/common/vscp_firmware.c"
 20838 ;; Parameters:    Size  Location     Type
 20839 ;;		None
 20840 ;; Auto vars:     Size  Location     Type
 20841 ;;  rv              1   48[COMRAM] unsigned char 
 20842 ;; Return value:  Size  Location     Type
 20843 ;;                  1    wreg      unsigned char 
 20844 ;; Registers used:
 20845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20846 ;; Tracked objects:
 20847 ;;		On entry : 0/0
 20848 ;;		On exit  : 0/0
 20849 ;;		Unchanged: 0/0
 20850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20851 ;;      Params:         0       0       0       0       0       0       0
 20852 ;;      Locals:         1       0       0       0       0       0       0
 20853 ;;      Temps:          0       0       0       0       0       0       0
 20854 ;;      Totals:         1       0       0       0       0       0       0
 20855 ;;Total ram usage:        1 bytes
 20856 ;; Hardware stack levels used:    1
 20857 ;; Hardware stack levels required when called:    6
 20858 ;; This function calls:
 20859 ;;		_sendVSCPFrame
 20860 ;; This function is called by:
 20861 ;;		_doWork
 20862 ;;		_doOneSecondWork
 20863 ;;		_sendTempEvent
 20864 ;;		_vscp_handleProbeState
 20865 ;;		_vscp_goActiveState
 20866 ;;		_vscp_sendHeartBeat
 20867 ;;		_vscp_newNodeOnline
 20868 ;;		_vscp_handleProtocolEvent
 20869 ;;		_vscp_getEmbeddedMdfInfo
 20870 ;; This function uses a non-reentrant model
 20871 ;;
 20872                           
 20873                           	psect	text80
 20874  0070F4                     __ptext80:
 20875                           	opt stack 0
 20876  0070F4                     _vscp_sendEvent:
 20877                           	opt stack 23
 20878                           
 20879                           ;vscp_firmware.c: 1273: int8_t rv;
 20880                           ;vscp_firmware.c: 1275: if ( !(rv = sendVSCPFrame( vscp_omsg.vscp_class,
 20881                           ;vscp_firmware.c: 1276: vscp_omsg.vscp_type,
 20882                           ;vscp_firmware.c: 1277: vscp_nickname,
 20883                           ;vscp_firmware.c: 1278: vscp_omsg.priority,
 20884                           ;vscp_firmware.c: 1279: (vscp_omsg.flags & 0x0f),
 20885                           ;vscp_firmware.c: 1280: vscp_omsg.data ) ) ) {
 20886                           
 20887                           ;incstack = 0
 20888  0070F4  C0D6  F083         	movff	_vscp_omsg+2,sendVSCPFrame@vscpclass
 20889  0070F8  C0D7  F084         	movff	_vscp_omsg+3,sendVSCPFrame@vscpclass+1
 20890  0070FC  C0D8  F085         	movff	_vscp_omsg+4,sendVSCPFrame@vscptype
 20891  007100  C0D2  F086         	movff	_vscp_nickname,sendVSCPFrame@nodeid
 20892  007104  C0D5  F087         	movff	_vscp_omsg+1,sendVSCPFrame@priority
 20893  007108  0100               	movlb	0	; () banked
 20894  00710A  51D4               	movf	_vscp_omsg& (0+255),w,b
 20895  00710C  0B0F               	andlw	15
 20896  00710E  0100               	movlb	0	; () banked
 20897  007110  6F88               	movwf	sendVSCPFrame@size& (0+255),b
 20898  007112  0100               	movlb	0	; () banked
 20899  007114  0E00               	movlw	high (_vscp_omsg+5)
 20900  007116  0100               	movlb	0	; () banked
 20901  007118  6F8A               	movwf	(sendVSCPFrame@pData+1)& (0+255),b
 20902  00711A  0100               	movlb	0	; () banked
 20903  00711C  0ED9               	movlw	low (_vscp_omsg+5)
 20904  00711E  0100               	movlb	0	; () banked
 20905  007120  6F89               	movwf	sendVSCPFrame@pData& (0+255),b
 20906  007122  EC34  F030         	call	_sendVSCPFrame	;wreg free
 20907  007126  6E31               	movwf	vscp_sendEvent@rv,c
 20908  007128  6631               	tstfsz	vscp_sendEvent@rv& (0+255),c
 20909  00712A  D002               	goto	l8874
 20910                           
 20911                           ;vscp_firmware.c: 1281: vscp_errorcnt++;
 20912  00712C  0101               	movlb	1	; () banked
 20913  00712E  2B20               	incf	_vscp_errorcnt& (0+255),f,b
 20914  007130                     l8874:
 20915                           
 20916                           ;vscp_firmware.c: 1282: }
 20917                           ;vscp_firmware.c: 1284: return rv;
 20918  007130  5031               	movf	vscp_sendEvent@rv,w,c
 20919  007132  0012               	return	
 20920  007134                     __end_of_vscp_sendEvent:
 20921                           	opt stack 0
 20922                           tblptru	equ	0xFF8
 20923                           tblptrh	equ	0xFF7
 20924                           tblptrl	equ	0xFF6
 20925                           tablat	equ	0xFF5
 20926                           prodh	equ	0xFF4
 20927                           prodl	equ	0xFF3
 20928                           intcon	equ	0xFF2
 20929                           postinc0	equ	0xFEE
 20930                           wreg	equ	0xFE8
 20931                           indf1	equ	0xFE7
 20932                           postdec1	equ	0xFE5
 20933                           fsr1h	equ	0xFE2
 20934                           fsr1l	equ	0xFE1
 20935                           indf2	equ	0xFDF
 20936                           postinc2	equ	0xFDE
 20937                           postdec2	equ	0xFDD
 20938                           plusw2	equ	0xFDB
 20939                           fsr2h	equ	0xFDA
 20940                           fsr2l	equ	0xFD9
 20941                           status	equ	0xFD8
 20942                           
 20943 ;; *************** function _sendVSCPFrame *****************
 20944 ;; Defined at:
 20945 ;;		line 2829 in file "../main.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;  vscpclass       2   35[BANK0 ] unsigned short 
 20948 ;;  vscptype        1   37[BANK0 ] unsigned char 
 20949 ;;  nodeid          1   38[BANK0 ] unsigned char 
 20950 ;;  priority        1   39[BANK0 ] unsigned char 
 20951 ;;  size            1   40[BANK0 ] unsigned char 
 20952 ;;  pData           2   41[BANK0 ] PTR unsigned char 
 20953 ;;		 -> vscp_omsg(13), 
 20954 ;; Auto vars:     Size  Location     Type
 20955 ;;  id              4   44[COMRAM] unsigned long 
 20956 ;; Return value:  Size  Location     Type
 20957 ;;                  1    wreg      unsigned char 
 20958 ;; Registers used:
 20959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20960 ;; Tracked objects:
 20961 ;;		On entry : 0/0
 20962 ;;		On exit  : 0/0
 20963 ;;		Unchanged: 0/0
 20964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20965 ;;      Params:         0       8       0       0       0       0       0
 20966 ;;      Locals:         4       0       0       0       0       0       0
 20967 ;;      Temps:          0      20       0       0       0       0       0
 20968 ;;      Totals:         4      28       0       0       0       0       0
 20969 ;;Total ram usage:       32 bytes
 20970 ;; Hardware stack levels used:    1
 20971 ;; Hardware stack levels required when called:    5
 20972 ;; This function calls:
 20973 ;;		_sendCANFrame
 20974 ;; This function is called by:
 20975 ;;		_vscp_sendEvent
 20976 ;; This function uses a non-reentrant model
 20977 ;;
 20978                           
 20979                           	psect	text81
 20980  006068                     __ptext81:
 20981                           	opt stack 0
 20982  006068                     _sendVSCPFrame:
 20983                           	opt stack 23
 20984                           
 20985                           ;main.c: 2836: uint32_t id = ((uint32_t) priority << 26) |
 20986                           ;main.c: 2837: ((uint32_t) vscpclass << 16) |
 20987                           ;main.c: 2838: ((uint32_t) vscptype << 8) |
 20988                           ;main.c: 2839: nodeid;
 20989                           
 20990                           ;incstack = 0
 20991  006068  0100               	movlb	0	; () banked
 20992  00606A  C085  F08B         	movff	sendVSCPFrame@vscptype,??_sendVSCPFrame
 20993  00606E  0100               	movlb	0	; () banked
 20994  006070  6B8C               	clrf	(??_sendVSCPFrame+1)& (0+255),b
 20995  006072  6B8D               	clrf	(??_sendVSCPFrame+2)& (0+255),b
 20996  006074  6B8E               	clrf	(??_sendVSCPFrame+3)& (0+255),b
 20997  006076  C08D  F08E         	movff	??_sendVSCPFrame+2,??_sendVSCPFrame+3
 20998  00607A  C08C  F08D         	movff	??_sendVSCPFrame+1,??_sendVSCPFrame+2
 20999  00607E  C08B  F08C         	movff	??_sendVSCPFrame,??_sendVSCPFrame+1
 21000  006082  0100               	movlb	0	; () banked
 21001  006084  6B8B               	clrf	??_sendVSCPFrame& (0+255),b
 21002  006086  0100               	movlb	0	; () banked
 21003  006088  5183               	movf	sendVSCPFrame@vscpclass& (0+255),w,b
 21004  00608A  0100               	movlb	0	; () banked
 21005  00608C  6F8F               	movwf	(??_sendVSCPFrame+4)& (0+255),b
 21006  00608E  0100               	movlb	0	; () banked
 21007  006090  5184               	movf	(sendVSCPFrame@vscpclass+1)& (0+255),w,b
 21008  006092  0100               	movlb	0	; () banked
 21009  006094  6F90               	movwf	(??_sendVSCPFrame+5)& (0+255),b
 21010  006096  0100               	movlb	0	; () banked
 21011  006098  6B91               	clrf	(??_sendVSCPFrame+6)& (0+255),b
 21012  00609A  0100               	movlb	0	; () banked
 21013  00609C  6B92               	clrf	(??_sendVSCPFrame+7)& (0+255),b
 21014  00609E  C090  F092         	movff	??_sendVSCPFrame+5,??_sendVSCPFrame+7
 21015  0060A2  C08F  F091         	movff	??_sendVSCPFrame+4,??_sendVSCPFrame+6
 21016  0060A6  0100               	movlb	0	; () banked
 21017  0060A8  6B90               	clrf	(??_sendVSCPFrame+5)& (0+255),b
 21018  0060AA  6B8F               	clrf	(??_sendVSCPFrame+4)& (0+255),b
 21019  0060AC  0100               	movlb	0	; () banked
 21020  0060AE  C087  F093         	movff	sendVSCPFrame@priority,??_sendVSCPFrame+8
 21021  0060B2  0100               	movlb	0	; () banked
 21022  0060B4  6B94               	clrf	(??_sendVSCPFrame+9)& (0+255),b
 21023  0060B6  6B95               	clrf	(??_sendVSCPFrame+10)& (0+255),b
 21024  0060B8  6B96               	clrf	(??_sendVSCPFrame+11)& (0+255),b
 21025  0060BA  0E1A               	movlw	26
 21026  0060BC                     u8775:
 21027  0060BC  90D8               	bcf	status,0,c
 21028  0060BE  0100               	movlb	0	; () banked
 21029  0060C0  3793               	rlcf	(??_sendVSCPFrame+8)& (0+255),f,b
 21030  0060C2  3794               	rlcf	(??_sendVSCPFrame+9)& (0+255),f,b
 21031  0060C4  3795               	rlcf	(??_sendVSCPFrame+10)& (0+255),f,b
 21032  0060C6  3796               	rlcf	(??_sendVSCPFrame+11)& (0+255),f,b
 21033  0060C8  2EE8               	decfsz	wreg,f,c
 21034  0060CA  D7F8               	goto	u8775
 21035  0060CC  0100               	movlb	0	; () banked
 21036  0060CE  518F               	movf	(??_sendVSCPFrame+4)& (0+255),w,b
 21037  0060D0  0100               	movlb	0	; () banked
 21038  0060D2  1193               	iorwf	(??_sendVSCPFrame+8)& (0+255),w,b
 21039  0060D4  0100               	movlb	0	; () banked
 21040  0060D6  6F97               	movwf	(??_sendVSCPFrame+12)& (0+255),b
 21041  0060D8  0100               	movlb	0	; () banked
 21042  0060DA  5190               	movf	(??_sendVSCPFrame+5)& (0+255),w,b
 21043  0060DC  0100               	movlb	0	; () banked
 21044  0060DE  1194               	iorwf	(??_sendVSCPFrame+9)& (0+255),w,b
 21045  0060E0  0100               	movlb	0	; () banked
 21046  0060E2  6F98               	movwf	(??_sendVSCPFrame+13)& (0+255),b
 21047  0060E4  0100               	movlb	0	; () banked
 21048  0060E6  5191               	movf	(??_sendVSCPFrame+6)& (0+255),w,b
 21049  0060E8  0100               	movlb	0	; () banked
 21050  0060EA  1195               	iorwf	(??_sendVSCPFrame+10)& (0+255),w,b
 21051  0060EC  0100               	movlb	0	; () banked
 21052  0060EE  6F99               	movwf	(??_sendVSCPFrame+14)& (0+255),b
 21053  0060F0  0100               	movlb	0	; () banked
 21054  0060F2  5192               	movf	(??_sendVSCPFrame+7)& (0+255),w,b
 21055  0060F4  0100               	movlb	0	; () banked
 21056  0060F6  1196               	iorwf	(??_sendVSCPFrame+11)& (0+255),w,b
 21057  0060F8  0100               	movlb	0	; () banked
 21058  0060FA  6F9A               	movwf	(??_sendVSCPFrame+15)& (0+255),b
 21059  0060FC  0100               	movlb	0	; () banked
 21060  0060FE  518B               	movf	??_sendVSCPFrame& (0+255),w,b
 21061  006100  0100               	movlb	0	; () banked
 21062  006102  1197               	iorwf	(??_sendVSCPFrame+12)& (0+255),w,b
 21063  006104  0100               	movlb	0	; () banked
 21064  006106  6F9B               	movwf	(??_sendVSCPFrame+16)& (0+255),b
 21065  006108  0100               	movlb	0	; () banked
 21066  00610A  518C               	movf	(??_sendVSCPFrame+1)& (0+255),w,b
 21067  00610C  0100               	movlb	0	; () banked
 21068  00610E  1198               	iorwf	(??_sendVSCPFrame+13)& (0+255),w,b
 21069  006110  0100               	movlb	0	; () banked
 21070  006112  6F9C               	movwf	(??_sendVSCPFrame+17)& (0+255),b
 21071  006114  0100               	movlb	0	; () banked
 21072  006116  518D               	movf	(??_sendVSCPFrame+2)& (0+255),w,b
 21073  006118  0100               	movlb	0	; () banked
 21074  00611A  1199               	iorwf	(??_sendVSCPFrame+14)& (0+255),w,b
 21075  00611C  0100               	movlb	0	; () banked
 21076  00611E  6F9D               	movwf	(??_sendVSCPFrame+18)& (0+255),b
 21077  006120  0100               	movlb	0	; () banked
 21078  006122  518E               	movf	(??_sendVSCPFrame+3)& (0+255),w,b
 21079  006124  0100               	movlb	0	; () banked
 21080  006126  119A               	iorwf	(??_sendVSCPFrame+15)& (0+255),w,b
 21081  006128  0100               	movlb	0	; () banked
 21082  00612A  6F9E               	movwf	(??_sendVSCPFrame+19)& (0+255),b
 21083  00612C  0100               	movlb	0	; () banked
 21084  00612E  5186               	movf	sendVSCPFrame@nodeid& (0+255),w,b
 21085  006130  0100               	movlb	0	; () banked
 21086  006132  119B               	iorwf	(??_sendVSCPFrame+16)& (0+255),w,b
 21087  006134  6E2D               	movwf	sendVSCPFrame@id,c
 21088  006136  0100               	movlb	0	; () banked
 21089  006138  519C               	movf	(??_sendVSCPFrame+17)& (0+255),w,b
 21090  00613A  6E2E               	movwf	sendVSCPFrame@id+1,c
 21091  00613C  0100               	movlb	0	; () banked
 21092  00613E  519D               	movf	(??_sendVSCPFrame+18)& (0+255),w,b
 21093  006140  6E2F               	movwf	sendVSCPFrame@id+2,c
 21094  006142  0100               	movlb	0	; () banked
 21095  006144  519E               	movf	(??_sendVSCPFrame+19)& (0+255),w,b
 21096  006146  6E30               	movwf	sendVSCPFrame@id+3,c
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;main.c: 2841: if (!sendCANFrame(id, size, pData)) {
 21100  006148  C02D  F07C         	movff	sendVSCPFrame@id,sendCANFrame@id
 21101  00614C  C02E  F07D         	movff	sendVSCPFrame@id+1,sendCANFrame@id+1
 21102  006150  C02F  F07E         	movff	sendVSCPFrame@id+2,sendCANFrame@id+2
 21103  006154  C030  F07F         	movff	sendVSCPFrame@id+3,sendCANFrame@id+3
 21104  006158  C088  F080         	movff	sendVSCPFrame@size,sendCANFrame@dlc
 21105  00615C  0100               	movlb	0	; () banked
 21106  00615E  C08A  F082         	movff	sendVSCPFrame@pData+1,sendCANFrame@pdata+1
 21107  006162  0100               	movlb	0	; () banked
 21108  006164  C089  F081         	movff	sendVSCPFrame@pData,sendCANFrame@pdata
 21109  006168  EC5B  F037         	call	_sendCANFrame	;wreg free
 21110  00616C  0900               	iorlw	0
 21111  00616E  A4D8               	btfss	status,2,c
 21112  006170  D004               	goto	l8612
 21113                           
 21114                           ;main.c: 2843: vscp_errorcnt++;
 21115  006172  0101               	movlb	1	; () banked
 21116  006174  2B20               	incf	_vscp_errorcnt& (0+255),f,b
 21117                           
 21118                           ; BSR set to: 1
 21119                           ;main.c: 2844: return 0;
 21120  006176  0E00               	movlw	0
 21121  006178  D001               	goto	l616
 21122  00617A                     l8612:
 21123                           
 21124                           ;main.c: 2845: }
 21125                           ;main.c: 2847: return 1;
 21126  00617A  0E01               	movlw	1
 21127  00617C                     l616:
 21128  00617C  0012               	return	
 21129  00617E                     __end_of_sendVSCPFrame:
 21130                           	opt stack 0
 21131                           tblptru	equ	0xFF8
 21132                           tblptrh	equ	0xFF7
 21133                           tblptrl	equ	0xFF6
 21134                           tablat	equ	0xFF5
 21135                           prodh	equ	0xFF4
 21136                           prodl	equ	0xFF3
 21137                           intcon	equ	0xFF2
 21138                           postinc0	equ	0xFEE
 21139                           wreg	equ	0xFE8
 21140                           indf1	equ	0xFE7
 21141                           postdec1	equ	0xFE5
 21142                           fsr1h	equ	0xFE2
 21143                           fsr1l	equ	0xFE1
 21144                           indf2	equ	0xFDF
 21145                           postinc2	equ	0xFDE
 21146                           postdec2	equ	0xFDD
 21147                           plusw2	equ	0xFDB
 21148                           fsr2h	equ	0xFDA
 21149                           fsr2l	equ	0xFD9
 21150                           status	equ	0xFD8
 21151                           
 21152 ;; *************** function _sendCANFrame *****************
 21153 ;; Defined at:
 21154 ;;		line 2881 in file "../main.c"
 21155 ;; Parameters:    Size  Location     Type
 21156 ;;  id              4   28[BANK0 ] unsigned long 
 21157 ;;  dlc             1   32[BANK0 ] unsigned char 
 21158 ;;  pdata           2   33[BANK0 ] PTR unsigned char 
 21159 ;;		 -> vscp_omsg(13), 
 21160 ;; Auto vars:     Size  Location     Type
 21161 ;;  rv              1   43[COMRAM] unsigned char 
 21162 ;; Return value:  Size  Location     Type
 21163 ;;                  1    wreg      unsigned char 
 21164 ;; Registers used:
 21165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21166 ;; Tracked objects:
 21167 ;;		On entry : 0/0
 21168 ;;		On exit  : 0/0
 21169 ;;		Unchanged: 0/0
 21170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21171 ;;      Params:         0       7       0       0       0       0       0
 21172 ;;      Locals:         1       0       0       0       0       0       0
 21173 ;;      Temps:          0       0       0       0       0       0       0
 21174 ;;      Totals:         1       7       0       0       0       0       0
 21175 ;;Total ram usage:        8 bytes
 21176 ;; Hardware stack levels used:    1
 21177 ;; Hardware stack levels required when called:    4
 21178 ;; This function calls:
 21179 ;;		_ECANSendMessage
 21180 ;; This function is called by:
 21181 ;;		_sendVSCPFrame
 21182 ;; This function uses a non-reentrant model
 21183 ;;
 21184                           
 21185                           	psect	text82
 21186  006EB6                     __ptext82:
 21187                           	opt stack 0
 21188  006EB6                     _sendCANFrame:
 21189                           	opt stack 23
 21190                           
 21191                           ;main.c: 2883: uint8_t rv = 0;
 21192                           
 21193                           ;incstack = 0
 21194  006EB6  0E00               	movlw	0
 21195  006EB8  6E2C               	movwf	sendCANFrame@rv,c
 21196                           
 21197                           ;main.c: 2884: sendTimer = 0;
 21198  006EBA  0E00               	movlw	0
 21199  006EBC  0100               	movlb	0	; () banked
 21200  006EBE  6FCE               	movwf	_sendTimer& (0+255),b
 21201                           
 21202                           ;main.c: 2886: while ( sendTimer < 1 ) {
 21203  006EC0  D01A               	goto	l8338
 21204  006EC2                     l8334:
 21205                           
 21206                           ; BSR set to: 0
 21207                           ;main.c: 2887: if ( ECANSendMessage( id, pdata, dlc, ECAN_TX_XTD_FRAME ) ) {
 21208  006EC2  C07C  F023         	movff	sendCANFrame@id,ECANSendMessage@id
 21209  006EC6  C07D  F024         	movff	sendCANFrame@id+1,ECANSendMessage@id+1
 21210  006ECA  C07E  F025         	movff	sendCANFrame@id+2,ECANSendMessage@id+2
 21211  006ECE  C07F  F026         	movff	sendCANFrame@id+3,ECANSendMessage@id+3
 21212  006ED2  0100               	movlb	0	; () banked
 21213  006ED4  C082  F028         	movff	sendCANFrame@pdata+1,ECANSendMessage@data+1
 21214  006ED8  0100               	movlb	0	; () banked
 21215  006EDA  C081  F027         	movff	sendCANFrame@pdata,ECANSendMessage@data
 21216  006EDE  C080  F029         	movff	sendCANFrame@dlc,ECANSendMessage@dataLen
 21217  006EE2  0E20               	movlw	32
 21218  006EE4  6E2A               	movwf	ECANSendMessage@msgFlags,c
 21219  006EE6  EC1E  F027         	call	_ECANSendMessage	;wreg free
 21220  006EEA  0900               	iorlw	0
 21221  006EEC  B4D8               	btfsc	status,2,c
 21222  006EEE  D003               	goto	l8338
 21223                           
 21224                           ;main.c: 2888: rv = 1;
 21225  006EF0  0E01               	movlw	1
 21226  006EF2  6E2C               	movwf	sendCANFrame@rv,c
 21227                           
 21228                           ;main.c: 2889: break;
 21229  006EF4  D004               	goto	l8340
 21230  006EF6                     l8338:
 21231  006EF6  0100               	movlb	0	; () banked
 21232  006EF8  51CE               	movf	_sendTimer& (0+255),w,b
 21233  006EFA  B4D8               	btfsc	status,2,c
 21234  006EFC  D7E2               	goto	l8334
 21235  006EFE                     l8340:
 21236                           
 21237                           ;main.c: 2890: }
 21238                           ;main.c: 2891: }
 21239                           ;main.c: 2893: vscp_omsg.flags = 0;
 21240  006EFE  0E00               	movlw	0
 21241  006F00  0100               	movlb	0	; () banked
 21242  006F02  6FD4               	movwf	_vscp_omsg& (0+255),b
 21243                           
 21244                           ;main.c: 2895: return rv;
 21245  006F04  502C               	movf	sendCANFrame@rv,w,c
 21246                           
 21247                           ; BSR set to: 0
 21248                           
 21249                           ; BSR set to: 0
 21250  006F06  0012               	return	
 21251  006F08                     __end_of_sendCANFrame:
 21252                           	opt stack 0
 21253                           tblptru	equ	0xFF8
 21254                           tblptrh	equ	0xFF7
 21255                           tblptrl	equ	0xFF6
 21256                           tablat	equ	0xFF5
 21257                           prodh	equ	0xFF4
 21258                           prodl	equ	0xFF3
 21259                           intcon	equ	0xFF2
 21260                           postinc0	equ	0xFEE
 21261                           wreg	equ	0xFE8
 21262                           indf1	equ	0xFE7
 21263                           postdec1	equ	0xFE5
 21264                           fsr1h	equ	0xFE2
 21265                           fsr1l	equ	0xFE1
 21266                           indf2	equ	0xFDF
 21267                           postinc2	equ	0xFDE
 21268                           postdec2	equ	0xFDD
 21269                           plusw2	equ	0xFDB
 21270                           fsr2h	equ	0xFDA
 21271                           fsr2l	equ	0xFD9
 21272                           status	equ	0xFD8
 21273                           
 21274 ;; *************** function _ECANSendMessage *****************
 21275 ;; Defined at:
 21276 ;;		line 613 in file "../ECAN.c"
 21277 ;; Parameters:    Size  Location     Type
 21278 ;;  id              4   34[COMRAM] unsigned long 
 21279 ;;  data            2   38[COMRAM] PTR unsigned char 
 21280 ;;		 -> vscp_omsg(13), 
 21281 ;;  dataLen         1   40[COMRAM] unsigned char 
 21282 ;;  msgFlags        1   41[COMRAM] enum E16314
 21283 ;; Auto vars:     Size  Location     Type
 21284 ;;  pb             18    0[BANK0 ] PTR unsigned char [9]
 21285 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 21286 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 21287 ;;		 -> B0CON(1), 
 21288 ;;  ptr             2   26[BANK0 ] PTR unsigned char 
 21289 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 21290 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 21291 ;;		 -> B0CON(1), 
 21292 ;;  tempPtr         2   22[BANK0 ] PTR unsigned char 
 21293 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 21294 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 21295 ;;		 -> B0CON(1), 
 21296 ;;  i               1   25[BANK0 ] unsigned char 
 21297 ;;  temp            1   24[BANK0 ] unsigned char 
 21298 ;;  tempBSEL0       1   21[BANK0 ] struct .
 21299 ;;  j               1   20[BANK0 ] unsigned char 
 21300 ;;  buffers         1   19[BANK0 ] unsigned char 
 21301 ;;  mode            1   18[BANK0 ] unsigned char 
 21302 ;; Return value:  Size  Location     Type
 21303 ;;                  1    wreg      enum E15663
 21304 ;; Registers used:
 21305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21306 ;; Tracked objects:
 21307 ;;		On entry : 0/0
 21308 ;;		On exit  : 0/0
 21309 ;;		Unchanged: 0/0
 21310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21311 ;;      Params:         8       0       0       0       0       0       0
 21312 ;;      Locals:         0      28       0       0       0       0       0
 21313 ;;      Temps:          1       0       0       0       0       0       0
 21314 ;;      Totals:         9      28       0       0       0       0       0
 21315 ;;Total ram usage:       37 bytes
 21316 ;; Hardware stack levels used:    1
 21317 ;; Hardware stack levels required when called:    3
 21318 ;; This function calls:
 21319 ;;		__CANIDToRegs
 21320 ;; This function is called by:
 21321 ;;		_sendCANFrame
 21322 ;; This function uses a non-reentrant model
 21323 ;;
 21324                           
 21325                           	psect	text83
 21326  004E3C                     __ptext83:
 21327                           	opt stack 0
 21328  004E3C                     _ECANSendMessage:
 21329                           	opt stack 23
 21330                           
 21331                           ;ECAN.c: 619: BYTE mode;
 21332                           ;ECAN.c: 620: BYTE buffers;
 21333                           ;ECAN.c: 628: BYTE i,j;
 21334                           ;ECAN.c: 629: BYTE *ptr, *tempPtr;
 21335                           ;ECAN.c: 630: BYTE* pb[9];
 21336                           ;ECAN.c: 631: BYTE temp;
 21337                           ;ECAN.c: 634: BYTE_VAL tempBSEL0;
 21338                           ;ECAN.c: 641: pb[0]=(BYTE*)&TXB0CON;
 21339                           
 21340                           ; BSR set to: 0
 21341                           ;incstack = 0
 21342  004E3C  010F               	movlb	15	; () banked
 21343  004E3E  0E0F               	movlw	15	;volatile
 21344  004E40  0100               	movlb	0	; () banked
 21345  004E42  6F61               	movwf	(ECANSendMessage@pb+1)& (0+255),b
 21346  004E44  010F               	movlb	15	; () banked
 21347  004E46  0E40               	movlw	64	;volatile
 21348  004E48  0100               	movlb	0	; () banked
 21349  004E4A  6F60               	movwf	ECANSendMessage@pb& (0+255),b
 21350                           
 21351                           ;ECAN.c: 642: pb[1]=(BYTE*)&TXB1CON;
 21352  004E4C  010F               	movlb	15	; () banked
 21353  004E4E  0E0F               	movlw	15	;volatile
 21354  004E50  0100               	movlb	0	; () banked
 21355  004E52  6F63               	movwf	(ECANSendMessage@pb+3)& (0+255),b
 21356  004E54  010F               	movlb	15	; () banked
 21357  004E56  0E30               	movlw	48	;volatile
 21358  004E58  0100               	movlb	0	; () banked
 21359  004E5A  6F62               	movwf	(ECANSendMessage@pb+2)& (0+255),b
 21360                           
 21361                           ;ECAN.c: 643: pb[2]=(BYTE*)&TXB2CON;
 21362  004E5C  010F               	movlb	15	; () banked
 21363  004E5E  0E0F               	movlw	15	;volatile
 21364  004E60  0100               	movlb	0	; () banked
 21365  004E62  6F65               	movwf	(ECANSendMessage@pb+5)& (0+255),b
 21366  004E64  010F               	movlb	15	; () banked
 21367  004E66  0E20               	movlw	32	;volatile
 21368  004E68  0100               	movlb	0	; () banked
 21369  004E6A  6F64               	movwf	(ECANSendMessage@pb+4)& (0+255),b
 21370                           
 21371                           ;ECAN.c: 650: pb[3]=(BYTE*)&B0CON;
 21372  004E6C  010E               	movlb	14	; () banked
 21373  004E6E  0E0E               	movlw	14	;volatile
 21374  004E70  0100               	movlb	0	; () banked
 21375  004E72  6F67               	movwf	(ECANSendMessage@pb+7)& (0+255),b
 21376  004E74  010E               	movlb	14	; () banked
 21377  004E76  0E20               	movlw	32	;volatile
 21378  004E78  0100               	movlb	0	; () banked
 21379  004E7A  6F66               	movwf	(ECANSendMessage@pb+6)& (0+255),b
 21380                           
 21381                           ;ECAN.c: 651: pb[4]=(BYTE*)&B1CON;
 21382  004E7C  010E               	movlb	14	; () banked
 21383  004E7E  0E0E               	movlw	14	;volatile
 21384  004E80  0100               	movlb	0	; () banked
 21385  004E82  6F69               	movwf	(ECANSendMessage@pb+9)& (0+255),b
 21386  004E84  010E               	movlb	14	; () banked
 21387  004E86  0E30               	movlw	48	;volatile
 21388  004E88  0100               	movlb	0	; () banked
 21389  004E8A  6F68               	movwf	(ECANSendMessage@pb+8)& (0+255),b
 21390                           
 21391                           ;ECAN.c: 652: pb[5]=(BYTE*)&B2CON;
 21392  004E8C  010E               	movlb	14	; () banked
 21393  004E8E  0E0E               	movlw	14	;volatile
 21394  004E90  0100               	movlb	0	; () banked
 21395  004E92  6F6B               	movwf	(ECANSendMessage@pb+11)& (0+255),b
 21396  004E94  010E               	movlb	14	; () banked
 21397  004E96  0E40               	movlw	64	;volatile
 21398  004E98  0100               	movlb	0	; () banked
 21399  004E9A  6F6A               	movwf	(ECANSendMessage@pb+10)& (0+255),b
 21400                           
 21401                           ;ECAN.c: 653: pb[6]=(BYTE*)&B3CON;
 21402  004E9C  010E               	movlb	14	; () banked
 21403  004E9E  0E0E               	movlw	14	;volatile
 21404  004EA0  0100               	movlb	0	; () banked
 21405  004EA2  6F6D               	movwf	(ECANSendMessage@pb+13)& (0+255),b
 21406  004EA4  010E               	movlb	14	; () banked
 21407  004EA6  0E50               	movlw	80	;volatile
 21408  004EA8  0100               	movlb	0	; () banked
 21409  004EAA  6F6C               	movwf	(ECANSendMessage@pb+12)& (0+255),b
 21410                           
 21411                           ;ECAN.c: 654: pb[7]=(BYTE*)&B4CON;
 21412  004EAC  010E               	movlb	14	; () banked
 21413  004EAE  0E0E               	movlw	14	;volatile
 21414  004EB0  0100               	movlb	0	; () banked
 21415  004EB2  6F6F               	movwf	(ECANSendMessage@pb+15)& (0+255),b
 21416  004EB4  010E               	movlb	14	; () banked
 21417  004EB6  0E60               	movlw	96	;volatile
 21418  004EB8  0100               	movlb	0	; () banked
 21419  004EBA  6F6E               	movwf	(ECANSendMessage@pb+14)& (0+255),b
 21420                           
 21421                           ;ECAN.c: 655: pb[8]=(BYTE*)&B5CON;
 21422  004EBC  010E               	movlb	14	; () banked
 21423  004EBE  0E0E               	movlw	14	;volatile
 21424  004EC0  0100               	movlb	0	; () banked
 21425  004EC2  6F71               	movwf	(ECANSendMessage@pb+17)& (0+255),b
 21426  004EC4  010E               	movlb	14	; () banked
 21427  004EC6  0E70               	movlw	112	;volatile
 21428  004EC8  0100               	movlb	0	; () banked
 21429  004ECA  6F70               	movwf	(ECANSendMessage@pb+16)& (0+255),b
 21430                           
 21431                           ;ECAN.c: 659: mode = ECANCON&0xC0;
 21432  004ECC  5077               	movf	3959,w,c	;volatile
 21433  004ECE  0BC0               	andlw	192
 21434  004ED0  0100               	movlb	0	; () banked
 21435  004ED2  6F72               	movwf	ECANSendMessage@mode& (0+255),b
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;ECAN.c: 660: if ( mode == 0x00 )
 21439  004ED4  0100               	movlb	0	; () banked
 21440  004ED6  6772               	tstfsz	ECANSendMessage@mode& (0+255),b
 21441  004ED8  D002               	goto	l8200
 21442                           
 21443                           ; BSR set to: 0
 21444                           ;ECAN.c: 661: buffers = 2;
 21445  004EDA  0E02               	movlw	2
 21446  004EDC  D001               	goto	L191
 21447  004EDE                     l8200:
 21448                           
 21449                           ; BSR set to: 0
 21450                           ;ECAN.c: 662: else
 21451                           ;ECAN.c: 663: buffers = 8;
 21452  004EDE  0E08               	movlw	8
 21453  004EE0                     L191:
 21454  004EE0  0100               	movlb	0	; () banked
 21455  004EE2  6F73               	movwf	ECANSendMessage@buffers& (0+255),b
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;ECAN.c: 684: tempBSEL0.Val = BSEL0 >> 1;
 21459                           
 21460                           ; BSR set to: 0
 21461  004EE4  010D               	movlb	13	; () banked
 21462  004EE6  90D8               	bcf	status,0,c
 21463  004EE8  31F8               	rrcf	248,w,b	;volatile
 21464  004EEA  0100               	movlb	0	; () banked
 21465  004EEC  6F75               	movwf	ECANSendMessage@tempBSEL0& (0+255),b
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;ECAN.c: 686: for ( i = 0; i < buffers; i++ )
 21469  004EEE  0E00               	movlw	0
 21470  004EF0  0100               	movlb	0	; () banked
 21471  004EF2  6F79               	movwf	ECANSendMessage@i& (0+255),b
 21472  004EF4  D09B               	goto	l8262
 21473  004EF6                     l8206:
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;ECAN.c: 688: {
 21477                           ;ECAN.c: 693: ptr = pb[i];
 21478  004EF6  0100               	movlb	0	; () banked
 21479  004EF8  5179               	movf	ECANSendMessage@i& (0+255),w,b
 21480  004EFA  0D02               	mullw	2
 21481  004EFC  0100               	movlb	0	; () banked
 21482  004EFE  0E60               	movlw	low ECANSendMessage@pb
 21483  004F00  24F3               	addwf	prodl,w,c
 21484  004F02  6ED9               	movwf	fsr2l,c
 21485  004F04  0100               	movlb	0	; () banked
 21486  004F06  0E00               	movlw	high ECANSendMessage@pb
 21487  004F08  20F4               	addwfc	prodh,w,c
 21488  004F0A  6EDA               	movwf	fsr2h,c
 21489  004F0C  0100               	movlb	0	; () banked
 21490  004F0E  CFDE F07A          	movff	postinc2,ECANSendMessage@ptr
 21491  004F12  0100               	movlb	0	; () banked
 21492  004F14  CFDD F07B          	movff	postdec2,ECANSendMessage@ptr+1
 21493                           
 21494                           ; BSR set to: 0
 21495                           ;ECAN.c: 694: tempPtr = ptr;
 21496  004F18  0100               	movlb	0	; () banked
 21497  004F1A  C07B  F077         	movff	ECANSendMessage@ptr+1,ECANSendMessage@tempPtr+1
 21498  004F1E  0100               	movlb	0	; () banked
 21499  004F20  C07A  F076         	movff	ECANSendMessage@ptr,ECANSendMessage@tempPtr
 21500                           
 21501                           ; BSR set to: 0
 21502                           ;ECAN.c: 702: if ( i > 2 )
 21503  004F24  0E02               	movlw	2
 21504  004F26  0100               	movlb	0	; () banked
 21505  004F28  6579               	cpfsgt	ECANSendMessage@i& (0+255),b
 21506  004F2A  D006               	goto	l8218
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;ECAN.c: 703: {
 21510                           ;ECAN.c: 707: tempBSEL0.Val >>= 1;
 21511  004F2C  0100               	movlb	0	; () banked
 21512  004F2E  90D8               	bcf	status,0,c
 21513  004F30  3375               	rrcf	ECANSendMessage@tempBSEL0& (0+255),f,b
 21514                           
 21515                           ; BSR set to: 0
 21516                           ;ECAN.c: 712: if ( !tempBSEL0.bits.b0 )
 21517  004F32  0100               	movlb	0	; () banked
 21518  004F34  A175               	btfss	ECANSendMessage@tempBSEL0& (0+255),0,b
 21519  004F36  D078               	goto	l8260
 21520  004F38                     l8218:
 21521                           
 21522                           ; BSR set to: 0
 21523                           ;ECAN.c: 714: }
 21524                           ;ECAN.c: 720: if ( !(*ptr & 0x08) )
 21525  004F38  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 21526  004F3C  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 21527  004F40  50DF               	movf	indf2,w,c
 21528  004F42  6E2B               	movwf	??_ECANSendMessage& (0+255),c
 21529  004F44  B62B               	btfsc	??_ECANSendMessage,3,c
 21530  004F46  D070               	goto	l8260
 21531                           
 21532                           ; BSR set to: 0
 21533                           ;ECAN.c: 721: {
 21534                           ;ECAN.c: 723: *ptr &= ~ECAN_TX_PRIORITY_BITS;
 21535  004F48  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 21536  004F4C  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 21537  004F50  0EFC               	movlw	252
 21538  004F52  16DF               	andwf	indf2,f,c
 21539                           
 21540                           ; BSR set to: 0
 21541                           ;ECAN.c: 724: *ptr |= msgFlags & ECAN_TX_PRIORITY_BITS;
 21542  004F54  C02A  F02B         	movff	ECANSendMessage@msgFlags,??_ECANSendMessage
 21543  004F58  0E03               	movlw	3
 21544  004F5A  162B               	andwf	??_ECANSendMessage,f,c
 21545  004F5C  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 21546  004F60  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 21547  004F64  502B               	movf	??_ECANSendMessage,w,c
 21548  004F66  12DF               	iorwf	indf2,f,c
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;ECAN.c: 727: if ( msgFlags & ECAN_TX_RTR_BIT )
 21552  004F68  AC2A               	btfss	ECANSendMessage@msgFlags,6,c
 21553  004F6A  D005               	goto	l814
 21554                           
 21555                           ; BSR set to: 0
 21556                           ;ECAN.c: 728: temp = 0x40 | dataLen;
 21557  004F6C  5029               	movf	ECANSendMessage@dataLen,w,c
 21558  004F6E  0940               	iorlw	64
 21559  004F70  0100               	movlb	0	; () banked
 21560  004F72  6F78               	movwf	ECANSendMessage@temp& (0+255),b
 21561  004F74  D002               	goto	l8228
 21562  004F76                     l814:
 21563                           
 21564                           ; BSR set to: 0
 21565                           ;ECAN.c: 729: else
 21566                           ;ECAN.c: 730: temp = dataLen;
 21567  004F76  C029  F078         	movff	ECANSendMessage@dataLen,ECANSendMessage@temp
 21568  004F7A                     l8228:
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;ECAN.c: 732: *(ptr+5) = temp;
 21572  004F7A  0100               	movlb	0	; () banked
 21573  004F7C  EE20 F005          	lfsr	2,5
 21574  004F80  0100               	movlb	0	; () banked
 21575  004F82  517A               	movf	ECANSendMessage@ptr& (0+255),w,b
 21576  004F84  26D9               	addwf	fsr2l,f,c
 21577  004F86  0100               	movlb	0	; () banked
 21578  004F88  517B               	movf	(ECANSendMessage@ptr+1)& (0+255),w,b
 21579  004F8A  22DA               	addwfc	fsr2h,f,c
 21580  004F8C  0100               	movlb	0	; () banked
 21581  004F8E  C078  FFDF         	movff	ECANSendMessage@temp,indf2
 21582                           
 21583                           ; BSR set to: 0
 21584                           ;ECAN.c: 735: if ( msgFlags & ECAN_TX_FRAME_BIT )
 21585  004F92  AA2A               	btfss	ECANSendMessage@msgFlags,5,c
 21586  004F94  D002               	goto	l8234
 21587                           
 21588                           ; BSR set to: 0
 21589                           ;ECAN.c: 736: temp = 1;
 21590  004F96  0E01               	movlw	1
 21591  004F98  D001               	goto	L192
 21592  004F9A                     l8234:
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;ECAN.c: 738: else
 21596                           ;ECAN.c: 739: temp = 0;
 21597  004F9A  0E00               	movlw	0
 21598  004F9C                     L192:
 21599  004F9C  0100               	movlb	0	; () banked
 21600  004F9E  6F78               	movwf	ECANSendMessage@temp& (0+255),b
 21601                           
 21602                           ; BSR set to: 0
 21603                           ;ECAN.c: 742: _CANIDToRegs((BYTE*)(ptr+1), id, temp);
 21604                           
 21605                           ; BSR set to: 0
 21606  004FA0  0E01               	movlw	1
 21607  004FA2  0100               	movlb	0	; () banked
 21608  004FA4  257A               	addwf	ECANSendMessage@ptr& (0+255),w,b
 21609  004FA6  6E18               	movwf	__CANIDToRegs@ptr,c
 21610  004FA8  0E00               	movlw	0
 21611  004FAA  0100               	movlb	0	; () banked
 21612  004FAC  217B               	addwfc	(ECANSendMessage@ptr+1)& (0+255),w,b
 21613  004FAE  6E19               	movwf	__CANIDToRegs@ptr+1,c
 21614  004FB0  C023  F01A         	movff	ECANSendMessage@id,__CANIDToRegs@val
 21615  004FB4  C024  F01B         	movff	ECANSendMessage@id+1,__CANIDToRegs@val+1
 21616  004FB8  C025  F01C         	movff	ECANSendMessage@id+2,__CANIDToRegs@val+2
 21617  004FBC  C026  F01D         	movff	ECANSendMessage@id+3,__CANIDToRegs@val+3
 21618  004FC0  C078  F01E         	movff	ECANSendMessage@temp,__CANIDToRegs@type
 21619  004FC4  EC44  F02B         	call	__CANIDToRegs	;wreg free
 21620                           
 21621                           ;ECAN.c: 745: ptr += 6;
 21622  004FC8  0E06               	movlw	6
 21623  004FCA  0100               	movlb	0	; () banked
 21624  004FCC  277A               	addwf	ECANSendMessage@ptr& (0+255),f,b
 21625  004FCE  0E00               	movlw	0
 21626  004FD0  0100               	movlb	0	; () banked
 21627  004FD2  237B               	addwfc	(ECANSendMessage@ptr+1)& (0+255),f,b
 21628                           
 21629                           ; BSR set to: 0
 21630                           ;ECAN.c: 747: for ( j = 0 ; j < dataLen; j++ )
 21631  004FD4  0E00               	movlw	0
 21632  004FD6  0100               	movlb	0	; () banked
 21633  004FD8  6F74               	movwf	ECANSendMessage@j& (0+255),b
 21634  004FDA  D011               	goto	l8250
 21635  004FDC                     l8242:
 21636                           
 21637                           ; BSR set to: 0
 21638                           ;ECAN.c: 748: *ptr++ = *data++;
 21639  004FDC  C027  FFD9         	movff	ECANSendMessage@data,fsr2l
 21640  004FE0  C028  FFDA         	movff	ECANSendMessage@data+1,fsr2h
 21641  004FE4  C07A  FFE1         	movff	ECANSendMessage@ptr,fsr1l
 21642  004FE8  C07B  FFE2         	movff	ECANSendMessage@ptr+1,fsr1h
 21643  004FEC  CFDF FFE7          	movff	indf2,indf1
 21644                           
 21645                           ; BSR set to: 0
 21646  004FF0  4A27               	infsnz	ECANSendMessage@data,f,c
 21647  004FF2  2A28               	incf	ECANSendMessage@data+1,f,c
 21648                           
 21649                           ; BSR set to: 0
 21650  004FF4  0100               	movlb	0	; () banked
 21651  004FF6  4B7A               	infsnz	ECANSendMessage@ptr& (0+255),f,b
 21652  004FF8  2B7B               	incf	(ECANSendMessage@ptr+1)& (0+255),f,b
 21653                           
 21654                           ; BSR set to: 0
 21655  004FFA  0100               	movlb	0	; () banked
 21656  004FFC  2B74               	incf	ECANSendMessage@j& (0+255),f,b
 21657  004FFE                     l8250:
 21658                           
 21659                           ; BSR set to: 0
 21660  004FFE  5029               	movf	ECANSendMessage@dataLen,w,c
 21661  005000  0100               	movlb	0	; () banked
 21662  005002  5D74               	subwf	ECANSendMessage@j& (0+255),w,b
 21663  005004  A0D8               	btfss	status,0,c
 21664  005006  D7EA               	goto	l8242
 21665                           
 21666                           ; BSR set to: 0
 21667                           ;ECAN.c: 752: if ( !(*tempPtr & 0x04) )
 21668                           
 21669                           ; BSR set to: 0
 21670  005008  C076  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 21671  00500C  C077  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 21672  005010  50DF               	movf	indf2,w,c
 21673  005012  6E2B               	movwf	??_ECANSendMessage& (0+255),c
 21674  005014  B42B               	btfsc	??_ECANSendMessage,2,c
 21675  005016  D006               	goto	l8256
 21676                           
 21677                           ; BSR set to: 0
 21678                           ;ECAN.c: 753: *tempPtr |= 0x08;
 21679  005018  C076  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 21680  00501C  C077  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 21681  005020  0E00               	movlw	0
 21682  005022  86DB               	bsf	plusw2,3,c
 21683  005024                     l8256:
 21684                           
 21685                           ; BSR set to: 0
 21686                           ;ECAN.c: 755: return TRUE;
 21687  005024  0E01               	movlw	1
 21688  005026  D009               	goto	l822
 21689  005028                     l8260:
 21690                           
 21691                           ; BSR set to: 0
 21692  005028  0100               	movlb	0	; () banked
 21693  00502A  2B79               	incf	ECANSendMessage@i& (0+255),f,b
 21694  00502C                     l8262:
 21695                           
 21696                           ; BSR set to: 0
 21697  00502C  0100               	movlb	0	; () banked
 21698  00502E  5173               	movf	ECANSendMessage@buffers& (0+255),w,b
 21699  005030  0100               	movlb	0	; () banked
 21700  005032  5D79               	subwf	ECANSendMessage@i& (0+255),w,b
 21701  005034  A0D8               	btfss	status,0,c
 21702  005036  D75F               	goto	l8206
 21703                           
 21704                           ; BSR set to: 0
 21705                           ;ECAN.c: 756: }
 21706                           ;ECAN.c: 757: }
 21707                           ;ECAN.c: 760: return FALSE;
 21708                           
 21709                           ; BSR set to: 0
 21710  005038  0E00               	movlw	0
 21711  00503A                     l822:
 21712                           
 21713                           ; BSR set to: 0
 21714  00503A  0012               	return	
 21715  00503C                     __end_of_ECANSendMessage:
 21716                           	opt stack 0
 21717                           tblptru	equ	0xFF8
 21718                           tblptrh	equ	0xFF7
 21719                           tblptrl	equ	0xFF6
 21720                           tablat	equ	0xFF5
 21721                           prodh	equ	0xFF4
 21722                           prodl	equ	0xFF3
 21723                           intcon	equ	0xFF2
 21724                           postinc0	equ	0xFEE
 21725                           wreg	equ	0xFE8
 21726                           indf1	equ	0xFE7
 21727                           postdec1	equ	0xFE5
 21728                           fsr1h	equ	0xFE2
 21729                           fsr1l	equ	0xFE1
 21730                           indf2	equ	0xFDF
 21731                           postinc2	equ	0xFDE
 21732                           postdec2	equ	0xFDD
 21733                           plusw2	equ	0xFDB
 21734                           fsr2h	equ	0xFDA
 21735                           fsr2l	equ	0xFD9
 21736                           status	equ	0xFD8
 21737                           
 21738 ;; *************** function __CANIDToRegs *****************
 21739 ;; Defined at:
 21740 ;;		line 1096 in file "../ECAN.c"
 21741 ;; Parameters:    Size  Location     Type
 21742 ;;  ptr             2   23[COMRAM] PTR unsigned char 
 21743 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 21744 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 21745 ;;		 -> B0CON(1), 
 21746 ;;  val             4   25[COMRAM] unsigned long 
 21747 ;;  type            1   29[COMRAM] unsigned char 
 21748 ;; Auto vars:     Size  Location     Type
 21749 ;;  Value           2   32[COMRAM] PTR struct _CAN_MESSAGE_
 21750 ;;		 -> _CANIDToRegs@val(4), 
 21751 ;; Return value:  Size  Location     Type
 21752 ;;		None               void
 21753 ;; Registers used:
 21754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21755 ;; Tracked objects:
 21756 ;;		On entry : 0/0
 21757 ;;		On exit  : 0/0
 21758 ;;		Unchanged: 0/0
 21759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21760 ;;      Params:         7       0       0       0       0       0       0
 21761 ;;      Locals:         2       0       0       0       0       0       0
 21762 ;;      Temps:          2       0       0       0       0       0       0
 21763 ;;      Totals:        11       0       0       0       0       0       0
 21764 ;;Total ram usage:       11 bytes
 21765 ;; Hardware stack levels used:    1
 21766 ;; Hardware stack levels required when called:    2
 21767 ;; This function calls:
 21768 ;;		Nothing
 21769 ;; This function is called by:
 21770 ;;		_ECANSendMessage
 21771 ;; This function uses a non-reentrant model
 21772 ;;
 21773                           
 21774                           	psect	text84
 21775  005688                     __ptext84:
 21776                           	opt stack 0
 21777  005688                     __CANIDToRegs:
 21778                           	opt stack 23
 21779                           
 21780                           ;ECAN.c: 1100: CAN_MESSAGE_ID *Value;
 21781                           ;ECAN.c: 1102: Value = (CAN_MESSAGE_ID*)&val;
 21782                           
 21783                           ; BSR set to: 0
 21784                           ;incstack = 0
 21785  005688  0E00               	movlw	high __CANIDToRegs@val
 21786  00568A  6E22               	movwf	__CANIDToRegs@Value+1,c
 21787  00568C  0E1A               	movlw	low __CANIDToRegs@val
 21788  00568E  6E21               	movwf	__CANIDToRegs@Value,c
 21789                           
 21790                           ;ECAN.c: 1104: if ( type == 0 )
 21791  005690  661E               	tstfsz	__CANIDToRegs@type,c
 21792  005692  D03A               	goto	l8140
 21793                           
 21794                           ;ECAN.c: 1105: {
 21795                           ;ECAN.c: 1107: *ptr = Value->BYTES.BYTE_1 >> 3;
 21796  005694  C021  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 21797  005698  C022  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 21798  00569C  50DF               	movf	indf2,w,c
 21799  00569E  6E1F               	movwf	??__CANIDToRegs& (0+255),c
 21800  0056A0  90D8               	bcf	status,0,c
 21801  0056A2  321F               	rrcf	??__CANIDToRegs,f,c
 21802  0056A4  90D8               	bcf	status,0,c
 21803  0056A6  321F               	rrcf	??__CANIDToRegs,f,c
 21804  0056A8  90D8               	bcf	status,0,c
 21805  0056AA  301F               	rrcf	??__CANIDToRegs,w,c
 21806  0056AC  C018  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 21807  0056B0  C019  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 21808  0056B4  6EDF               	movwf	indf2,c
 21809                           
 21810                           ;ECAN.c: 1108: *ptr |= (Value->BYTES.BYTE_2 << 5);
 21811  0056B6  EE20 F001          	lfsr	2,1
 21812  0056BA  5021               	movf	__CANIDToRegs@Value,w,c
 21813  0056BC  26D9               	addwf	fsr2l,f,c
 21814  0056BE  5022               	movf	__CANIDToRegs@Value+1,w,c
 21815  0056C0  22DA               	addwfc	fsr2h,f,c
 21816  0056C2  50DF               	movf	indf2,w,c
 21817  0056C4  6E1F               	movwf	??__CANIDToRegs& (0+255),c
 21818  0056C6  0E05               	movlw	5
 21819  0056C8  6E20               	movwf	(??__CANIDToRegs+1)& (0+255),c
 21820  0056CA                     u8105:
 21821  0056CA  90D8               	bcf	status,0,c
 21822  0056CC  361F               	rlcf	??__CANIDToRegs,f,c
 21823  0056CE  2E20               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 21824  0056D0  D7FC               	goto	u8105
 21825  0056D2  C018  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 21826  0056D6  C019  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 21827  0056DA  501F               	movf	??__CANIDToRegs,w,c
 21828  0056DC  12DF               	iorwf	indf2,f,c
 21829                           
 21830                           ;ECAN.c: 1109: ptr++;
 21831  0056DE  4A18               	infsnz	__CANIDToRegs@ptr,f,c
 21832  0056E0  2A19               	incf	__CANIDToRegs@ptr+1,f,c
 21833                           
 21834                           ;ECAN.c: 1110: *ptr = Value->BYTES.BYTE_1 << 5;
 21835  0056E2  C021  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 21836  0056E6  C022  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 21837  0056EA  50DF               	movf	indf2,w,c
 21838  0056EC  6E1F               	movwf	??__CANIDToRegs& (0+255),c
 21839  0056EE  0E05               	movlw	5
 21840  0056F0  6E20               	movwf	(??__CANIDToRegs+1)& (0+255),c
 21841  0056F2                     u8115:
 21842  0056F2  90D8               	bcf	status,0,c
 21843  0056F4  361F               	rlcf	??__CANIDToRegs,f,c
 21844  0056F6  2E20               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 21845  0056F8  D7FC               	goto	u8115
 21846  0056FA  501F               	movf	??__CANIDToRegs,w,c
 21847  0056FC  C018  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 21848  005700  C019  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 21849  005704  6EDF               	movwf	indf2,c
 21850                           
 21851                           ;ECAN.c: 1111: }
 21852  005706  D06E               	goto	l876
 21853  005708                     l8140:
 21854                           
 21855                           ;ECAN.c: 1112: else
 21856                           ;ECAN.c: 1113: {
 21857                           ;ECAN.c: 1115: *ptr = Value->BYTES.BYTE_3 >> 5;
 21858  005708  EE20 F002          	lfsr	2,2
 21859  00570C  5021               	movf	__CANIDToRegs@Value,w,c
 21860  00570E  26D9               	addwf	fsr2l,f,c
 21861  005710  5022               	movf	__CANIDToRegs@Value+1,w,c
 21862  005712  22DA               	addwfc	fsr2h,f,c
 21863  005714  50DF               	movf	indf2,w,c
 21864  005716  6E1F               	movwf	??__CANIDToRegs& (0+255),c
 21865  005718  0E05               	movlw	5
 21866  00571A  6E20               	movwf	(??__CANIDToRegs+1)& (0+255),c
 21867  00571C                     u8125:
 21868  00571C  90D8               	bcf	status,0,c
 21869  00571E  321F               	rrcf	??__CANIDToRegs,f,c
 21870  005720  2E20               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 21871  005722  D7FC               	goto	u8125
 21872  005724  501F               	movf	??__CANIDToRegs,w,c
 21873  005726  C018  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 21874  00572A  C019  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 21875  00572E  6EDF               	movwf	indf2,c
 21876                           
 21877                           ;ECAN.c: 1116: *ptr |= Value->BYTES.BYTE_4 << 3;
 21878  005730  EE20 F003          	lfsr	2,3
 21879  005734  5021               	movf	__CANIDToRegs@Value,w,c
 21880  005736  26D9               	addwf	fsr2l,f,c
 21881  005738  5022               	movf	__CANIDToRegs@Value+1,w,c
 21882  00573A  22DA               	addwfc	fsr2h,f,c
 21883  00573C  50DF               	movf	indf2,w,c
 21884  00573E  6E1F               	movwf	??__CANIDToRegs& (0+255),c
 21885  005740  90D8               	bcf	status,0,c
 21886  005742  361F               	rlcf	??__CANIDToRegs,f,c
 21887  005744  90D8               	bcf	status,0,c
 21888  005746  361F               	rlcf	??__CANIDToRegs,f,c
 21889  005748  90D8               	bcf	status,0,c
 21890  00574A  361F               	rlcf	??__CANIDToRegs,f,c
 21891  00574C  C018  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 21892  005750  C019  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 21893  005754  501F               	movf	??__CANIDToRegs,w,c
 21894  005756  12DF               	iorwf	indf2,f,c
 21895                           
 21896                           ;ECAN.c: 1117: ptr++;
 21897  005758  4A18               	infsnz	__CANIDToRegs@ptr,f,c
 21898  00575A  2A19               	incf	__CANIDToRegs@ptr+1,f,c
 21899                           
 21900                           ;ECAN.c: 1118: *ptr = (Value->BYTES.BYTE_3 << 3) & 0xE0;
 21901  00575C  EE20 F002          	lfsr	2,2
 21902  005760  5021               	movf	__CANIDToRegs@Value,w,c
 21903  005762  26D9               	addwf	fsr2l,f,c
 21904  005764  5022               	movf	__CANIDToRegs@Value+1,w,c
 21905  005766  22DA               	addwfc	fsr2h,f,c
 21906  005768  50DF               	movf	indf2,w,c
 21907  00576A  6E1F               	movwf	??__CANIDToRegs& (0+255),c
 21908  00576C  90D8               	bcf	status,0,c
 21909  00576E  361F               	rlcf	??__CANIDToRegs,f,c
 21910  005770  90D8               	bcf	status,0,c
 21911  005772  361F               	rlcf	??__CANIDToRegs,f,c
 21912  005774  90D8               	bcf	status,0,c
 21913  005776  341F               	rlcf	??__CANIDToRegs,w,c
 21914  005778  0BE0               	andlw	224
 21915  00577A  C018  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 21916  00577E  C019  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 21917  005782  6EDF               	movwf	indf2,c
 21918                           
 21919                           ;ECAN.c: 1120: *ptr |= 0b00001000;
 21920  005784  C018  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 21921  005788  C019  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 21922  00578C  0E00               	movlw	0
 21923  00578E  86DB               	bsf	plusw2,3,c
 21924                           
 21925                           ;ECAN.c: 1121: *ptr |= Value->BYTES.BYTE_3 & 0x03;
 21926  005790  EE20 F002          	lfsr	2,2
 21927  005794  5021               	movf	__CANIDToRegs@Value,w,c
 21928  005796  26D9               	addwf	fsr2l,f,c
 21929  005798  5022               	movf	__CANIDToRegs@Value+1,w,c
 21930  00579A  22DA               	addwfc	fsr2h,f,c
 21931  00579C  50DF               	movf	indf2,w,c
 21932  00579E  6E1F               	movwf	??__CANIDToRegs& (0+255),c
 21933  0057A0  0E03               	movlw	3
 21934  0057A2  161F               	andwf	??__CANIDToRegs,f,c
 21935  0057A4  C018  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 21936  0057A8  C019  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 21937  0057AC  501F               	movf	??__CANIDToRegs,w,c
 21938  0057AE  12DF               	iorwf	indf2,f,c
 21939                           
 21940                           ;ECAN.c: 1122: ptr++;
 21941  0057B0  4A18               	infsnz	__CANIDToRegs@ptr,f,c
 21942  0057B2  2A19               	incf	__CANIDToRegs@ptr+1,f,c
 21943                           
 21944                           ;ECAN.c: 1123: *ptr = Value->BYTES.BYTE_2;
 21945  0057B4  EE20 F001          	lfsr	2,1
 21946  0057B8  5021               	movf	__CANIDToRegs@Value,w,c
 21947  0057BA  26D9               	addwf	fsr2l,f,c
 21948  0057BC  5022               	movf	__CANIDToRegs@Value+1,w,c
 21949  0057BE  22DA               	addwfc	fsr2h,f,c
 21950  0057C0  C018  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 21951  0057C4  C019  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 21952  0057C8  CFDF FFE7          	movff	indf2,indf1
 21953                           
 21954                           ;ECAN.c: 1124: ptr++;
 21955  0057CC  4A18               	infsnz	__CANIDToRegs@ptr,f,c
 21956  0057CE  2A19               	incf	__CANIDToRegs@ptr+1,f,c
 21957                           
 21958                           ;ECAN.c: 1125: *ptr = Value->BYTES.BYTE_1;
 21959  0057D0  C021  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 21960  0057D4  C022  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 21961  0057D8  C018  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 21962  0057DC  C019  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 21963  0057E0  CFDF FFE7          	movff	indf2,indf1
 21964  0057E4                     l876:
 21965  0057E4  0012               	return	
 21966  0057E6                     __end_of__CANIDToRegs:
 21967                           	opt stack 0
 21968                           tblptru	equ	0xFF8
 21969                           tblptrh	equ	0xFF7
 21970                           tblptrl	equ	0xFF6
 21971                           tablat	equ	0xFF5
 21972                           prodh	equ	0xFF4
 21973                           prodl	equ	0xFF3
 21974                           intcon	equ	0xFF2
 21975                           postinc0	equ	0xFEE
 21976                           wreg	equ	0xFE8
 21977                           indf1	equ	0xFE7
 21978                           postdec1	equ	0xFE5
 21979                           fsr1h	equ	0xFE2
 21980                           fsr1l	equ	0xFE1
 21981                           indf2	equ	0xFDF
 21982                           postinc2	equ	0xFDE
 21983                           postdec2	equ	0xFDD
 21984                           plusw2	equ	0xFDB
 21985                           fsr2h	equ	0xFDA
 21986                           fsr2l	equ	0xFD9
 21987                           status	equ	0xFD8
 21988                           
 21989 ;; *************** function _setEventData *****************
 21990 ;; Defined at:
 21991 ;;		line 838 in file "../main.c"
 21992 ;; Parameters:    Size  Location     Type
 21993 ;;  v               2   49[BANK0 ] int 
 21994 ;;  unit            1   51[BANK0 ] unsigned char 
 21995 ;; Auto vars:     Size  Location     Type
 21996 ;;  newval          4   56[BANK0 ] unsigned char 
 21997 ;;  ival            2   60[BANK0 ] int 
 21998 ;; Return value:  Size  Location     Type
 21999 ;;		None               void
 22000 ;; Registers used:
 22001 ;;		wreg, status,2, status,0, prodl, cstack
 22002 ;; Tracked objects:
 22003 ;;		On entry : 0/0
 22004 ;;		On exit  : 0/0
 22005 ;;		Unchanged: 0/0
 22006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22007 ;;      Params:         0       3       0       0       0       0       0
 22008 ;;      Locals:         0       6       0       0       0       0       0
 22009 ;;      Temps:          0       4       0       0       0       0       0
 22010 ;;      Totals:         0      13       0       0       0       0       0
 22011 ;;Total ram usage:       13 bytes
 22012 ;; Hardware stack levels used:    1
 22013 ;; Hardware stack levels required when called:    5
 22014 ;; This function calls:
 22015 ;;		_Celsius2Fahrenheit
 22016 ;;		_Celsius2Kelvin
 22017 ;;		___awtofl
 22018 ;;		___fltol
 22019 ;; This function is called by:
 22020 ;;		_sendTempEvent
 22021 ;; This function uses a non-reentrant model
 22022 ;;
 22023                           
 22024                           	psect	text85
 22025  006582                     __ptext85:
 22026                           	opt stack 0
 22027  006582                     _setEventData:
 22028                           	opt stack 23
 22029                           
 22030                           ;main.c: 840: double newval;
 22031                           ;main.c: 841: int ival;
 22032                           ;main.c: 843: if (0 == unit) {
 22033                           
 22034                           ;incstack = 0
 22035  006582  0100               	movlb	0	; () banked
 22036  006584  6793               	tstfsz	setEventData@unit& (0+255),b
 22037  006586  D019               	goto	l8882
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;main.c: 845: newval = Celsius2Kelvin(v);
 22041  006588  C091  F022         	movff	setEventData@v,___awtofl@c
 22042  00658C  C092  F023         	movff	setEventData@v+1,___awtofl@c+1
 22043  006590  ECAB  F037         	call	___awtofl	;wreg free
 22044  006594  C022  F08D         	movff	?___awtofl,Celsius2Kelvin@tc
 22045  006598  C023  F08E         	movff	?___awtofl+1,Celsius2Kelvin@tc+1
 22046  00659C  C024  F08F         	movff	?___awtofl+2,Celsius2Kelvin@tc+2
 22047  0065A0  C025  F090         	movff	?___awtofl+3,Celsius2Kelvin@tc+3
 22048  0065A4  EC9A  F038         	call	_Celsius2Kelvin	;wreg free
 22049  0065A8  C08D  F098         	movff	?_Celsius2Kelvin,setEventData@newval
 22050  0065AC  C08E  F099         	movff	?_Celsius2Kelvin+1,setEventData@newval+1
 22051  0065B0  C08F  F09A         	movff	?_Celsius2Kelvin+2,setEventData@newval+2
 22052  0065B4  C090  F09B         	movff	?_Celsius2Kelvin+3,setEventData@newval+3
 22053                           
 22054                           ;main.c: 846: } else if (2 == unit) {
 22055  0065B8  D02C               	goto	l8888
 22056  0065BA                     l8882:
 22057  0065BA  0100               	movlb	0	; () banked
 22058  0065BC  5193               	movf	setEventData@unit& (0+255),w,b
 22059  0065BE  0A02               	xorlw	2
 22060  0065C0  A4D8               	btfss	status,2,c
 22061  0065C2  D019               	goto	l8886
 22062                           
 22063                           ; BSR set to: 0
 22064                           ;main.c: 848: newval = Celsius2Fahrenheit(v);
 22065  0065C4  C091  F022         	movff	setEventData@v,___awtofl@c
 22066  0065C8  C092  F023         	movff	setEventData@v+1,___awtofl@c+1
 22067  0065CC  ECAB  F037         	call	___awtofl	;wreg free
 22068  0065D0  C022  F08D         	movff	?___awtofl,Celsius2Fahrenheit@tc
 22069  0065D4  C023  F08E         	movff	?___awtofl+1,Celsius2Fahrenheit@tc+1
 22070  0065D8  C024  F08F         	movff	?___awtofl+2,Celsius2Fahrenheit@tc+2
 22071  0065DC  C025  F090         	movff	?___awtofl+3,Celsius2Fahrenheit@tc+3
 22072  0065E0  ECD2  F035         	call	_Celsius2Fahrenheit	;wreg free
 22073  0065E4  C08D  F098         	movff	?_Celsius2Fahrenheit,setEventData@newval
 22074  0065E8  C08E  F099         	movff	?_Celsius2Fahrenheit+1,setEventData@newval+1
 22075  0065EC  C08F  F09A         	movff	?_Celsius2Fahrenheit+2,setEventData@newval+2
 22076  0065F0  C090  F09B         	movff	?_Celsius2Fahrenheit+3,setEventData@newval+3
 22077                           
 22078                           ;main.c: 849: } else {
 22079  0065F4  D00E               	goto	l8888
 22080  0065F6                     l8886:
 22081                           
 22082                           ;main.c: 851: newval = v;
 22083  0065F6  C091  F022         	movff	setEventData@v,___awtofl@c
 22084  0065FA  C092  F023         	movff	setEventData@v+1,___awtofl@c+1
 22085  0065FE  ECAB  F037         	call	___awtofl	;wreg free
 22086  006602  C022  F098         	movff	?___awtofl,setEventData@newval
 22087  006606  C023  F099         	movff	?___awtofl+1,setEventData@newval+1
 22088  00660A  C024  F09A         	movff	?___awtofl+2,setEventData@newval+2
 22089  00660E  C025  F09B         	movff	?___awtofl+3,setEventData@newval+3
 22090  006612                     l8888:
 22091                           
 22092                           ;main.c: 852: }
 22093                           ;main.c: 854: ival = (int) newval;
 22094  006612  C098  F07A         	movff	setEventData@newval,___fltol@f1
 22095  006616  C099  F07B         	movff	setEventData@newval+1,___fltol@f1+1
 22096  00661A  C09A  F07C         	movff	setEventData@newval+2,___fltol@f1+2
 22097  00661E  C09B  F07D         	movff	setEventData@newval+3,___fltol@f1+3
 22098  006622  EC9E  F02C         	call	___fltol	;wreg free
 22099  006626  C07A  F094         	movff	?___fltol,??_setEventData
 22100  00662A  C07B  F095         	movff	?___fltol+1,??_setEventData+1
 22101  00662E  C07C  F096         	movff	?___fltol+2,??_setEventData+2
 22102  006632  C07D  F097         	movff	?___fltol+3,??_setEventData+3
 22103  006636  C094  F09C         	movff	??_setEventData,setEventData@ival
 22104  00663A  C095  F09D         	movff	??_setEventData+1,setEventData@ival+1
 22105                           
 22106                           ;main.c: 856: vscp_omsg.data[ 2 ] = ((ival & 0xff00) >> 8);
 22107  00663E  0100               	movlb	0	; () banked
 22108  006640  C09D  F094         	movff	setEventData@ival+1,??_setEventData
 22109  006644  C094  F095         	movff	??_setEventData,??_setEventData+1
 22110  006648  0100               	movlb	0	; () banked
 22111  00664A  6B96               	clrf	(??_setEventData+2)& (0+255),b
 22112  00664C  0100               	movlb	0	; () banked
 22113  00664E  5195               	movf	(??_setEventData+1)& (0+255),w,b
 22114  006650  0100               	movlb	0	; () banked
 22115  006652  6FDB               	movwf	(_vscp_omsg+7)& (0+255),b
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;main.c: 857: vscp_omsg.data[ 3 ] = (ival & 0xff);
 22119  006654  C09C  F0DC         	movff	setEventData@ival,_vscp_omsg+8
 22120                           
 22121                           ; BSR set to: 0
 22122  006658  0012               	return	
 22123  00665A                     __end_of_setEventData:
 22124                           	opt stack 0
 22125                           tblptru	equ	0xFF8
 22126                           tblptrh	equ	0xFF7
 22127                           tblptrl	equ	0xFF6
 22128                           tablat	equ	0xFF5
 22129                           prodh	equ	0xFF4
 22130                           prodl	equ	0xFF3
 22131                           intcon	equ	0xFF2
 22132                           postinc0	equ	0xFEE
 22133                           wreg	equ	0xFE8
 22134                           indf1	equ	0xFE7
 22135                           postdec1	equ	0xFE5
 22136                           fsr1h	equ	0xFE2
 22137                           fsr1l	equ	0xFE1
 22138                           indf2	equ	0xFDF
 22139                           postinc2	equ	0xFDE
 22140                           postdec2	equ	0xFDD
 22141                           plusw2	equ	0xFDB
 22142                           fsr2h	equ	0xFDA
 22143                           fsr2l	equ	0xFD9
 22144                           status	equ	0xFD8
 22145                           
 22146 ;; *************** function ___fltol *****************
 22147 ;; Defined at:
 22148 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fltol.c"
 22149 ;; Parameters:    Size  Location     Type
 22150 ;;  f1              4   26[BANK0 ] int 
 22151 ;; Auto vars:     Size  Location     Type
 22152 ;;  exp1            1   35[BANK0 ] unsigned char 
 22153 ;;  sign1           1   34[BANK0 ] unsigned char 
 22154 ;; Return value:  Size  Location     Type
 22155 ;;                  4   26[BANK0 ] long 
 22156 ;; Registers used:
 22157 ;;		wreg, status,2, status,0
 22158 ;; Tracked objects:
 22159 ;;		On entry : 0/0
 22160 ;;		On exit  : 0/0
 22161 ;;		Unchanged: 0/0
 22162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22163 ;;      Params:         0       4       0       0       0       0       0
 22164 ;;      Locals:         0       2       0       0       0       0       0
 22165 ;;      Temps:          0       4       0       0       0       0       0
 22166 ;;      Totals:         0      10       0       0       0       0       0
 22167 ;;Total ram usage:       10 bytes
 22168 ;; Hardware stack levels used:    1
 22169 ;; Hardware stack levels required when called:    2
 22170 ;; This function calls:
 22171 ;;		Nothing
 22172 ;; This function is called by:
 22173 ;;		_doWork
 22174 ;;		_setEventData
 22175 ;;		_exp
 22176 ;;		_floor
 22177 ;;		_convertTemperature
 22178 ;; This function uses a non-reentrant model
 22179 ;;
 22180                           
 22181                           	psect	text86
 22182  00593C                     __ptext86:
 22183                           	opt stack 0
 22184  00593C                     ___fltol:
 22185                           	opt stack 25
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;incstack = 0
 22189  00593C  0100               	movlb	0	; () banked
 22190  00593E  C07A  F07E         	movff	___fltol@f1,??___fltol
 22191  005942  0100               	movlb	0	; () banked
 22192  005944  C07B  F07F         	movff	___fltol@f1+1,??___fltol+1
 22193  005948  0100               	movlb	0	; () banked
 22194  00594A  C07C  F080         	movff	___fltol@f1+2,??___fltol+2
 22195  00594E  0100               	movlb	0	; () banked
 22196  005950  C07D  F081         	movff	___fltol@f1+3,??___fltol+3
 22197  005954  0E18               	movlw	24
 22198  005956  D006               	goto	u9150
 22199  005958                     u9155:
 22200  005958  0100               	movlb	0	; () banked
 22201  00595A  90D8               	bcf	status,0,c
 22202  00595C  3381               	rrcf	(??___fltol+3)& (0+255),f,b
 22203  00595E  3380               	rrcf	(??___fltol+2)& (0+255),f,b
 22204  005960  337F               	rrcf	(??___fltol+1)& (0+255),f,b
 22205  005962  337E               	rrcf	??___fltol& (0+255),f,b
 22206  005964                     u9150:
 22207  005964  2EE8               	decfsz	wreg,f,c
 22208  005966  D7F8               	goto	u9155
 22209  005968  0100               	movlb	0	; () banked
 22210  00596A  517E               	movf	??___fltol& (0+255),w,b
 22211  00596C  0100               	movlb	0	; () banked
 22212  00596E  6F83               	movwf	___fltol@exp1& (0+255),b
 22213  005970  0100               	movlb	0	; () banked
 22214  005972  6783               	tstfsz	___fltol@exp1& (0+255),b
 22215  005974  D001               	goto	l8822
 22216  005976  D04B               	goto	u9200
 22217  005978                     l8822:
 22218                           
 22219                           ; BSR set to: 0
 22220  005978  0100               	movlb	0	; () banked
 22221  00597A  C07A  F07E         	movff	___fltol@f1,??___fltol
 22222  00597E  0100               	movlb	0	; () banked
 22223  005980  C07B  F07F         	movff	___fltol@f1+1,??___fltol+1
 22224  005984  0100               	movlb	0	; () banked
 22225  005986  C07C  F080         	movff	___fltol@f1+2,??___fltol+2
 22226  00598A  0100               	movlb	0	; () banked
 22227  00598C  C07D  F081         	movff	___fltol@f1+3,??___fltol+3
 22228  005990  0E20               	movlw	32
 22229  005992  D006               	goto	u9170
 22230  005994                     u9175:
 22231  005994  0100               	movlb	0	; () banked
 22232  005996  90D8               	bcf	status,0,c
 22233  005998  3381               	rrcf	(??___fltol+3)& (0+255),f,b
 22234  00599A  3380               	rrcf	(??___fltol+2)& (0+255),f,b
 22235  00599C  337F               	rrcf	(??___fltol+1)& (0+255),f,b
 22236  00599E  337E               	rrcf	??___fltol& (0+255),f,b
 22237  0059A0                     u9170:
 22238  0059A0  2EE8               	decfsz	wreg,f,c
 22239  0059A2  D7F8               	goto	u9175
 22240  0059A4  0100               	movlb	0	; () banked
 22241  0059A6  517E               	movf	??___fltol& (0+255),w,b
 22242  0059A8  0100               	movlb	0	; () banked
 22243  0059AA  6F82               	movwf	___fltol@sign1& (0+255),b
 22244                           
 22245                           ; BSR set to: 0
 22246  0059AC  0100               	movlb	0	; () banked
 22247  0059AE  8F7C               	bsf	(___fltol@f1+2)& (0+255),7,b
 22248                           
 22249                           ; BSR set to: 0
 22250  0059B0  0EFF               	movlw	255
 22251  0059B2  0100               	movlb	0	; () banked
 22252  0059B4  177A               	andwf	___fltol@f1& (0+255),f,b
 22253  0059B6  0EFF               	movlw	255
 22254  0059B8  0100               	movlb	0	; () banked
 22255  0059BA  177B               	andwf	(___fltol@f1+1)& (0+255),f,b
 22256  0059BC  0EFF               	movlw	255
 22257  0059BE  0100               	movlb	0	; () banked
 22258  0059C0  177C               	andwf	(___fltol@f1+2)& (0+255),f,b
 22259  0059C2  0E00               	movlw	0
 22260  0059C4  0100               	movlb	0	; () banked
 22261  0059C6  177D               	andwf	(___fltol@f1+3)& (0+255),f,b
 22262                           
 22263                           ; BSR set to: 0
 22264  0059C8  0E96               	movlw	150
 22265  0059CA  0100               	movlb	0	; () banked
 22266  0059CC  5F83               	subwf	___fltol@exp1& (0+255),f,b
 22267                           
 22268                           ; BSR set to: 0
 22269  0059CE  0100               	movlb	0	; () banked
 22270  0059D0  AF83               	btfss	___fltol@exp1& (0+255),7,b
 22271  0059D2  D019               	goto	l8842
 22272                           
 22273                           ; BSR set to: 0
 22274  0059D4  0100               	movlb	0	; () banked
 22275  0059D6  5183               	movf	___fltol@exp1& (0+255),w,b
 22276  0059D8  0A80               	xorlw	128
 22277  0059DA  0100               	movlb	0	; () banked
 22278  0059DC  6F7E               	movwf	??___fltol& (0+255),b
 22279  0059DE  0EE9               	movlw	233
 22280  0059E0  0A80               	xorlw	128
 22281  0059E2  0100               	movlb	0	; () banked
 22282  0059E4  5D7E               	subwf	??___fltol& (0+255),w,b
 22283  0059E6  A0D8               	btfss	status,0,c
 22284  0059E8  D012               	goto	u9200
 22285  0059EA                     l8838:
 22286                           
 22287                           ; BSR set to: 0
 22288  0059EA  0100               	movlb	0	; () banked
 22289  0059EC  90D8               	bcf	status,0,c
 22290  0059EE  0100               	movlb	0	; () banked
 22291  0059F0  337D               	rrcf	(___fltol@f1+3)& (0+255),f,b
 22292  0059F2  0100               	movlb	0	; () banked
 22293  0059F4  337C               	rrcf	(___fltol@f1+2)& (0+255),f,b
 22294  0059F6  0100               	movlb	0	; () banked
 22295  0059F8  337B               	rrcf	(___fltol@f1+1)& (0+255),f,b
 22296  0059FA  0100               	movlb	0	; () banked
 22297  0059FC  337A               	rrcf	___fltol@f1& (0+255),f,b
 22298                           
 22299                           ; BSR set to: 0
 22300  0059FE  0100               	movlb	0	; () banked
 22301  005A00  3F83               	incfsz	___fltol@exp1& (0+255),f,b
 22302  005A02  D7F3               	goto	l8838
 22303  005A04  D020               	goto	l8852
 22304  005A06                     l8842:
 22305                           
 22306                           ; BSR set to: 0
 22307  005A06  0E1F               	movlw	31
 22308  005A08  0100               	movlb	0	; () banked
 22309  005A0A  6583               	cpfsgt	___fltol@exp1& (0+255),b
 22310  005A0C  D019               	goto	l8850
 22311  005A0E                     u9200:
 22312                           
 22313                           ; BSR set to: 0
 22314  005A0E  0E00               	movlw	0
 22315  005A10  0100               	movlb	0	; () banked
 22316  005A12  6F7A               	movwf	?___fltol& (0+255),b
 22317  005A14  0E00               	movlw	0
 22318  005A16  0100               	movlb	0	; () banked
 22319  005A18  6F7B               	movwf	(?___fltol+1)& (0+255),b
 22320  005A1A  0E00               	movlw	0
 22321  005A1C  0100               	movlb	0	; () banked
 22322  005A1E  6F7C               	movwf	(?___fltol+2)& (0+255),b
 22323  005A20  0E00               	movlw	0
 22324  005A22  0100               	movlb	0	; () banked
 22325  005A24  6F7D               	movwf	(?___fltol+3)& (0+255),b
 22326  005A26  D02A               	goto	l1673
 22327  005A28                     l8848:
 22328                           
 22329                           ; BSR set to: 0
 22330  005A28  0100               	movlb	0	; () banked
 22331  005A2A  90D8               	bcf	status,0,c
 22332  005A2C  0100               	movlb	0	; () banked
 22333  005A2E  377A               	rlcf	___fltol@f1& (0+255),f,b
 22334  005A30  0100               	movlb	0	; () banked
 22335  005A32  377B               	rlcf	(___fltol@f1+1)& (0+255),f,b
 22336  005A34  0100               	movlb	0	; () banked
 22337  005A36  377C               	rlcf	(___fltol@f1+2)& (0+255),f,b
 22338  005A38  0100               	movlb	0	; () banked
 22339  005A3A  377D               	rlcf	(___fltol@f1+3)& (0+255),f,b
 22340  005A3C  0100               	movlb	0	; () banked
 22341  005A3E  0783               	decf	___fltol@exp1& (0+255),f,b
 22342  005A40                     l8850:
 22343                           
 22344                           ; BSR set to: 0
 22345  005A40  0100               	movlb	0	; () banked
 22346  005A42  6783               	tstfsz	___fltol@exp1& (0+255),b
 22347  005A44  D7F1               	goto	l8848
 22348  005A46                     l8852:
 22349                           
 22350                           ; BSR set to: 0
 22351  005A46  0100               	movlb	0	; () banked
 22352  005A48  5182               	movf	___fltol@sign1& (0+255),w,b
 22353  005A4A  B4D8               	btfsc	status,2,c
 22354  005A4C  D00F               	goto	l8856
 22355                           
 22356                           ; BSR set to: 0
 22357  005A4E  0100               	movlb	0	; () banked
 22358  005A50  1F7D               	comf	(___fltol@f1+3)& (0+255),f,b
 22359  005A52  0100               	movlb	0	; () banked
 22360  005A54  1F7C               	comf	(___fltol@f1+2)& (0+255),f,b
 22361  005A56  0100               	movlb	0	; () banked
 22362  005A58  1F7B               	comf	(___fltol@f1+1)& (0+255),f,b
 22363  005A5A  0100               	movlb	0	; () banked
 22364  005A5C  6D7A               	negf	___fltol@f1& (0+255),b
 22365  005A5E  0E00               	movlw	0
 22366  005A60  0100               	movlb	0	; () banked
 22367  005A62  237B               	addwfc	(___fltol@f1+1)& (0+255),f,b
 22368  005A64  0100               	movlb	0	; () banked
 22369  005A66  237C               	addwfc	(___fltol@f1+2)& (0+255),f,b
 22370  005A68  0100               	movlb	0	; () banked
 22371  005A6A  237D               	addwfc	(___fltol@f1+3)& (0+255),f,b
 22372  005A6C                     l8856:
 22373                           
 22374                           ; BSR set to: 0
 22375  005A6C  C07A  F07A         	movff	___fltol@f1,?___fltol
 22376  005A70  C07B  F07B         	movff	___fltol@f1+1,?___fltol+1
 22377  005A74  C07C  F07C         	movff	___fltol@f1+2,?___fltol+2
 22378  005A78  C07D  F07D         	movff	___fltol@f1+3,?___fltol+3
 22379  005A7C                     l1673:
 22380                           
 22381                           ; BSR set to: 0
 22382  005A7C  0012               	return	
 22383  005A7E                     __end_of___fltol:
 22384                           	opt stack 0
 22385                           tblptru	equ	0xFF8
 22386                           tblptrh	equ	0xFF7
 22387                           tblptrl	equ	0xFF6
 22388                           tablat	equ	0xFF5
 22389                           prodh	equ	0xFF4
 22390                           prodl	equ	0xFF3
 22391                           intcon	equ	0xFF2
 22392                           postinc0	equ	0xFEE
 22393                           wreg	equ	0xFE8
 22394                           indf1	equ	0xFE7
 22395                           postdec1	equ	0xFE5
 22396                           fsr1h	equ	0xFE2
 22397                           fsr1l	equ	0xFE1
 22398                           indf2	equ	0xFDF
 22399                           postinc2	equ	0xFDE
 22400                           postdec2	equ	0xFDD
 22401                           plusw2	equ	0xFDB
 22402                           fsr2h	equ	0xFDA
 22403                           fsr2l	equ	0xFD9
 22404                           status	equ	0xFD8
 22405                           
 22406 ;; *************** function ___awtofl *****************
 22407 ;; Defined at:
 22408 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtofl.c"
 22409 ;; Parameters:    Size  Location     Type
 22410 ;;  c               2   33[COMRAM] int 
 22411 ;; Auto vars:     Size  Location     Type
 22412 ;;  f1              4    0        int 
 22413 ;;  sign            1   37[COMRAM] unsigned char 
 22414 ;; Return value:  Size  Location     Type
 22415 ;;                  4   33[COMRAM] unsigned char 
 22416 ;; Registers used:
 22417 ;;		wreg, status,2, status,0, prodl, cstack
 22418 ;; Tracked objects:
 22419 ;;		On entry : 0/0
 22420 ;;		On exit  : 0/0
 22421 ;;		Unchanged: 0/0
 22422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22423 ;;      Params:         4       0       0       0       0       0       0
 22424 ;;      Locals:         1       0       0       0       0       0       0
 22425 ;;      Temps:          0       0       0       0       0       0       0
 22426 ;;      Totals:         5       0       0       0       0       0       0
 22427 ;;Total ram usage:        5 bytes
 22428 ;; Hardware stack levels used:    1
 22429 ;; Hardware stack levels required when called:    3
 22430 ;; This function calls:
 22431 ;;		___flpack
 22432 ;; This function is called by:
 22433 ;;		_setEventData
 22434 ;;		_exp
 22435 ;;		_log
 22436 ;;		_convertTemperature
 22437 ;; This function uses a non-reentrant model
 22438 ;;
 22439                           
 22440                           	psect	text87
 22441  006F56                     __ptext87:
 22442                           	opt stack 0
 22443  006F56                     ___awtofl:
 22444                           	opt stack 24
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;incstack = 0
 22448  006F56  0E00               	movlw	0
 22449  006F58  6E26               	movwf	___awtofl@sign,c
 22450  006F5A  5023               	movf	___awtofl@c+1,w,c
 22451  006F5C  0A80               	xorlw	128
 22452  006F5E  6EF3               	movwf	prodl,c
 22453  006F60  0E80               	movlw	128
 22454  006F62  5CF3               	subwf	prodl,w,c
 22455  006F64  0E00               	movlw	0
 22456  006F66  B4D8               	btfsc	status,2,c
 22457  006F68  5C22               	subwf	___awtofl@c,w,c
 22458  006F6A  B0D8               	btfsc	status,0,c
 22459  006F6C  D005               	goto	l8778
 22460  006F6E  6C22               	negf	___awtofl@c,c
 22461  006F70  1E23               	comf	___awtofl@c+1,f,c
 22462  006F72  B0D8               	btfsc	status,0,c
 22463  006F74  2A23               	incf	___awtofl@c+1,f,c
 22464  006F76  2A26               	incf	___awtofl@sign,f,c
 22465  006F78                     l8778:
 22466  006F78  C022  F018         	movff	___awtofl@c,___flpack@arg
 22467  006F7C  C023  F019         	movff	___awtofl@c+1,___flpack@arg+1
 22468  006F80  6A1A               	clrf	___flpack@arg+2,c
 22469  006F82  6A1B               	clrf	___flpack@arg+3,c
 22470  006F84  0E96               	movlw	150
 22471  006F86  6E1C               	movwf	___flpack@exp,c
 22472  006F88  C026  F01D         	movff	___awtofl@sign,___flpack@sign
 22473  006F8C  ECD1  F031         	call	___flpack	;wreg free
 22474  006F90  C018  F022         	movff	?___flpack,?___awtofl
 22475  006F94  C019  F023         	movff	?___flpack+1,?___awtofl+1
 22476  006F98  C01A  F024         	movff	?___flpack+2,?___awtofl+2
 22477  006F9C  C01B  F025         	movff	?___flpack+3,?___awtofl+3
 22478  006FA0  0012               	return	
 22479  006FA2                     __end_of___awtofl:
 22480                           	opt stack 0
 22481                           tblptru	equ	0xFF8
 22482                           tblptrh	equ	0xFF7
 22483                           tblptrl	equ	0xFF6
 22484                           tablat	equ	0xFF5
 22485                           prodh	equ	0xFF4
 22486                           prodl	equ	0xFF3
 22487                           intcon	equ	0xFF2
 22488                           postinc0	equ	0xFEE
 22489                           wreg	equ	0xFE8
 22490                           indf1	equ	0xFE7
 22491                           postdec1	equ	0xFE5
 22492                           fsr1h	equ	0xFE2
 22493                           fsr1l	equ	0xFE1
 22494                           indf2	equ	0xFDF
 22495                           postinc2	equ	0xFDE
 22496                           postdec2	equ	0xFDD
 22497                           plusw2	equ	0xFDB
 22498                           fsr2h	equ	0xFDA
 22499                           fsr2l	equ	0xFD9
 22500                           status	equ	0xFD8
 22501                           
 22502 ;; *************** function _Celsius2Kelvin *****************
 22503 ;; Defined at:
 22504 ;;		line 59 in file "../ntc.c"
 22505 ;; Parameters:    Size  Location     Type
 22506 ;;  tc              4   45[BANK0 ] unsigned char 
 22507 ;; Auto vars:     Size  Location     Type
 22508 ;;		None
 22509 ;; Return value:  Size  Location     Type
 22510 ;;                  4   45[BANK0 ] unsigned char 
 22511 ;; Registers used:
 22512 ;;		wreg, status,2, status,0, cstack
 22513 ;; Tracked objects:
 22514 ;;		On entry : 0/0
 22515 ;;		On exit  : 0/0
 22516 ;;		Unchanged: 0/0
 22517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22518 ;;      Params:         0       4       0       0       0       0       0
 22519 ;;      Locals:         0       0       0       0       0       0       0
 22520 ;;      Temps:          0       0       0       0       0       0       0
 22521 ;;      Totals:         0       4       0       0       0       0       0
 22522 ;;Total ram usage:        4 bytes
 22523 ;; Hardware stack levels used:    1
 22524 ;; Hardware stack levels required when called:    4
 22525 ;; This function calls:
 22526 ;;		___fladd
 22527 ;; This function is called by:
 22528 ;;		_setEventData
 22529 ;;		_convertTemperature
 22530 ;; This function uses a non-reentrant model
 22531 ;;
 22532                           
 22533                           	psect	text88
 22534  007134                     __ptext88:
 22535                           	opt stack 0
 22536  007134                     _Celsius2Kelvin:
 22537                           	opt stack 23
 22538                           
 22539                           ;ntc.c: 61: return (27316.0 + tc);
 22540                           
 22541                           ;incstack = 0
 22542  007134  C08D  F07E         	movff	Celsius2Kelvin@tc,___fladd@f1
 22543  007138  C08E  F07F         	movff	Celsius2Kelvin@tc+1,___fladd@f1+1
 22544  00713C  C08F  F080         	movff	Celsius2Kelvin@tc+2,___fladd@f1+2
 22545  007140  C090  F081         	movff	Celsius2Kelvin@tc+3,___fladd@f1+3
 22546  007144  0E00               	movlw	0
 22547  007146  0100               	movlb	0	; () banked
 22548  007148  6F82               	movwf	___fladd@f2& (0+255),b
 22549  00714A  0E68               	movlw	104
 22550  00714C  0100               	movlb	0	; () banked
 22551  00714E  6F83               	movwf	(___fladd@f2+1)& (0+255),b
 22552  007150  0ED5               	movlw	213
 22553  007152  0100               	movlb	0	; () banked
 22554  007154  6F84               	movwf	(___fladd@f2+2)& (0+255),b
 22555  007156  0E46               	movlw	70
 22556  007158  0100               	movlb	0	; () banked
 22557  00715A  6F85               	movwf	(___fladd@f2+3)& (0+255),b
 22558  00715C  EC75  F020         	call	___fladd	;wreg free
 22559  007160  C07E  F08D         	movff	?___fladd,?_Celsius2Kelvin
 22560  007164  C07F  F08E         	movff	?___fladd+1,?_Celsius2Kelvin+1
 22561  007168  C080  F08F         	movff	?___fladd+2,?_Celsius2Kelvin+2
 22562  00716C  C081  F090         	movff	?___fladd+3,?_Celsius2Kelvin+3
 22563  007170  0012               	return	
 22564  007172                     __end_of_Celsius2Kelvin:
 22565                           	opt stack 0
 22566                           tblptru	equ	0xFF8
 22567                           tblptrh	equ	0xFF7
 22568                           tblptrl	equ	0xFF6
 22569                           tablat	equ	0xFF5
 22570                           prodh	equ	0xFF4
 22571                           prodl	equ	0xFF3
 22572                           intcon	equ	0xFF2
 22573                           postinc0	equ	0xFEE
 22574                           wreg	equ	0xFE8
 22575                           indf1	equ	0xFE7
 22576                           postdec1	equ	0xFE5
 22577                           fsr1h	equ	0xFE2
 22578                           fsr1l	equ	0xFE1
 22579                           indf2	equ	0xFDF
 22580                           postinc2	equ	0xFDE
 22581                           postdec2	equ	0xFDD
 22582                           plusw2	equ	0xFDB
 22583                           fsr2h	equ	0xFDA
 22584                           fsr2l	equ	0xFD9
 22585                           status	equ	0xFD8
 22586                           
 22587 ;; *************** function _Celsius2Fahrenheit *****************
 22588 ;; Defined at:
 22589 ;;		line 40 in file "../ntc.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;  tc              4   45[BANK0 ] unsigned char 
 22592 ;; Auto vars:     Size  Location     Type
 22593 ;;		None
 22594 ;; Return value:  Size  Location     Type
 22595 ;;                  4   45[BANK0 ] unsigned char 
 22596 ;; Registers used:
 22597 ;;		wreg, status,2, status,0, cstack
 22598 ;; Tracked objects:
 22599 ;;		On entry : 0/0
 22600 ;;		On exit  : 0/0
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22603 ;;      Params:         0       4       0       0       0       0       0
 22604 ;;      Locals:         0       0       0       0       0       0       0
 22605 ;;      Temps:          0       0       0       0       0       0       0
 22606 ;;      Totals:         0       4       0       0       0       0       0
 22607 ;;Total ram usage:        4 bytes
 22608 ;; Hardware stack levels used:    1
 22609 ;; Hardware stack levels required when called:    4
 22610 ;; This function calls:
 22611 ;;		___fladd
 22612 ;;		___fldiv
 22613 ;;		___flmul
 22614 ;; This function is called by:
 22615 ;;		_setEventData
 22616 ;;		_convertTemperature
 22617 ;; This function uses a non-reentrant model
 22618 ;;
 22619                           
 22620                           	psect	text89
 22621  006BA4                     __ptext89:
 22622                           	opt stack 0
 22623  006BA4                     _Celsius2Fahrenheit:
 22624                           	opt stack 23
 22625                           
 22626                           ;ntc.c: 42: return ( (9 * tc + 16000) / 5);
 22627                           
 22628                           ;incstack = 0
 22629  006BA4  0E00               	movlw	0
 22630  006BA6  0100               	movlb	0	; () banked
 22631  006BA8  6F82               	movwf	___fladd@f2& (0+255),b
 22632  006BAA  0E00               	movlw	0
 22633  006BAC  0100               	movlb	0	; () banked
 22634  006BAE  6F83               	movwf	(___fladd@f2+1)& (0+255),b
 22635  006BB0  0E7A               	movlw	122
 22636  006BB2  0100               	movlb	0	; () banked
 22637  006BB4  6F84               	movwf	(___fladd@f2+2)& (0+255),b
 22638  006BB6  0E46               	movlw	70
 22639  006BB8  0100               	movlb	0	; () banked
 22640  006BBA  6F85               	movwf	(___fladd@f2+3)& (0+255),b
 22641  006BBC  0E00               	movlw	0
 22642  006BBE  0100               	movlb	0	; () banked
 22643  006BC0  6F6B               	movwf	___flmul@f2& (0+255),b
 22644  006BC2  0E00               	movlw	0
 22645  006BC4  0100               	movlb	0	; () banked
 22646  006BC6  6F6C               	movwf	(___flmul@f2+1)& (0+255),b
 22647  006BC8  0E10               	movlw	16
 22648  006BCA  0100               	movlb	0	; () banked
 22649  006BCC  6F6D               	movwf	(___flmul@f2+2)& (0+255),b
 22650  006BCE  0E41               	movlw	65
 22651  006BD0  0100               	movlb	0	; () banked
 22652  006BD2  6F6E               	movwf	(___flmul@f2+3)& (0+255),b
 22653  006BD4  C08D  F067         	movff	Celsius2Fahrenheit@tc,___flmul@f1
 22654  006BD8  C08E  F068         	movff	Celsius2Fahrenheit@tc+1,___flmul@f1+1
 22655  006BDC  C08F  F069         	movff	Celsius2Fahrenheit@tc+2,___flmul@f1+2
 22656  006BE0  C090  F06A         	movff	Celsius2Fahrenheit@tc+3,___flmul@f1+3
 22657  006BE4  EC1E  F028         	call	___flmul	;wreg free
 22658  006BE8  C067  F07E         	movff	?___flmul,___fladd@f1
 22659  006BEC  C068  F07F         	movff	?___flmul+1,___fladd@f1+1
 22660  006BF0  C069  F080         	movff	?___flmul+2,___fladd@f1+2
 22661  006BF4  C06A  F081         	movff	?___flmul+3,___fladd@f1+3
 22662  006BF8  EC75  F020         	call	___fladd	;wreg free
 22663  006BFC  C07E  F026         	movff	?___fladd,___fldiv@f1
 22664  006C00  C07F  F027         	movff	?___fladd+1,___fldiv@f1+1
 22665  006C04  C080  F028         	movff	?___fladd+2,___fldiv@f1+2
 22666  006C08  C081  F029         	movff	?___fladd+3,___fldiv@f1+3
 22667  006C0C  0E00               	movlw	0
 22668  006C0E  6E2A               	movwf	___fldiv@f2,c
 22669  006C10  0E00               	movlw	0
 22670  006C12  6E2B               	movwf	___fldiv@f2+1,c
 22671  006C14  0EA0               	movlw	160
 22672  006C16  6E2C               	movwf	___fldiv@f2+2,c
 22673  006C18  0E40               	movlw	64
 22674  006C1A  6E2D               	movwf	___fldiv@f2+3,c
 22675  006C1C  EC11  F02F         	call	___fldiv	;wreg free
 22676  006C20  C026  F08D         	movff	?___fldiv,?_Celsius2Fahrenheit
 22677  006C24  C027  F08E         	movff	?___fldiv+1,?_Celsius2Fahrenheit+1
 22678  006C28  C028  F08F         	movff	?___fldiv+2,?_Celsius2Fahrenheit+2
 22679  006C2C  C029  F090         	movff	?___fldiv+3,?_Celsius2Fahrenheit+3
 22680  006C30  0012               	return	
 22681  006C32                     __end_of_Celsius2Fahrenheit:
 22682                           	opt stack 0
 22683                           tblptru	equ	0xFF8
 22684                           tblptrh	equ	0xFF7
 22685                           tblptrl	equ	0xFF6
 22686                           tablat	equ	0xFF5
 22687                           prodh	equ	0xFF4
 22688                           prodl	equ	0xFF3
 22689                           intcon	equ	0xFF2
 22690                           postinc0	equ	0xFEE
 22691                           wreg	equ	0xFE8
 22692                           indf1	equ	0xFE7
 22693                           postdec1	equ	0xFE5
 22694                           fsr1h	equ	0xFE2
 22695                           fsr1l	equ	0xFE1
 22696                           indf2	equ	0xFDF
 22697                           postinc2	equ	0xFDE
 22698                           postdec2	equ	0xFDD
 22699                           plusw2	equ	0xFDB
 22700                           fsr2h	equ	0xFDA
 22701                           fsr2l	equ	0xFD9
 22702                           status	equ	0xFD8
 22703                           
 22704 ;; *************** function ___flmul *****************
 22705 ;; Defined at:
 22706 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\flmul.c"
 22707 ;; Parameters:    Size  Location     Type
 22708 ;;  f1              4    7[BANK0 ] unsigned char 
 22709 ;;  f2              4   11[BANK0 ] unsigned char 
 22710 ;; Auto vars:     Size  Location     Type
 22711 ;;  f3_as_produc    4   20[BANK0 ] unsigned long 
 22712 ;;  sign            1   25[BANK0 ] unsigned char 
 22713 ;;  cntr            1   24[BANK0 ] unsigned char 
 22714 ;;  exp             1   19[BANK0 ] unsigned char 
 22715 ;; Return value:  Size  Location     Type
 22716 ;;                  4    7[BANK0 ] unsigned char 
 22717 ;; Registers used:
 22718 ;;		wreg, status,2, status,0, cstack
 22719 ;; Tracked objects:
 22720 ;;		On entry : 0/0
 22721 ;;		On exit  : 0/0
 22722 ;;		Unchanged: 0/0
 22723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22724 ;;      Params:         0       8       0       0       0       0       0
 22725 ;;      Locals:         0       7       0       0       0       0       0
 22726 ;;      Temps:          0       4       0       0       0       0       0
 22727 ;;      Totals:         0      19       0       0       0       0       0
 22728 ;;Total ram usage:       19 bytes
 22729 ;; Hardware stack levels used:    1
 22730 ;; Hardware stack levels required when called:    3
 22731 ;; This function calls:
 22732 ;;		___flpack
 22733 ;; This function is called by:
 22734 ;;		_doWork
 22735 ;;		_Celsius2Fahrenheit
 22736 ;;		_exp
 22737 ;;		_log
 22738 ;;		_eval_poly
 22739 ;;		_Fahrenheit2Celsius
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text90
 22744  00503C                     __ptext90:
 22745                           	opt stack 0
 22746  00503C                     ___flmul:
 22747                           	opt stack 23
 22748                           
 22749                           ;incstack = 0
 22750  00503C  0100               	movlb	0	; () banked
 22751  00503E  C067  F06F         	movff	___flmul@f1,??___flmul
 22752  005042  0100               	movlb	0	; () banked
 22753  005044  C068  F070         	movff	___flmul@f1+1,??___flmul+1
 22754  005048  0100               	movlb	0	; () banked
 22755  00504A  C069  F071         	movff	___flmul@f1+2,??___flmul+2
 22756  00504E  0100               	movlb	0	; () banked
 22757  005050  C06A  F072         	movff	___flmul@f1+3,??___flmul+3
 22758  005054  0E18               	movlw	24
 22759  005056  D006               	goto	u8700
 22760  005058                     u8705:
 22761  005058  0100               	movlb	0	; () banked
 22762  00505A  90D8               	bcf	status,0,c
 22763  00505C  3372               	rrcf	(??___flmul+3)& (0+255),f,b
 22764  00505E  3371               	rrcf	(??___flmul+2)& (0+255),f,b
 22765  005060  3370               	rrcf	(??___flmul+1)& (0+255),f,b
 22766  005062  336F               	rrcf	??___flmul& (0+255),f,b
 22767  005064                     u8700:
 22768  005064  2EE8               	decfsz	wreg,f,c
 22769  005066  D7F8               	goto	u8705
 22770  005068  0100               	movlb	0	; () banked
 22771  00506A  516F               	movf	??___flmul& (0+255),w,b
 22772  00506C  0100               	movlb	0	; () banked
 22773  00506E  6F73               	movwf	___flmul@exp& (0+255),b
 22774  005070  0100               	movlb	0	; () banked
 22775  005072  6773               	tstfsz	___flmul@exp& (0+255),b
 22776  005074  D001               	goto	l8512
 22777  005076  D01D               	goto	u8730
 22778  005078                     l8512:
 22779                           
 22780                           ; BSR set to: 0
 22781  005078  0100               	movlb	0	; () banked
 22782  00507A  C06B  F06F         	movff	___flmul@f2,??___flmul
 22783  00507E  0100               	movlb	0	; () banked
 22784  005080  C06C  F070         	movff	___flmul@f2+1,??___flmul+1
 22785  005084  0100               	movlb	0	; () banked
 22786  005086  C06D  F071         	movff	___flmul@f2+2,??___flmul+2
 22787  00508A  0100               	movlb	0	; () banked
 22788  00508C  C06E  F072         	movff	___flmul@f2+3,??___flmul+3
 22789  005090  0E18               	movlw	24
 22790  005092  D006               	goto	u8720
 22791  005094                     u8725:
 22792  005094  0100               	movlb	0	; () banked
 22793  005096  90D8               	bcf	status,0,c
 22794  005098  3372               	rrcf	(??___flmul+3)& (0+255),f,b
 22795  00509A  3371               	rrcf	(??___flmul+2)& (0+255),f,b
 22796  00509C  3370               	rrcf	(??___flmul+1)& (0+255),f,b
 22797  00509E  336F               	rrcf	??___flmul& (0+255),f,b
 22798  0050A0                     u8720:
 22799  0050A0  2EE8               	decfsz	wreg,f,c
 22800  0050A2  D7F8               	goto	u8725
 22801  0050A4  0100               	movlb	0	; () banked
 22802  0050A6  516F               	movf	??___flmul& (0+255),w,b
 22803  0050A8  0100               	movlb	0	; () banked
 22804  0050AA  6F79               	movwf	___flmul@sign& (0+255),b
 22805  0050AC  0100               	movlb	0	; () banked
 22806  0050AE  6779               	tstfsz	___flmul@sign& (0+255),b
 22807  0050B0  D00D               	goto	l8518
 22808  0050B2                     u8730:
 22809                           
 22810                           ; BSR set to: 0
 22811  0050B2  0E00               	movlw	0
 22812  0050B4  0100               	movlb	0	; () banked
 22813  0050B6  6F67               	movwf	?___flmul& (0+255),b
 22814  0050B8  0E00               	movlw	0
 22815  0050BA  0100               	movlb	0	; () banked
 22816  0050BC  6F68               	movwf	(?___flmul+1)& (0+255),b
 22817  0050BE  0E00               	movlw	0
 22818  0050C0  0100               	movlb	0	; () banked
 22819  0050C2  6F69               	movwf	(?___flmul+2)& (0+255),b
 22820  0050C4  0E00               	movlw	0
 22821  0050C6  0100               	movlb	0	; () banked
 22822  0050C8  6F6A               	movwf	(?___flmul+3)& (0+255),b
 22823  0050CA  D09A               	goto	l1627
 22824  0050CC                     l8518:
 22825                           
 22826                           ; BSR set to: 0
 22827  0050CC  0100               	movlb	0	; () banked
 22828  0050CE  5179               	movf	___flmul@sign& (0+255),w,b
 22829  0050D0  0F7B               	addlw	123
 22830  0050D2  0100               	movlb	0	; () banked
 22831  0050D4  2773               	addwf	___flmul@exp& (0+255),f,b
 22832                           
 22833                           ; BSR set to: 0
 22834  0050D6  C06A  F079         	movff	___flmul@f1+3,___flmul@sign
 22835  0050DA  0100               	movlb	0	; () banked
 22836  0050DC  516E               	movf	(___flmul@f2+3)& (0+255),w,b
 22837  0050DE  0100               	movlb	0	; () banked
 22838  0050E0  1B79               	xorwf	___flmul@sign& (0+255),f,b
 22839  0050E2  0E80               	movlw	128
 22840  0050E4  0100               	movlb	0	; () banked
 22841  0050E6  1779               	andwf	___flmul@sign& (0+255),f,b
 22842                           
 22843                           ; BSR set to: 0
 22844  0050E8  0100               	movlb	0	; () banked
 22845  0050EA  8F69               	bsf	(___flmul@f1+2)& (0+255),7,b
 22846                           
 22847                           ; BSR set to: 0
 22848  0050EC  0100               	movlb	0	; () banked
 22849  0050EE  8F6D               	bsf	(___flmul@f2+2)& (0+255),7,b
 22850  0050F0  0EFF               	movlw	255
 22851  0050F2  0100               	movlb	0	; () banked
 22852  0050F4  176B               	andwf	___flmul@f2& (0+255),f,b
 22853  0050F6  0EFF               	movlw	255
 22854  0050F8  0100               	movlb	0	; () banked
 22855  0050FA  176C               	andwf	(___flmul@f2+1)& (0+255),f,b
 22856  0050FC  0EFF               	movlw	255
 22857  0050FE  0100               	movlb	0	; () banked
 22858  005100  176D               	andwf	(___flmul@f2+2)& (0+255),f,b
 22859  005102  0E00               	movlw	0
 22860  005104  0100               	movlb	0	; () banked
 22861  005106  176E               	andwf	(___flmul@f2+3)& (0+255),f,b
 22862                           
 22863                           ; BSR set to: 0
 22864  005108  0E00               	movlw	0
 22865  00510A  0100               	movlb	0	; () banked
 22866  00510C  6F74               	movwf	___flmul@f3_as_product& (0+255),b
 22867  00510E  0E00               	movlw	0
 22868  005110  0100               	movlb	0	; () banked
 22869  005112  6F75               	movwf	(___flmul@f3_as_product+1)& (0+255),b
 22870  005114  0E00               	movlw	0
 22871  005116  0100               	movlb	0	; () banked
 22872  005118  6F76               	movwf	(___flmul@f3_as_product+2)& (0+255),b
 22873  00511A  0E00               	movlw	0
 22874  00511C  0100               	movlb	0	; () banked
 22875  00511E  6F77               	movwf	(___flmul@f3_as_product+3)& (0+255),b
 22876                           
 22877                           ; BSR set to: 0
 22878  005120  0E07               	movlw	7
 22879  005122  0100               	movlb	0	; () banked
 22880  005124  6F78               	movwf	___flmul@cntr& (0+255),b
 22881  005126                     l8530:
 22882                           
 22883                           ; BSR set to: 0
 22884  005126  0100               	movlb	0	; () banked
 22885  005128  A167               	btfss	___flmul@f1& (0+255),0,b
 22886  00512A  D010               	goto	l8534
 22887                           
 22888                           ; BSR set to: 0
 22889  00512C  0100               	movlb	0	; () banked
 22890  00512E  516B               	movf	___flmul@f2& (0+255),w,b
 22891  005130  0100               	movlb	0	; () banked
 22892  005132  2774               	addwf	___flmul@f3_as_product& (0+255),f,b
 22893  005134  0100               	movlb	0	; () banked
 22894  005136  516C               	movf	(___flmul@f2+1)& (0+255),w,b
 22895  005138  0100               	movlb	0	; () banked
 22896  00513A  2375               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 22897  00513C  0100               	movlb	0	; () banked
 22898  00513E  516D               	movf	(___flmul@f2+2)& (0+255),w,b
 22899  005140  0100               	movlb	0	; () banked
 22900  005142  2376               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 22901  005144  0100               	movlb	0	; () banked
 22902  005146  516E               	movf	(___flmul@f2+3)& (0+255),w,b
 22903  005148  0100               	movlb	0	; () banked
 22904  00514A  2377               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 22905  00514C                     l8534:
 22906                           
 22907                           ; BSR set to: 0
 22908  00514C  0100               	movlb	0	; () banked
 22909  00514E  90D8               	bcf	status,0,c
 22910  005150  0100               	movlb	0	; () banked
 22911  005152  336A               	rrcf	(___flmul@f1+3)& (0+255),f,b
 22912  005154  0100               	movlb	0	; () banked
 22913  005156  3369               	rrcf	(___flmul@f1+2)& (0+255),f,b
 22914  005158  0100               	movlb	0	; () banked
 22915  00515A  3368               	rrcf	(___flmul@f1+1)& (0+255),f,b
 22916  00515C  0100               	movlb	0	; () banked
 22917  00515E  3367               	rrcf	___flmul@f1& (0+255),f,b
 22918                           
 22919                           ; BSR set to: 0
 22920  005160  0100               	movlb	0	; () banked
 22921  005162  90D8               	bcf	status,0,c
 22922  005164  0100               	movlb	0	; () banked
 22923  005166  376B               	rlcf	___flmul@f2& (0+255),f,b
 22924  005168  0100               	movlb	0	; () banked
 22925  00516A  376C               	rlcf	(___flmul@f2+1)& (0+255),f,b
 22926  00516C  0100               	movlb	0	; () banked
 22927  00516E  376D               	rlcf	(___flmul@f2+2)& (0+255),f,b
 22928  005170  0100               	movlb	0	; () banked
 22929  005172  376E               	rlcf	(___flmul@f2+3)& (0+255),f,b
 22930                           
 22931                           ; BSR set to: 0
 22932  005174  0100               	movlb	0	; () banked
 22933  005176  2F78               	decfsz	___flmul@cntr& (0+255),f,b
 22934  005178  D7D6               	goto	l8530
 22935                           
 22936                           ; BSR set to: 0
 22937                           
 22938                           ; BSR set to: 0
 22939  00517A  0E11               	movlw	17
 22940  00517C  0100               	movlb	0	; () banked
 22941  00517E  6F78               	movwf	___flmul@cntr& (0+255),b
 22942  005180                     l8542:
 22943                           
 22944                           ; BSR set to: 0
 22945  005180  0100               	movlb	0	; () banked
 22946  005182  A167               	btfss	___flmul@f1& (0+255),0,b
 22947  005184  D010               	goto	l8546
 22948                           
 22949                           ; BSR set to: 0
 22950  005186  0100               	movlb	0	; () banked
 22951  005188  516B               	movf	___flmul@f2& (0+255),w,b
 22952  00518A  0100               	movlb	0	; () banked
 22953  00518C  2774               	addwf	___flmul@f3_as_product& (0+255),f,b
 22954  00518E  0100               	movlb	0	; () banked
 22955  005190  516C               	movf	(___flmul@f2+1)& (0+255),w,b
 22956  005192  0100               	movlb	0	; () banked
 22957  005194  2375               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 22958  005196  0100               	movlb	0	; () banked
 22959  005198  516D               	movf	(___flmul@f2+2)& (0+255),w,b
 22960  00519A  0100               	movlb	0	; () banked
 22961  00519C  2376               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 22962  00519E  0100               	movlb	0	; () banked
 22963  0051A0  516E               	movf	(___flmul@f2+3)& (0+255),w,b
 22964  0051A2  0100               	movlb	0	; () banked
 22965  0051A4  2377               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 22966  0051A6                     l8546:
 22967                           
 22968                           ; BSR set to: 0
 22969  0051A6  0100               	movlb	0	; () banked
 22970  0051A8  90D8               	bcf	status,0,c
 22971  0051AA  0100               	movlb	0	; () banked
 22972  0051AC  336A               	rrcf	(___flmul@f1+3)& (0+255),f,b
 22973  0051AE  0100               	movlb	0	; () banked
 22974  0051B0  3369               	rrcf	(___flmul@f1+2)& (0+255),f,b
 22975  0051B2  0100               	movlb	0	; () banked
 22976  0051B4  3368               	rrcf	(___flmul@f1+1)& (0+255),f,b
 22977  0051B6  0100               	movlb	0	; () banked
 22978  0051B8  3367               	rrcf	___flmul@f1& (0+255),f,b
 22979                           
 22980                           ; BSR set to: 0
 22981  0051BA  0100               	movlb	0	; () banked
 22982  0051BC  90D8               	bcf	status,0,c
 22983  0051BE  0100               	movlb	0	; () banked
 22984  0051C0  3377               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 22985  0051C2  0100               	movlb	0	; () banked
 22986  0051C4  3376               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 22987  0051C6  0100               	movlb	0	; () banked
 22988  0051C8  3375               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 22989  0051CA  0100               	movlb	0	; () banked
 22990  0051CC  3374               	rrcf	___flmul@f3_as_product& (0+255),f,b
 22991                           
 22992                           ; BSR set to: 0
 22993  0051CE  0100               	movlb	0	; () banked
 22994  0051D0  2F78               	decfsz	___flmul@cntr& (0+255),f,b
 22995  0051D2  D7D6               	goto	l8542
 22996                           
 22997                           ; BSR set to: 0
 22998                           
 22999                           ; BSR set to: 0
 23000  0051D4  C074  F018         	movff	___flmul@f3_as_product,___flpack@arg
 23001  0051D8  C075  F019         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 23002  0051DC  C076  F01A         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 23003  0051E0  C077  F01B         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 23004  0051E4  C073  F01C         	movff	___flmul@exp,___flpack@exp
 23005  0051E8  C079  F01D         	movff	___flmul@sign,___flpack@sign
 23006  0051EC  ECD1  F031         	call	___flpack	;wreg free
 23007  0051F0  C018  F067         	movff	?___flpack,?___flmul
 23008  0051F4  C019  F068         	movff	?___flpack+1,?___flmul+1
 23009  0051F8  C01A  F069         	movff	?___flpack+2,?___flmul+2
 23010  0051FC  C01B  F06A         	movff	?___flpack+3,?___flmul+3
 23011  005200                     l1627:
 23012  005200  0012               	return	
 23013  005202                     __end_of___flmul:
 23014                           	opt stack 0
 23015                           tblptru	equ	0xFF8
 23016                           tblptrh	equ	0xFF7
 23017                           tblptrl	equ	0xFF6
 23018                           tablat	equ	0xFF5
 23019                           prodh	equ	0xFF4
 23020                           prodl	equ	0xFF3
 23021                           intcon	equ	0xFF2
 23022                           postinc0	equ	0xFEE
 23023                           wreg	equ	0xFE8
 23024                           indf1	equ	0xFE7
 23025                           postdec1	equ	0xFE5
 23026                           fsr1h	equ	0xFE2
 23027                           fsr1l	equ	0xFE1
 23028                           indf2	equ	0xFDF
 23029                           postinc2	equ	0xFDE
 23030                           postdec2	equ	0xFDD
 23031                           plusw2	equ	0xFDB
 23032                           fsr2h	equ	0xFDA
 23033                           fsr2l	equ	0xFD9
 23034                           status	equ	0xFD8
 23035                           
 23036 ;; *************** function ___fldiv *****************
 23037 ;; Defined at:
 23038 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fldiv.c"
 23039 ;; Parameters:    Size  Location     Type
 23040 ;;  f1              4   37[COMRAM] unsigned char 
 23041 ;;  f2              4   41[COMRAM] unsigned char 
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;  f3              4    0[BANK0 ] unsigned char 
 23044 ;;  sign            1    6[BANK0 ] unsigned char 
 23045 ;;  exp             1    5[BANK0 ] unsigned char 
 23046 ;;  cntr            1    4[BANK0 ] unsigned char 
 23047 ;; Return value:  Size  Location     Type
 23048 ;;                  4   37[COMRAM] unsigned char 
 23049 ;; Registers used:
 23050 ;;		wreg, status,2, status,0, cstack
 23051 ;; Tracked objects:
 23052 ;;		On entry : 0/0
 23053 ;;		On exit  : 0/0
 23054 ;;		Unchanged: 0/0
 23055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23056 ;;      Params:         8       0       0       0       0       0       0
 23057 ;;      Locals:         0       7       0       0       0       0       0
 23058 ;;      Temps:          4       0       0       0       0       0       0
 23059 ;;      Totals:        12       7       0       0       0       0       0
 23060 ;;Total ram usage:       19 bytes
 23061 ;; Hardware stack levels used:    1
 23062 ;; Hardware stack levels required when called:    3
 23063 ;; This function calls:
 23064 ;;		___flpack
 23065 ;; This function is called by:
 23066 ;;		_doWork
 23067 ;;		_Celsius2Fahrenheit
 23068 ;;		_exp
 23069 ;;		_Fahrenheit2Celsius
 23070 ;; This function uses a non-reentrant model
 23071 ;;
 23072                           
 23073                           	psect	text91
 23074  005E22                     __ptext91:
 23075                           	opt stack 0
 23076  005E22                     ___fldiv:
 23077                           	opt stack 23
 23078                           
 23079                           ;incstack = 0
 23080  005E22  C026  F02E         	movff	___fldiv@f1,??___fldiv
 23081  005E26  C027  F02F         	movff	___fldiv@f1+1,??___fldiv+1
 23082  005E2A  C028  F030         	movff	___fldiv@f1+2,??___fldiv+2
 23083  005E2E  C029  F031         	movff	___fldiv@f1+3,??___fldiv+3
 23084  005E32  0E18               	movlw	24
 23085  005E34  D005               	goto	u8650
 23086  005E36                     u8655:
 23087  005E36  90D8               	bcf	status,0,c
 23088  005E38  3231               	rrcf	??___fldiv+3,f,c
 23089  005E3A  3230               	rrcf	??___fldiv+2,f,c
 23090  005E3C  322F               	rrcf	??___fldiv+1,f,c
 23091  005E3E  322E               	rrcf	??___fldiv,f,c
 23092  005E40                     u8650:
 23093  005E40  2EE8               	decfsz	wreg,f,c
 23094  005E42  D7F9               	goto	u8655
 23095  005E44  502E               	movf	??___fldiv,w,c
 23096  005E46  0100               	movlb	0	; () banked
 23097  005E48  6F65               	movwf	___fldiv@exp& (0+255),b
 23098  005E4A  0100               	movlb	0	; () banked
 23099  005E4C  6765               	tstfsz	___fldiv@exp& (0+255),b
 23100  005E4E  D001               	goto	l8472
 23101  005E50  D017               	goto	u8680
 23102  005E52                     l8472:
 23103                           
 23104                           ; BSR set to: 0
 23105  005E52  C02A  F02E         	movff	___fldiv@f2,??___fldiv
 23106  005E56  C02B  F02F         	movff	___fldiv@f2+1,??___fldiv+1
 23107  005E5A  C02C  F030         	movff	___fldiv@f2+2,??___fldiv+2
 23108  005E5E  C02D  F031         	movff	___fldiv@f2+3,??___fldiv+3
 23109  005E62  0E18               	movlw	24
 23110  005E64  D005               	goto	u8670
 23111  005E66                     u8675:
 23112  005E66  90D8               	bcf	status,0,c
 23113  005E68  3231               	rrcf	??___fldiv+3,f,c
 23114  005E6A  3230               	rrcf	??___fldiv+2,f,c
 23115  005E6C  322F               	rrcf	??___fldiv+1,f,c
 23116  005E6E  322E               	rrcf	??___fldiv,f,c
 23117  005E70                     u8670:
 23118  005E70  2EE8               	decfsz	wreg,f,c
 23119  005E72  D7F9               	goto	u8675
 23120  005E74  502E               	movf	??___fldiv,w,c
 23121  005E76  0100               	movlb	0	; () banked
 23122  005E78  6F66               	movwf	___fldiv@sign& (0+255),b
 23123  005E7A  0100               	movlb	0	; () banked
 23124  005E7C  6766               	tstfsz	___fldiv@sign& (0+255),b
 23125  005E7E  D009               	goto	l8478
 23126  005E80                     u8680:
 23127                           
 23128                           ; BSR set to: 0
 23129  005E80  0E00               	movlw	0
 23130  005E82  6E26               	movwf	?___fldiv,c
 23131  005E84  0E00               	movlw	0
 23132  005E86  6E27               	movwf	?___fldiv+1,c
 23133  005E88  0E00               	movlw	0
 23134  005E8A  6E28               	movwf	?___fldiv+2,c
 23135  005E8C  0E00               	movlw	0
 23136  005E8E  6E29               	movwf	?___fldiv+3,c
 23137  005E90  D05E               	goto	l1612
 23138  005E92                     l8478:
 23139                           
 23140                           ; BSR set to: 0
 23141  005E92  0100               	movlb	0	; () banked
 23142  005E94  5166               	movf	___fldiv@sign& (0+255),w,b
 23143  005E96  0F89               	addlw	137
 23144  005E98  0100               	movlb	0	; () banked
 23145  005E9A  5F65               	subwf	___fldiv@exp& (0+255),f,b
 23146                           
 23147                           ; BSR set to: 0
 23148  005E9C  C029  F066         	movff	___fldiv@f1+3,___fldiv@sign
 23149  005EA0  502D               	movf	___fldiv@f2+3,w,c
 23150  005EA2  0100               	movlb	0	; () banked
 23151  005EA4  1B66               	xorwf	___fldiv@sign& (0+255),f,b
 23152  005EA6  0E80               	movlw	128
 23153  005EA8  0100               	movlb	0	; () banked
 23154  005EAA  1766               	andwf	___fldiv@sign& (0+255),f,b
 23155                           
 23156                           ; BSR set to: 0
 23157  005EAC  8E28               	bsf	___fldiv@f1+2,7,c
 23158                           
 23159                           ; BSR set to: 0
 23160  005EAE  0EFF               	movlw	255
 23161  005EB0  1626               	andwf	___fldiv@f1,f,c
 23162  005EB2  0EFF               	movlw	255
 23163  005EB4  1627               	andwf	___fldiv@f1+1,f,c
 23164  005EB6  0EFF               	movlw	255
 23165  005EB8  1628               	andwf	___fldiv@f1+2,f,c
 23166  005EBA  0E00               	movlw	0
 23167  005EBC  1629               	andwf	___fldiv@f1+3,f,c
 23168  005EBE  8E2C               	bsf	___fldiv@f2+2,7,c
 23169                           
 23170                           ; BSR set to: 0
 23171  005EC0  0EFF               	movlw	255
 23172  005EC2  162A               	andwf	___fldiv@f2,f,c
 23173  005EC4  0EFF               	movlw	255
 23174  005EC6  162B               	andwf	___fldiv@f2+1,f,c
 23175  005EC8  0EFF               	movlw	255
 23176  005ECA  162C               	andwf	___fldiv@f2+2,f,c
 23177  005ECC  0E00               	movlw	0
 23178  005ECE  162D               	andwf	___fldiv@f2+3,f,c
 23179                           
 23180                           ; BSR set to: 0
 23181  005ED0  0E20               	movlw	32
 23182  005ED2  0100               	movlb	0	; () banked
 23183  005ED4  6F64               	movwf	___fldiv@cntr& (0+255),b
 23184  005ED6                     l8490:
 23185                           
 23186                           ; BSR set to: 0
 23187  005ED6  0100               	movlb	0	; () banked
 23188  005ED8  90D8               	bcf	status,0,c
 23189  005EDA  0100               	movlb	0	; () banked
 23190  005EDC  3760               	rlcf	___fldiv@f3& (0+255),f,b
 23191  005EDE  0100               	movlb	0	; () banked
 23192  005EE0  3761               	rlcf	(___fldiv@f3+1)& (0+255),f,b
 23193  005EE2  0100               	movlb	0	; () banked
 23194  005EE4  3762               	rlcf	(___fldiv@f3+2)& (0+255),f,b
 23195  005EE6  0100               	movlb	0	; () banked
 23196  005EE8  3763               	rlcf	(___fldiv@f3+3)& (0+255),f,b
 23197                           
 23198                           ; BSR set to: 0
 23199  005EEA  502A               	movf	___fldiv@f2,w,c
 23200  005EEC  5C26               	subwf	___fldiv@f1,w,c
 23201  005EEE  502B               	movf	___fldiv@f2+1,w,c
 23202  005EF0  5827               	subwfb	___fldiv@f1+1,w,c
 23203  005EF2  502C               	movf	___fldiv@f2+2,w,c
 23204  005EF4  5828               	subwfb	___fldiv@f1+2,w,c
 23205  005EF6  502D               	movf	___fldiv@f2+3,w,c
 23206  005EF8  5829               	subwfb	___fldiv@f1+3,w,c
 23207  005EFA  A0D8               	btfss	status,0,c
 23208  005EFC  D00A               	goto	l8498
 23209                           
 23210                           ; BSR set to: 0
 23211  005EFE  502A               	movf	___fldiv@f2,w,c
 23212  005F00  5E26               	subwf	___fldiv@f1,f,c
 23213  005F02  502B               	movf	___fldiv@f2+1,w,c
 23214  005F04  5A27               	subwfb	___fldiv@f1+1,f,c
 23215  005F06  502C               	movf	___fldiv@f2+2,w,c
 23216  005F08  5A28               	subwfb	___fldiv@f1+2,f,c
 23217  005F0A  502D               	movf	___fldiv@f2+3,w,c
 23218  005F0C  5A29               	subwfb	___fldiv@f1+3,f,c
 23219                           
 23220                           ; BSR set to: 0
 23221  005F0E  0100               	movlb	0	; () banked
 23222  005F10  8160               	bsf	___fldiv@f3& (0+255),0,b
 23223  005F12                     l8498:
 23224                           
 23225                           ; BSR set to: 0
 23226  005F12  90D8               	bcf	status,0,c
 23227  005F14  3626               	rlcf	___fldiv@f1,f,c
 23228  005F16  3627               	rlcf	___fldiv@f1+1,f,c
 23229  005F18  3628               	rlcf	___fldiv@f1+2,f,c
 23230  005F1A  3629               	rlcf	___fldiv@f1+3,f,c
 23231                           
 23232                           ; BSR set to: 0
 23233  005F1C  0100               	movlb	0	; () banked
 23234  005F1E  2F64               	decfsz	___fldiv@cntr& (0+255),f,b
 23235  005F20  D7DA               	goto	l8490
 23236                           
 23237                           ; BSR set to: 0
 23238                           
 23239                           ; BSR set to: 0
 23240  005F22  C060  F018         	movff	___fldiv@f3,___flpack@arg
 23241  005F26  C061  F019         	movff	___fldiv@f3+1,___flpack@arg+1
 23242  005F2A  C062  F01A         	movff	___fldiv@f3+2,___flpack@arg+2
 23243  005F2E  C063  F01B         	movff	___fldiv@f3+3,___flpack@arg+3
 23244  005F32  C065  F01C         	movff	___fldiv@exp,___flpack@exp
 23245  005F36  C066  F01D         	movff	___fldiv@sign,___flpack@sign
 23246  005F3A  ECD1  F031         	call	___flpack	;wreg free
 23247  005F3E  C018  F026         	movff	?___flpack,?___fldiv
 23248  005F42  C019  F027         	movff	?___flpack+1,?___fldiv+1
 23249  005F46  C01A  F028         	movff	?___flpack+2,?___fldiv+2
 23250  005F4A  C01B  F029         	movff	?___flpack+3,?___fldiv+3
 23251  005F4E                     l1612:
 23252  005F4E  0012               	return	
 23253  005F50                     __end_of___fldiv:
 23254                           	opt stack 0
 23255                           tblptru	equ	0xFF8
 23256                           tblptrh	equ	0xFF7
 23257                           tblptrl	equ	0xFF6
 23258                           tablat	equ	0xFF5
 23259                           prodh	equ	0xFF4
 23260                           prodl	equ	0xFF3
 23261                           intcon	equ	0xFF2
 23262                           postinc0	equ	0xFEE
 23263                           wreg	equ	0xFE8
 23264                           indf1	equ	0xFE7
 23265                           postdec1	equ	0xFE5
 23266                           fsr1h	equ	0xFE2
 23267                           fsr1l	equ	0xFE1
 23268                           indf2	equ	0xFDF
 23269                           postinc2	equ	0xFDE
 23270                           postdec2	equ	0xFDD
 23271                           plusw2	equ	0xFDB
 23272                           fsr2h	equ	0xFDA
 23273                           fsr2l	equ	0xFD9
 23274                           status	equ	0xFD8
 23275                           
 23276 ;; *************** function ___fladd *****************
 23277 ;; Defined at:
 23278 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fladd.c"
 23279 ;; Parameters:    Size  Location     Type
 23280 ;;  f1              4   30[BANK0 ] unsigned char 
 23281 ;;  f2              4   34[BANK0 ] unsigned char 
 23282 ;; Auto vars:     Size  Location     Type
 23283 ;;  exp1            1   44[BANK0 ] unsigned char 
 23284 ;;  exp2            1   43[BANK0 ] unsigned char 
 23285 ;;  sign            1   42[BANK0 ] unsigned char 
 23286 ;; Return value:  Size  Location     Type
 23287 ;;                  4   30[BANK0 ] unsigned char 
 23288 ;; Registers used:
 23289 ;;		wreg, status,2, status,0, cstack
 23290 ;; Tracked objects:
 23291 ;;		On entry : 0/0
 23292 ;;		On exit  : 0/0
 23293 ;;		Unchanged: 0/0
 23294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23295 ;;      Params:         0       8       0       0       0       0       0
 23296 ;;      Locals:         0       3       0       0       0       0       0
 23297 ;;      Temps:          0       4       0       0       0       0       0
 23298 ;;      Totals:         0      15       0       0       0       0       0
 23299 ;;Total ram usage:       15 bytes
 23300 ;; Hardware stack levels used:    1
 23301 ;; Hardware stack levels required when called:    3
 23302 ;; This function calls:
 23303 ;;		___flpack
 23304 ;; This function is called by:
 23305 ;;		_doWork
 23306 ;;		_Celsius2Fahrenheit
 23307 ;;		_Celsius2Kelvin
 23308 ;;		_floor
 23309 ;;		___flsub
 23310 ;;		_log
 23311 ;;		_eval_poly
 23312 ;;		_Fahrenheit2Celsius
 23313 ;;		_Kelvin2Celsius
 23314 ;; This function uses a non-reentrant model
 23315 ;;
 23316                           
 23317                           	psect	text92
 23318  0040EA                     __ptext92:
 23319                           	opt stack 0
 23320  0040EA                     ___fladd:
 23321                           	opt stack 23
 23322                           
 23323                           ;incstack = 0
 23324  0040EA  0100               	movlb	0	; () banked
 23325  0040EC  C07E  F086         	movff	___fladd@f1,??___fladd
 23326  0040F0  0100               	movlb	0	; () banked
 23327  0040F2  C07F  F087         	movff	___fladd@f1+1,??___fladd+1
 23328  0040F6  0100               	movlb	0	; () banked
 23329  0040F8  C080  F088         	movff	___fladd@f1+2,??___fladd+2
 23330  0040FC  0100               	movlb	0	; () banked
 23331  0040FE  C081  F089         	movff	___fladd@f1+3,??___fladd+3
 23332  004102  0E18               	movlw	24
 23333  004104  D006               	goto	u8440
 23334  004106                     u8445:
 23335  004106  0100               	movlb	0	; () banked
 23336  004108  90D8               	bcf	status,0,c
 23337  00410A  3389               	rrcf	(??___fladd+3)& (0+255),f,b
 23338  00410C  3388               	rrcf	(??___fladd+2)& (0+255),f,b
 23339  00410E  3387               	rrcf	(??___fladd+1)& (0+255),f,b
 23340  004110  3386               	rrcf	??___fladd& (0+255),f,b
 23341  004112                     u8440:
 23342  004112  2EE8               	decfsz	wreg,f,c
 23343  004114  D7F8               	goto	u8445
 23344  004116  0100               	movlb	0	; () banked
 23345  004118  5186               	movf	??___fladd& (0+255),w,b
 23346  00411A  0100               	movlb	0	; () banked
 23347  00411C  6F8C               	movwf	___fladd@exp1& (0+255),b
 23348  00411E  0100               	movlb	0	; () banked
 23349  004120  C082  F086         	movff	___fladd@f2,??___fladd
 23350  004124  0100               	movlb	0	; () banked
 23351  004126  C083  F087         	movff	___fladd@f2+1,??___fladd+1
 23352  00412A  0100               	movlb	0	; () banked
 23353  00412C  C084  F088         	movff	___fladd@f2+2,??___fladd+2
 23354  004130  0100               	movlb	0	; () banked
 23355  004132  C085  F089         	movff	___fladd@f2+3,??___fladd+3
 23356  004136  0E18               	movlw	24
 23357  004138  D006               	goto	u8450
 23358  00413A                     u8455:
 23359  00413A  0100               	movlb	0	; () banked
 23360  00413C  90D8               	bcf	status,0,c
 23361  00413E  3389               	rrcf	(??___fladd+3)& (0+255),f,b
 23362  004140  3388               	rrcf	(??___fladd+2)& (0+255),f,b
 23363  004142  3387               	rrcf	(??___fladd+1)& (0+255),f,b
 23364  004144  3386               	rrcf	??___fladd& (0+255),f,b
 23365  004146                     u8450:
 23366  004146  2EE8               	decfsz	wreg,f,c
 23367  004148  D7F8               	goto	u8455
 23368  00414A  0100               	movlb	0	; () banked
 23369  00414C  5186               	movf	??___fladd& (0+255),w,b
 23370  00414E  0100               	movlb	0	; () banked
 23371  004150  6F8B               	movwf	___fladd@exp2& (0+255),b
 23372                           
 23373                           ; BSR set to: 0
 23374  004152  0100               	movlb	0	; () banked
 23375  004154  518C               	movf	___fladd@exp1& (0+255),w,b
 23376  004156  B4D8               	btfsc	status,2,c
 23377  004158  D012               	goto	l1580
 23378                           
 23379                           ; BSR set to: 0
 23380  00415A  0100               	movlb	0	; () banked
 23381  00415C  518B               	movf	___fladd@exp2& (0+255),w,b
 23382  00415E  0100               	movlb	0	; () banked
 23383  004160  5D8C               	subwf	___fladd@exp1& (0+255),w,b
 23384  004162  B0D8               	btfsc	status,0,c
 23385  004164  D015               	goto	l8404
 23386                           
 23387                           ; BSR set to: 0
 23388  004166  0100               	movlb	0	; () banked
 23389  004168  518C               	movf	___fladd@exp1& (0+255),w,b
 23390  00416A  0800               	sublw	0
 23391  00416C  0100               	movlb	0	; () banked
 23392  00416E  258B               	addwf	___fladd@exp2& (0+255),w,b
 23393  004170  0100               	movlb	0	; () banked
 23394  004172  6F86               	movwf	??___fladd& (0+255),b
 23395  004174  0E21               	movlw	33
 23396  004176  0100               	movlb	0	; () banked
 23397  004178  5D86               	subwf	??___fladd& (0+255),w,b
 23398  00417A  A0D8               	btfss	status,0,c
 23399  00417C  D009               	goto	l8404
 23400  00417E                     l1580:
 23401                           
 23402                           ; BSR set to: 0
 23403  00417E  C082  F07E         	movff	___fladd@f2,?___fladd
 23404  004182  C083  F07F         	movff	___fladd@f2+1,?___fladd+1
 23405  004186  C084  F080         	movff	___fladd@f2+2,?___fladd+2
 23406  00418A  C085  F081         	movff	___fladd@f2+3,?___fladd+3
 23407  00418E  D126               	goto	l1581
 23408  004190                     l8404:
 23409                           
 23410                           ; BSR set to: 0
 23411  004190  0100               	movlb	0	; () banked
 23412  004192  518B               	movf	___fladd@exp2& (0+255),w,b
 23413  004194  B4D8               	btfsc	status,2,c
 23414  004196  D012               	goto	l1584
 23415                           
 23416                           ; BSR set to: 0
 23417  004198  0100               	movlb	0	; () banked
 23418  00419A  518C               	movf	___fladd@exp1& (0+255),w,b
 23419  00419C  0100               	movlb	0	; () banked
 23420  00419E  5D8B               	subwf	___fladd@exp2& (0+255),w,b
 23421  0041A0  B0D8               	btfsc	status,0,c
 23422  0041A2  D015               	goto	l8410
 23423                           
 23424                           ; BSR set to: 0
 23425  0041A4  0100               	movlb	0	; () banked
 23426  0041A6  518B               	movf	___fladd@exp2& (0+255),w,b
 23427  0041A8  0800               	sublw	0
 23428  0041AA  0100               	movlb	0	; () banked
 23429  0041AC  258C               	addwf	___fladd@exp1& (0+255),w,b
 23430  0041AE  0100               	movlb	0	; () banked
 23431  0041B0  6F86               	movwf	??___fladd& (0+255),b
 23432  0041B2  0E21               	movlw	33
 23433  0041B4  0100               	movlb	0	; () banked
 23434  0041B6  5D86               	subwf	??___fladd& (0+255),w,b
 23435  0041B8  A0D8               	btfss	status,0,c
 23436  0041BA  D009               	goto	l8410
 23437  0041BC                     l1584:
 23438                           
 23439                           ; BSR set to: 0
 23440  0041BC  C07E  F07E         	movff	___fladd@f1,?___fladd
 23441  0041C0  C07F  F07F         	movff	___fladd@f1+1,?___fladd+1
 23442  0041C4  C080  F080         	movff	___fladd@f1+2,?___fladd+2
 23443  0041C8  C081  F081         	movff	___fladd@f1+3,?___fladd+3
 23444  0041CC  D107               	goto	l1581
 23445  0041CE                     l8410:
 23446                           
 23447                           ; BSR set to: 0
 23448  0041CE  0E06               	movlw	6
 23449  0041D0  0100               	movlb	0	; () banked
 23450  0041D2  6F8A               	movwf	___fladd@sign& (0+255),b
 23451                           
 23452                           ; BSR set to: 0
 23453  0041D4  0100               	movlb	0	; () banked
 23454  0041D6  AF81               	btfss	(___fladd@f1+3)& (0+255),7,b
 23455  0041D8  D002               	goto	l8416
 23456                           
 23457                           ; BSR set to: 0
 23458  0041DA  0100               	movlb	0	; () banked
 23459  0041DC  8F8A               	bsf	___fladd@sign& (0+255),7,b
 23460  0041DE                     l8416:
 23461                           
 23462                           ; BSR set to: 0
 23463  0041DE  0100               	movlb	0	; () banked
 23464  0041E0  AF85               	btfss	(___fladd@f2+3)& (0+255),7,b
 23465  0041E2  D002               	goto	l1586
 23466                           
 23467                           ; BSR set to: 0
 23468  0041E4  0100               	movlb	0	; () banked
 23469  0041E6  8D8A               	bsf	___fladd@sign& (0+255),6,b
 23470  0041E8                     l1586:
 23471                           
 23472                           ; BSR set to: 0
 23473  0041E8  0100               	movlb	0	; () banked
 23474  0041EA  8F80               	bsf	(___fladd@f1+2)& (0+255),7,b
 23475                           
 23476                           ; BSR set to: 0
 23477  0041EC  0EFF               	movlw	255
 23478  0041EE  0100               	movlb	0	; () banked
 23479  0041F0  177E               	andwf	___fladd@f1& (0+255),f,b
 23480  0041F2  0EFF               	movlw	255
 23481  0041F4  0100               	movlb	0	; () banked
 23482  0041F6  177F               	andwf	(___fladd@f1+1)& (0+255),f,b
 23483  0041F8  0EFF               	movlw	255
 23484  0041FA  0100               	movlb	0	; () banked
 23485  0041FC  1780               	andwf	(___fladd@f1+2)& (0+255),f,b
 23486  0041FE  0E00               	movlw	0
 23487  004200  0100               	movlb	0	; () banked
 23488  004202  1781               	andwf	(___fladd@f1+3)& (0+255),f,b
 23489                           
 23490                           ; BSR set to: 0
 23491  004204  0100               	movlb	0	; () banked
 23492  004206  8F84               	bsf	(___fladd@f2+2)& (0+255),7,b
 23493  004208  0EFF               	movlw	255
 23494  00420A  0100               	movlb	0	; () banked
 23495  00420C  1782               	andwf	___fladd@f2& (0+255),f,b
 23496  00420E  0EFF               	movlw	255
 23497  004210  0100               	movlb	0	; () banked
 23498  004212  1783               	andwf	(___fladd@f2+1)& (0+255),f,b
 23499  004214  0EFF               	movlw	255
 23500  004216  0100               	movlb	0	; () banked
 23501  004218  1784               	andwf	(___fladd@f2+2)& (0+255),f,b
 23502  00421A  0E00               	movlw	0
 23503  00421C  0100               	movlb	0	; () banked
 23504  00421E  1785               	andwf	(___fladd@f2+3)& (0+255),f,b
 23505  004220  0100               	movlb	0	; () banked
 23506  004222  518B               	movf	___fladd@exp2& (0+255),w,b
 23507  004224  0100               	movlb	0	; () banked
 23508  004226  5D8C               	subwf	___fladd@exp1& (0+255),w,b
 23509  004228  B0D8               	btfsc	status,0,c
 23510  00422A  D02E               	goto	l8434
 23511  00422C                     l8424:
 23512                           
 23513                           ; BSR set to: 0
 23514  00422C  0100               	movlb	0	; () banked
 23515  00422E  90D8               	bcf	status,0,c
 23516  004230  0100               	movlb	0	; () banked
 23517  004232  3782               	rlcf	___fladd@f2& (0+255),f,b
 23518  004234  0100               	movlb	0	; () banked
 23519  004236  3783               	rlcf	(___fladd@f2+1)& (0+255),f,b
 23520  004238  0100               	movlb	0	; () banked
 23521  00423A  3784               	rlcf	(___fladd@f2+2)& (0+255),f,b
 23522  00423C  0100               	movlb	0	; () banked
 23523  00423E  3785               	rlcf	(___fladd@f2+3)& (0+255),f,b
 23524  004240  0100               	movlb	0	; () banked
 23525  004242  078B               	decf	___fladd@exp2& (0+255),f,b
 23526                           
 23527                           ; BSR set to: 0
 23528  004244  0100               	movlb	0	; () banked
 23529  004246  518B               	movf	___fladd@exp2& (0+255),w,b
 23530  004248  0100               	movlb	0	; () banked
 23531  00424A  198C               	xorwf	___fladd@exp1& (0+255),w,b
 23532  00424C  B4D8               	btfsc	status,2,c
 23533  00424E  D016               	goto	l8432
 23534                           
 23535                           ; BSR set to: 0
 23536  004250  0100               	movlb	0	; () banked
 23537  004252  078A               	decf	___fladd@sign& (0+255),f,b
 23538  004254  C08A  F086         	movff	___fladd@sign,??___fladd
 23539  004258  0E07               	movlw	7
 23540  00425A  0100               	movlb	0	; () banked
 23541  00425C  1786               	andwf	??___fladd& (0+255),f,b
 23542  00425E  B4D8               	btfsc	status,2,c
 23543  004260  D00D               	goto	l8432
 23544  004262  D7E4               	goto	l8424
 23545  004264                     l8430:
 23546                           
 23547                           ; BSR set to: 0
 23548  004264  0100               	movlb	0	; () banked
 23549  004266  90D8               	bcf	status,0,c
 23550  004268  0100               	movlb	0	; () banked
 23551  00426A  3381               	rrcf	(___fladd@f1+3)& (0+255),f,b
 23552  00426C  0100               	movlb	0	; () banked
 23553  00426E  3380               	rrcf	(___fladd@f1+2)& (0+255),f,b
 23554  004270  0100               	movlb	0	; () banked
 23555  004272  337F               	rrcf	(___fladd@f1+1)& (0+255),f,b
 23556  004274  0100               	movlb	0	; () banked
 23557  004276  337E               	rrcf	___fladd@f1& (0+255),f,b
 23558  004278  0100               	movlb	0	; () banked
 23559  00427A  2B8C               	incf	___fladd@exp1& (0+255),f,b
 23560  00427C                     l8432:
 23561                           
 23562                           ; BSR set to: 0
 23563  00427C  0100               	movlb	0	; () banked
 23564  00427E  518B               	movf	___fladd@exp2& (0+255),w,b
 23565  004280  0100               	movlb	0	; () banked
 23566  004282  638C               	cpfseq	___fladd@exp1& (0+255),b
 23567  004284  D7EF               	goto	l8430
 23568  004286  D033               	goto	l1595
 23569  004288                     l8434:
 23570                           
 23571                           ; BSR set to: 0
 23572  004288  0100               	movlb	0	; () banked
 23573  00428A  518C               	movf	___fladd@exp1& (0+255),w,b
 23574  00428C  0100               	movlb	0	; () banked
 23575  00428E  5D8B               	subwf	___fladd@exp2& (0+255),w,b
 23576  004290  B0D8               	btfsc	status,0,c
 23577  004292  D02D               	goto	l1595
 23578  004294                     l8436:
 23579                           
 23580                           ; BSR set to: 0
 23581  004294  0100               	movlb	0	; () banked
 23582  004296  90D8               	bcf	status,0,c
 23583  004298  0100               	movlb	0	; () banked
 23584  00429A  377E               	rlcf	___fladd@f1& (0+255),f,b
 23585  00429C  0100               	movlb	0	; () banked
 23586  00429E  377F               	rlcf	(___fladd@f1+1)& (0+255),f,b
 23587  0042A0  0100               	movlb	0	; () banked
 23588  0042A2  3780               	rlcf	(___fladd@f1+2)& (0+255),f,b
 23589  0042A4  0100               	movlb	0	; () banked
 23590  0042A6  3781               	rlcf	(___fladd@f1+3)& (0+255),f,b
 23591  0042A8  0100               	movlb	0	; () banked
 23592  0042AA  078C               	decf	___fladd@exp1& (0+255),f,b
 23593                           
 23594                           ; BSR set to: 0
 23595  0042AC  0100               	movlb	0	; () banked
 23596  0042AE  518B               	movf	___fladd@exp2& (0+255),w,b
 23597  0042B0  0100               	movlb	0	; () banked
 23598  0042B2  198C               	xorwf	___fladd@exp1& (0+255),w,b
 23599  0042B4  B4D8               	btfsc	status,2,c
 23600  0042B6  D016               	goto	l8444
 23601                           
 23602                           ; BSR set to: 0
 23603  0042B8  0100               	movlb	0	; () banked
 23604  0042BA  078A               	decf	___fladd@sign& (0+255),f,b
 23605  0042BC  C08A  F086         	movff	___fladd@sign,??___fladd
 23606  0042C0  0E07               	movlw	7
 23607  0042C2  0100               	movlb	0	; () banked
 23608  0042C4  1786               	andwf	??___fladd& (0+255),f,b
 23609  0042C6  B4D8               	btfsc	status,2,c
 23610  0042C8  D00D               	goto	l8444
 23611  0042CA  D7E4               	goto	l8436
 23612  0042CC                     l8442:
 23613                           
 23614                           ; BSR set to: 0
 23615  0042CC  0100               	movlb	0	; () banked
 23616  0042CE  90D8               	bcf	status,0,c
 23617  0042D0  0100               	movlb	0	; () banked
 23618  0042D2  3385               	rrcf	(___fladd@f2+3)& (0+255),f,b
 23619  0042D4  0100               	movlb	0	; () banked
 23620  0042D6  3384               	rrcf	(___fladd@f2+2)& (0+255),f,b
 23621  0042D8  0100               	movlb	0	; () banked
 23622  0042DA  3383               	rrcf	(___fladd@f2+1)& (0+255),f,b
 23623  0042DC  0100               	movlb	0	; () banked
 23624  0042DE  3382               	rrcf	___fladd@f2& (0+255),f,b
 23625  0042E0  0100               	movlb	0	; () banked
 23626  0042E2  2B8B               	incf	___fladd@exp2& (0+255),f,b
 23627  0042E4                     l8444:
 23628                           
 23629                           ; BSR set to: 0
 23630  0042E4  0100               	movlb	0	; () banked
 23631  0042E6  518B               	movf	___fladd@exp2& (0+255),w,b
 23632  0042E8  0100               	movlb	0	; () banked
 23633  0042EA  638C               	cpfseq	___fladd@exp1& (0+255),b
 23634  0042EC  D7EF               	goto	l8442
 23635  0042EE                     l1595:
 23636                           
 23637                           ; BSR set to: 0
 23638  0042EE  0100               	movlb	0	; () banked
 23639  0042F0  AF8A               	btfss	___fladd@sign& (0+255),7,b
 23640  0042F2  D016               	goto	l8448
 23641                           
 23642                           ; BSR set to: 0
 23643  0042F4  0EFF               	movlw	255
 23644  0042F6  0100               	movlb	0	; () banked
 23645  0042F8  1B7E               	xorwf	___fladd@f1& (0+255),f,b
 23646  0042FA  0EFF               	movlw	255
 23647  0042FC  0100               	movlb	0	; () banked
 23648  0042FE  1B7F               	xorwf	(___fladd@f1+1)& (0+255),f,b
 23649  004300  0EFF               	movlw	255
 23650  004302  0100               	movlb	0	; () banked
 23651  004304  1B80               	xorwf	(___fladd@f1+2)& (0+255),f,b
 23652  004306  0EFF               	movlw	255
 23653  004308  0100               	movlb	0	; () banked
 23654  00430A  1B81               	xorwf	(___fladd@f1+3)& (0+255),f,b
 23655  00430C  0E01               	movlw	1
 23656  00430E  0100               	movlb	0	; () banked
 23657  004310  277E               	addwf	___fladd@f1& (0+255),f,b
 23658  004312  0E00               	movlw	0
 23659  004314  0100               	movlb	0	; () banked
 23660  004316  237F               	addwfc	(___fladd@f1+1)& (0+255),f,b
 23661  004318  0100               	movlb	0	; () banked
 23662  00431A  2380               	addwfc	(___fladd@f1+2)& (0+255),f,b
 23663  00431C  0100               	movlb	0	; () banked
 23664  00431E  2381               	addwfc	(___fladd@f1+3)& (0+255),f,b
 23665  004320                     l8448:
 23666                           
 23667                           ; BSR set to: 0
 23668  004320  0100               	movlb	0	; () banked
 23669  004322  AD8A               	btfss	___fladd@sign& (0+255),6,b
 23670  004324  D016               	goto	l8452
 23671                           
 23672                           ; BSR set to: 0
 23673  004326  0EFF               	movlw	255
 23674  004328  0100               	movlb	0	; () banked
 23675  00432A  1B82               	xorwf	___fladd@f2& (0+255),f,b
 23676  00432C  0EFF               	movlw	255
 23677  00432E  0100               	movlb	0	; () banked
 23678  004330  1B83               	xorwf	(___fladd@f2+1)& (0+255),f,b
 23679  004332  0EFF               	movlw	255
 23680  004334  0100               	movlb	0	; () banked
 23681  004336  1B84               	xorwf	(___fladd@f2+2)& (0+255),f,b
 23682  004338  0EFF               	movlw	255
 23683  00433A  0100               	movlb	0	; () banked
 23684  00433C  1B85               	xorwf	(___fladd@f2+3)& (0+255),f,b
 23685  00433E  0E01               	movlw	1
 23686  004340  0100               	movlb	0	; () banked
 23687  004342  2782               	addwf	___fladd@f2& (0+255),f,b
 23688  004344  0E00               	movlw	0
 23689  004346  0100               	movlb	0	; () banked
 23690  004348  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
 23691  00434A  0100               	movlb	0	; () banked
 23692  00434C  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
 23693  00434E  0100               	movlb	0	; () banked
 23694  004350  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
 23695  004352                     l8452:
 23696                           
 23697                           ; BSR set to: 0
 23698  004352  0E00               	movlw	0
 23699  004354  0100               	movlb	0	; () banked
 23700  004356  6F8A               	movwf	___fladd@sign& (0+255),b
 23701                           
 23702                           ; BSR set to: 0
 23703  004358  0100               	movlb	0	; () banked
 23704  00435A  517E               	movf	___fladd@f1& (0+255),w,b
 23705  00435C  0100               	movlb	0	; () banked
 23706  00435E  2782               	addwf	___fladd@f2& (0+255),f,b
 23707  004360  0100               	movlb	0	; () banked
 23708  004362  517F               	movf	(___fladd@f1+1)& (0+255),w,b
 23709  004364  0100               	movlb	0	; () banked
 23710  004366  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
 23711  004368  0100               	movlb	0	; () banked
 23712  00436A  5180               	movf	(___fladd@f1+2)& (0+255),w,b
 23713  00436C  0100               	movlb	0	; () banked
 23714  00436E  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
 23715  004370  0100               	movlb	0	; () banked
 23716  004372  5181               	movf	(___fladd@f1+3)& (0+255),w,b
 23717  004374  0100               	movlb	0	; () banked
 23718  004376  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
 23719                           
 23720                           ; BSR set to: 0
 23721  004378  0100               	movlb	0	; () banked
 23722  00437A  AF85               	btfss	(___fladd@f2+3)& (0+255),7,b
 23723  00437C  D019               	goto	l8462
 23724                           
 23725                           ; BSR set to: 0
 23726  00437E  0EFF               	movlw	255
 23727  004380  0100               	movlb	0	; () banked
 23728  004382  1B82               	xorwf	___fladd@f2& (0+255),f,b
 23729  004384  0EFF               	movlw	255
 23730  004386  0100               	movlb	0	; () banked
 23731  004388  1B83               	xorwf	(___fladd@f2+1)& (0+255),f,b
 23732  00438A  0EFF               	movlw	255
 23733  00438C  0100               	movlb	0	; () banked
 23734  00438E  1B84               	xorwf	(___fladd@f2+2)& (0+255),f,b
 23735  004390  0EFF               	movlw	255
 23736  004392  0100               	movlb	0	; () banked
 23737  004394  1B85               	xorwf	(___fladd@f2+3)& (0+255),f,b
 23738  004396  0E01               	movlw	1
 23739  004398  0100               	movlb	0	; () banked
 23740  00439A  2782               	addwf	___fladd@f2& (0+255),f,b
 23741  00439C  0E00               	movlw	0
 23742  00439E  0100               	movlb	0	; () banked
 23743  0043A0  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
 23744  0043A2  0100               	movlb	0	; () banked
 23745  0043A4  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
 23746  0043A6  0100               	movlb	0	; () banked
 23747  0043A8  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
 23748                           
 23749                           ; BSR set to: 0
 23750  0043AA  0E01               	movlw	1
 23751  0043AC  0100               	movlb	0	; () banked
 23752  0043AE  6F8A               	movwf	___fladd@sign& (0+255),b
 23753  0043B0                     l8462:
 23754                           
 23755                           ; BSR set to: 0
 23756  0043B0  C082  F018         	movff	___fladd@f2,___flpack@arg
 23757  0043B4  C083  F019         	movff	___fladd@f2+1,___flpack@arg+1
 23758  0043B8  C084  F01A         	movff	___fladd@f2+2,___flpack@arg+2
 23759  0043BC  C085  F01B         	movff	___fladd@f2+3,___flpack@arg+3
 23760  0043C0  C08C  F01C         	movff	___fladd@exp1,___flpack@exp
 23761  0043C4  C08A  F01D         	movff	___fladd@sign,___flpack@sign
 23762  0043C8  ECD1  F031         	call	___flpack	;wreg free
 23763  0043CC  C018  F07E         	movff	?___flpack,?___fladd
 23764  0043D0  C019  F07F         	movff	?___flpack+1,?___fladd+1
 23765  0043D4  C01A  F080         	movff	?___flpack+2,?___fladd+2
 23766  0043D8  C01B  F081         	movff	?___flpack+3,?___fladd+3
 23767  0043DC                     l1581:
 23768  0043DC  0012               	return	
 23769  0043DE                     __end_of___fladd:
 23770                           	opt stack 0
 23771                           tblptru	equ	0xFF8
 23772                           tblptrh	equ	0xFF7
 23773                           tblptrl	equ	0xFF6
 23774                           tablat	equ	0xFF5
 23775                           prodh	equ	0xFF4
 23776                           prodl	equ	0xFF3
 23777                           intcon	equ	0xFF2
 23778                           postinc0	equ	0xFEE
 23779                           wreg	equ	0xFE8
 23780                           indf1	equ	0xFE7
 23781                           postdec1	equ	0xFE5
 23782                           fsr1h	equ	0xFE2
 23783                           fsr1l	equ	0xFE1
 23784                           indf2	equ	0xFDF
 23785                           postinc2	equ	0xFDE
 23786                           postdec2	equ	0xFDD
 23787                           plusw2	equ	0xFDB
 23788                           fsr2h	equ	0xFDA
 23789                           fsr2l	equ	0xFD9
 23790                           status	equ	0xFD8
 23791                           
 23792 ;; *************** function ___flpack *****************
 23793 ;; Defined at:
 23794 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\double.c"
 23795 ;; Parameters:    Size  Location     Type
 23796 ;;  arg             4   23[COMRAM] unsigned long 
 23797 ;;  exp             1   27[COMRAM] unsigned char 
 23798 ;;  sign            1   28[COMRAM] unsigned char 
 23799 ;; Auto vars:     Size  Location     Type
 23800 ;;		None
 23801 ;; Return value:  Size  Location     Type
 23802 ;;                  4   23[COMRAM] unsigned char 
 23803 ;; Registers used:
 23804 ;;		wreg, status,2, status,0
 23805 ;; Tracked objects:
 23806 ;;		On entry : 0/0
 23807 ;;		On exit  : 0/0
 23808 ;;		Unchanged: 0/0
 23809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23810 ;;      Params:         6       0       0       0       0       0       0
 23811 ;;      Locals:         0       0       0       0       0       0       0
 23812 ;;      Temps:          4       0       0       0       0       0       0
 23813 ;;      Totals:        10       0       0       0       0       0       0
 23814 ;;Total ram usage:       10 bytes
 23815 ;; Hardware stack levels used:    1
 23816 ;; Hardware stack levels required when called:    2
 23817 ;; This function calls:
 23818 ;;		Nothing
 23819 ;; This function is called by:
 23820 ;;		___altofl
 23821 ;;		___awtofl
 23822 ;;		___fladd
 23823 ;;		___fldiv
 23824 ;;		___flmul
 23825 ;;		___lwtofl
 23826 ;; This function uses a non-reentrant model
 23827 ;;
 23828                           
 23829                           	psect	text93
 23830  0063A2                     __ptext93:
 23831                           	opt stack 0
 23832  0063A2                     ___flpack:
 23833                           	opt stack 24
 23834                           
 23835                           ;incstack = 0
 23836  0063A2  501C               	movf	___flpack@exp,w,c
 23837  0063A4  B4D8               	btfsc	status,2,c
 23838  0063A6  D006               	goto	l8272
 23839  0063A8  501B               	movf	___flpack@arg+3,w,c
 23840  0063AA  1018               	iorwf	___flpack@arg,w,c
 23841  0063AC  1019               	iorwf	___flpack@arg+1,w,c
 23842  0063AE  101A               	iorwf	___flpack@arg+2,w,c
 23843  0063B0  A4D8               	btfss	status,2,c
 23844  0063B2  D00F               	goto	l8278
 23845  0063B4                     l8272:
 23846  0063B4  0E00               	movlw	0
 23847  0063B6  6E18               	movwf	?___flpack,c
 23848  0063B8  0E00               	movlw	0
 23849  0063BA  6E19               	movwf	?___flpack+1,c
 23850  0063BC  0E00               	movlw	0
 23851  0063BE  6E1A               	movwf	?___flpack+2,c
 23852  0063C0  0E00               	movlw	0
 23853  0063C2  6E1B               	movwf	?___flpack+3,c
 23854  0063C4  D069               	goto	l1543
 23855  0063C6                     l8276:
 23856  0063C6  2A1C               	incf	___flpack@exp,f,c
 23857  0063C8  90D8               	bcf	status,0,c
 23858  0063CA  321B               	rrcf	___flpack@arg+3,f,c
 23859  0063CC  321A               	rrcf	___flpack@arg+2,f,c
 23860  0063CE  3219               	rrcf	___flpack@arg+1,f,c
 23861  0063D0  3218               	rrcf	___flpack@arg,f,c
 23862  0063D2                     l8278:
 23863  0063D2  0E00               	movlw	0
 23864  0063D4  1418               	andwf	___flpack@arg,w,c
 23865  0063D6  6E1E               	movwf	??___flpack& (0+255),c
 23866  0063D8  0E00               	movlw	0
 23867  0063DA  1419               	andwf	___flpack@arg+1,w,c
 23868  0063DC  6E1F               	movwf	(??___flpack+1)& (0+255),c
 23869  0063DE  0E00               	movlw	0
 23870  0063E0  141A               	andwf	___flpack@arg+2,w,c
 23871  0063E2  6E20               	movwf	(??___flpack+2)& (0+255),c
 23872  0063E4  0EFE               	movlw	254
 23873  0063E6  141B               	andwf	___flpack@arg+3,w,c
 23874  0063E8  6E21               	movwf	(??___flpack+3)& (0+255),c
 23875  0063EA  5021               	movf	??___flpack+3,w,c
 23876  0063EC  101E               	iorwf	??___flpack,w,c
 23877  0063EE  101F               	iorwf	??___flpack+1,w,c
 23878  0063F0  1020               	iorwf	??___flpack+2,w,c
 23879  0063F2  B4D8               	btfsc	status,2,c
 23880  0063F4  D00D               	goto	l1547
 23881  0063F6  D7E7               	goto	l8276
 23882  0063F8                     l8280:
 23883  0063F8  2A1C               	incf	___flpack@exp,f,c
 23884  0063FA  0E01               	movlw	1
 23885  0063FC  2618               	addwf	___flpack@arg,f,c
 23886  0063FE  0E00               	movlw	0
 23887  006400  2219               	addwfc	___flpack@arg+1,f,c
 23888  006402  221A               	addwfc	___flpack@arg+2,f,c
 23889  006404  221B               	addwfc	___flpack@arg+3,f,c
 23890  006406  90D8               	bcf	status,0,c
 23891  006408  321B               	rrcf	___flpack@arg+3,f,c
 23892  00640A  321A               	rrcf	___flpack@arg+2,f,c
 23893  00640C  3219               	rrcf	___flpack@arg+1,f,c
 23894  00640E  3218               	rrcf	___flpack@arg,f,c
 23895  006410                     l1547:
 23896  006410  0E00               	movlw	0
 23897  006412  1418               	andwf	___flpack@arg,w,c
 23898  006414  6E1E               	movwf	??___flpack& (0+255),c
 23899  006416  0E00               	movlw	0
 23900  006418  1419               	andwf	___flpack@arg+1,w,c
 23901  00641A  6E1F               	movwf	(??___flpack+1)& (0+255),c
 23902  00641C  0E00               	movlw	0
 23903  00641E  141A               	andwf	___flpack@arg+2,w,c
 23904  006420  6E20               	movwf	(??___flpack+2)& (0+255),c
 23905  006422  0EFF               	movlw	255
 23906  006424  141B               	andwf	___flpack@arg+3,w,c
 23907  006426  6E21               	movwf	(??___flpack+3)& (0+255),c
 23908  006428  5021               	movf	??___flpack+3,w,c
 23909  00642A  101E               	iorwf	??___flpack,w,c
 23910  00642C  101F               	iorwf	??___flpack+1,w,c
 23911  00642E  1020               	iorwf	??___flpack+2,w,c
 23912  006430  B4D8               	btfsc	status,2,c
 23913  006432  D007               	goto	l8288
 23914  006434  D7E1               	goto	l8280
 23915  006436                     l8286:
 23916  006436  061C               	decf	___flpack@exp,f,c
 23917  006438  90D8               	bcf	status,0,c
 23918  00643A  3618               	rlcf	___flpack@arg,f,c
 23919  00643C  3619               	rlcf	___flpack@arg+1,f,c
 23920  00643E  361A               	rlcf	___flpack@arg+2,f,c
 23921  006440  361B               	rlcf	___flpack@arg+3,f,c
 23922  006442                     l8288:
 23923  006442  AE1A               	btfss	___flpack@arg+2,7,c
 23924  006444  D7F8               	goto	l8286
 23925  006446  B01C               	btfsc	___flpack@exp,0,c
 23926  006448  D008               	goto	l1553
 23927  00644A  0EFF               	movlw	255
 23928  00644C  1618               	andwf	___flpack@arg,f,c
 23929  00644E  0EFF               	movlw	255
 23930  006450  1619               	andwf	___flpack@arg+1,f,c
 23931  006452  0E7F               	movlw	127
 23932  006454  161A               	andwf	___flpack@arg+2,f,c
 23933  006456  0EFF               	movlw	255
 23934  006458  161B               	andwf	___flpack@arg+3,f,c
 23935  00645A                     l1553:
 23936  00645A  90D8               	bcf	status,0,c
 23937  00645C  321C               	rrcf	___flpack@exp,f,c
 23938  00645E  C01C  F01E         	movff	___flpack@exp,??___flpack
 23939  006462  6A1F               	clrf	(??___flpack+1)& (0+255),c
 23940  006464  6A20               	clrf	(??___flpack+2)& (0+255),c
 23941  006466  6A21               	clrf	(??___flpack+3)& (0+255),c
 23942  006468  C01E  F021         	movff	??___flpack,??___flpack+3
 23943  00646C  6A20               	clrf	??___flpack+2,c
 23944  00646E  6A1F               	clrf	??___flpack+1,c
 23945  006470  6A1E               	clrf	??___flpack,c
 23946  006472  501E               	movf	??___flpack,w,c
 23947  006474  1218               	iorwf	___flpack@arg,f,c
 23948  006476  501F               	movf	??___flpack+1,w,c
 23949  006478  1219               	iorwf	___flpack@arg+1,f,c
 23950  00647A  5020               	movf	??___flpack+2,w,c
 23951  00647C  121A               	iorwf	___flpack@arg+2,f,c
 23952  00647E  5021               	movf	??___flpack+3,w,c
 23953  006480  121B               	iorwf	___flpack@arg+3,f,c
 23954  006482  501D               	movf	___flpack@sign,w,c
 23955  006484  A4D8               	btfss	status,2,c
 23956  006486  8E1B               	bsf	___flpack@arg+3,7,c
 23957  006488  C018  F018         	movff	___flpack@arg,?___flpack
 23958  00648C  C019  F019         	movff	___flpack@arg+1,?___flpack+1
 23959  006490  C01A  F01A         	movff	___flpack@arg+2,?___flpack+2
 23960  006494  C01B  F01B         	movff	___flpack@arg+3,?___flpack+3
 23961  006498                     l1543:
 23962  006498  0012               	return	
 23963  00649A                     __end_of___flpack:
 23964                           	opt stack 0
 23965                           tblptru	equ	0xFF8
 23966                           tblptrh	equ	0xFF7
 23967                           tblptrl	equ	0xFF6
 23968                           tablat	equ	0xFF5
 23969                           prodh	equ	0xFF4
 23970                           prodl	equ	0xFF3
 23971                           intcon	equ	0xFF2
 23972                           postinc0	equ	0xFEE
 23973                           wreg	equ	0xFE8
 23974                           indf1	equ	0xFE7
 23975                           postdec1	equ	0xFE5
 23976                           fsr1h	equ	0xFE2
 23977                           fsr1l	equ	0xFE1
 23978                           indf2	equ	0xFDF
 23979                           postinc2	equ	0xFDE
 23980                           postdec2	equ	0xFDD
 23981                           plusw2	equ	0xFDB
 23982                           fsr2h	equ	0xFDA
 23983                           fsr2l	equ	0xFD9
 23984                           status	equ	0xFD8
 23985                           
 23986 ;; *************** function _readEEPROM *****************
 23987 ;; Defined at:
 23988 ;;		line 91 in file "../../../../../../vscp_firmware/pic/common/eeprom.c"
 23989 ;; Parameters:    Size  Location     Type
 23990 ;;  address         2   29[COMRAM] unsigned short 
 23991 ;; Auto vars:     Size  Location     Type
 23992 ;;  data            1   31[COMRAM] unsigned char 
 23993 ;; Return value:  Size  Location     Type
 23994 ;;                  1    wreg      unsigned char 
 23995 ;; Registers used:
 23996 ;;		wreg, status,2
 23997 ;; Tracked objects:
 23998 ;;		On entry : 0/0
 23999 ;;		On exit  : 0/0
 24000 ;;		Unchanged: 0/0
 24001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24002 ;;      Params:         2       0       0       0       0       0       0
 24003 ;;      Locals:         1       0       0       0       0       0       0
 24004 ;;      Temps:          0       0       0       0       0       0       0
 24005 ;;      Totals:         3       0       0       0       0       0       0
 24006 ;;Total ram usage:        3 bytes
 24007 ;; Hardware stack levels used:    1
 24008 ;; Hardware stack levels required when called:    2
 24009 ;; This function calls:
 24010 ;;		Nothing
 24011 ;; This function is called by:
 24012 ;;		_doWork
 24013 ;;		_doOneSecondWork
 24014 ;;		_sendTempEvent
 24015 ;;		_getCalibrationValue
 24016 ;;		_writeCoeffs2Ram
 24017 ;;		_handle_sync
 24018 ;;		_vscp_readAppReg
 24019 ;;		_vscp_writeAppReg
 24020 ;;		_vscp_getGUID
 24021 ;;		_vscp_getUserID
 24022 ;;		_vscp_getManufacturerId
 24023 ;;		_vscp_getZone
 24024 ;;		_vscp_getSubzone
 24025 ;;		_vscp_readNicknamePermanent
 24026 ;;		_vscp_getSegmentCRC
 24027 ;;		_vscp_getControlByte
 24028 ;; This function uses a non-reentrant model
 24029 ;;
 24030                           
 24031                           	psect	text94
 24032  0074DE                     __ptext94:
 24033                           	opt stack 0
 24034  0074DE                     _readEEPROM:
 24035                           	opt stack 26
 24036                           
 24037                           ;eeprom.c: 93: uint8_t data;
 24038                           ;eeprom.c: 98: EEADR = address & 0xff;
 24039                           
 24040                           ;incstack = 0
 24041  0074DE  C01E  FFA9         	movff	readEEPROM@address,4009	;volatile
 24042                           
 24043                           ;eeprom.c: 99: EECON1bits.EEPGD= 0;
 24044  0074E2  9EA6               	bcf	4006,7,c	;volatile
 24045                           
 24046                           ;eeprom.c: 100: EECON1bits.CFGS = 0;
 24047  0074E4  9CA6               	bcf	4006,6,c	;volatile
 24048                           
 24049                           ;eeprom.c: 101: EECON1bits.RD = 1;
 24050  0074E6  80A6               	bsf	4006,0,c	;volatile
 24051                           
 24052                           ;eeprom.c: 102: data = EEDATA;
 24053  0074E8  CFA8 F020          	movff	4008,readEEPROM@data	;volatile
 24054                           
 24055                           ;eeprom.c: 104: return data;
 24056  0074EC  5020               	movf	readEEPROM@data,w,c
 24057  0074EE  0012               	return	
 24058  0074F0                     __end_of_readEEPROM:
 24059                           	opt stack 0
 24060                           tblptru	equ	0xFF8
 24061                           tblptrh	equ	0xFF7
 24062                           tblptrl	equ	0xFF6
 24063                           tablat	equ	0xFF5
 24064                           prodh	equ	0xFF4
 24065                           prodl	equ	0xFF3
 24066                           intcon	equ	0xFF2
 24067                           postinc0	equ	0xFEE
 24068                           wreg	equ	0xFE8
 24069                           indf1	equ	0xFE7
 24070                           postdec1	equ	0xFE5
 24071                           fsr1h	equ	0xFE2
 24072                           fsr1l	equ	0xFE1
 24073                           indf2	equ	0xFDF
 24074                           postinc2	equ	0xFDE
 24075                           postdec2	equ	0xFDD
 24076                           plusw2	equ	0xFDB
 24077                           fsr2h	equ	0xFDA
 24078                           fsr2l	equ	0xFD9
 24079                           status	equ	0xFD8
 24080                           
 24081 ;; *************** function _interrupt_at_low_vector *****************
 24082 ;; Defined at:
 24083 ;;		line 133 in file "../main.c"
 24084 ;; Parameters:    Size  Location     Type
 24085 ;;		None
 24086 ;; Auto vars:     Size  Location     Type
 24087 ;;		None
 24088 ;; Return value:  Size  Location     Type
 24089 ;;		None               void
 24090 ;; Registers used:
 24091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24092 ;; Tracked objects:
 24093 ;;		On entry : 0/0
 24094 ;;		On exit  : 0/0
 24095 ;;		Unchanged: 0/0
 24096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24097 ;;      Params:         0       0       0       0       0       0       0
 24098 ;;      Locals:         0       0       0       0       0       0       0
 24099 ;;      Temps:         19       0       0       0       0       0       0
 24100 ;;      Totals:        19       0       0       0       0       0       0
 24101 ;;Total ram usage:       19 bytes
 24102 ;; Hardware stack levels used:    1
 24103 ;; Hardware stack levels required when called:    1
 24104 ;; This function calls:
 24105 ;;		i1_ConvertADC
 24106 ;;		i1_WriteTimer0
 24107 ;; This function is called by:
 24108 ;;		Interrupt level 1
 24109 ;; This function uses a non-reentrant model
 24110 ;;
 24111                           
 24112                           	psect	intcodelo
 24113  000218                     __pintcodelo:
 24114                           	opt stack 0
 24115  000218                     _interrupt_at_low_vector:
 24116                           	opt stack 22
 24117                           
 24118                           ;incstack = 0
 24119  000218  CFD8 F007          	movff	status,??_interrupt_at_low_vector+2
 24120  00021C  CFE8 F008          	movff	wreg,??_interrupt_at_low_vector+3
 24121  000220  CFE0 F009          	movff	bsr,??_interrupt_at_low_vector+4
 24122  000224  CFFA F00A          	movff	pclath,??_interrupt_at_low_vector+5
 24123  000228  CFFB F00B          	movff	pclatu,??_interrupt_at_low_vector+6
 24124  00022C  CFE9 F00C          	movff	fsr0l,??_interrupt_at_low_vector+7
 24125  000230  CFEA F00D          	movff	fsr0h,??_interrupt_at_low_vector+8
 24126  000234  CFE1 F00E          	movff	fsr1l,??_interrupt_at_low_vector+9
 24127  000238  CFE2 F00F          	movff	fsr1h,??_interrupt_at_low_vector+10
 24128  00023C  CFD9 F010          	movff	fsr2l,??_interrupt_at_low_vector+11
 24129  000240  CFDA F011          	movff	fsr2h,??_interrupt_at_low_vector+12
 24130  000244  CFF3 F012          	movff	prodl,??_interrupt_at_low_vector+13
 24131  000248  CFF4 F013          	movff	prodh,??_interrupt_at_low_vector+14
 24132  00024C  CFF6 F014          	movff	tblptrl,??_interrupt_at_low_vector+15
 24133  000250  CFF7 F015          	movff	tblptrh,??_interrupt_at_low_vector+16
 24134  000254  CFF8 F016          	movff	tblptru,??_interrupt_at_low_vector+17
 24135  000258  CFF5 F017          	movff	tablat,??_interrupt_at_low_vector+18
 24136                           
 24137                           ;main.c: 137: if (INTCONbits.TMR0IF) {
 24138  00025C  A4F2               	btfss	intcon,2,c	;volatile
 24139  00025E  D03A               	goto	i1l7872
 24140                           
 24141                           ;main.c: 140: WriteTimer0(0xfb1d);
 24142  000260  0EFB               	movlw	251
 24143  000262  6E02               	movwf	i1WriteTimer0@timer0+1,c
 24144  000264  0E1D               	movlw	29
 24145  000266  6E01               	movwf	i1WriteTimer0@timer0,c
 24146  000268  EC78  F03A         	call	i1_WriteTimer0	;wreg free
 24147                           
 24148                           ;main.c: 142: vscp_timer++;
 24149  00026C  4A34               	infsnz	_vscp_timer,f,c	;volatile
 24150  00026E  2A35               	incf	_vscp_timer+1,f,c	;volatile
 24151                           
 24152                           ;main.c: 143: measurement_clock++;
 24153  000270  0E01               	movlw	1
 24154  000272  0101               	movlb	1	; () banked
 24155  000274  2712               	addwf	_measurement_clock& (0+255),f,b
 24156  000276  0E00               	movlw	0
 24157  000278  0101               	movlb	1	; () banked
 24158  00027A  2313               	addwfc	(_measurement_clock+1)& (0+255),f,b
 24159  00027C  0101               	movlb	1	; () banked
 24160  00027E  2314               	addwfc	(_measurement_clock+2)& (0+255),f,b
 24161  000280  0101               	movlb	1	; () banked
 24162  000282  2315               	addwfc	(_measurement_clock+3)& (0+255),f,b
 24163                           
 24164                           ; BSR set to: 1
 24165                           ;main.c: 144: timeout_clock++;
 24166  000284  0E01               	movlw	1
 24167  000286  0101               	movlb	1	; () banked
 24168  000288  2716               	addwf	_timeout_clock& (0+255),f,b
 24169  00028A  0E00               	movlw	0
 24170  00028C  0101               	movlb	1	; () banked
 24171  00028E  2317               	addwfc	(_timeout_clock+1)& (0+255),f,b
 24172  000290  0101               	movlb	1	; () banked
 24173  000292  2318               	addwfc	(_timeout_clock+2)& (0+255),f,b
 24174  000294  0101               	movlb	1	; () banked
 24175  000296  2319               	addwfc	(_timeout_clock+3)& (0+255),f,b
 24176                           
 24177                           ; BSR set to: 1
 24178                           ;main.c: 147: if (!(PORTC & 0x01)) {
 24179  000298  B082               	btfsc	3970,0,c	;volatile
 24180  00029A  D003               	goto	i1l7844
 24181                           
 24182                           ; BSR set to: 1
 24183                           ;main.c: 149: vscp_initbtncnt++;
 24184  00029C  0100               	movlb	0	; () banked
 24185  00029E  2BD1               	incf	_vscp_initbtncnt& (0+255),f,b	;volatile
 24186                           
 24187                           ;main.c: 150: }
 24188  0002A0  D003               	goto	i1l7846
 24189  0002A2                     i1l7844:
 24190                           
 24191                           ;main.c: 151: else {
 24192                           ;main.c: 152: vscp_initbtncnt = 0;
 24193  0002A2  0E00               	movlw	0
 24194  0002A4  0100               	movlb	0	; () banked
 24195  0002A6  6FD1               	movwf	_vscp_initbtncnt& (0+255),b	;volatile
 24196  0002A8                     i1l7846:
 24197                           
 24198                           ; BSR set to: 0
 24199                           ;main.c: 153: }
 24200                           ;main.c: 156: vscp_statuscnt++;
 24201  0002A8  2A3A               	incf	_vscp_statuscnt,f,c	;volatile
 24202                           
 24203                           ; BSR set to: 0
 24204                           ;main.c: 157: if ((0x02 == vscp_initledfunc) && (vscp_statuscnt > 100)) {
 24205  0002AA  5038               	movf	_vscp_initledfunc,w,c
 24206  0002AC  0A02               	xorlw	2
 24207  0002AE  A4D8               	btfss	status,2,c
 24208  0002B0  D006               	goto	i1l7860
 24209                           
 24210                           ; BSR set to: 0
 24211  0002B2  0E64               	movlw	100
 24212  0002B4  643A               	cpfsgt	_vscp_statuscnt,c	;volatile
 24213  0002B6  D003               	goto	i1l7860
 24214                           
 24215                           ; BSR set to: 0
 24216                           ;main.c: 158: if (PORTC & 0x02) {
 24217  0002B8  A282               	btfss	3970,1,c	;volatile
 24218  0002BA  D004               	goto	i1u779_20
 24219  0002BC  D007               	goto	L196
 24220  0002BE                     i1l7860:
 24221                           
 24222                           ; BSR set to: 0
 24223                           ;main.c: 166: else if (0x01 == vscp_initledfunc) {
 24224  0002BE  0438               	decf	_vscp_initledfunc,w,c
 24225  0002C0  A4D8               	btfss	status,2,c
 24226  0002C2  D002               	goto	i1l144
 24227  0002C4                     i1u779_20:
 24228                           
 24229                           ; BSR set to: 0
 24230                           ;main.c: 167: PORTC |= 0x02;
 24231  0002C4  8282               	bsf	3970,1,c	;volatile
 24232  0002C6  D003               	goto	L195
 24233  0002C8                     i1l144:
 24234                           
 24235                           ; BSR set to: 0
 24236                           ;main.c: 170: else if (0x00 == vscp_initledfunc) {
 24237  0002C8  6638               	tstfsz	_vscp_initledfunc,c
 24238  0002CA  D003               	goto	i1l7870
 24239  0002CC                     L196:
 24240                           
 24241                           ; BSR set to: 0
 24242                           ;main.c: 171: PORTC &= ~0x02;
 24243  0002CC  9282               	bcf	3970,1,c	;volatile
 24244  0002CE                     L195:
 24245                           
 24246                           ; BSR set to: 0
 24247                           ;main.c: 172: vscp_statuscnt = 0;
 24248  0002CE  0E00               	movlw	0
 24249  0002D0  6E3A               	movwf	_vscp_statuscnt,c	;volatile
 24250  0002D2                     i1l7870:
 24251                           
 24252                           ; BSR set to: 0
 24253                           ;main.c: 173: }
 24254                           ;main.c: 175: INTCONbits.TMR0IF = 0;
 24255  0002D2  94F2               	bcf	intcon,2,c	;volatile
 24256  0002D4                     i1l7872:
 24257                           
 24258                           ;main.c: 177: }
 24259                           ;main.c: 180: if (PIR1bits.ADIF) {
 24260  0002D4  BC9E               	btfsc	3998,6,c	;volatile
 24261  0002D6  D0E4               	goto	i1l7932
 24262  0002D8  D102               	goto	i1l164
 24263  0002DA                     i1l7876:
 24264                           
 24265                           ;main.c: 186: adc[(12 * adc_series_counter) + 0] = ADRESH;
 24266  0002DA  5036               	movf	_adc_series_counter,w,c
 24267  0002DC  0D0C               	mullw	12
 24268  0002DE  0EA4               	movlw	low _adc
 24269  0002E0  24F3               	addwf	prodl,w,c
 24270  0002E2  6ED9               	movwf	fsr2l,c
 24271  0002E4  0E01               	movlw	high _adc
 24272  0002E6  20F4               	addwfc	prodh,w,c
 24273  0002E8  6EDA               	movwf	fsr2h,c
 24274  0002EA  CFC4 FFDF          	movff	4036,indf2	;volatile
 24275                           
 24276                           ;main.c: 187: adc[(12 * adc_series_counter) + 1] = ADRESL;
 24277  0002EE  5036               	movf	_adc_series_counter,w,c
 24278  0002F0  0D0C               	mullw	12
 24279  0002F2  0E01               	movlw	1
 24280  0002F4  26F3               	addwf	prodl,f,c
 24281  0002F6  0E00               	movlw	0
 24282  0002F8  22F4               	addwfc	prodh,f,c
 24283  0002FA  0EA4               	movlw	low _adc
 24284  0002FC  24F3               	addwf	prodl,w,c
 24285  0002FE  6ED9               	movwf	fsr2l,c
 24286  000300  0E01               	movlw	high _adc
 24287  000302  20F4               	addwfc	prodh,w,c
 24288  000304  6EDA               	movwf	fsr2h,c
 24289  000306  CFC3 FFDF          	movff	4035,indf2	;volatile
 24290                           
 24291                           ;main.c: 189: ADCON0 = (2<<2) + 1;
 24292  00030A  0E09               	movlw	9
 24293  00030C  6EC2               	movwf	4034,c	;volatile
 24294                           
 24295                           ;main.c: 193: if ((80 - 1) == adc_series_counter) {
 24296  00030E  5036               	movf	_adc_series_counter,w,c
 24297  000310  0A4F               	xorlw	79
 24298  000312  A4D8               	btfss	status,2,c
 24299  000314  D0E1               	goto	i1l7934
 24300                           
 24301                           ;main.c: 194: adc_conversion_flags |= 1;
 24302  000316  0100               	movlb	0	; () banked
 24303  000318  81CB               	bsf	_adc_conversion_flags& (0+255),0,b
 24304  00031A  D0DE               	goto	i1l7934
 24305  00031C                     i1l7884:
 24306                           
 24307                           ;main.c: 200: adc[(12 * adc_series_counter) + 2] = ADRESH;
 24308  00031C  5036               	movf	_adc_series_counter,w,c
 24309  00031E  0D0C               	mullw	12
 24310  000320  0E02               	movlw	2
 24311  000322  26F3               	addwf	prodl,f,c
 24312  000324  0E00               	movlw	0
 24313  000326  22F4               	addwfc	prodh,f,c
 24314  000328  0EA4               	movlw	low _adc
 24315  00032A  24F3               	addwf	prodl,w,c
 24316  00032C  6ED9               	movwf	fsr2l,c
 24317  00032E  0E01               	movlw	high _adc
 24318  000330  20F4               	addwfc	prodh,w,c
 24319  000332  6EDA               	movwf	fsr2h,c
 24320  000334  CFC4 FFDF          	movff	4036,indf2	;volatile
 24321                           
 24322                           ;main.c: 201: adc[(12 * adc_series_counter) + 3] = ADRESL;
 24323  000338  5036               	movf	_adc_series_counter,w,c
 24324  00033A  0D0C               	mullw	12
 24325  00033C  0E03               	movlw	3
 24326  00033E  26F3               	addwf	prodl,f,c
 24327  000340  0E00               	movlw	0
 24328  000342  22F4               	addwfc	prodh,f,c
 24329  000344  0EA4               	movlw	low _adc
 24330  000346  24F3               	addwf	prodl,w,c
 24331  000348  6ED9               	movwf	fsr2l,c
 24332  00034A  0E01               	movlw	high _adc
 24333  00034C  20F4               	addwfc	prodh,w,c
 24334  00034E  6EDA               	movwf	fsr2h,c
 24335  000350  CFC3 FFDF          	movff	4035,indf2	;volatile
 24336                           
 24337                           ;main.c: 204: ADCON0 = (1<<2) + 1;
 24338  000354  0E05               	movlw	5
 24339  000356  6EC2               	movwf	4034,c	;volatile
 24340                           
 24341                           ;main.c: 208: if ((80 - 1) == adc_series_counter) {
 24342  000358  5036               	movf	_adc_series_counter,w,c
 24343  00035A  0A4F               	xorlw	79
 24344  00035C  A4D8               	btfss	status,2,c
 24345  00035E  D0BC               	goto	i1l7934
 24346                           
 24347                           ;main.c: 209: adc_conversion_flags |= 1 << 1;
 24348  000360  0100               	movlb	0	; () banked
 24349  000362  83CB               	bsf	_adc_conversion_flags& (0+255),1,b
 24350  000364  D0B9               	goto	i1l7934
 24351  000366                     i1l7892:
 24352                           
 24353                           ;main.c: 215: adc[(12 * adc_series_counter) + 4] = ADRESH;
 24354  000366  5036               	movf	_adc_series_counter,w,c
 24355  000368  0D0C               	mullw	12
 24356  00036A  0E04               	movlw	4
 24357  00036C  26F3               	addwf	prodl,f,c
 24358  00036E  0E00               	movlw	0
 24359  000370  22F4               	addwfc	prodh,f,c
 24360  000372  0EA4               	movlw	low _adc
 24361  000374  24F3               	addwf	prodl,w,c
 24362  000376  6ED9               	movwf	fsr2l,c
 24363  000378  0E01               	movlw	high _adc
 24364  00037A  20F4               	addwfc	prodh,w,c
 24365  00037C  6EDA               	movwf	fsr2h,c
 24366  00037E  CFC4 FFDF          	movff	4036,indf2	;volatile
 24367                           
 24368                           ;main.c: 216: adc[(12 * adc_series_counter) + 5] = ADRESL;
 24369  000382  5036               	movf	_adc_series_counter,w,c
 24370  000384  0D0C               	mullw	12
 24371  000386  0E05               	movlw	5
 24372  000388  26F3               	addwf	prodl,f,c
 24373  00038A  0E00               	movlw	0
 24374  00038C  22F4               	addwfc	prodh,f,c
 24375  00038E  0EA4               	movlw	low _adc
 24376  000390  24F3               	addwf	prodl,w,c
 24377  000392  6ED9               	movwf	fsr2l,c
 24378  000394  0E01               	movlw	high _adc
 24379  000396  20F4               	addwfc	prodh,w,c
 24380  000398  6EDA               	movwf	fsr2h,c
 24381  00039A  CFC3 FFDF          	movff	4035,indf2	;volatile
 24382                           
 24383                           ;main.c: 218: ADCON0 = (0<<2) + 1;
 24384  00039E  0E01               	movlw	1
 24385  0003A0  6EC2               	movwf	4034,c	;volatile
 24386                           
 24387                           ;main.c: 222: if ((80 - 1) == adc_series_counter) {
 24388  0003A2  5036               	movf	_adc_series_counter,w,c
 24389  0003A4  0A4F               	xorlw	79
 24390  0003A6  A4D8               	btfss	status,2,c
 24391  0003A8  D097               	goto	i1l7934
 24392                           
 24393                           ;main.c: 223: adc_conversion_flags |= 1 << 2;
 24394  0003AA  0100               	movlb	0	; () banked
 24395  0003AC  85CB               	bsf	_adc_conversion_flags& (0+255),2,b
 24396  0003AE  D094               	goto	i1l7934
 24397  0003B0                     i1l7900:
 24398                           
 24399                           ;main.c: 229: adc[(12 * adc_series_counter) + 6] = ADRESH;
 24400  0003B0  5036               	movf	_adc_series_counter,w,c
 24401  0003B2  0D0C               	mullw	12
 24402  0003B4  0E06               	movlw	6
 24403  0003B6  26F3               	addwf	prodl,f,c
 24404  0003B8  0E00               	movlw	0
 24405  0003BA  22F4               	addwfc	prodh,f,c
 24406  0003BC  0EA4               	movlw	low _adc
 24407  0003BE  24F3               	addwf	prodl,w,c
 24408  0003C0  6ED9               	movwf	fsr2l,c
 24409  0003C2  0E01               	movlw	high _adc
 24410  0003C4  20F4               	addwfc	prodh,w,c
 24411  0003C6  6EDA               	movwf	fsr2h,c
 24412  0003C8  CFC4 FFDF          	movff	4036,indf2	;volatile
 24413                           
 24414                           ;main.c: 230: adc[(12 * adc_series_counter) + 7] = ADRESL;
 24415  0003CC  5036               	movf	_adc_series_counter,w,c
 24416  0003CE  0D0C               	mullw	12
 24417  0003D0  0E07               	movlw	7
 24418  0003D2  26F3               	addwf	prodl,f,c
 24419  0003D4  0E00               	movlw	0
 24420  0003D6  22F4               	addwfc	prodh,f,c
 24421  0003D8  0EA4               	movlw	low _adc
 24422  0003DA  24F3               	addwf	prodl,w,c
 24423  0003DC  6ED9               	movwf	fsr2l,c
 24424  0003DE  0E01               	movlw	high _adc
 24425  0003E0  20F4               	addwfc	prodh,w,c
 24426  0003E2  6EDA               	movwf	fsr2h,c
 24427  0003E4  CFC3 FFDF          	movff	4035,indf2	;volatile
 24428                           
 24429                           ;main.c: 232: ADCON0 = (9<<2) + 1;
 24430  0003E8  0E25               	movlw	37
 24431  0003EA  6EC2               	movwf	4034,c	;volatile
 24432                           
 24433                           ;main.c: 236: if ((80 - 1) == adc_series_counter) {
 24434  0003EC  5036               	movf	_adc_series_counter,w,c
 24435  0003EE  0A4F               	xorlw	79
 24436  0003F0  A4D8               	btfss	status,2,c
 24437  0003F2  D072               	goto	i1l7934
 24438                           
 24439                           ;main.c: 237: adc_conversion_flags |= 1 << 3;
 24440  0003F4  0100               	movlb	0	; () banked
 24441  0003F6  87CB               	bsf	_adc_conversion_flags& (0+255),3,b
 24442  0003F8  D06F               	goto	i1l7934
 24443  0003FA                     i1l7908:
 24444                           
 24445                           ;main.c: 243: adc[(12 * adc_series_counter) + 8] = ADRESH;
 24446  0003FA  5036               	movf	_adc_series_counter,w,c
 24447  0003FC  0D0C               	mullw	12
 24448  0003FE  0E08               	movlw	8
 24449  000400  26F3               	addwf	prodl,f,c
 24450  000402  0E00               	movlw	0
 24451  000404  22F4               	addwfc	prodh,f,c
 24452  000406  0EA4               	movlw	low _adc
 24453  000408  24F3               	addwf	prodl,w,c
 24454  00040A  6ED9               	movwf	fsr2l,c
 24455  00040C  0E01               	movlw	high _adc
 24456  00040E  20F4               	addwfc	prodh,w,c
 24457  000410  6EDA               	movwf	fsr2h,c
 24458  000412  CFC4 FFDF          	movff	4036,indf2	;volatile
 24459                           
 24460                           ;main.c: 244: adc[(12 * adc_series_counter) + 9] = ADRESL;
 24461  000416  5036               	movf	_adc_series_counter,w,c
 24462  000418  0D0C               	mullw	12
 24463  00041A  0E09               	movlw	9
 24464  00041C  26F3               	addwf	prodl,f,c
 24465  00041E  0E00               	movlw	0
 24466  000420  22F4               	addwfc	prodh,f,c
 24467  000422  0EA4               	movlw	low _adc
 24468  000424  24F3               	addwf	prodl,w,c
 24469  000426  6ED9               	movwf	fsr2l,c
 24470  000428  0E01               	movlw	high _adc
 24471  00042A  20F4               	addwfc	prodh,w,c
 24472  00042C  6EDA               	movwf	fsr2h,c
 24473  00042E  CFC3 FFDF          	movff	4035,indf2	;volatile
 24474                           
 24475                           ;main.c: 246: ADCON0 = (8<<2) + 1;
 24476  000432  0E21               	movlw	33
 24477  000434  6EC2               	movwf	4034,c	;volatile
 24478                           
 24479                           ;main.c: 250: if ((80 - 1) == adc_series_counter) {
 24480  000436  5036               	movf	_adc_series_counter,w,c
 24481  000438  0A4F               	xorlw	79
 24482  00043A  A4D8               	btfss	status,2,c
 24483  00043C  D04D               	goto	i1l7934
 24484                           
 24485                           ;main.c: 251: adc_conversion_flags |= 1 << 4;
 24486  00043E  0100               	movlb	0	; () banked
 24487  000440  89CB               	bsf	_adc_conversion_flags& (0+255),4,b
 24488  000442  D04A               	goto	i1l7934
 24489  000444                     i1l7916:
 24490                           
 24491                           ;main.c: 257: adc[(12 * adc_series_counter) + 10] = ADRESH;
 24492  000444  5036               	movf	_adc_series_counter,w,c
 24493  000446  0D0C               	mullw	12
 24494  000448  0E0A               	movlw	10
 24495  00044A  26F3               	addwf	prodl,f,c
 24496  00044C  0E00               	movlw	0
 24497  00044E  22F4               	addwfc	prodh,f,c
 24498  000450  0EA4               	movlw	low _adc
 24499  000452  24F3               	addwf	prodl,w,c
 24500  000454  6ED9               	movwf	fsr2l,c
 24501  000456  0E01               	movlw	high _adc
 24502  000458  20F4               	addwfc	prodh,w,c
 24503  00045A  6EDA               	movwf	fsr2h,c
 24504  00045C  CFC4 FFDF          	movff	4036,indf2	;volatile
 24505                           
 24506                           ;main.c: 258: adc[(12 * adc_series_counter) + 11] = ADRESL;
 24507  000460  5036               	movf	_adc_series_counter,w,c
 24508  000462  0D0C               	mullw	12
 24509  000464  0E0B               	movlw	11
 24510  000466  26F3               	addwf	prodl,f,c
 24511  000468  0E00               	movlw	0
 24512  00046A  22F4               	addwfc	prodh,f,c
 24513  00046C  0EA4               	movlw	low _adc
 24514  00046E  24F3               	addwf	prodl,w,c
 24515  000470  6ED9               	movwf	fsr2l,c
 24516  000472  0E01               	movlw	high _adc
 24517  000474  20F4               	addwfc	prodh,w,c
 24518  000476  6EDA               	movwf	fsr2h,c
 24519  000478  CFC3 FFDF          	movff	4035,indf2	;volatile
 24520                           
 24521                           ;main.c: 260: ADCON0 = (10<<2) + 1;
 24522  00047C  0E29               	movlw	41
 24523  00047E  6EC2               	movwf	4034,c	;volatile
 24524                           
 24525                           ;main.c: 264: if ((80 - 1) == adc_series_counter) {
 24526  000480  5036               	movf	_adc_series_counter,w,c
 24527  000482  0A4F               	xorlw	79
 24528  000484  A4D8               	btfss	status,2,c
 24529  000486  D002               	goto	i1l161
 24530                           
 24531                           ;main.c: 265: adc_conversion_flags |= 1 << 5;
 24532  000488  0100               	movlb	0	; () banked
 24533  00048A  8BCB               	bsf	_adc_conversion_flags& (0+255),5,b
 24534  00048C                     i1l161:
 24535                           
 24536                           ;main.c: 266: }
 24537                           ;main.c: 269: adc_series_counter++;
 24538  00048C  2A36               	incf	_adc_series_counter,f,c
 24539                           
 24540                           ;main.c: 270: if (adc_series_counter >= 80) {
 24541  00048E  0E4F               	movlw	79
 24542  000490  6436               	cpfsgt	_adc_series_counter,c
 24543  000492  D022               	goto	i1l7934
 24544  000494  D002               	goto	L194
 24545  000496                     i1l7928:
 24546                           
 24547                           ;main.c: 277: ADCON0 = (10<<2) + 1;
 24548  000496  0E29               	movlw	41
 24549  000498  6EC2               	movwf	4034,c	;volatile
 24550  00049A                     L194:
 24551                           
 24552                           ;main.c: 278: adc_series_counter = 0;
 24553  00049A  0E00               	movlw	0
 24554  00049C  6E36               	movwf	_adc_series_counter,c
 24555                           
 24556                           ;main.c: 279: break;
 24557  00049E  D01C               	goto	i1l7934
 24558  0004A0                     i1l7932:
 24559  0004A0  50C2               	movf	4034,w,c	;volatile
 24560  0004A2  0B3C               	andlw	60
 24561  0004A4  6E05               	movwf	??_interrupt_at_low_vector& (0+255),c
 24562  0004A6  6A06               	clrf	(??_interrupt_at_low_vector+1)& (0+255),c
 24563                           
 24564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24565                           ; Switch size 1, requested type "space"
 24566                           ; Number of cases is 1, Range of values is 0 to 0
 24567                           ; switch strategies available:
 24568                           ; Name         Instructions Cycles
 24569                           ; simple_byte            4     3 (average)
 24570                           ;	Chosen strategy is simple_byte
 24571  0004A8  5006               	movf	??_interrupt_at_low_vector+1,w,c
 24572  0004AA  0A00               	xorlw	0	; case 0
 24573  0004AC  A4D8               	btfss	status,2,c
 24574  0004AE  D7F3               	goto	i1l7928
 24575                           
 24576                           ; Switch size 1, requested type "space"
 24577                           ; Number of cases is 6, Range of values is 0 to 40
 24578                           ; switch strategies available:
 24579                           ; Name         Instructions Cycles
 24580                           ; simple_byte           19    10 (average)
 24581                           ;	Chosen strategy is simple_byte
 24582  0004B0  5005               	movf	??_interrupt_at_low_vector,w,c
 24583  0004B2  0A00               	xorlw	0	; case 0
 24584  0004B4  B4D8               	btfsc	status,2,c
 24585  0004B6  D77C               	goto	i1l7900
 24586  0004B8  0A04               	xorlw	4	; case 4
 24587  0004BA  B4D8               	btfsc	status,2,c
 24588  0004BC  D754               	goto	i1l7892
 24589  0004BE  0A0C               	xorlw	12	; case 8
 24590  0004C0  B4D8               	btfsc	status,2,c
 24591  0004C2  D72C               	goto	i1l7884
 24592  0004C4  0A28               	xorlw	40	; case 32
 24593  0004C6  B4D8               	btfsc	status,2,c
 24594  0004C8  D7BD               	goto	i1l7916
 24595  0004CA  0A04               	xorlw	4	; case 36
 24596  0004CC  B4D8               	btfsc	status,2,c
 24597  0004CE  D795               	goto	i1l7908
 24598  0004D0  0A0C               	xorlw	12	; case 40
 24599  0004D2  B4D8               	btfsc	status,2,c
 24600  0004D4  D702               	goto	i1l7876
 24601  0004D6  D7DF               	goto	i1l7928
 24602  0004D8                     i1l7934:
 24603                           
 24604                           ;main.c: 283: ConvertADC();
 24605  0004D8  ECB3  F03A         	call	i1_ConvertADC	;wreg free
 24606                           
 24607                           ;main.c: 285: PIR1bits.ADIF = 0;
 24608  0004DC  9C9E               	bcf	3998,6,c	;volatile
 24609  0004DE                     i1l164:
 24610  0004DE  C017  FFF5         	movff	??_interrupt_at_low_vector+18,tablat
 24611  0004E2  C016  FFF8         	movff	??_interrupt_at_low_vector+17,tblptru
 24612  0004E6  C015  FFF7         	movff	??_interrupt_at_low_vector+16,tblptrh
 24613  0004EA  C014  FFF6         	movff	??_interrupt_at_low_vector+15,tblptrl
 24614  0004EE  C013  FFF4         	movff	??_interrupt_at_low_vector+14,prodh
 24615  0004F2  C012  FFF3         	movff	??_interrupt_at_low_vector+13,prodl
 24616  0004F6  C011  FFDA         	movff	??_interrupt_at_low_vector+12,fsr2h
 24617  0004FA  C010  FFD9         	movff	??_interrupt_at_low_vector+11,fsr2l
 24618  0004FE  C00F  FFE2         	movff	??_interrupt_at_low_vector+10,fsr1h
 24619  000502  C00E  FFE1         	movff	??_interrupt_at_low_vector+9,fsr1l
 24620  000506  C00D  FFEA         	movff	??_interrupt_at_low_vector+8,fsr0h
 24621  00050A  C00C  FFE9         	movff	??_interrupt_at_low_vector+7,fsr0l
 24622  00050E  C00B  FFFB         	movff	??_interrupt_at_low_vector+6,pclatu
 24623  000512  C00A  FFFA         	movff	??_interrupt_at_low_vector+5,pclath
 24624  000516  C009  FFE0         	movff	??_interrupt_at_low_vector+4,bsr
 24625  00051A  C008  FFE8         	movff	??_interrupt_at_low_vector+3,wreg
 24626  00051E  C007  FFD8         	movff	??_interrupt_at_low_vector+2,status
 24627  000522  0010               	retfie	
 24628  000524                     __end_of_interrupt_at_low_vector:
 24629                           	opt stack 0
 24630                           pclatu	equ	0xFFB
 24631                           pclath	equ	0xFFA
 24632                           tblptru	equ	0xFF8
 24633                           tblptrh	equ	0xFF7
 24634                           tblptrl	equ	0xFF6
 24635                           tablat	equ	0xFF5
 24636                           prodh	equ	0xFF4
 24637                           prodl	equ	0xFF3
 24638                           intcon	equ	0xFF2
 24639                           postinc0	equ	0xFEE
 24640                           fsr0h	equ	0xFEA
 24641                           fsr0l	equ	0xFE9
 24642                           wreg	equ	0xFE8
 24643                           indf1	equ	0xFE7
 24644                           postdec1	equ	0xFE5
 24645                           fsr1h	equ	0xFE2
 24646                           fsr1l	equ	0xFE1
 24647                           bsr	equ	0xFE0
 24648                           indf2	equ	0xFDF
 24649                           postinc2	equ	0xFDE
 24650                           postdec2	equ	0xFDD
 24651                           plusw2	equ	0xFDB
 24652                           fsr2h	equ	0xFDA
 24653                           fsr2l	equ	0xFD9
 24654                           status	equ	0xFD8
 24655                           
 24656 ;; *************** function i1_WriteTimer0 *****************
 24657 ;; Defined at:
 24658 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
 24659 ;; Parameters:    Size  Location     Type
 24660 ;;  timer0          2    0[COMRAM] unsigned int 
 24661 ;; Auto vars:     Size  Location     Type
 24662 ;;  WriteTimer0     2    2[COMRAM] struct Timers
 24663 ;; Return value:  Size  Location     Type
 24664 ;;		None               void
 24665 ;; Registers used:
 24666 ;;		None
 24667 ;; Tracked objects:
 24668 ;;		On entry : 0/0
 24669 ;;		On exit  : 0/0
 24670 ;;		Unchanged: 0/0
 24671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24672 ;;      Params:         2       0       0       0       0       0       0
 24673 ;;      Locals:         2       0       0       0       0       0       0
 24674 ;;      Temps:          0       0       0       0       0       0       0
 24675 ;;      Totals:         4       0       0       0       0       0       0
 24676 ;;Total ram usage:        4 bytes
 24677 ;; Hardware stack levels used:    1
 24678 ;; This function calls:
 24679 ;;		Nothing
 24680 ;; This function is called by:
 24681 ;;		_interrupt_at_low_vector
 24682 ;; This function uses a non-reentrant model
 24683 ;;
 24684                           
 24685                           	psect	text96
 24686  0074F0                     __ptext96:
 24687                           	opt stack 0
 24688  0074F0                     i1_WriteTimer0:
 24689                           	opt stack 22
 24690                           
 24691                           ;incstack = 0
 24692  0074F0  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
 24693  0074F4  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
 24694  0074F8  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
 24695  0074FC  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
 24696  007500  0012               	return	
 24697  007502                     __end_ofi1_WriteTimer0:
 24698                           	opt stack 0
 24699                           pclatu	equ	0xFFB
 24700                           pclath	equ	0xFFA
 24701                           tblptru	equ	0xFF8
 24702                           tblptrh	equ	0xFF7
 24703                           tblptrl	equ	0xFF6
 24704                           tablat	equ	0xFF5
 24705                           prodh	equ	0xFF4
 24706                           prodl	equ	0xFF3
 24707                           intcon	equ	0xFF2
 24708                           postinc0	equ	0xFEE
 24709                           fsr0h	equ	0xFEA
 24710                           fsr0l	equ	0xFE9
 24711                           wreg	equ	0xFE8
 24712                           indf1	equ	0xFE7
 24713                           postdec1	equ	0xFE5
 24714                           fsr1h	equ	0xFE2
 24715                           fsr1l	equ	0xFE1
 24716                           bsr	equ	0xFE0
 24717                           indf2	equ	0xFDF
 24718                           postinc2	equ	0xFDE
 24719                           postdec2	equ	0xFDD
 24720                           plusw2	equ	0xFDB
 24721                           fsr2h	equ	0xFDA
 24722                           fsr2l	equ	0xFD9
 24723                           status	equ	0xFD8
 24724                           
 24725 ;; *************** function i1_ConvertADC *****************
 24726 ;; Defined at:
 24727 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\ADC\adcconv.c"
 24728 ;; Parameters:    Size  Location     Type
 24729 ;;		None
 24730 ;; Auto vars:     Size  Location     Type
 24731 ;;		None
 24732 ;; Return value:  Size  Location     Type
 24733 ;;		None               void
 24734 ;; Registers used:
 24735 ;;		None
 24736 ;; Tracked objects:
 24737 ;;		On entry : 0/0
 24738 ;;		On exit  : 0/0
 24739 ;;		Unchanged: 0/0
 24740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24741 ;;      Params:         0       0       0       0       0       0       0
 24742 ;;      Locals:         0       0       0       0       0       0       0
 24743 ;;      Temps:          0       0       0       0       0       0       0
 24744 ;;      Totals:         0       0       0       0       0       0       0
 24745 ;;Total ram usage:        0 bytes
 24746 ;; Hardware stack levels used:    1
 24747 ;; This function calls:
 24748 ;;		Nothing
 24749 ;; This function is called by:
 24750 ;;		_interrupt_at_low_vector
 24751 ;; This function uses a non-reentrant model
 24752 ;;
 24753                           
 24754                           	psect	text97
 24755  007566                     __ptext97:
 24756                           	opt stack 0
 24757  007566                     i1_ConvertADC:
 24758                           	opt stack 22
 24759                           
 24760                           ;incstack = 0
 24761  007566  82C2               	bsf	4034,1,c	;volatile
 24762  007568  0012               	return	
 24763  00756A                     __end_ofi1_ConvertADC:
 24764                           	opt stack 0
 24765                           pclatu	equ	0xFFB
 24766                           pclath	equ	0xFFA
 24767                           tblptru	equ	0xFF8
 24768                           tblptrh	equ	0xFF7
 24769                           tblptrl	equ	0xFF6
 24770                           tablat	equ	0xFF5
 24771                           prodh	equ	0xFF4
 24772                           prodl	equ	0xFF3
 24773                           intcon	equ	0xFF2
 24774                           postinc0	equ	0xFEE
 24775                           fsr0h	equ	0xFEA
 24776                           fsr0l	equ	0xFE9
 24777                           wreg	equ	0xFE8
 24778                           indf1	equ	0xFE7
 24779                           postdec1	equ	0xFE5
 24780                           fsr1h	equ	0xFE2
 24781                           fsr1l	equ	0xFE1
 24782                           bsr	equ	0xFE0
 24783                           indf2	equ	0xFDF
 24784                           postinc2	equ	0xFDE
 24785                           postdec2	equ	0xFDD
 24786                           plusw2	equ	0xFDB
 24787                           fsr2h	equ	0xFDA
 24788                           fsr2l	equ	0xFD9
 24789                           status	equ	0xFD8
 24790                           pclatu	equ	0xFFB
 24791                           pclath	equ	0xFFA
 24792                           tblptru	equ	0xFF8
 24793                           tblptrh	equ	0xFF7
 24794                           tblptrl	equ	0xFF6
 24795                           tablat	equ	0xFF5
 24796                           prodh	equ	0xFF4
 24797                           prodl	equ	0xFF3
 24798                           intcon	equ	0xFF2
 24799                           postinc0	equ	0xFEE
 24800                           fsr0h	equ	0xFEA
 24801                           fsr0l	equ	0xFE9
 24802                           wreg	equ	0xFE8
 24803                           indf1	equ	0xFE7
 24804                           postdec1	equ	0xFE5
 24805                           fsr1h	equ	0xFE2
 24806                           fsr1l	equ	0xFE1
 24807                           bsr	equ	0xFE0
 24808                           indf2	equ	0xFDF
 24809                           postinc2	equ	0xFDE
 24810                           postdec2	equ	0xFDD
 24811                           plusw2	equ	0xFDB
 24812                           fsr2h	equ	0xFDA
 24813                           fsr2l	equ	0xFD9
 24814                           status	equ	0xFD8
 24815                           
 24816                           	psect	rparam
 24817  0000                     pclatu	equ	0xFFB
 24818                           pclath	equ	0xFFA
 24819                           tblptru	equ	0xFF8
 24820                           tblptrh	equ	0xFF7
 24821                           tblptrl	equ	0xFF6
 24822                           tablat	equ	0xFF5
 24823                           prodh	equ	0xFF4
 24824                           prodl	equ	0xFF3
 24825                           intcon	equ	0xFF2
 24826                           postinc0	equ	0xFEE
 24827                           fsr0h	equ	0xFEA
 24828                           fsr0l	equ	0xFE9
 24829                           wreg	equ	0xFE8
 24830                           indf1	equ	0xFE7
 24831                           postdec1	equ	0xFE5
 24832                           fsr1h	equ	0xFE2
 24833                           fsr1l	equ	0xFE1
 24834                           bsr	equ	0xFE0
 24835                           indf2	equ	0xFDF
 24836                           postinc2	equ	0xFDE
 24837                           postdec2	equ	0xFDD
 24838                           plusw2	equ	0xFDB
 24839                           fsr2h	equ	0xFDA
 24840                           fsr2l	equ	0xFD9
 24841                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    108
    Data        0
    BSS         1115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      72
    BANK0           160    107     129
    BANK1           256     54     164
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    _ECANPointBuffer@pt	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@val	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    _CANIDToRegs@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    _CANIDToRegs@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> _CANIDToRegs@val(COMRAM[4]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    ECANReceiveMessage@id	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    sp___ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E16332 size(2) Largest target is 1
		 -> getCANFrame@flags(COMRAM[1]), 

    ECANSendMessage@data	PTR unsigned char  size(2) Largest target is 13
		 -> vscp_omsg(BANK0[13]), 

    ECANSendMessage@tempPtr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@pb	PTR unsigned char [9] size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    getCANFrame@pdlc	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    getCANFrame@pdata	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    getCANFrame@pid	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    sendCANFrame@pdata	PTR unsigned char  size(2) Largest target is 13
		 -> vscp_omsg(BANK0[13]), 

    getVSCPFrame@pPriority	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    getVSCPFrame@pvscpclass	PTR unsigned short  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    getVSCPFrame@pvscptype	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    getVSCPFrame@pNodeId	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    getVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    getVSCPFrame@pSize	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(COMRAM[14]), 

    sendVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 13
		 -> vscp_omsg(BANK0[13]), 

    vscp_getMatrixInfo@pData	PTR unsigned char  size(2) Largest target is 13
		 -> vscp_omsg(BANK0[13]), 


Critical Paths under _main in COMRAM

    _main->_vscp_getEvent
    _vscp_handleProtocolEvent->_vscp_sendEvent
    _vscp_handleProtocolEvent->_vscp_writeRegister
    _vscp_writeRegister->_vscp_writeStdReg
    _vscp_setUserID->_writeEEPROM
    _vscp_setManufacturerId->_writeEEPROM
    _vscp_setGUID->_writeEEPROM
    _vscp_restoreDefaults->_init_app_ram
    _init_app_eeprom->_writeEEPROM
    _vscp_writeAppReg->_writeCoeffs2Ram
    _vscp_readRegister->_vscp_readAppReg
    _vscp_readStdReg->_vscp_getGUID
    _vscp_readStdReg->_vscp_getManufacturerId
    _vscp_readStdReg->_vscp_getUserID
    _vscp_getUserID->_readEEPROM
    _vscp_getManufacturerId->_readEEPROM
    _vscp_getGUID->_readEEPROM
    _vscp_readAppReg->_readEEPROM
    _vscp_newNodeOnline->_vscp_sendEvent
    _vscp_handleSetNickname->_vscp_setSegmentCRC
    _vscp_handleSetNickname->_vscp_writeNicknamePermanent
    _vscp_readNicknamePermanent->_readEEPROM
    _vscp_goBootloaderMode->_writeEEPROM
    _vscp_handleProbeState->_vscp_sendEvent
    _vscp_goActiveState->_vscp_sendEvent
    _getVSCPFrame->_getCANFrame
    _getCANFrame->_ECANReceiveMessage
    _ECANReceiveMessage->__RegsToCANID
    _vscp_sendHeartBeat->_vscp_sendEvent
    _vscp_getZone->_readEEPROM
    _vscp_getSubzone->_readEEPROM
    _vscp_writeNicknamePermanent->_writeEEPROM
    _vscp_setSegmentCRC->_writeEEPROM
    _vscp_setControlByte->_writeEEPROM
    _vscp_getSegmentCRC->_readEEPROM
    _init->_init_app_ram
    _init_app_ram->_writeCoeffs2Ram
    _writeCoeffs2Ram->_readEEPROM
    _ECANInitialize->_ECANSetOperationMode
    _doWork->___fldiv
    _doWork->_vscp_sendEvent
    _log->___fldiv
    _getCalibrationValue->_readEEPROM
    _exp->___fldiv
    ___flneg->___fldiv
    ___lwtofl->___flpack
    _doOneSecondWork->_vscp_sendEvent
    _sendTempEvent->_vscp_sendEvent
    _vscp_sendEvent->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _ECANSendMessage->__CANIDToRegs
    ___awtofl->___flpack
    _Celsius2Fahrenheit->___fldiv
    ___flmul->___fldiv
    ___fldiv->___lwtofl
    ___fladd->___fldiv
    _readEEPROM->___wmul

Critical Paths under _interrupt_at_low_vector in COMRAM

    _interrupt_at_low_vector->i1_WriteTimer0

Critical Paths under _main in BANK0

    _main->_doWork
    _vscp_handleProtocolEvent->_vscp_newNodeOnline
    _vscp_writeRegister->_vscp_writeStdReg
    _vscp_getEvent->_getVSCPFrame
    _getVSCPFrame->_getCANFrame
    _vscp_doOneSecondWork->_vscp_sendHeartBeat
    _handle_sync->_sendTempEvent
    _doWork->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___altofl
    ___altofl->___aldiv
    _eval_poly->___fladd
    ___flsub->___fladd
    ___flneg->___flmul
    ___aldiv->___fltol
    _doOneSecondWork->_sendTempEvent
    _vscp_sendEvent->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _setEventData->_Celsius2Fahrenheit
    _setEventData->_Celsius2Kelvin
    ___fltol->___flmul
    _Celsius2Kelvin->___fladd
    _Celsius2Fahrenheit->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg

Critical Paths under _interrupt_at_low_vector in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doWork

Critical Paths under _interrupt_at_low_vector in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_at_low_vector in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_at_low_vector in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_at_low_vector in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_at_low_vector in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 1855788
                                            106 BANK0      1     1      0
                    _doOneSecondWork
                             _doWork
                        _handle_sync
                               _init
                    _init_app_eeprom
                _vscp_check_pstorage
               _vscp_doOneSecondWork
                         _vscp_error
                      _vscp_getEvent
                 _vscp_goActiveState
              _vscp_handleProbeState
           _vscp_handleProtocolEvent
                          _vscp_init
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _vscp_handleProtocolEvent                            29    29      0 1127394
                                             64 BANK0     29    29      0
                            ___awmod
                       _vscp_getGUID
                    _vscp_getMDF_URL
                 _vscp_getMatrixInfo
              _vscp_goBootloaderMode
            _vscp_handleDropNickname
               _vscp_handleHeartbeat
             _vscp_handleSetNickname
                          _vscp_init
                 _vscp_newNodeOnline
                    _vscp_readAppReg
                  _vscp_readRegister
                    _vscp_readStdReg
                     _vscp_sendEvent
                   _vscp_writeAppReg
                 _vscp_writeRegister
                   _vscp_writeStdReg
 ---------------------------------------------------------------------------------
 (2) _vscp_writeRegister                                   2     1      1  322339
                                             48 COMRAM     1     0      1
                                             12 BANK0      1     1      0
                   _vscp_writeAppReg
                   _vscp_writeStdReg
 ---------------------------------------------------------------------------------
 (2) _vscp_writeStdReg                                    18    17      1  239927
                                             42 COMRAM     6     5      1
                                              0 BANK0     12    12      0
                 _vscp_getFamilyCode
                 _vscp_getFamilyType
                       _vscp_getGUID
             _vscp_getManufacturerId
                     _vscp_getUserID
               _vscp_restoreDefaults
                       _vscp_setGUID
             _vscp_setManufacturerId
                     _vscp_setUserID
 ---------------------------------------------------------------------------------
 (3) _vscp_setUserID                                       2     1      1   40241
                                             26 COMRAM     2     1      1
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_setManufacturerId                               2     1      1   40241
                                             26 COMRAM     2     1      1
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_setGUID                                         2     1      1   40272
                                             26 COMRAM     2     1      1
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_restoreDefaults                                 0     0      0   60473
                    _init_app_eeprom
                       _init_app_ram
 ---------------------------------------------------------------------------------
 (4) _init_app_eeprom                                      1     1      0   40542
                                             26 COMRAM     1     1      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_getFamilyType                                   4     0      4       0
                                             23 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _vscp_getFamilyCode                                   4     0      4       0
                                             23 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _vscp_writeAppReg                                     3     2      1   82103
                                             41 COMRAM     3     2      1
                         _readEEPROM
                    _vscp_readAppReg (ARG)
                    _writeCoeffs2Ram
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (2) _vscp_readRegister                                    1     1      0   77898
                                             39 COMRAM     1     1      0
                    _vscp_readAppReg
                    _vscp_readStdReg
 ---------------------------------------------------------------------------------
 (2) _vscp_readStdReg                                      5     5      0   58134
                                             33 COMRAM     5     5      0
        _vscp_getBootLoaderAlgorithm
                 _vscp_getBufferSize
                       _vscp_getGUID
                    _vscp_getMDF_URL
               _vscp_getMajorVersion
             _vscp_getManufacturerId
               _vscp_getMinorVersion
          _vscp_getRegisterPagesUsed
            _vscp_getSubMinorVersion
                     _vscp_getUserID
 ---------------------------------------------------------------------------------
 (3) _vscp_getUserID                                       1     1      0   19115
                                             32 COMRAM     1     1      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_getSubMinorVersion                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getRegisterPagesUsed                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getMinorVersion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getManufacturerId                               1     1      0   19115
                                             32 COMRAM     1     1      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_getMajorVersion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getMDF_URL                                      1     1      0      22
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _vscp_getGUID                                         1     1      0   19115
                                             32 COMRAM     1     1      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_getBufferSize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getBootLoaderAlgorithm                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_readAppReg                                      7     7      0   19671
                                             32 COMRAM     7     7      0
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _vscp_newNodeOnline                                   1     1      0    3502
                                             63 BANK0      1     1      0
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (2) _vscp_handleSetNickname                               1     1      0   80266
                                             27 COMRAM     1     1      0
                 _vscp_setSegmentCRC
        _vscp_writeNicknamePermanent
 ---------------------------------------------------------------------------------
 (2) _vscp_handleHeartbeat                                 1     1      0   99350
                                             32 COMRAM     1     1      0
                 _vscp_getSegmentCRC
                 _vscp_setSegmentCRC
        _vscp_writeNicknamePermanent
 ---------------------------------------------------------------------------------
 (2) _vscp_handleDropNickname                              1     1      0   59313
                                             32 COMRAM     1     1      0
                          _vscp_init
        _vscp_writeNicknamePermanent
 ---------------------------------------------------------------------------------
 (1) _vscp_init                                            0     0      0   19084
         _vscp_readNicknamePermanent
 ---------------------------------------------------------------------------------
 (2) _vscp_readNicknamePermanent                           0     0      0   19084
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _vscp_goBootloaderMode                                0     0      0   40102
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (2) _vscp_getMatrixInfo                                   3     1      2     154
                                             23 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     808
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _vscp_handleProbeState                                0     0      0   87270
                 _vscp_goActiveState
                     _vscp_sendEvent
                 _vscp_setSegmentCRC
        _vscp_writeNicknamePermanent
 ---------------------------------------------------------------------------------
 (2) _vscp_goActiveState                                   0     0      0    3502
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (1) _vscp_getEvent                                        1     1      0    3603
                                             48 COMRAM     1     1      0
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _getVSCPFrame                                        22    10     12    3593
                                              6 BANK0     22    10     12
                        _getCANFrame
 ---------------------------------------------------------------------------------
 (3) _getCANFrame                                          7     1      6    2724
                                             47 COMRAM     1     1      0
                                              0 BANK0      6     0      6
                 _ECANReceiveMessage
 ---------------------------------------------------------------------------------
 (4) _ECANReceiveMessage                                  15     7      8    2259
                                             32 COMRAM    15     7      8
                   __ECANPointBuffer
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (5) __RegsToCANID                                         9     4      5     928
                                             23 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (5) __ECANPointBuffer                                     5     3      2      86
                                             23 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _vscp_error                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vscp_doOneSecondWork                                 1     1      0   41809
                                             65 BANK0      1     1      0
                    _vscp_getSubzone
                       _vscp_getZone
                 _vscp_sendHeartBeat
 ---------------------------------------------------------------------------------
 (2) _vscp_sendHeartBeat                                   2     1      1    3641
                                             63 BANK0      2     1      1
                    _vscp_getSubzone (ARG)
                       _vscp_getZone (ARG)
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (2) _vscp_getZone                                         0     0      0   19084
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _vscp_getSubzone                                      0     0      0   19084
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (1) _vscp_check_pstorage                                  1     1      0  139483
                                             32 COMRAM     1     1      0
                 _vscp_getSegmentCRC
                _vscp_setControlByte
                 _vscp_setSegmentCRC
        _vscp_writeNicknamePermanent
 ---------------------------------------------------------------------------------
 (3) _vscp_writeNicknamePermanent                          1     1      0   40133
                                             26 COMRAM     1     1      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_setSegmentCRC                                   1     1      0   40133
                                             26 COMRAM     1     1      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (2) _vscp_setControlByte                                  1     1      0   40133
                                             26 COMRAM     1     1      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (3) _vscp_getSegmentCRC                                   0     0      0   19084
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0   20472
                         _ConvertADC
                     _ECANInitialize
                            _OpenADC
                         _OpenTimer0
                        _WriteTimer0
                       _init_app_ram
 ---------------------------------------------------------------------------------
 (4) _init_app_ram                                         1     1      0   19931
                                             41 COMRAM     1     1      0
                    _writeCoeffs2Ram
 ---------------------------------------------------------------------------------
 (5) _writeCoeffs2Ram                                      9     9      0   19801
                                             32 COMRAM     9     9      0
                             ___wmul
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     386
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     171
                                             23 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             23 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ECANInitialize                                       0     0      0      44
               _ECANSetOperationMode
 ---------------------------------------------------------------------------------
 (3) _ECANSetOperationMode                                 1     1      0      44
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handle_sync                                          3     3      0   69047
                                             65 BANK0      3     3      0
                         _readEEPROM
                      _sendTempEvent
 ---------------------------------------------------------------------------------
 (1) _doWork                                              76    76      0  190271
                                             84 BANK0     22    22      0
                                              0 BANK1     54    54      0
                            ___aldiv
                           ___altofl
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___lwtofl
                                _exp
                _getCalibrationValue
                                _log
                         _readEEPROM
                     _vscp_sendEvent
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          3     0      3   40102
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     2      4   28194
                                             61 BANK0      6     2      4
                           ___awtofl
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _getCalibrationValue                                 13    11      2   19180
                                             32 COMRAM    13    11      2
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _exp                                                 15    11      4   46560
                                             69 BANK0     15    11      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___lwtofl (ARG)
                          _eval_poly
                              _floor
                              _ldexp
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                8     2      6     513
                                             61 BANK0      8     2      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                               10     6      4   11453
                                             55 BANK0     10     6      4
                           ___altofl
                            ___fladd
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                8     2      6     630
                                             23 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     660
                                             23 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___altofl                                             5     1      4    2840
                                             50 BANK0      5     1      4
                            ___aldiv (ARG)
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           16     8      8   12297
                                             45 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    6489
                                             45 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     219
                                             26 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2892
                                             33 COMRAM     4     0      4
                           ___flpack
                         _readEEPROM (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     907
                                             36 BANK0     14     6      8
                            ___flmul (ARG)
                            ___fltol (ARG)
                _getCalibrationValue (ARG)
 ---------------------------------------------------------------------------------
 (1) _doOneSecondWork                                      4     4      0   73110
                                             65 BANK0      4     4      0
                         _readEEPROM
                      _sendTempEvent
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (2) _sendTempEvent                                        2     2      0   49802
                                             63 BANK0      2     2      0
                         _readEEPROM
                       _setEventData
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (2) _vscp_sendEvent                                       1     1      0    3502
                                             48 COMRAM     1     1      0
                      _sendVSCPFrame
 ---------------------------------------------------------------------------------
 (3) _sendVSCPFrame                                       32    24      8    3468
                                             44 COMRAM     4     4      0
                                             35 BANK0     28    20      8
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (4) _sendCANFrame                                         8     1      7    2786
                                             43 COMRAM     1     1      0
                                             28 BANK0      7     0      7
                    _ECANSendMessage
 ---------------------------------------------------------------------------------
 (5) _ECANSendMessage                                     37    29      8    2425
                                             34 COMRAM     9     1      8
                                              0 BANK0     28    28      0
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (6) __CANIDToRegs                                        11     4      7     924
                                             23 COMRAM    11     4      7
 ---------------------------------------------------------------------------------
 (3) _setEventData                                        13    10      3   27092
                                             49 BANK0     13    10      3
                 _Celsius2Fahrenheit
                     _Celsius2Kelvin
                           ___awtofl
                            ___fltol
                         _readEEPROM (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     876
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtofl                                             9     5      4    3225
                                             33 COMRAM     5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) _Celsius2Kelvin                                       4     0      4    6187
                                             45 BANK0      4     0      4
                           ___awtofl (ARG)
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) _Celsius2Fahrenheit                                   4     0      4   16390
                                             45 BANK0      4     0      4
                           ___awtofl (ARG)
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             19    11      8    5579
                                              7 BANK0     19    11      8
                           ___awtofl (ARG)
                            ___fldiv (ARG)
                           ___flpack
                           ___lwtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             19    11      8    4624
                                             37 COMRAM    12     4      8
                                              0 BANK0      7     7      0
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             15     7      8    6002
                                             30 BANK0     15     7      8
                           ___awtofl (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
                           ___lwtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flpack                                            10     4      6    2553
                                             23 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (3) _readEEPROM                                           3     1      2   19084
                                             29 COMRAM     3     1      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _interrupt_at_low_vector                             19    19      0      93
                                              4 COMRAM    19    19      0
                       i1_ConvertADC
                      i1_WriteTimer0
 ---------------------------------------------------------------------------------
 (9) i1_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _doOneSecondWork
     _readEEPROM
       ___wmul (ARG)
     _sendTempEvent
       _readEEPROM
         ___wmul (ARG)
       _setEventData
         _Celsius2Fahrenheit
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                   ___lwtofl (ARG)
                     ___flpack
                     _readEEPROM (ARG)
                       ___wmul (ARG)
                 ___flpack (ARG)
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
                 _frexp (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         _Celsius2Kelvin
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                   ___lwtofl (ARG)
                     ___flpack
                     _readEEPROM (ARG)
                       ___wmul (ARG)
                 ___flpack (ARG)
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
                 _frexp (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         ___awtofl
           ___flpack
         ___fltol
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         _readEEPROM (ARG)
           ___wmul (ARG)
       _vscp_sendEvent
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
   _doWork
     ___aldiv
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
         _frexp (ARG)
       ___fltol (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
       _getCalibrationValue (ARG)
         _readEEPROM
           ___wmul (ARG)
     ___altofl
       ___aldiv (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         _getCalibrationValue (ARG)
           _readEEPROM
             ___wmul (ARG)
       ___flpack (ARG)
       ___fltol (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
     ___fladd
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
         _frexp (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
       ___flpack (ARG)
       ___lwtofl (ARG)
         ___flpack
         _readEEPROM (ARG)
           ___wmul (ARG)
       _frexp (ARG)
     ___fldiv
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         _readEEPROM (ARG)
           ___wmul (ARG)
     ___flmul
       ___awtofl (ARG)
         ___flpack
       ___fldiv (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
       ___flpack (ARG)
       ___lwtofl (ARG)
         ___flpack
         _readEEPROM (ARG)
           ___wmul (ARG)
       _frexp (ARG)
     ___flneg
       ___fldiv (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
         _frexp (ARG)
     ___flsub
       ___awtofl (ARG)
         ___flpack
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
         _frexp (ARG)
     ___fltol
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
         _frexp (ARG)
     ___lwtofl
       ___flpack
       _readEEPROM (ARG)
         ___wmul (ARG)
     _exp
       ___awtofl
         ___flpack
       ___fldiv
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
         _frexp (ARG)
       ___flneg
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
       ___flsub
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
       ___fltol
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
       ___lwtofl (ARG)
         ___flpack
         _readEEPROM (ARG)
           ___wmul (ARG)
       _eval_poly (ARG)
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
       _floor (ARG)
         ___altofl
           ___aldiv (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                   ___lwtofl (ARG)
                     ___flpack
                     _readEEPROM (ARG)
                       ___wmul (ARG)
                 ___flpack (ARG)
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
                 _frexp (ARG)
             _getCalibrationValue (ARG)
               _readEEPROM
                 ___wmul (ARG)
           ___flpack (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         _frexp
       _ldexp (ARG)
         _eval_poly (ARG)
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                   ___lwtofl (ARG)
                     ___flpack
                     _readEEPROM (ARG)
                       ___wmul (ARG)
                 ___flpack (ARG)
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
                 _frexp (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
     _getCalibrationValue
       _readEEPROM
         ___wmul (ARG)
     _log
       ___awtofl
         ___flpack
       ___fladd
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
         _frexp (ARG)
       ___fldiv (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___fldiv (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           _readEEPROM (ARG)
             ___wmul (ARG)
         _frexp (ARG)
       _eval_poly (ARG)
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             _readEEPROM (ARG)
               ___wmul (ARG)
           _frexp (ARG)
       _frexp (ARG)
     _readEEPROM
       ___wmul (ARG)
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _writeEEPROM
   _handle_sync
     _readEEPROM
       ___wmul (ARG)
     _sendTempEvent
       _readEEPROM
         ___wmul (ARG)
       _setEventData
         _Celsius2Fahrenheit
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                   ___lwtofl (ARG)
                     ___flpack
                     _readEEPROM (ARG)
                       ___wmul (ARG)
                 ___flpack (ARG)
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
                 _frexp (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         _Celsius2Kelvin
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flpack (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flpack
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___fldiv (ARG)
                   ___flpack
                   ___lwtofl (ARG)
                     ___flpack
                     _readEEPROM (ARG)
                       ___wmul (ARG)
                 ___flpack (ARG)
                 ___lwtofl (ARG)
                   ___flpack
                   _readEEPROM (ARG)
                     ___wmul (ARG)
                 _frexp (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         ___awtofl
           ___flpack
         ___fltol
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___fldiv (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 _readEEPROM (ARG)
                   ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               _readEEPROM (ARG)
                 ___wmul (ARG)
             _frexp (ARG)
         _readEEPROM (ARG)
           ___wmul (ARG)
       _vscp_sendEvent
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
   _init
     _ConvertADC
     _ECANInitialize
       _ECANSetOperationMode
     _OpenADC
     _OpenTimer0
     _WriteTimer0
     _init_app_ram
       _writeCoeffs2Ram
         ___wmul
         _readEEPROM
           ___wmul (ARG)
   _init_app_eeprom
     _writeEEPROM
   _vscp_check_pstorage
     _vscp_getSegmentCRC
       _readEEPROM
         ___wmul (ARG)
     _vscp_setControlByte
       _writeEEPROM
     _vscp_setSegmentCRC
       _writeEEPROM
     _vscp_writeNicknamePermanent
       _writeEEPROM
   _vscp_doOneSecondWork
     _vscp_getSubzone
       _readEEPROM
         ___wmul (ARG)
     _vscp_getZone
       _readEEPROM
         ___wmul (ARG)
     _vscp_sendHeartBeat
       _vscp_getSubzone (ARG)
         _readEEPROM
           ___wmul (ARG)
       _vscp_getZone (ARG)
         _readEEPROM
           ___wmul (ARG)
       _vscp_sendEvent (ARG)
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
   _vscp_error
   _vscp_getEvent
     _getVSCPFrame
       _getCANFrame
         _ECANReceiveMessage
           __ECANPointBuffer
           __RegsToCANID
   _vscp_goActiveState
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
   _vscp_handleProbeState
     _vscp_goActiveState
       _vscp_sendEvent
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _vscp_setSegmentCRC
       _writeEEPROM
     _vscp_writeNicknamePermanent
       _writeEEPROM
   _vscp_handleProtocolEvent
     ___awmod
     _vscp_getGUID
       _readEEPROM
         ___wmul (ARG)
     _vscp_getMDF_URL
     _vscp_getMatrixInfo
     _vscp_goBootloaderMode
       _writeEEPROM
     _vscp_handleDropNickname
       _vscp_init
         _vscp_readNicknamePermanent
           _readEEPROM
             ___wmul (ARG)
       _vscp_writeNicknamePermanent
         _writeEEPROM
     _vscp_handleHeartbeat
       _vscp_getSegmentCRC
         _readEEPROM
           ___wmul (ARG)
       _vscp_setSegmentCRC
         _writeEEPROM
       _vscp_writeNicknamePermanent
         _writeEEPROM
     _vscp_handleSetNickname
       _vscp_setSegmentCRC
         _writeEEPROM
       _vscp_writeNicknamePermanent
         _writeEEPROM
     _vscp_init
       _vscp_readNicknamePermanent
         _readEEPROM
           ___wmul (ARG)
     _vscp_newNodeOnline
       _vscp_sendEvent
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _vscp_readAppReg
       _readEEPROM
         ___wmul (ARG)
     _vscp_readRegister
       _vscp_readAppReg
         _readEEPROM
           ___wmul (ARG)
       _vscp_readStdReg
         _vscp_getBootLoaderAlgorithm
         _vscp_getBufferSize
         _vscp_getGUID
           _readEEPROM
             ___wmul (ARG)
         _vscp_getMDF_URL
         _vscp_getMajorVersion
         _vscp_getManufacturerId
           _readEEPROM
             ___wmul (ARG)
         _vscp_getMinorVersion
         _vscp_getRegisterPagesUsed
         _vscp_getSubMinorVersion
         _vscp_getUserID
           _readEEPROM
             ___wmul (ARG)
     _vscp_readStdReg
       _vscp_getBootLoaderAlgorithm
       _vscp_getBufferSize
       _vscp_getGUID
         _readEEPROM
           ___wmul (ARG)
       _vscp_getMDF_URL
       _vscp_getMajorVersion
       _vscp_getManufacturerId
         _readEEPROM
           ___wmul (ARG)
       _vscp_getMinorVersion
       _vscp_getRegisterPagesUsed
       _vscp_getSubMinorVersion
       _vscp_getUserID
         _readEEPROM
           ___wmul (ARG)
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _vscp_writeAppReg
       _readEEPROM
         ___wmul (ARG)
       _vscp_readAppReg (ARG)
         _readEEPROM
           ___wmul (ARG)
       _writeCoeffs2Ram (ARG)
         ___wmul
         _readEEPROM
           ___wmul (ARG)
       _writeEEPROM (ARG)
     _vscp_writeRegister
       _vscp_writeAppReg
         _readEEPROM
           ___wmul (ARG)
         _vscp_readAppReg (ARG)
           _readEEPROM
             ___wmul (ARG)
         _writeCoeffs2Ram (ARG)
           ___wmul
           _readEEPROM
             ___wmul (ARG)
         _writeEEPROM (ARG)
       _vscp_writeStdReg
         _vscp_getFamilyCode
         _vscp_getFamilyType
         _vscp_getGUID
           _readEEPROM
             ___wmul (ARG)
         _vscp_getManufacturerId
           _readEEPROM
             ___wmul (ARG)
         _vscp_getUserID
           _readEEPROM
             ___wmul (ARG)
         _vscp_restoreDefaults
           _init_app_eeprom
             _writeEEPROM
           _init_app_ram
             _writeCoeffs2Ram
               ___wmul
               _readEEPROM
                 ___wmul (ARG)
         _vscp_setGUID
           _writeEEPROM
         _vscp_setManufacturerId
           _writeEEPROM
         _vscp_setUserID
           _writeEEPROM
     _vscp_writeStdReg
       _vscp_getFamilyCode
       _vscp_getFamilyType
       _vscp_getGUID
         _readEEPROM
           ___wmul (ARG)
       _vscp_getManufacturerId
         _readEEPROM
           ___wmul (ARG)
       _vscp_getUserID
         _readEEPROM
           ___wmul (ARG)
       _vscp_restoreDefaults
         _init_app_eeprom
           _writeEEPROM
         _init_app_ram
           _writeCoeffs2Ram
             ___wmul
             _readEEPROM
               ___wmul (ARG)
       _vscp_setGUID
         _writeEEPROM
       _vscp_setManufacturerId
         _writeEEPROM
       _vscp_setUserID
         _writeEEPROM
   _vscp_init
     _vscp_readNicknamePermanent
       _readEEPROM
         ___wmul (ARG)
   _writeEEPROM

 _interrupt_at_low_vector (ROOT)
   i1_ConvertADC
   i1_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     3C0      16       62.5%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     36      A4       7       64.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      81       5       80.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      48       1       75.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16D       3        0.0%
DATA                 0      0     52D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Feb 12 22:48:36 2015

                          ___altofl@sign 0096                             ___fldiv@cntr 0064  
                __end_of_vscp_readAppReg 387A                             ___fldiv@sign 0066  
                  __end_of_sendVSCPFrame 617E             ?_vscp_writeNicknamePermanent 0001  
            ??_vscp_getRegisterPagesUsed 0018                                       bsr 000FE0  
    vscp_writeNicknamePermanent@nickname 001B                      ___wmul@multiplicand 001A  
                            __CFG_BORV$3 000000                  __end_of_vscp_readStdReg 6292  
                           ___flpack@arg 0018                             ___flpack@exp 001C  
                         _Celsius2Kelvin 7134                                      l201 1D44  
                                    l208 21DE                                      l224 250A  
                                    l321 309E                                      l410 3554  
                                    l315 3074                                      l245 46AE  
                                    l325 30B6                                      l317 3082  
                                    l319 3090                                      l168 57FA  
                                    l249 6944                                      l177 5852  
                                    l620 6580                                      l516 12C2  
                                    l269 671E                                      l631 6FE8  
                                    l616 617C                                      l544 7384  
                                    l822 503A                                      l814 4F76  
                                    l840 4C80                                      l850 4CF4  
                                    l842 4C98                                      l834 4E3A  
                                    l827 4C12                                      l844 4CB0  
                                    l837 4D0E                                      l846 4CC8  
                                    l838 4C6E                       vscp_readStdReg@reg 0026  
                                    l848 4CDE                                      l881 5686  
                                    l858 4D8E                                      l876 57E4  
                                    l886 6B0A                             __CFG_CPB$OFF 000000  
         __size_of_vscp_handleProbeState 0118                         setEventData@ival 009C  
                         getVSCPFrame@id 0078            __end_of_vscp_handleProbeState 6068  
                  ?_vscp_restoreDefaults 0001                     __size_of_WriteTimer0 0012  
                       setEventData@unit 0093                                      _adc 01A4  
                                    _exp 46B0                                      _log 5392  
                           ___awmod@sign 001D                                      prod 000FF3  
                                    wreg 000FE8                             ___flmul@cntr 0078  
                           ___flmul@sign 0079                             __CFG_LVP$OFF 000000  
                          ___flpack@sign 001D                             ___fltol@exp1 0083  
                           __CFG_WDT$OFF 000000                                     l1006 72A2  
                                   l1025 601A                                     l1017 5FB4  
                                   l1060 71E4                                     l1053 724A  
                                   l1117 72F4                                     l1207 2B06  
                                   l1064 702C                                     l1073 6DA2  
                                   l1049 7070                                     l1217 2BFC  
                                   l1241 2FDC                                     l1307 73A0  
                                   l1059 71D6                                     l1308 73A2  
                                   l1077 73EC                                     l1265 7338  
                                   l1249 6E5A                                     l1612 5F4E  
                                   l1620 685A                                     l1621 6894  
                                   l1293 6DFE                                     l1543 6498  
                                   l1553 645A                                     l1547 6410  
                                   l1627 5200                                     l1580 417E  
                                   l1572 4932                                     l1581 43DC  
                                   l1662 5BBA                                     l1584 41BC  
                                   l1664 5BAA                                     l1568 4942  
                                   l1673 5A7C                                     l1586 41E8  
                                   l1595 42EE                                     l1693 5CF2  
                                   l1854 5512                                     l1689 69E2  
                __end_of_doOneSecondWork 46B0                                     l6330 7410  
              vscp_getManufacturerId@idx 0021                                     l8200 4EDE  
                                   l9000 32C2                                     l9010 3308  
                                   l9002 32D0                                     l8140 5708  
                                   l9100 3588                                     l9020 334E  
                                   l9012 3316                                     l9004 32DE  
                                   ?_exp 00A5                                     ?_log 009D  
                                   l8206 4EF6                                     l9030 3394  
                                   l9022 335C                                     l9014 3324  
                                   l9006 32EC                                     l9120 3850  
                                   l9112 383A                                     l9040 33DA  
                                   l9032 33A2                                     l9024 336A  
                                   l9016 3332                                     l9008 32FA  
                                   l9104 358C                                     l9200 0AE4  
                                   l8410 41CE                                     l8242 4FDC  
                                   l8250 4FFE                                     l8234 4F9A  
                                   l8218 4F38                                     l8322 6C56  
                                   l9050 3420                                     l9042 33E8  
                                   l9034 33B0                                     l9026 3378  
                                   l9018 3340                                     l9122 3876  
                                   l9106 3818                                     l9210 0B84  
                                   l9202 0B04                                     l9130 0684  
                                   l8404 4190                                     l8228 4F7A  
                                   l8260 5028                                     l8340 6EFE  
                                   l9060 3466                                     l9052 342E  
                                   l9044 33F6                                     l9036 33BE  
                                   l9028 3386                                     l9300 123A  
                                   l9220 0C1A                                     l9212 0BA2  
                                   l9204 0B24                                     l9140 0724  
                                   l9132 06A4                                     l8308 3FA0  
                                   l8430 4264                                     l8262 502C  
                                   l8334 6EC2                                     l8350 6A96  
                                   l6806 7348                                     l9070 34AC  
                                   l9062 3474                                     l9054 343C  
                                   l9046 3404                                     l9038 33CC  
                                   l9310 12FE                                     l9302 1268  
                                   l9230 0CB0                                     l9222 0C38  
                                   l9214 0BC0                                     l9206 0B44  
                                   l9150 07C4                                     l9142 0744  
                                   l9134 06C4                                     l8280 63F8  
                                   l8272 63B4                                     l8432 427C  
                                   l8424 422C                                     l8416 41DE  
                                   l8512 5078                                     l8256 5024  
                                   l8360 6ACE                                     l8352 6AA2  
                                   l9080 34F2                                     l9072 34BA  
                                   l9064 3482                                     l9056 344A  
                                   l9048 3412                                     l9320 1372  
                                   l9312 131C                                     l9304 1286  
                                   l9240 0D46                                     l9232 0CCE  
                                   l9224 0C56                                     l9216 0BDE  
                                   l9208 0B64                                     l9160 0864  
                                   l9152 07E4                                     l9144 0764  
                                   l9136 06E4                                     l8442 42CC  
                                   l8434 4288                                     l8530 5126  
                                   l8338 6EF6                                     l8354 6AAE  
                                   l8346 6A82                                     l9090 3538  
                                   l9082 3500                                     l9074 34C8  
                                   l9066 3490                                     l9058 3458  
                                   l9410 61F8                                     l9402 61D8  
                                   l9322 1390                                     l9306 12A4  
                                   l9250 0DDC                                     l9242 0D64  
                                   l9234 0CEC                                     l9226 0C74  
                                   l9218 0BFC                                     l9170 0904  
                                   l9162 0884                                     l9154 0804  
                                   l9146 0784                                     l9138 0704  
                                   l8276 63C6                                     l8452 4352  
                                   l8444 42E4                                     l8436 4294  
                                   l8612 617A                                     l8188 66E8  
                                   l8356 6ABA                                     l8348 6A8A  
                                   l8364 6ADC                                     l9092 3546  
                                   l9084 350E                                     l9076 34D6  
                                   l9068 349E                                     l9420 621E  
                                   l9316 132E                                     l9308 12E0  
                                   l9260 0EA2                                     l9252 0DFA  
                                   l9244 0D82                                     l9236 0D0A  
                                   l9228 0C92                                     l9180 09A4  
                                   l9172 0924                                     l9164 08A4  
                                   l9156 0824                                     l9148 07A4  
                                   l8286 6436                                     l8278 63D2  
                                   l8462 43B0                                     l8542 5180  
                                   l8534 514C                                     l8518 50CC  
                                   l8358 6AC4                                     l8382 55B4  
                                   l8630 4BFC                                     l9094 355A  
                                   l9086 351C                                     l9078 34E4  
                                   l9406 61E6                                     l9318 1354  
                                   l9270 0F88                                     l9262 0ED0  
                                   l9254 0E18                                     l9246 0DA0  
                                   l9238 0D28                                     l9190 0A44  
                                   l9182 09C4                                     l9174 0944  
                                   l9166 08C4                                     l9158 0844  
                                   l9326 1398                                     l8288 6442  
                                   l8448 4320                                     l8472 5E52  
                                   l8640 4C2C                                     l9096 356C  
                                   l9088 352A                                     l9440 626C  
                                   l9432 6250                                     l9424 622C  
                                   l9416 6210                                     l9280 106E  
                                   l9272 0FB6                                     l9264 0EFE  
                                   l9256 0E46                                     l9248 0DBE  
                                   l9192 0A64                                     l9184 09E4  
                                   l9176 0964                                     l9168 08E4  
                                   l9336 1686                                     l9328 164C  
                                   l8490 5ED6                                     l8546 51A6  
                                   l9602 5C84                                     l9370 6FE6  
                                   l9098 357A                                     l9290 1154  
                                   l9282 109C                                     l9274 0FE4  
                                   l9266 0F2C                                     l9258 0E74  
                                   l9194 0A84                                     l9186 0A04  
                                   l9178 0984                                     l9530 4BC2  
                                   l9522 4BA2                                     l9506 4B0C  
                                   l8804 6978                                     l8708 4D4C  
                                   l6980 6B6E                                     l6972 6B54  
                                   l8900 2FFC                                     l9436 625E  
                                   l9428 6242                                     l9292 1182  
                                   l9284 10CA                                     l9276 1012  
                                   l9268 0F5A                                     l9196 0AA4  
                                   l9188 0A24                                     l8572 7370  
                                   l9532 4BC6                                     l9516 4B80  
                                   l9460 497C                                     l8478 5E92  
                                   l8822 5978                                     l9606 5C9E  
                                   l8750 4E24                                     l8726 4DB2  
                                   l8646 4C4C                                     l8654 4C5A  
                                   l8910 304C                                     l8902 300C  
                                   l9446 6284                                     l9390 61B0  
                                   l9382 6198                                     l9294 11B0  
                                   l9286 10F8                                     l9278 1040  
                                   l9198 0AC4                                     l9534 4BCE  
                                   l9616 719C                                     l9640 4722  
                                   l8736 4DEC                                     l8744 4E0A  
                                   l6992 6B9A                                     l6984 6B82  
                                   l6976 6B62                                     l6968 6B38  
                                   l8920 3096                                     l8912 305C  
                                   l8904 301C                                     l9448 628E  
                                   l9296 11DE                                     l9288 1126  
                                   l9472 49E4                                     l8498 5F12  
                                   l8850 5A40                                     l8842 5A06  
                                   l9714 6942                                     l9570 5D56  
                                   l9562 5B0C                                     l9554 5AD0  
                                   l9650 479A                                     l9634 46D8  
                                   l6978 6B6A                                     l8930 30D8  
                                   l8914 306C                                     l8906 302C  
                                   l9394 61BC                                     l9386 61A4  
                                   l9298 120C                                     l9466 49B2  
                                   l8852 5A46                                     l9572 5E06  
                                   l9900 728E                                     l6988 6B8C  
                                   l8940 311E                                     l8932 30E6  
                                   l8924 30AE                                     l8916 307A  
                                   l8908 303C                                     l9484 4A3E  
                                   l8838 59EA                                     l9830 5250  
                                   l9558 5AEA                                     l9590 5C4A  
                                   l9646 475E                                     l8694 4D24  
                                   l8950 3164                                     l8942 312C  
                                   l8934 30F4                                     l8926 30BC  
                                   l8918 3088                                     l9398 61CA  
                                   l9806 73E6                                     l8856 5A6C  
                                   l8848 5A28                                     l8768 6CFC  
                                   l8792 6892                                     l9736 64D0  
                                   l8960 31AA                                     l8952 3172  
                                   l8944 313A                                     l8936 3102  
                                   l8928 30CA                                     l9496 4A98  
                                   l8778 6F78                                     l8882 65BA  
                                   l8874 7130                                     l9842 52C6  
                                   l8786 681C                                     l8698 4D28  
                                   l9930 5F86                                     l8970 31F0  
                                   l8962 31B8                                     l8954 3180  
                                   l8946 3148                                     l8938 3110  
                                   l9818 72E8                                     l9844 52DE  
                                   l9836 5298                                     l9668 48FC  
                                   l9684 53DA                                     l8868 69FA  
                                   l8980 3236                                     l8972 31FE  
                                   l8964 31C6                                     l8956 318E  
                                   l8948 3156                                     l8886 65F6  
                                   l9862 5380                                     l9854 5340  
                                   l9846 52E4                                     l9678 53A2  
                                   l9950 5FE6                                     l9918 5F52  
                                   l9766 706A                                     l8990 327C  
                                   l8982 3244                                     l8974 320C  
                                   l8966 31D4                                     l8958 319C  
                                   l8888 6612                                     l9944 5FDC  
                                   l8992 328A                                     l8984 3252  
                                   l8976 321A                                     l8968 31E2  
                                   l9858 535A                                     l8994 3298  
                                   l8986 3260                                     l8978 3228  
                                   l8898 2FEC                                     l9980 604C  
                                   l8996 32A6                                     l8988 326E  
                                   l9982 6062                                     l8998 32B4  
                                   l9990 2522                                     l9976 6044  
                                   l9992 252A                                     l9994 2532  
                                   l9996 253A                                     l9988 251A  
            __size_of_vscp_getMatrixInfo 0024                           sendCANFrame@id 007C  
                                   u8105 56CA                                     u8115 56F2  
                                   u8125 571C                                     u9200 5A0E  
                                   u9140 69A0                                     u9150 5964  
                                   u8415 555E                                     u8440 4112  
                                   u8425 557E                                     u8450 4146  
                                   u9170 59A0                                     u9155 5958  
                                   u8435 55D0                                     u8700 5064  
                                   u9148 69A2                                     u8445 4106  
                                   u9085 6CD4                                     u8455 413A  
                                   u9175 5994                                     u8720 50A0  
                         sendCANFrame@rv 002C                                     u8705 5058  
                                   u8650 5E40                                     u8730 50B2  
                                   u8725 5094                                     u8670 5E70  
                                   u8655 5E36                                     u8680 5E80  
                                   u9720 4B06                                     u8825 4C06  
                                   u8675 5E66                                     u8827 4C0A  
                                   u9725 4AFC                                     u9750 4B7A  
                                   u8775 60BC                                     u9755 4B70  
                                   u9860 5C00                                     u9940 4768  
                                   u9970 48E6                                     u9946 476A  
                                   u9868 5C04                         ??_ECANInitialize 0019  
                           __CFG_PWRT$ON 000000                vscp_setManufacturerId@idx 001C  
                  __size_of_vscp_getGUID 0014                         ?_vscp_getMDF_URL 0001  
                                   _main 57E6                                     _init 70B4  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   indf1 000FE7                                     fsr1l 000FE1  
                                   indf2 000FDF                                     fsr2l 000FD9  
                                   exp@x 00A5                                     log@x 009D  
                                   pclat 000FFA                    __size_of_vscp_getZone 000E  
                    i1WriteTimer0@timer0 0001                         _vscp_writeAppReg 066E  
                            _vscp_minute 0122                              _vscp_second 0125  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 0524            __size_of_vscp_doOneSecondWork 007A  
                      vscp_getUserID@idx 0021                    __size_of_vscp_setGUID 0020  
                       _vscp_writeStdReg 4944                              _writeEEPROM 731C  
              ECANReceiveMessage@dataLen 0025                    getVSCPFrame@pPriority 006C  
                        __end_of_OpenADC 6E02                          _sh_coefficients 0126  
                   __end_of_getVSCPFrame 6582                                    ??_exp 00A9  
                                  ??_log 0032              __size_of_vscp_getSegmentCRC 000E  
                       __RegsToCANID@val 001A                         __RegsToCANID@ptr 0018  
                 __end_of_Celsius2Kelvin 7172                     __size_of_getCANFrame 0048  
                                  l10030 25CE                                    l10016 259A  
                                  l10050 2632                                    l10300 2C08  
                                  l10108 2770                                    l10132 27E4  
                                  l10230 2ACA                                    l10214 2A7C  
                                  l10118 27A6                                    l10134 2816  
                                  l10070 2680                                    l10152 28E2  
                                  l10128 27DC                                    l10064 266A  
                                  l10322 2C8A                                    l10314 2C4A  
                                  l10234 2ADA                                    l10146 2852  
                                  l10138 2830                                    l10420 6728  
                                  l10332 2CC0                                    l10156 2904  
                                  l10172 294C                                    l10430 67A6  
                                  l10350 2D12                                    l10334 2CC6  
                                  l10262 2B5A                                    l10254 2B44  
                                  l10246 2B12                                    l10190 29F4  
                                  l10174 2950                                    l10406 2F6C  
                                  l10424 675A                                    l10184 2980  
                                  l10176 295E                                    l10088 2704  
                                  _B0CON 000E20                                    l10434 67C2  
                                  l10530 6D6C                                    l10362 2DC2  
                                  l10354 2D56                                    l10274 2B72  
                                  l10258 2B50                                    l10098 273A  
                                  l10508 46A2                                    l10604 1E82  
                                  l10428 678C                                    l10436 67D0  
                                  l10524 6D5A                                    l10380 2E2C  
                                  l10372 2DF4                                    l10268 2B6A  
                                  l10606 1EA8                                    l10550 16CA  
                                  l10534 6D7A                                    l10358 2D80  
                                  l10278 2BB2                                    l10198 2A2E  
                                  l10710 5824                                    l10472 450C  
                                  l10448 43F0                                    l10384 2ED4  
                                  _B1CON 000E30                                    l10474 451C  
                                  l10458 4456                                    l10626 1FE6  
                                  l10618 1EC6                                    l10730 5864  
                                  l10722 5846                                    l10714 582E  
                                  l10484 458A                                    l10644 2144  
                                  l10724 584C                                    l10662 2306  
                                  l10646 2156                                    l10558 1714  
                                  l10718 583A                                    l10742 588A  
                                  l10496 4624                                    l10680 2464  
                                  l10736 587C                                    l10744 58AE  
                                  _B2CON 000E40                                    l10498 4634  
                                  l10682 2476                                    l10762 5900  
                                  l10738 5882                                    l10692 24FE  
                                  l10772 5932                                    l10768 5924  
                                  _B3CON 000E50                                    _B4CON 000E60  
          __size_of_vscp_getMajorVersion 0004                                    _B5CON 000E70  
             __end_of_vscp_goActiveState 7278                            ___fltol@sign1 0082  
                        __end_of___aldiv 5392            ??_vscp_writeNicknamePermanent 001B  
                     writeEEPROM@address 0018                          __end_of___fladd 43DE  
                                  ?_main 0001                                    ?_init 0001  
                 ?_vscp_goBootloaderMode 0001                          __end_of___fldiv 5F50  
                          i1_WriteTimer0 74F0                          __end_of___flneg 71AE  
                                  _EEADR 000FA9                          __end_of___awmod 6BA4  
                        __end_of___flmul 5202                          __end_of___flsub 6F56  
                        __end_of___fltol 5A7E                  _vscp_handleDropNickname 71AE  
                                  _BSEL0 000DF8                                    u10020 651E  
                                  u10030 656A                                    u10025 6512  
                                  u10035 655E                                    u11214 45A0  
                                  u11215 459A                                    _T0CON 000FD5  
                                  u10185 5228                                    u10195 5270  
                                  u11164 4488                                    u11404 1E98  
                                  u11165 4482                                    u11405 1E92  
                                  u11344 16E0                                    u11345 16DA  
                                  u11604 23D0                                    u11444 1EDC  
                                  u11605 23CA                                    u11445 1ED6  
                                  u11544 21CE                                    u11545 21C8  
                                  u11554 21F4                                    u11474 1FDE  
                                  u11555 21EE                                    u11475 1FD8  
                                  u11654 24EE                                    u11494 20B0  
                                  u11655 24E8                                    u11495 20AA  
                                  u11584 22FE                                    u11585 22F8  
                                  i1l144 02C8                                    i1l161 048C  
                                  i1l164 04DE                          sendCANFrame@dlc 0080  
                                  _MSEL0 000DF0                                    _MSEL1 000DF1  
                                  _MSEL2 000DF2                                    _IRXIF 007D27  
                      ??_writeCoeffs2Ram 0021                                    _TMR0H 000FD7  
                                  _TMR0L 000FD6       __end_of_vscp_readNicknamePermanent 7510  
             _vscp_readNicknamePermanent 7502                                    _PORTC 000F82  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                       setEventData@newval 0098  
                       ?_vscp_getSubzone 0001                           __CFG_EBTR0$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                          ___awtofl@sign 0026                           __CFG_EBTR3$OFF 000000  
                  __end_of_sendTempEvent 6946                             _vscp_getGUID 7444  
                          __CFG_WRTD$OFF 000000                           __CFG_EBTRB$OFF 000000  
                                  _floor 5A7E                                    _ldexp 5BBC  
                           _vscp_getZone 7510                                    _frexp 6946  
                                  _errno 011A                       vscp_writeAppReg@rv 002C  
              _vscp_getRegisterPagesUsed 754E                   __size_of_vscp_getEvent 005A  
                                  main@i 00CA                               _ConvertADC 7562  
                           _vscp_setGUID 7366                                    tablat 000FF5  
                _vscp_getSubMinorVersion 754A                                    plusw2 000FDB  
                                  status 000FD8               __end_of_vscp_sendHeartBeat 721C  
                      _calibration_index 0037                              exp@exponent 00B1  
                            ldexp@newexp 00A1                     _ECANSetOperationMode 7406  
                        __initialization 7072                              log@exponent 00A1  
                           __end_of_main 593C                             __end_of_init 70F4  
                       ?_vscp_readAppReg 0001                  _interrupt_at_low_vector 0218  
                        ?_Celsius2Kelvin 008D                           __CFG_OSC$HSPLL 000000  
                      ??_ECANSendMessage 002B                           ?i1_WriteTimer0 0001  
                       ?_vscp_readStdReg 0001                    getVSCPFrame@pvscptype 0068  
                 ??_vscp_restoreDefaults 002B                                   ??_main 0032  
                                 ??_init 002B            __size_of_vscp_handleHeartbeat 0044  
               ??_vscp_getManufacturerId 0021                 ??_vscp_setManufacturerId 001C  
               _vscp_handleProtocolEvent 250C                            __activetblptr 000002  
                      __RegsToCANID@type 001C               ECANReceiveMessage@msgFlags 0027  
                       doWork@calVoltage 0172                __size_of__ECANPointBuffer 0096  
                                 _B0TXEN 006FC2                                   _B1TXEN 006FC3  
                                 _B2TXEN 006FC4                                   _B3TXEN 006FC5  
                                 _B4TXEN 006FC6                                   _B5TXEN 006FC7  
                                 _ADCON0 000FC2                                   _ADCON1 000FC1  
                                 _ADCON2 000FC0                                   ?_floor 0097  
                                 ?_ldexp 009D                     __size_of_handle_sync 00BE  
                                 ?_frexp 0018                         __end_of___altofl 6D2A  
             ECANReceiveMessage@savedPtr 0029                                   _CANCON 000F6F  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                                 _EEDATA 000FA8                         __end_of___flpack 649A  
                                 _EECON2 000FA7                                   _CIOCON 000F73  
                       __end_of___awtofl 6FA2                         ?_doOneSecondWork 0001  
                     vscp_writeStdReg@rv 006A                            ?_init_app_ram 0001  
                                 _MDSEL0 007BBE                                   _MDSEL1 007BBF  
                             _OpenTimer0 7386                                   i1l7900 03B0  
                                 i1l7916 0444                                   i1l7908 03FA  
                                 i1l7932 04A0                                   i1l7860 02BE  
                                 i1l7844 02A2                                   i1l7934 04D8  
                                 i1l7870 02D2                                   i1l7846 02A8  
                                 i1l7928 0496                                   i1l7872 02D4  
                                 i1l7892 0366                                   i1l7884 031C  
                                 i1l7876 02DA                          _init_app_eeprom 387A  
                       __end_of___lwtofl 72CE                                   _RXB0IF 007D20  
                                 _RXB1IF 007D21                   ECANReceiveMessage@data 0023  
                 ECANReceiveMessage@mode 002C                   ECANReceiveMessage@temp 002D  
                      getVSCPFrame@pData 0070                        getVSCPFrame@pSize 006E  
                              ??_OpenADC 001A                       _vscp_newNodeOnline 6FEA  
                  ?_ECANSetOperationMode 0001                       __CANIDToRegs@Value 0021  
 vscp_handleProtocolEvent@page_save_1072 00AB                                   ___flge 67DE  
                         getCANFrame@pid 0060                                ??___aldiv 0032  
                              ??___fladd 0086                                   ___wmul 72F6  
                              ??___fldiv 002E                                ??___flneg 0032  
                         __CFG_STVREN$ON 000000                                ??___awmod 001C  
                              ??___flmul 006F                                ??___flsub 0032  
                              ??___fltol 007E                            _vscp_getEvent 6E02  
                                 _doWork 168A                         OpenTimer0@config 0018  
                    ?_vscp_newNodeOnline 0001                ??_vscp_handleDropNickname 0021  
                    vscp_writeAppReg@reg 002B               __end_of_vscp_setSegmentCRC 7494  
                    vscp_writeAppReg@val 002A                                   clear_0 707A  
                                 clear_1 708C                                   clear_2 7098  
                                 clear_3 70A4                          ___awmod@divisor 001A  
                        ___awmod@counter 001C                            ?_sendCANFrame 007C  
           vscp_handleProtocolEvent@byte 00B9                                   floor@i 009B  
                                 floor@x 0097                  __size_of_vscp_getUserID 0014  
                          _vscp_nickname 00D2                            _vscp_errorcnt 0120  
                           __mediumconst 0000                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                  vscp_setSegmentCRC@crc 001B                ??_vscp_getSubMinorVersion 0018  
   __size_of_vscp_getBootLoaderAlgorithm 0004                           ??_init_app_ram 002A  
                   ??_vscp_newNodeOnline 009F                              ?_ConvertADC 0001  
                             ___fladd@f1 007E                               ___fladd@f2 0082  
                             ___flge@ff1 0018                               ___flge@ff2 001C  
                       __end_ofexp@coeff 0649                         __end_oflog@coeff 066D  
                             ___altofl@c 0092                               ___fldiv@f1 0026  
                             ___fldiv@f2 002A                               ___fldiv@f3 0060  
                             __accesstop 0060                  __end_of__initialization 70AA  
                     _Celsius2Fahrenheit 6BA4                               ___flneg@f1 007A  
          __size_of_vscp_getMinorVersion 0004                               ___flmul@f1 0067  
                             ___flmul@f2 006B                             eval_poly@res 0099  
                             ___flsub@f1 008D                               ___flsub@f2 0091  
                             ___fltol@f1 007A                          writeEEPROM@data 001A  
                  __size_of_getVSCPFrame 00E8                       _vscp_writeRegister 72CE  
                             ___awtofl@c 0022                ??_interrupt_at_low_vector 0005  
                __size_of_vscp_sendEvent 0040                      ?_Celsius2Fahrenheit 008D  
                         __pcstackCOMRAM 0001                           ?_vscp_getEvent 0001  
            __end_of_vscp_check_pstorage 72A4                  __size_of_vscp_setUserID 0018  
                        ??i1_WriteTimer0 0003                            __end_of_floor 5BBC  
                          __end_of_ldexp 5CF4                            __end_of_frexp 69E4  
                    ?_vscp_writeRegister 0031                           ??_sendCANFrame 002C  
                             ___lwtofl@c 0022               __end_of_vscp_getFamilyCode 74CC  
                          ?__RegsToCANID 0018              __size_of_ECANReceiveMessage 0268  
           __size_of_getCalibrationValue 005A                       sendVSCPFrame@pData 0089  
             __end_of_vscp_getFamilyType 74BA          __size_of_vscp_getManufacturerId 0014  
                vscp_writeRegister@value 0031          __size_of_vscp_setManufacturerId 0018  
               __end_of_vscp_writeAppReg 168A                   getVSCPFrame@pvscpclass 0066  
                __end_of_init_app_eeprom 40EA                     ??_Celsius2Fahrenheit 0032  
            __end_of_vscp_setControlByte 74A8                 __end_of_vscp_writeStdReg 4BD4  
                     __RegsToCANID@Value 001F                                  ??_floor 0032  
                                ??_ldexp 00A3                                  ??_frexp 001E  
                          ?_setEventData 0091                     ??_vscp_writeRegister 0032  
        __end_of_vscp_handleDropNickname 71E6                             _getVSCPFrame 649A  
                             __pbssBANK0 00CB                               __pbssBANK1 0100  
                            ?_OpenTimer0 0001                       __size_of_eval_poly 012E  
             __end_of_vscp_getBufferSize 755E                         Celsius2Kelvin@tc 008D  
                  vscp_writeRegister@reg 006C                   ??_ECANSetOperationMode 0018  
     __size_of_vscp_getRegisterPagesUsed 0004                             ?_writeEEPROM 0018  
                        _writeCoeffs2Ram 665A                                  ?___flge 0018  
        __end_of_vscp_getSubMinorVersion 754E                 ECANSetOperationMode@mode 0018  
                                ?___wmul 0018                                  _B0RXFUL 007107  
                                _B1RXFUL 007187                     __ECANRxFilterHitInfo 011E  
                         doWork@setpoint 019D                                  _B2RXFUL 007207  
                                _B3RXFUL 007287                                  _B4RXFUL 007307  
                                ?_doWork 0001                  ??_vscp_goBootloaderMode 001B  
                                _B5RXFUL 007387                         WriteTimer0@timer 001A  
                              ?___altofl 0092                                  _ECANCON 000F77  
                              ?___flpack 0018                            ??_WriteTimer0 001A  
                       doWork@resistance 0194                      __size_of_ConvertADC 0004  
                              ?___awtofl 0022                           ??__RegsToCANID 001D  
                  sendVSCPFrame@priority 0087                                  _BRGCON1 000F70  
                                _BRGCON2 000F71                                  _BRGCON3 000F72  
                              ?___lwtofl 0022                      vscp_writeStdReg@idx 0068  
                    vscp_writeStdReg@reg 006B             __end_of_vscp_doOneSecondWork 6DA4  
                     _adc_series_counter 0036              ?_vscp_readNicknamePermanent 0001  
                  sendVSCPFrame@vscptype 0085                               _high_alarm 00CC  
        __end_of_interrupt_at_low_vector 0524                        sendCANFrame@pdata 0081  
                  _vscp_handleProbeState 5F50                                  _RXB0CON 000F60  
                                _RXB1CON 000F50                                  _RXB0FUL 007B07  
                       __ECANPointBuffer 6A7E               __end_of_vscp_getMatrixInfo 7366  
                                _TXB0CON 000F40                                  _TXB1CON 000F30  
                                _TXB2CON 000F20                           ??_setEventData 0094  
                                _RXFCON0 000DD4                                  _RXFCON1 000DD5  
                          setEventData@v 0091                       _vscp_goActiveState 724C  
                 __size_of_sendVSCPFrame 0116             __end_of_vscp_getMajorVersion 755A  
                     __size_of_vscp_init 009A                vscp_writeStdReg@code_1042 0064  
                             _readEEPROM 74DE                   _vscp_getManufacturerId 7430  
                 _vscp_setManufacturerId 73BE                          _ECANSendMessage 4E3C  
                    ?_vscp_goActiveState 0001                                  _OpenADC 6DA4  
                                __Hparam 0000                          ??_vscp_getEvent 0031  
                       ??_Celsius2Kelvin 0032                                  __Lparam 0000  
                     _vscp_node_substate 0123               __end_of_vscp_getSegmentCRC 753A  
             ??_vscp_handleProtocolEvent 00A0                            ??_getCANFrame 0030  
               vscp_writeStdReg@idx_1044 0069        __end_of_vscp_getRegisterPagesUsed 7552  
               __size_of_vscp_getMDF_URL 0018                                  ___aldiv 5202  
                        __size_of___flge 00B8                                  ___fladd 40EA  
                                ___fldiv 5E22                                  ___flneg 7172  
                                ___awmod 6B14                                  ___flmul 503C  
                                ___flsub 6F08                                  ___fltol 593C  
                        __size_of___wmul 0026                          getCANFrame@pdlc 0062  
                              _FIFOEMPTY 007BA7                            ?i1_ConvertADC 0001  
                        __size_of_doWork 0E82                             __psmallconst 0600  
                             ??___altofl 0032                     __end_of_init_app_ram 6CAE  
                             ??___flpack 001E                       _vscp_sendHeartBeat 71E6  
                                __pcinit 7072                               ??___awtofl 0026  
                         _vscp_deviceURL 0601                        __end_of_eval_poly 5E22  
                                __ramtop 0600                      __size_of_OpenTimer0 0020  
                                __ptext0 57E6                                  __ptext1 250C  
                                __ptext2 72CE                                  __ptext3 4944  
                                __ptext4 73A6                                  __ptext5 73BE  
                                __ptext6 7366                                  __ptext7 753A  
                                __ptext8 387A                                  __ptext9 74A8  
                             ??___lwtofl 0026                           _vscp_getUserID 741C  
                              _T0CONbits 000FD5                     ??_vscp_goActiveState 0032  
                           __size_of_exp 0294                             __size_of_log 0182  
                       ___awmod@dividend 0018                    vscp_writeStdReg@value 002B  
                       ___aldiv@dividend 0084                      ?_vscp_sendHeartBeat 009F  
               ??_vscp_handleSetNickname 001C                                  _seconds 011F  
                                doWork@B 0192                                  doWork@i 01A3  
                                doWork@j 019C                                  doWork@v 018E  
                    __end_of_WriteTimer0 74DE                         ?_init_app_eeprom 0001  
                      vscp_readAppReg@rv 0027                       vscp_getMDF_URL@idx 0018  
                         OpenADC@config2 0018            vscp_handleProtocolEvent@bytes 00AF  
                   end_of_initialization 70AA                                  exp@sign 00B3  
           __end_of_vscp_handleHeartbeat 7072                 __size_of_vscp_getSubzone 000E  
                          __Lmediumconst 0000                  __end_of_writeCoeffs2Ram 6720  
                   __end_of_sendCANFrame 6F08                               doWork@Rinf 016E  
                     doOneSecondWork@tmp 00A3                               doWork@temp 019F  
              vscp_handleProtocolEvent@i 00BB                vscp_handleProtocolEvent@j 00BC  
              vscp_handleProtocolEvent@k 00B6                     ??_vscp_sendHeartBeat 0032  
                         _vscp_sendEvent 70F4                        ECANSendMessage@id 0023  
                      ECANSendMessage@pb 0060                         ___aldiv@quotient 008E  
                                postdec1 000FE5                                  postdec2 000FDD  
                __size_of_ECANInitialize 0110                   __size_of_sendTempEvent 00B0  
                         _vscp_setUserID 73A6                                  postinc0 000FEE  
                                postinc2 000FDE                           ??i1_ConvertADC 0001  
                 __end_of_vscp_deviceURL 0621      __end_of_vscp_writeNicknamePermanent 7480  
            _vscp_writeNicknamePermanent 746C                       __ECANPointBuffer@b 001A  
                          _sendVSCPFrame 6068                   __end_of_vscp_getUserID 7430  
           ?_vscp_getBootLoaderAlgorithm 0001                                _RXM0EXIDM 0078CB  
                      __end_of_vscp_init 6A7E                           _vscp_probe_cnt 0124  
                    __end_of_getCANFrame 6FEA            __size_of_vscp_restoreDefaults 000A  
                 ?_vscp_handleProbeState 0001                            ??_handle_sync 00A1  
               __size_of_vscp_readAppReg 089C                         writeCoeffs2Ram@c 0023  
                       writeCoeffs2Ram@i 0026                         writeCoeffs2Ram@j 0028  
                            ___fldiv@exp 0065                           _vscp_statuscnt 003A  
               __size_of_vscp_readStdReg 0114                       _vscp_setSegmentCRC 7480  
                      readEEPROM@address 001E                             ??_ConvertADC 0018  
             vscp_handleProtocolEvent@cb 00B4                  __end_of_ECANSendMessage 503C  
                      vscp_readStdReg@rv 0025                              ___flmul@exp 0073  
                          ?__CANIDToRegs 0018                     __end_of__RegsToCANID 5688  
                    _getCalibrationValue 6E5C                              ?_readEEPROM 001E  
                    ?_vscp_setSegmentCRC 0001                   __end_of_vscp_sendEvent 7134  
                             _vscp_error 7544                     _vscp_doOneSecondWork 6D2A  
                     i1WriteTimer0@timer 0003                               _vscp_timer 0034  
                 __end_of_vscp_setUserID 73BE                 __size_of_doOneSecondWork 02D2  
                 vscp_sendHeartBeat@zone 00A0                     __end_of_setEventData 665A  
                         ?_sendVSCPFrame 0083                           __end_of___flge 6896  
                   __size_of_writeEEPROM 0026                           __end_of___wmul 731C  
                        ?_vscp_getUserID 0001                           __end_of_doWork 250C  
           __end_of_vscp_getMinorVersion 7556                              _WriteTimer0 74CC  
                   _vscp_getMajorVersion 7556                       __end_of_ConvertADC 7566  
                   ?_getCalibrationValue 0021                     ??_vscp_setSegmentCRC 001B  
                      ??_vscp_getMDF_URL 0018            ??_vscp_getBootLoaderAlgorithm 0018  
                             floor@expon 009F                        ?_vscp_writeAppReg 002A  
                    start_initialization 7072                               eval_poly@d 0091  
                             eval_poly@n 0093                               eval_poly@x 008D  
                             ldexp@value 009D          __size_of_vscp_handleSetNickname 0030  
                            __end_of_exp 4944                              __end_of_log 5514  
                     ??_vscp_writeAppReg 002B                            _sendTempEvent 6896  
                      ?_vscp_writeStdReg 002B                      __CFG_BOREN$BOACTIVE 000000  
            __size_of_vscp_newNodeOnline 0044                             ??_OpenTimer0 0018  
                     ??_vscp_writeStdReg 002C                       _vscp_getFamilyCode 74BA  
                    __end_of_handle_sync 67DE                           ??__CANIDToRegs 001F  
                     _vscp_getFamilyType 74A8                               frexp@value 0018  
                    sendVSCPFrame@nodeid 0086                         ?_writeCoeffs2Ram 0001  
                      _vscp_readRegister 73D6                     Celsius2Fahrenheit@tc 008D  
                        ?_vscp_sendEvent 0001  vscp_handleProtocolEvent@bytes_this_time 00B3  
                  ?_vscp_doOneSecondWork 0001                    ECANReceiveMessage@ptr 002E  
                    ?_vscp_getFamilyCode 0018                       ?_vscp_readRegister 0001  
       __end_of_vscp_handleProtocolEvent 2FDE                          ?_vscp_setUserID 001B  
                    ?_vscp_getFamilyType 0018                    __size_of_init_app_ram 007C  
               ?_vscp_handleDropNickname 0001                   getCalibrationValue@cal 002B  
                      ??_vscp_getSubzone 0021                                 ??___flge 0020  
               __end_of__ECANPointBuffer 6B14                        __CANIDToRegs@type 001E  
                            _getCANFrame 6FA2                                 ??___wmul 001C  
                               ??_doWork 00B4                       _vscp_getBufferSize 755A  
            vscp_handleProtocolEvent@len 00B0              vscp_handleProtocolEvent@pos 00AE  
             __end_of_ECANReceiveMessage 4E3C                      ??_vscp_readRegister 0028  
         __size_of_vscp_goBootloaderMode 0014                    ?_vscp_getMajorVersion 0001  
                  ??_getCalibrationValue 0023                    __end_ofi1_WriteTimer0 7502  
          __end_of_vscp_goBootloaderMode 746C                     _vscp_handleHeartbeat 702E  
                     __end_of_OpenTimer0 73A6                        __size_of___altofl 007C  
                      __size_of___flpack 00F8                      ?_vscp_getBufferSize 0001  
                      __size_of___awtofl 004C                      __size_of_readEEPROM 0012  
                            __pbssBIGRAM 01A4             __size_of_vscp_check_pstorage 002C  
                   ??_vscp_getFamilyCode 001C                 ?_vscp_getSubMinorVersion 0001  
                            __pbssCOMRAM 0032                     ??_vscp_getFamilyType 001C  
                      __size_of___lwtofl 002A                            ?_vscp_getGUID 0001  
                          __pcstackBANK0 0060                            __pcstackBANK1 016E  
                         ?_sendTempEvent 0001                         _vscp_alarmstatus 00CF  
            __size_of_Celsius2Fahrenheit 008E                            ?_vscp_getZone 0001  
                  __size_of_sendCANFrame 0052                  ?_vscp_getManufacturerId 0001  
                ?_vscp_setManufacturerId 001B                     __end_ofi1_ConvertADC 756A  
                          ?_vscp_setGUID 001B              __size_of_vscp_writeRegister 0028  
                       ?_ECANSendMessage 0023                        ??_vscp_readAppReg 0021  
                      sendVSCPFrame@size 0088                __end_of_vscp_readRegister 73EE  
                           _init_app_ram 6C32                     getCalibrationValue@i 002D  
                            _doWork$2193 0176                              _doWork$2194 017A  
                            _doWork$2195 017E                              _doWork$2196 0182  
                            _doWork$2197 0186                              _doWork$2198 018A  
           __size_of_vscp_setControlByte 0014                            doWork@avarage 0198  
               ?_interrupt_at_low_vector 0001                        ??_vscp_readStdReg 0022  
                   ??_vscp_getBufferSize 0018                             _current_temp 0100  
                      OpenADC@portconfig 0019                                 ?_OpenADC 0018  
                            ?_vscp_error 0001                       _vscp_getMatrixInfo 7342  
                 _vscp_handleSetNickname 721C            __size_of_ECANSetOperationMode 0016  
                        ??_sendVSCPFrame 008B                           _ECANInitialize 6292  
                               ?___aldiv 0084                                 ?___fladd 007E  
                               ?___fldiv 0026                                 ?___flneg 007A  
                               ?___awmod 0018                                 ?___flmul 0067  
                               ?___flsub 008D                                 ?___fltol 007A  
                    ?_vscp_getMatrixInfo 0018                          vscp_getGUID@idx 0021  
                            __pintcodelo 0218                        ??_doOneSecondWork 00A1  
                  ?_vscp_handleHeartbeat 0001         vscp_handleProtocolEvent@len_1060 00B2  
             vscp_setManufacturerId@data 001B                             _sendCANFrame 6EB6  
                            __smallconst 0600                        WriteTimer0@timer0 0018  
                     _vscp_getSegmentCRC 752C                           ??_vscp_getGUID 0021  
                              _eval_poly 5CF4                              _handle_sync 6720  
                         ??_vscp_getZone 0021           __end_of_vscp_getManufacturerId 7444  
         __end_of_vscp_setManufacturerId 73D6                    __size_of__RegsToCANID 0174  
       vscp_handleProtocolEvent@pos_1059 00B1                           __size_of_floor 013E  
                         __size_of_ldexp 0138                           ??_vscp_setGUID 001C  
                         __size_of_frexp 009E                      ?_vscp_getSegmentCRC 0001  
                   ??_vscp_getMatrixInfo 001A                         _vscp_configtimer 011C  
                   vscp_writeStdReg@code 0060                          ___aldiv@divisor 0088  
                        ___aldiv@counter 008C                           ___wmul@product 001C  
                 ??_vscp_doOneSecondWork 00A1                   sendVSCPFrame@vscpclass 0083  
                          OpenADC@config 001C                     _vscp_getMinorVersion 7552  
                              _sendTimer 00CE                                 _PIE1bits 000F9D  
                              _low_alarm 00CD                    __size_of_setEventData 00D8  
                 __end_of_ECANInitialize 63A2                                 _PIR1bits 000F9E  
                               _PIR2bits 000FA1                                 i1u779_20 02C4  
                       ECANSendMessage@i 0079                         ECANSendMessage@j 0074  
                  __end_of_vscp_getEvent 6E5C                                 _RXF0EIDH 000F02  
                               _RXF0EIDL 000F03                                 _RXB0OVFL 007BA7  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXB1OVFL 007BA6                                 _RXF0SIDH 000F00  
                               _RXF0SIDL 000F01                                 _RXF1SIDH 000F04  
                               _RXF1SIDL 000F05                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                          vscp_getEvent@rv 0031  
                               _RXM1EIDH 000F1E                                 _RXM1EIDL 000F1F  
                   ??_vscp_getSegmentCRC 0021                                 _RXFBCON0 000DE0  
                               _RXFBCON1 000DE1                                 _RXFBCON2 000DE2  
                               _RXFBCON3 000DE3                                 _RXFBCON4 000DE4  
                               _RXFBCON5 000DE5                                 _RXFBCON6 000DE6  
                               _RXFBCON7 000DE7                                 _RXM0SIDH 000F18  
                               _RXM0SIDL 000F19                                 _RXM1SIDH 000F1C  
                 ??_vscp_getMajorVersion 0018                                 _RXM1SIDL 000F1D  
             ?_vscp_getRegisterPagesUsed 0001                  ??_vscp_handleProbeState 0032  
                     vscp_setUserID@data 001B                     __end_of__CANIDToRegs 57E6  
                             _ADCON0bits 000FC2                        ___wmul@multiplier 0018  
                           __RegsToCANID 5514                       _vscp_probe_address 0039  
                        ??_sendTempEvent 009F              __size_of_vscp_goActiveState 002C  
                             ?_eval_poly 008D                      getVSCPFrame@pNodeId 006A  
                              _vscp_init 69E4                                _vscp_imsg 003B  
                              _vscp_hour 0121                                _vscp_omsg 00D4  
                       vscp_setGUID@data 001B        __size_of_vscp_handleProtocolEvent 0AD2  
                    __size_of_vscp_error 0006                ?_vscp_handleProtocolEvent 0001  
   __size_of_vscp_writeNicknamePermanent 0014                         _vscp_page_select 0032  
                           _setEventData 6582               __size_of_vscp_readRegister 0018  
                      _measurement_clock 0112                    ?_vscp_getMinorVersion 0001  
                           ??_readEEPROM 0020                 __size_of_init_app_eeprom 0870  
           __end_of_vscp_restoreDefaults 7544                                frexp@eptr 001C  
                             _EECON1bits 000FA6                          ?_ECANInitialize 0001  
                               __Hrparam 0000                     ECANReceiveMessage@id 0021  
                           _seconds_temp 010C              __size_of_vscp_sendHeartBeat 0036  
                       __size_of_OpenADC 005E                         ??_vscp_getUserID 0021  
                        _vscp_getMDF_URL 73EE                                 __Lrparam 0000  
                       __CANIDToRegs@val 001A                         __CANIDToRegs@ptr 0018  
                       __size_of___aldiv 0190                         __size_of___fladd 02F4  
                       __size_of___fldiv 012E                         __size_of___flneg 003C  
                       _vscp_initledfunc 0038                         __size_of___awmod 0090  
                       __size_of___flmul 01C6                   ??_vscp_handleHeartbeat 0021  
                       __size_of___flsub 004E                         __size_of___fltol 0142  
                               ___altofl 6CAE                                 ___flpack 63A2  
                       getCANFrame@flags 0030                             ?_WriteTimer0 0018  
                               ___awtofl 6F56                         getCANFrame@pdata 0064  
                               ___lwtofl 72A4                           sendTempEvent@i 00A0  
                __size_of_Celsius2Kelvin 003E                                 _exp$2199 00AD  
                     __end_of_readEEPROM 74F0                    __size_ofi1_ConvertADC 0004  
                             ?_vscp_init 0001                                 __ptext10 74BA  
                               __ptext11 066E                                 __ptext20 73EE  
                               __ptext12 73D6                                 __ptext21 7444  
                               __ptext13 617E                                 __ptext30 7502  
                               __ptext22 755A                                 __ptext14 741C  
                               __ptext31 7458                                 __ptext23 755E  
                               __ptext15 754A                                 __ptext40 5514  
                               __ptext32 7342                                 __ptext24 2FDE  
                               __ptext16 754E                                 __ptext41 6A7E  
                               __ptext33 6B14                                 __ptext25 6FEA  
                               __ptext17 7552                                 __ptext50 7494  
                               __ptext42 7544                                 __ptext34 5F50  
                               __ptext26 721C                                 __ptext18 7430  
                               __ptext51 752C                                 __ptext43 6D2A  
                               __ptext35 724C                                 __ptext27 702E  
                               __ptext19 7556                                 __ptext60 7406  
                               __ptext52 70B4                                 __ptext44 71E6  
                               __ptext36 6E02                                 __ptext28 71AE  
                               __ptext61 7562                                 __ptext53 6C32  
                               __ptext45 7510                                 __ptext37 649A  
                               __ptext29 69E4                                 __ptext70 6946  
                               __ptext62 6720                                 __ptext54 665A  
                               __ptext46 751E                                 __ptext38 6FA2  
                               __ptext71 67DE                                 __ptext63 168A  
                               __ptext55 72F6                                 __ptext47 7278  
                               __ptext39 4BD4                                 __ptext80 70F4  
                               __ptext72 6CAE                                 __ptext64 731C  
                               __ptext56 74CC                                 __ptext48 746C  
                               __ptext81 6068                                 __ptext73 5CF4  
                               __ptext65 5392                                 __ptext57 7386  
                               __ptext49 7480                                 __ptext90 503C  
                               __ptext82 6EB6                                 __ptext74 6F08  
                               __ptext66 6E5C                                 __ptext58 6DA4  
                               __ptext91 5E22                                 __ptext83 4E3C  
                               __ptext75 7172                                 __ptext67 46B0  
                               __ptext59 6292                                 __ptext92 40EA  
                               __ptext84 5688                                 __ptext76 72A4  
                               __ptext68 5BBC                                 __ptext93 63A2  
                               __ptext85 6582                                 __ptext77 5202  
                               __ptext69 5A7E                                 __ptext94 74DE  
                               __ptext86 593C                                 __ptext78 43DE  
                               __ptext87 6F56                                 __ptext79 6896  
                               __ptext96 74F0                                 __ptext88 7134  
                               __ptext97 7566                                 __ptext89 6BA4  
              vscp_sendHeartBeat@subzone 009F                            ?_getVSCPFrame 0066  
                       ??_vscp_sendEvent 0031                          _vscp_getSubzone 751E  
                       ??_vscp_setUserID 001C                            __size_of_main 0156  
                          __size_of_init 0040                __size_of_vscp_writeAppReg 101C  
                    _vscp_check_pstorage 7278                            init_app_ram@i 002A  
         vscp_handleProtocolEvent@i_1062 00BA           vscp_handleProtocolEvent@i_1071 00B5  
         vscp_handleProtocolEvent@i_1058 00B8                         doOneSecondWork@i 00A4  
                   __end_of_vscp_getGUID 7458                            ??_writeEEPROM 001B  
              __size_of_vscp_writeStdReg 0290                      ECANSendMessage@data 0027  
               ECANSendMessage@tempBSEL0 0075                             ?_getCANFrame 0060  
                    ECANSendMessage@mode 0072                     __end_of_vscp_getZone 751E  
                    ECANSendMessage@temp 0078                        ?__ECANPointBuffer 0018  
                      vscp_setUserID@idx 001C                     __end_of_vscp_setGUID 7386  
                     vscp_readAppReg@reg 0026                       vscp_readAppReg@pos 0025  
                           i1_ConvertADC 7566                         vscp_sendEvent@rv 0031  
                     ??__ECANPointBuffer 001A           vscp_handleProtocolEvent@offset 00AD  
                            _RXB0FILHIT0 007B00                          vscp_setGUID@idx 001C  
                       init_app_eeprom@i 001B                      _vscp_setControlByte 7494  
                               exp@coeff 0621                    ___flmul@f3_as_product 0074  
                               log@coeff 0649              __size_of_vscp_setSegmentCRC 0014  
                        _vscp_readAppReg 2FDE                     ?_vscp_check_pstorage 0001  
                            _RXB1CONbits 000F50         __size_of_vscp_handleDropNickname 0038  
                             _INTCONbits 000FF2                              ??_eval_poly 0095  
           ??_vscp_readNicknamePermanent 0021                      ECANReceiveMessage@i 002B  
                        _vscp_guid_reset 00D0                          _vscp_readStdReg 617E  
           vscp_handleDropNickname@bytes 0021               __end_of_vscp_newNodeOnline 702E  
                     _ECANReceiveMessage 4BD4                           ??_getVSCPFrame 0072  
                        _vscp_initbtncnt 00D1                          sendVSCPFrame@id 002D  
                               intlevel1 0000                   ??_vscp_getMinorVersion 0018  
                vscp_getMatrixInfo@pData 0018                  __end_of_vscp_getMDF_URL 7406  
                   ?_vscp_setControlByte 0001                            _timeout_clock 0116  
                    ?_ECANReceiveMessage 0021                  ?_vscp_handleSetNickname 0001  
       __size_of_vscp_getSubMinorVersion 0004                          _vscp_node_state 00D3  
                           handle_sync@i 00A3                          _doOneSecondWork 43DE  
                           ??_vscp_error 0018                  ECANSendMessage@msgFlags 002A  
                    vscp_getMatrixInfo@i 001A                  vscp_setControlByte@ctrl 001B  
            __end_of_getCalibrationValue 6EB6                       ECANSendMessage@ptr 007A  
                      ??_init_app_eeprom 001B                    __size_of__CANIDToRegs 015E  
                         readEEPROM@data 0020                 __size_of_writeCoeffs2Ram 00C6  
    __size_of_vscp_readNicknamePermanent 000E      __end_of_vscp_getBootLoaderAlgorithm 7562  
            _vscp_getBootLoaderAlgorithm 755E         __size_of_interrupt_at_low_vector 030C  
                 ECANSendMessage@dataLen 0029                      __end_of_writeEEPROM 7342  
                    __ECANPointBuffer@pt 001B                     ??_ECANReceiveMessage 0029  
                  ??_vscp_check_pstorage 0021                   ECANSendMessage@buffers 0073  
                  _vscp_goBootloaderMode 7458               __end_of_Celsius2Fahrenheit 6C32  
           __end_of_ECANSetOperationMode 741C                     _vscp_restoreDefaults 753A  
            __size_of_vscp_getFamilyCode 0012                              ??_vscp_init 0021  
                __end_of_vscp_getSubzone 752C                             ?_handle_sync 0001  
            __size_of_vscp_getFamilyType 0012                             ___aldiv@sign 008D  
                             _RXM1EXIDEN 0078EB               __end_of_vscp_writeRegister 72F6  
                     __end_of_vscp_error 754A                   ECANSendMessage@tempPtr 0076  
                   _adc_conversion_flags 00CB           __end_of_vscp_handleSetNickname 724C  
     vscp_handleProtocolEvent@bytes_1068 00B7                    ??_vscp_setControlByte 001B  
                   vscp_readRegister@reg 0028                             ___fladd@exp1 008C  
                           ___fladd@exp2 008B                             ___fladd@sign 008A  
                           __CANIDToRegs 5688                   __size_ofi1_WriteTimer0 0012  
      vscp_handleProtocolEvent@page_save 00A9              __size_of_vscp_getBufferSize 0004  
               __size_of_ECANSendMessage 0200  
