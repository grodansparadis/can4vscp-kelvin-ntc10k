Microchip MPLAB XC8 Compiler V1.21 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.21\dat\en_msgs.txt -cs \
  -h+dist/Relocated/production\kelvin_ntc.X.production.sym \
  --cmf=dist/Relocated/production\kelvin_ntc.X.production.cmf -z -Q18F2580 \
  -oC:\Users\GRODAN~1\AppData\Local\Temp\s62g.6 \
  -Mdist/Relocated/production/kelvin_ntc.X.production.map -E1 -ver=XC8 \
  -ACODE=0800h-07FFFh -ACONST=0800h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-05FFh \
  -ABIGRAM=01h-05FFh -ARAM=060h-0FFh,0100h-01FFhx5 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=0800h,intcode,intcodelo=0818h,powerup,init,end_init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE \
  C:\Users\GRODAN~1\AppData\Local\Temp\s62g.obj \
  dist/Relocated/production\kelvin_ntc.X.production.obj 

Object code version is 3.11

Machine type is 18F2580

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\GRODAN~1\AppData\Local\Temp\s62g.obj
                end_init                            AB6      AB6        4      40C       0
                reset_vec                           800      800        4      400       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/Relocated/production\kelvin_ntc.X.production.obj
                intcodelo                           818      818      29E      40C       0
                smallconst                          B00      B00       6E      580       0
                text101                            5DAE     5DAE        4      5B7       0
                text100                            5D50     5D50       12      5B7       0
                text98                             2AB6     2AB6      728      5B7       0
                text97                             4BA2     4BA2       C0      5B7       0
                text96                             4948     4948       D6      5B7       0
                text95                             593E     593E       3A      5B7       0
                text94                             5D3E     5D3E       12      5B7       0
                text93                             5DAA     5DAA        4      5B7       0
                text92                             5904     5904       3A      5B7       0
                text91                             4FCC     4FCC       A0      5B7       0
                text90                             5788     5788       48      5B7       0
                text89                             5BF0     5BF0       1E      5B7       0
                text88                             548E     548E       5C      5B7       0
                text87                             5CA2     5CA2       18      5B7       0
                text86                             510A     510A       96      5B7       0
                text85                             58C8     58C8       3C      5B7       0
                text84                             5AFC     5AFC       26      5B7       0
                text83                             5D2C     5D2C       12      5B7       0
                text82                             5D1A     5D1A       12      5B7       0
                text81                             5D94     5D94        A      5B7       0
                text80                             5D08     5D08       12      5B7       0
                text79                             5CF6     5CF6       12      5B7       0
                text78                             5B6A     5B6A       24      5B7       0
                text77                             53A4     53A4       76      5B7       0
                text76                             4132     4132      164      5B7       0
                text75                             3806     3806      20E      5B7       0
                text74                             59DC     59DC       2C      5B7       0
                text73                             532C     532C       78      5B7       0
                text72                             5A5C     5A5C       2A      5B7       0
                text71                             43F6     43F6      150      5B7       0
                text70                             3FCC     3FCC      166      5B7       0
                text69                             588C     588C       3C      5B7       0
                text68                             4D1E     4D1E       B2      5B7       0
                text67                             5AAE     5AAE       28      5B7       0
                text66                             5BD2     5BD2       1E      5B7       0
                text65                             4A1E     4A1E       C4      5B7       0
                text64                             5C28     5C28       1A      5B7       0
                text63                             5C8A     5C8A       18      5B7       0
                text62                             5812     5812       3E      5B7       0
                text61                             5B46     5B46       24      5B7       0
                text60                             5D8A     5D8A        A      5B7       0
                text59                             5740     5740       48      5B7       0
                text58                             59AC     59AC       30      5B7       0
                text57                             5A32     5A32       2A      5B7       0
                text56                             5DBC     5DBC        2      5B7       0
                text55                             5DBA     5DBA        2      5B7       0
                text54                             5DB8     5DB8        2      5B7       0
                text53                             5CE2     5CE2       14      5B7       0
                text52                             5C72     5C72       18      5B7       0
                text51                             5CCE     5CCE       14      5B7       0
                text50                             5CBA     5CBA       14      5B7       0
                text49                             5DB6     5DB6        2      5B7       0
                text48                             5DB4     5DB4        2      5B7       0
                text47                             5DB2     5DB2        2      5B7       0
                text46                             4864     4864       E4      5B7       0
                text45                             5C0E     5C0E       1A      5B7       0
                text44                              B6E      B6E      D02      5B7       0
                text43                             5BB0     5BB0       22      5B7       0
                text42                             5C5A     5C5A       18      5B7       0
                text41                             5C42     5C42       18      5B7       0
                text40                             5D80     5D80        A      5B7       0
                text39                             5D76     5D76        A      5B7       0
                text38                             2318     2318      79E      5B7       0
                text37                             5D9E     5D9E        8      5B7       0
                text36                             3E00     3E00      1CC      5B7       0
                text35                             5B8E     5B8E       22      5B7       0
                text34                             5A86     5A86       28      5B7       0
                text33                             31DE     31DE      628      5B7       0
                text32                             5978     5978       34      5B7       0
                text31                             4296     4296      160      5B7       0
                text30                             541A     541A       74      5B7       0
                text29                             4DD0     4DD0       B0      5B7       0
                text28                             5226     5226       84      5B7       0
                text27                             52AA     52AA       82      5B7       0
                text26                             5DA6     5DA6        4      5B7       0
                text25                             3A14     3A14      208      5B7       0
                text24                             5D6C     5D6C        A      5B7       0
                text23                             5D62     5D62        A      5B7       0
                text22                             5AD6     5AD6       26      5B7       0
                text21                             55D0     55D0       4C      5B7       0
                text20                             4E80     4E80       A8      5B7       0
                text19                             5584     5584       4C      5B7       0
                text18                             5850     5850       3C      5B7       0
                text17                             54EA     54EA       4E      5B7       0
                text16                             56F8     56F8       48      5B7       0
                text15                             5538     5538       4C      5B7       0
                text14                             51A0     51A0       86      5B7       0
                text13                             506C     506C       9E      5B7       0
                text12                             4674     4674       FC      5B7       0
                text11                             4AE2     4AE2       C0      5B7       0
                text10                             4F28     4F28       A4      5B7       0
                text9                              5B22     5B22       24      5B7       0
                text8                              3C1C     3C1C      1E4      5B7       0
                text7                              4546     4546      12E      5B7       0
                text6                              56B0     56B0       48      5B7       0
                text5                              4C62     4C62       BC      5B7       0
                text4                              5666     5666       4A      5B7       0
                text3                              561C     561C       4A      5B7       0
                text2                              5A08     5A08       2A      5B7       0
                text1                              1870     1870      AA8      5B7       0
                text0                              4770     4770       F4      5B7       0
                cstackCOMRAM                          1        1       45        1       1
                cstackBANK0                          60       60       53       60       1
                cstackBANK1                         166      166       36      100       1
                bssBIGRAM                           19C      19C      3C0      19C       1
                bssBANK1                            100      100       66      100       1
                bssBANK0                             B3       B3       24       60       1
                bssCOMRAM                            46       46        D        1       1
                cinit                              57D0     57D0       42      5B7       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   CODE           
                end_init                            AB6      AB6        4         0
                intcodelo                           818      818      29E         0
                reset_vec                           800      800        4         0
                text101                            5DAE     5DAE        4         0
                text100                            5D50     5D50       12         0
                text98                             2AB6     2AB6      728         0
                text97                             4BA2     4BA2       C0         0
                text96                             4948     4948       D6         0
                text95                             593E     593E       3A         0
                text94                             5D3E     5D3E       12         0
                text93                             5DAA     5DAA        4         0
                text92                             5904     5904       3A         0
                text91                             4FCC     4FCC       A0         0
                text90                             5788     5788       48         0
                text89                             5BF0     5BF0       1E         0
                text88                             548E     548E       5C         0
                text87                             5CA2     5CA2       18         0
                text86                             510A     510A       96         0
                text85                             58C8     58C8       3C         0
                text84                             5AFC     5AFC       26         0
                text83                             5D2C     5D2C       12         0
                text82                             5D1A     5D1A       12         0
                text81                             5D94     5D94        A         0
                text80                             5D08     5D08       12         0
                text79                             5CF6     5CF6       12         0
                text78                             5B6A     5B6A       24         0
                text77                             53A4     53A4       76         0
                text76                             4132     4132      164         0
                text75                             3806     3806      20E         0
                text74                             59DC     59DC       2C         0
                text73                             532C     532C       78         0
                text72                             5A5C     5A5C       2A         0
                text71                             43F6     43F6      150         0
                text70                             3FCC     3FCC      166         0
                text69                             588C     588C       3C         0
                text68                             4D1E     4D1E       B2         0
                text67                             5AAE     5AAE       28         0
                text66                             5BD2     5BD2       1E         0
                text65                             4A1E     4A1E       C4         0
                text64                             5C28     5C28       1A         0
                text63                             5C8A     5C8A       18         0
                text62                             5812     5812       3E         0
                text61                             5B46     5B46       24         0
                text60                             5D8A     5D8A        A         0
                text59                             5740     5740       48         0
                text58                             59AC     59AC       30         0
                text57                             5A32     5A32       2A         0
                text56                             5DBC     5DBC        2         0
                text55                             5DBA     5DBA        2         0
                text54                             5DB8     5DB8        2         0
                text53                             5CE2     5CE2       14         0
                text52                             5C72     5C72       18         0
                text51                             5CCE     5CCE       14         0
                text50                             5CBA     5CBA       14         0
                text49                             5DB6     5DB6        2         0
                text48                             5DB4     5DB4        2         0
                text47                             5DB2     5DB2        2         0
                text46                             4864     4864       E4         0
                text45                             5C0E     5C0E       1A         0
                text44                              B6E      B6E      D02         0
                text43                             5BB0     5BB0       22         0
                text42                             5C5A     5C5A       18         0
                text41                             5C42     5C42       18         0
                text40                             5D80     5D80        A         0
                text39                             5D76     5D76        A         0
                text38                             2318     2318      79E         0
                text37                             5D9E     5D9E        8         0
                text36                             3E00     3E00      1CC         0
                text35                             5B8E     5B8E       22         0
                text34                             5A86     5A86       28         0
                text33                             31DE     31DE      628         0
                text32                             5978     5978       34         0
                text31                             4296     4296      160         0
                text30                             541A     541A       74         0
                text29                             4DD0     4DD0       B0         0
                text28                             5226     5226       84         0
                text27                             52AA     52AA       82         0
                text26                             5DA6     5DA6        4         0
                text25                             3A14     3A14      208         0
                text24                             5D6C     5D6C        A         0
                text23                             5D62     5D62        A         0
                text22                             5AD6     5AD6       26         0
                text21                             55D0     55D0       4C         0
                text20                             4E80     4E80       A8         0
                text19                             5584     5584       4C         0
                text18                             5850     5850       3C         0
                text17                             54EA     54EA       4E         0
                text16                             56F8     56F8       48         0
                text15                             5538     5538       4C         0
                text14                             51A0     51A0       86         0
                text13                             506C     506C       9E         0
                text12                             4674     4674       FC         0
                text11                             4AE2     4AE2       C0         0
                text10                             4F28     4F28       A4         0
                text9                              5B22     5B22       24         0
                text8                              3C1C     3C1C      1E4         0
                text7                              4546     4546      12E         0
                text6                              56B0     56B0       48         0
                text5                              4C62     4C62       BC         0
                text4                              5666     5666       4A         0
                text3                              561C     561C       4A         0
                text2                              5A08     5A08       2A         0
                text1                              1870     1870      AA8         0
                text0                              4770     4770       F4         0
                cinit                              57D0     57D0       42         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          B00      B00       6E         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       45         1
                bssCOMRAM                            46       46        D         1

        CLASS   ABS1           

        CLASS   BIGRAM         
                bssBIGRAM                           19C      19C      3C0         1

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       53         1
                bssBANK0                             B3       B3       24         1

        CLASS   BANK1          
                cstackBANK1                         166      166       36         1
                bssBANK1                            100      100       66         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                cstackCOMRAM                   000001  000052  000053         1       1  COMRAM  
                cstackBANK0                    000060  000077  0000D7        60       1  BANK0   
                bssBANK1                       000100  00009C  00019C       100       1  BANK1   
                bssBIGRAM                      00019C  0003C0  00055C       19C       1  BIGRAM  
                reset_vec                      000800  000004  000804       400       0  CODE    
                intcodelo                      000818  0002A2  000ABA       40C       0  CODE    
                smallconst                     000B00  00006E  000B6E       580       0  SMALLCON
                text44                         000B6E  005250  005DBE       5B7       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000D7-0000FF               29
        BANK5            00055C-0005FF               A4
        BIGRAM           000053-00005F                D
                         0000D7-0000FF               29
                         00055C-0005FF               A4
        CODE             000804-000817               14
                         000ABA-000AFF               46
                         005DBE-007FFF             2242
        COMRAM           000053-00005F                D
        CONST            000804-000817               14
                         000ABA-000AFF               46
                         005DBE-007FFF             2242
        EEDATA           F00000-F000FF              100
        FARRAM           000000-000000                1
        MEDIUMCONST      000804-000817               14
                         000ABA-000AFF               46
                         005DBE-007FFF             2242
        RAM              0000D7-0000FF               29
                         00055C-0005FF               A4
        SFR              000D00-000FFF              100
        SMALLCONST       000804-000817               14
                         000ABA-000AFF               46
                         005DBE-007FFF              100

                                  Symbol Table

?_Celsius2Fahrenheit                     cstackBANK0  000076
?_Celsius2Kelvin                         cstackCOMRAM 00002C
?_ECANReceiveMessage                     cstackCOMRAM 000015
?_ECANSendMessage                        cstackCOMRAM 000018
?_OpenADC                                cstackCOMRAM 00000E
?_WriteTimer0                            cstackCOMRAM 00000E
?__CANIDToRegs                           cstackCOMRAM 00000E
?__ECANPointBuffer                       cstackCOMRAM 00000E
?__RegsToCANID                           cstackCOMRAM 00000E
?___aldiv                                cstackBANK0  00007C
?___altofl                               cstackBANK0  00008A
?___asfladd                              cstackCOMRAM 00002C
?___asfldiv                              cstackBANK0  000060
?___asflmul                              cstackBANK0  000076
?___asflsub                              cstackBANK0  00007E
?___awtofl                               cstackCOMRAM 000018
?___fladd                                cstackCOMRAM 00001D
?___fldiv                                cstackCOMRAM 00002C
?___flge                                 cstackCOMRAM 00000E
?___flmul                                cstackBANK0  000060
?___flneg                                cstackCOMRAM 00000E
?___flpack                               cstackCOMRAM 00000E
?___flsub                                cstackBANK0  000076
?___fltol                                cstackBANK0  000076
?___lbmod                                cstackCOMRAM 00000E
?___lwtofl                               cstackCOMRAM 000018
?___wmul                                 cstackCOMRAM 000012
?_eval_poly                              cstackBANK0  000076
?_exp                                    cstackBANK0  000099
?_floor                                  cstackBANK0  00008F
?_frexp                                  cstackCOMRAM 00000E
?_getCANFrame                            cstackCOMRAM 000020
?_getCalibrationValue                    cstackCOMRAM 000012
?_getVSCPFrame                           cstackCOMRAM 000024
?_ldexp                                  cstackBANK0  000081
?_log                                    cstackBANK0  000081
?_readEEPROM                             cstackCOMRAM 00000E
?_sendCANFrame                           cstackCOMRAM 00003C
?_sendVSCPFrame                          cstackBANK0  000060
?_setEventData                           cstackBANK0  00007C
?_vscp_getFamilyCode                     cstackCOMRAM 00000E
?_vscp_getFamilyType                     cstackCOMRAM 00000E
?_vscp_sendHeartBeat                     cstackCOMRAM 000044
?_vscp_setGUID                           cstackCOMRAM 000011
?_vscp_setManufacturerId                 cstackCOMRAM 000011
?_vscp_setUserID                         cstackCOMRAM 000011
?_vscp_writeAppReg                       cstackCOMRAM 000021
?_vscp_writeRegister                     cstackCOMRAM 000034
?_vscp_writeStdReg                       cstackCOMRAM 000022
?_writeEEPROM                            cstackCOMRAM 00000E
?i1_WriteTimer0                          cstackCOMRAM 000001
Celsius2Fahrenheit@tc                    cstackBANK0  000076
Celsius2Kelvin@tc                        cstackCOMRAM 00002C
ECANReceiveMessage@data                  cstackCOMRAM 000015
ECANReceiveMessage@dataLen               cstackCOMRAM 000016
ECANReceiveMessage@i                     cstackCOMRAM 00001B
ECANReceiveMessage@id                    cstackCOMRAM 00001A
ECANReceiveMessage@mode                  cstackCOMRAM 00001C
ECANReceiveMessage@msgFlags              cstackCOMRAM 000017
ECANReceiveMessage@ptr                   cstackCOMRAM 00001E
ECANReceiveMessage@savedPtr              cstackCOMRAM 000018
ECANReceiveMessage@temp                  cstackCOMRAM 00001D
ECANSendMessage@buffers                  cstackCOMRAM 000033
ECANSendMessage@data                     cstackCOMRAM 00001C
ECANSendMessage@dataLen                  cstackCOMRAM 00001D
ECANSendMessage@i                        cstackCOMRAM 000039
ECANSendMessage@id                       cstackCOMRAM 000018
ECANSendMessage@j                        cstackCOMRAM 000034
ECANSendMessage@mode                     cstackCOMRAM 000032
ECANSendMessage@msgFlags                 cstackCOMRAM 00001E
ECANSendMessage@pb                       cstackCOMRAM 000020
ECANSendMessage@ptr                      cstackCOMRAM 00003A
ECANSendMessage@temp                     cstackCOMRAM 000038
ECANSendMessage@tempBSEL0                cstackCOMRAM 000035
ECANSendMessage@tempPtr                  cstackCOMRAM 000036
ECANSetOperationMode@mode                cstackCOMRAM 00000E
OpenADC@config                           cstackCOMRAM 000012
OpenADC@config2                          cstackCOMRAM 00000E
OpenADC@portconfig                       cstackCOMRAM 00000F
OpenTimer0@config                        cstackCOMRAM 00000E
WriteTimer0@timer                        cstackCOMRAM 000010
WriteTimer0@timer0                       cstackCOMRAM 00000E
_ADCON0                                  (abs)        000FC2
_ADCON0bits                              (abs)        000FC2
_ADCON1                                  (abs)        000FC1
_ADCON2                                  (abs)        000FC0
_ADRESH                                  (abs)        000FC4
_ADRESL                                  (abs)        000FC3
_B0CON                                   (abs)        000E20
_B0RXFUL                                 (abs)        007107
_B0TXEN                                  (abs)        006FC2
_B1CON                                   (abs)        000E30
_B1RXFUL                                 (abs)        007187
_B1TXEN                                  (abs)        006FC3
_B2CON                                   (abs)        000E40
_B2RXFUL                                 (abs)        007207
_B2TXEN                                  (abs)        006FC4
_B3CON                                   (abs)        000E50
_B3RXFUL                                 (abs)        007287
_B3TXEN                                  (abs)        006FC5
_B4CON                                   (abs)        000E60
_B4RXFUL                                 (abs)        007307
_B4TXEN                                  (abs)        006FC6
_B5CON                                   (abs)        000E70
_B5RXFUL                                 (abs)        007387
_B5TXEN                                  (abs)        006FC7
_BRGCON1                                 (abs)        000F70
_BRGCON2                                 (abs)        000F71
_BRGCON3                                 (abs)        000F72
_BSEL0                                   (abs)        000DF8
_CANCON                                  (abs)        000F6F
_CIOCON                                  (abs)        000F73
_Celsius2Fahrenheit                      text30       00541A
_Celsius2Kelvin                          text32       005978
_ConvertADC                              text93       005DAA
_ECANCON                                 (abs)        000F77
_ECANInitialize                          text86       00510A
_ECANReceiveMessage                      text75       003806
_ECANSendMessage                         text70       003FCC
_ECANSetOperationMode                    text87       005CA2
_EEADR                                   (abs)        000FA9
_EECON1bits                              (abs)        000FA6
_EECON2                                  (abs)        000FA7
_EEDATA                                  (abs)        000FA8
_FIFOEMPTY                               (abs)        007BA7
_INTCONbits                              (abs)        000FF2
_IRXIF                                   (abs)        007D27
_MDSEL0                                  (abs)        007BBE
_MDSEL1                                  (abs)        007BBF
_MSEL0                                   (abs)        000DF0
_MSEL1                                   (abs)        000DF1
_MSEL2                                   (abs)        000DF2
_OpenADC                                 text88       00548E
_OpenTimer0                              text89       005BF0
_PIE1bits                                (abs)        000F9D
_PIR1bits                                (abs)        000F9E
_PIR2bits                                (abs)        000FA1
_PORTC                                   (abs)        000F82
_RXB0CON                                 (abs)        000F60
_RXB0FILHIT0                             (abs)        007B00
_RXB0FUL                                 (abs)        007B07
_RXB0IF                                  (abs)        007D20
_RXB0OVFL                                (abs)        007BA7
_RXB1CON                                 (abs)        000F50
_RXB1CONbits                             (abs)        000F50
_RXB1IF                                  (abs)        007D21
_RXB1OVFL                                (abs)        007BA6
_RXF0EIDH                                (abs)        000F02
_RXF0EIDL                                (abs)        000F03
_RXF0SIDH                                (abs)        000F00
_RXF0SIDL                                (abs)        000F01
_RXF1EIDH                                (abs)        000F06
_RXF1EIDL                                (abs)        000F07
_RXF1SIDH                                (abs)        000F04
_RXF1SIDL                                (abs)        000F05
_RXFBCON0                                (abs)        000DE0
_RXFBCON1                                (abs)        000DE1
_RXFBCON2                                (abs)        000DE2
_RXFBCON3                                (abs)        000DE3
_RXFBCON4                                (abs)        000DE4
_RXFBCON5                                (abs)        000DE5
_RXFBCON6                                (abs)        000DE6
_RXFBCON7                                (abs)        000DE7
_RXFCON0                                 (abs)        000DD4
_RXFCON1                                 (abs)        000DD5
_RXM0EIDH                                (abs)        000F1A
_RXM0EIDL                                (abs)        000F1B
_RXM0EXIDM                               (abs)        0078CB
_RXM0SIDH                                (abs)        000F18
_RXM0SIDL                                (abs)        000F19
_RXM1EIDH                                (abs)        000F1E
_RXM1EIDL                                (abs)        000F1F
_RXM1EXIDEN                              (abs)        0078EB
_RXM1SIDH                                (abs)        000F1C
_RXM1SIDL                                (abs)        000F1D
_T0CON                                   (abs)        000FD5
_T0CONbits                               (abs)        000FD5
_TMR0H                                   (abs)        000FD7
_TMR0L                                   (abs)        000FD6
_TRISA                                   (abs)        000F92
_TRISB                                   (abs)        000F93
_TRISC                                   (abs)        000F94
_TXB0CON                                 (abs)        000F40
_TXB1CON                                 (abs)        000F30
_TXB2CON                                 (abs)        000F20
_WriteTimer0                             text94       005D3E
__CANIDToRegs                            text71       0043F6
__CANIDToRegs@Value                      cstackCOMRAM 000017
__CANIDToRegs@ptr                        cstackCOMRAM 00000E
__CANIDToRegs@type                       cstackCOMRAM 000014
__CANIDToRegs@val                        cstackCOMRAM 000010
__CFG_BBSIZ$2048                         (abs)        000000
__CFG_BOREN$BOACTIVE                     (abs)        000000
__CFG_BORV$3                             (abs)        000000
__CFG_CPB$ON                             (abs)        000000
__CFG_EBTR0$OFF                          (abs)        000000
__CFG_EBTR1$OFF                          (abs)        000000
__CFG_EBTR2$OFF                          (abs)        000000
__CFG_EBTR3$OFF                          (abs)        000000
__CFG_EBTRB$OFF                          (abs)        000000
__CFG_LVP$ON                             (abs)        000000
__CFG_OSC$HSPLL                          (abs)        000000
__CFG_STVREN$ON                          (abs)        000000
__CFG_WDT$ON                             (abs)        000000
__CFG_WDTPS$128                          (abs)        000000
__CFG_WRTD$OFF                           (abs)        000000
__ECANPointBuffer                        text77       0053A4
__ECANPointBuffer@b                      cstackCOMRAM 000011
__ECANPointBuffer@pt                     cstackCOMRAM 000012
__ECANRxFilterHitInfo                    bssCOMRAM    000048
__HRAM                                   (abs)        000000
__Habs1                                  abs1         000000
__Hbank0                                 bank0        000000
__Hbank1                                 bank1        000000
__Hbank2                                 bank2        000000
__Hbank3                                 bank3        000000
__Hbank4                                 bank4        000000
__Hbank5                                 bank5        000000
__Hbigbss                                bigbss       000000
__Hbigdata                               bigdata      000000
__Hbigram                                bigram       000000
__Hbss                                   bss          000000
__HbssBANK0                              bssBANK0     000000
__HbssBANK1                              bssBANK1     000000
__HbssBIGRAM                             bssBIGRAM    000000
__HbssCOMRAM                             bssCOMRAM    000000
__Hcinit                                 cinit        000000
__Hclrtext                               clrtext      000000
__Hcomram                                comram       000000
__Hconfig                                config       30000E
__Hconst                                 const        000000
__HcstackBANK0                           cstackBANK0  000000
__HcstackBANK1                           cstackBANK1  000000
__HcstackCOMRAM                          cstackCOMRAM 000000
__Hdata                                  data         000000
__Heeprom_data                           eeprom_data  000000
__Hend_init                              end_init     000ABA
__Hfarbss                                farbss       000000
__Hfardata                               fardata      000000
__Hibigdata                              ibigdata     000000
__Hidata                                 idata        000000
__Hidloc                                 idloc        200008
__Hifardata                              ifardata     000000
__Hinit                                  init         000AB6
__Hintcode                               intcode      000804
__Hintcode_body                          intcode_body 000000
__Hintcodelo                             intcodelo    000AB6
__Hintentry                              intentry     000000
__Hintret                                intret       000000
__Hintsave_regs                          intsave_regs 000000
__Hirdata                                irdata       000000
__Hmediumconst                           mediumconst  000000
__HnvFARRAM                              nvFARRAM     000000
__Hnvbit                                 nvbit        000000
__Hnvrram                                nvrram       000000
__Hparam                                 rparam       000000
__Hpowerup                               powerup      000AB6
__Hram                                   ram          000000
__Hramtop                                ramtop       000600
__Hrbit                                  rbit         000000
__Hrbss                                  rbss         000000
__Hrdata                                 rdata        000000
__Hreset_vec                             reset_vec    000804
__Hrparam                                rparam       000000
__Hsfr                                   sfr          000000
__Hsmallconst                            smallconst   000B6E
__Hstruct                                struct       000000
__Htemp                                  temp         000000
__Htext                                  text         000000
__Htext0                                 text0        000000
__Htext1                                 text1        000000
__Htext10                                text10       000000
__Htext100                               text100      000000
__Htext101                               text101      000000
__Htext102                               text102      000000
__Htext11                                text11       000000
__Htext12                                text12       000000
__Htext13                                text13       000000
__Htext14                                text14       000000
__Htext15                                text15       000000
__Htext16                                text16       000000
__Htext17                                text17       000000
__Htext18                                text18       000000
__Htext19                                text19       000000
__Htext2                                 text2        000000
__Htext20                                text20       000000
__Htext21                                text21       000000
__Htext22                                text22       000000
__Htext23                                text23       000000
__Htext24                                text24       000000
__Htext25                                text25       000000
__Htext26                                text26       000000
__Htext27                                text27       000000
__Htext28                                text28       000000
__Htext29                                text29       000000
__Htext3                                 text3        000000
__Htext30                                text30       000000
__Htext31                                text31       000000
__Htext32                                text32       000000
__Htext33                                text33       000000
__Htext34                                text34       000000
__Htext35                                text35       000000
__Htext36                                text36       000000
__Htext37                                text37       000000
__Htext38                                text38       000000
__Htext39                                text39       000000
__Htext4                                 text4        000000
__Htext40                                text40       000000
__Htext41                                text41       000000
__Htext42                                text42       000000
__Htext43                                text43       000000
__Htext44                                text44       000000
__Htext45                                text45       000000
__Htext46                                text46       000000
__Htext47                                text47       000000
__Htext48                                text48       000000
__Htext49                                text49       000000
__Htext5                                 text5        000000
__Htext50                                text50       000000
__Htext51                                text51       000000
__Htext52                                text52       000000
__Htext53                                text53       000000
__Htext54                                text54       000000
__Htext55                                text55       000000
__Htext56                                text56       000000
__Htext57                                text57       000000
__Htext58                                text58       000000
__Htext59                                text59       000000
__Htext6                                 text6        000000
__Htext60                                text60       000000
__Htext61                                text61       000000
__Htext62                                text62       000000
__Htext63                                text63       000000
__Htext64                                text64       000000
__Htext65                                text65       000000
__Htext66                                text66       000000
__Htext67                                text67       000000
__Htext68                                text68       000000
__Htext69                                text69       000000
__Htext7                                 text7        000000
__Htext70                                text70       000000
__Htext71                                text71       000000
__Htext72                                text72       000000
__Htext73                                text73       000000
__Htext74                                text74       000000
__Htext75                                text75       000000
__Htext76                                text76       000000
__Htext77                                text77       000000
__Htext78                                text78       000000
__Htext79                                text79       000000
__Htext8                                 text8        000000
__Htext80                                text80       000000
__Htext81                                text81       000000
__Htext82                                text82       000000
__Htext83                                text83       000000
__Htext84                                text84       000000
__Htext85                                text85       000000
__Htext86                                text86       000000
__Htext87                                text87       000000
__Htext88                                text88       000000
__Htext89                                text89       000000
__Htext9                                 text9        000000
__Htext90                                text90       000000
__Htext91                                text91       000000
__Htext92                                text92       000000
__Htext93                                text93       000000
__Htext94                                text94       000000
__Htext95                                text95       000000
__Htext96                                text96       000000
__Htext97                                text97       000000
__Htext98                                text98       000000
__LRAM                                   (abs)        000001
__Labs1                                  abs1         000000
__Lbank0                                 bank0        000000
__Lbank1                                 bank1        000000
__Lbank2                                 bank2        000000
__Lbank3                                 bank3        000000
__Lbank4                                 bank4        000000
__Lbank5                                 bank5        000000
__Lbigbss                                bigbss       000000
__Lbigdata                               bigdata      000000
__Lbigram                                bigram       000000
__Lbss                                   bss          000000
__LbssBANK0                              bssBANK0     000000
__LbssBANK1                              bssBANK1     000000
__LbssBIGRAM                             bssBIGRAM    000000
__LbssCOMRAM                             bssCOMRAM    000000
__Lcinit                                 cinit        000000
__Lclrtext                               clrtext      000000
__Lcomram                                comram       000000
__Lconfig                                config       300000
__Lconst                                 const        000000
__LcstackBANK0                           cstackBANK0  000000
__LcstackBANK1                           cstackBANK1  000000
__LcstackCOMRAM                          cstackCOMRAM 000000
__Ldata                                  data         000000
__Leeprom_data                           eeprom_data  000000
__Lend_init                              end_init     000AB6
__Lfarbss                                farbss       000000
__Lfardata                               fardata      000000
__Libigdata                              ibigdata     000000
__Lidata                                 idata        000000
__Lidloc                                 idloc        200000
__Lifardata                              ifardata     000000
__Linit                                  init         000AB6
__Lintcode                               intcode      000804
__Lintcode_body                          intcode_body 000000
__Lintcodelo                             intcodelo    000818
__Lintentry                              intentry     000000
__Lintret                                intret       000000
__Lintsave_regs                          intsave_regs 000000
__Lirdata                                irdata       000000
__Lmediumconst                           mediumconst  000000
__LnvFARRAM                              nvFARRAM     000000
__Lnvbit                                 nvbit        000000
__Lnvrram                                nvrram       000000
__Lparam                                 rparam       000000
__Lpowerup                               powerup      000AB6
__Lram                                   ram          000000
__Lramtop                                ramtop       000600
__Lrbit                                  rbit         000000
__Lrbss                                  rbss         000000
__Lrdata                                 rdata        000000
__Lreset_vec                             reset_vec    000800
__Lrparam                                rparam       000000
__Lsfr                                   sfr          000000
__Lsmallconst                            smallconst   000B00
__Lstruct                                struct       000000
__Ltemp                                  temp         000000
__Ltext                                  text         000000
__Ltext0                                 text0        000000
__Ltext1                                 text1        000000
__Ltext10                                text10       000000
__Ltext100                               text100      000000
__Ltext101                               text101      000000
__Ltext102                               text102      000000
__Ltext11                                text11       000000
__Ltext12                                text12       000000
__Ltext13                                text13       000000
__Ltext14                                text14       000000
__Ltext15                                text15       000000
__Ltext16                                text16       000000
__Ltext17                                text17       000000
__Ltext18                                text18       000000
__Ltext19                                text19       000000
__Ltext2                                 text2        000000
__Ltext20                                text20       000000
__Ltext21                                text21       000000
__Ltext22                                text22       000000
__Ltext23                                text23       000000
__Ltext24                                text24       000000
__Ltext25                                text25       000000
__Ltext26                                text26       000000
__Ltext27                                text27       000000
__Ltext28                                text28       000000
__Ltext29                                text29       000000
__Ltext3                                 text3        000000
__Ltext30                                text30       000000
__Ltext31                                text31       000000
__Ltext32                                text32       000000
__Ltext33                                text33       000000
__Ltext34                                text34       000000
__Ltext35                                text35       000000
__Ltext36                                text36       000000
__Ltext37                                text37       000000
__Ltext38                                text38       000000
__Ltext39                                text39       000000
__Ltext4                                 text4        000000
__Ltext40                                text40       000000
__Ltext41                                text41       000000
__Ltext42                                text42       000000
__Ltext43                                text43       000000
__Ltext44                                text44       000000
__Ltext45                                text45       000000
__Ltext46                                text46       000000
__Ltext47                                text47       000000
__Ltext48                                text48       000000
__Ltext49                                text49       000000
__Ltext5                                 text5        000000
__Ltext50                                text50       000000
__Ltext51                                text51       000000
__Ltext52                                text52       000000
__Ltext53                                text53       000000
__Ltext54                                text54       000000
__Ltext55                                text55       000000
__Ltext56                                text56       000000
__Ltext57                                text57       000000
__Ltext58                                text58       000000
__Ltext59                                text59       000000
__Ltext6                                 text6        000000
__Ltext60                                text60       000000
__Ltext61                                text61       000000
__Ltext62                                text62       000000
__Ltext63                                text63       000000
__Ltext64                                text64       000000
__Ltext65                                text65       000000
__Ltext66                                text66       000000
__Ltext67                                text67       000000
__Ltext68                                text68       000000
__Ltext69                                text69       000000
__Ltext7                                 text7        000000
__Ltext70                                text70       000000
__Ltext71                                text71       000000
__Ltext72                                text72       000000
__Ltext73                                text73       000000
__Ltext74                                text74       000000
__Ltext75                                text75       000000
__Ltext76                                text76       000000
__Ltext77                                text77       000000
__Ltext78                                text78       000000
__Ltext79                                text79       000000
__Ltext8                                 text8        000000
__Ltext80                                text80       000000
__Ltext81                                text81       000000
__Ltext82                                text82       000000
__Ltext83                                text83       000000
__Ltext84                                text84       000000
__Ltext85                                text85       000000
__Ltext86                                text86       000000
__Ltext87                                text87       000000
__Ltext88                                text88       000000
__Ltext89                                text89       000000
__Ltext9                                 text9        000000
__Ltext90                                text90       000000
__Ltext91                                text91       000000
__Ltext92                                text92       000000
__Ltext93                                text93       000000
__Ltext94                                text94       000000
__Ltext95                                text95       000000
__Ltext96                                text96       000000
__Ltext97                                text97       000000
__Ltext98                                text98       000000
__RegsToCANID                            text76       004132
__RegsToCANID@Value                      cstackCOMRAM 000014
__RegsToCANID@ptr                        cstackCOMRAM 00000E
__RegsToCANID@type                       cstackCOMRAM 000011
__RegsToCANID@val                        cstackCOMRAM 000010
__S0                                     (abs)        30000E
__S1                                     (abs)        00055C
___aldiv                                 text5        004C62
___aldiv@counter                         cstackBANK0  000084
___aldiv@dividend                        cstackBANK0  00007C
___aldiv@divisor                         cstackBANK0  000080
___aldiv@quotient                        cstackBANK0  000086
___aldiv@sign                            cstackBANK0  000085
___altofl                                text16       0056F8
___altofl@c                              cstackBANK0  00008A
___altofl@sign                           cstackBANK0  00008E
___asfladd                               text4        005666
___asfladd@f1p                           cstackCOMRAM 00002C
___asfladd@f2                            cstackCOMRAM 00002E
___asfldiv                               text3        00561C
___asfldiv@f1p                           cstackBANK0  000060
___asfldiv@f2                            cstackBANK0  000062
___asflmul                               text19       005584
___asflmul@mp                            cstackCOMRAM 000042
___asflmul@multiplicand                  cstackBANK0  000076
___asflsub                               text17       0054EA
___asflsub@f1p                           cstackBANK0  00007E
___asflsub@f2                            cstackBANK0  000080
___awtofl                                text95       00593E
___awtofl@c                              cstackCOMRAM 000018
___awtofl@sign                           cstackCOMRAM 00001E
___fladd                                 text31       004296
___fladd@exp1                            cstackCOMRAM 00002B
___fladd@exp2                            cstackCOMRAM 00002A
___fladd@f1                              cstackCOMRAM 00001D
___fladd@f2                              cstackCOMRAM 000021
___fladd@sign                            cstackCOMRAM 000029
___fldiv                                 text20       004E80
___fldiv@cntr                            cstackCOMRAM 00003F
___fldiv@exp                             cstackCOMRAM 000040
___fldiv@f1                              cstackCOMRAM 00002C
___fldiv@f2                              cstackCOMRAM 000030
___fldiv@f3                              cstackCOMRAM 00003B
___fldiv@sign                            cstackCOMRAM 000041
___flge                                  text15       005538
___flge@ff1                              cstackCOMRAM 00000E
___flge@ff2                              cstackCOMRAM 000012
___flmul                                 text96       004948
___flmul@cntr                            cstackBANK0  000074
___flmul@exp                             cstackBANK0  00006F
___flmul@f1                              cstackBANK0  000060
___flmul@f2                              cstackBANK0  000064
___flmul@f3_as_product                   cstackBANK0  000070
___flmul@sign                            cstackBANK0  000075
___flneg                                 text9        005B22
___flneg@f1                              cstackCOMRAM 00000E
___flpack                                text97       004BA2
___flpack@arg                            cstackCOMRAM 00000E
___flpack@exp                            cstackCOMRAM 000012
___flpack@sign                           cstackCOMRAM 000013
___flsub                                 text18       005850
___flsub@f1                              cstackBANK0  000076
___flsub@f2                              cstackBANK0  00007A
___fltol                                 text13       00506C
___fltol@exp1                            cstackBANK0  00007B
___fltol@f1                              cstackBANK0  000076
___fltol@sign1                           cstackBANK0  00007A
___lbmod                                 text34       005A86
___lbmod@counter                         cstackCOMRAM 000010
___lbmod@dividend                        cstackCOMRAM 00000F
___lbmod@divisor                         cstackCOMRAM 00000E
___lbmod@rem                             cstackCOMRAM 000011
___lwtofl                                text2        005A08
___lwtofl@c                              cstackCOMRAM 000018
___wmul                                  text92       005904
___wmul@multiplicand                     cstackCOMRAM 000014
___wmul@multiplier                       cstackCOMRAM 000012
___wmul@product                          cstackCOMRAM 000016
__accesstop                              (abs)        000060
__activetblptr                           (abs)        000002
__end_of_Celsius2Fahrenheit              text30       00548E
__end_of_Celsius2Kelvin                  text32       0059AC
__end_of_ConvertADC                      text93       005DAE
__end_of_ECANInitialize                  text86       0051A0
__end_of_ECANReceiveMessage              text75       003A14
__end_of_ECANSendMessage                 text70       004132
__end_of_ECANSetOperationMode            text87       005CBA
__end_of_OpenADC                         text88       0054EA
__end_of_OpenTimer0                      text89       005C0E
__end_of_WriteTimer0                     text94       005D50
__end_of__CANIDToRegs                    text71       004546
__end_of__ECANPointBuffer                text77       00541A
__end_of__RegsToCANID                    text76       004296
__end_of___aldiv                         text5        004D1E
__end_of___altofl                        text16       005740
__end_of___asfladd                       text4        0056B0
__end_of___asfldiv                       text3        005666
__end_of___asflmul                       text19       0055D0
__end_of___asflsub                       text17       005538
__end_of___awtofl                        text95       005978
__end_of___fladd                         text31       0043F6
__end_of___fldiv                         text20       004F28
__end_of___flge                          text15       005584
__end_of___flmul                         text96       004A1E
__end_of___flneg                         text9        005B46
__end_of___flpack                        text97       004C62
__end_of___flsub                         text18       00588C
__end_of___fltol                         text13       00510A
__end_of___lbmod                         text34       005AAE
__end_of___lwtofl                        text2        005A32
__end_of___wmul                          text92       00593E
__end_of__initialization                 cinit        005808
__end_of_doOneSecondWork                 text25       003C1C
__end_of_doWork                          text1        002318
__end_of_eval_poly                       text11       004BA2
__end_of_exp                             text8        003E00
__end_of_floor                           text12       004770
__end_of_frexp                           text14       005226
__end_of_getCANFrame                     text74       005A08
__end_of_getCalibrationValue             text6        0056F8
__end_of_getVSCPFrame                    text73       0053A4
__end_of_handle_sync                     text27       00532C
__end_of_init                            text85       005904
__end_of_init_app_eeprom                 text38       002AB6
__end_of_init_app_ram                    text90       0057D0
__end_of_interrupt_at_low_vector         intcodelo    000AB6
__end_of_ldexp                           text10       004FCC
__end_of_log                             text7        004674
__end_of_main                            text0        004864
__end_of_readEEPROM                      text82       005D2C
__end_of_sendCANFrame                    text69       0058C8
__end_of_sendTempEvent                   text28       0052AA
__end_of_sendVSCPFrame                   text68       004DD0
__end_of_setEventData                    text29       004E80
__end_of_vscp_check_pstorage             text78       005B8E
__end_of_vscp_deviceURL                  smallconst   000B20
__end_of_vscp_doOneSecondWork            text21       00561C
__end_of_vscp_error                      text26       005DAA
__end_of_vscp_getBootLoaderAlgorithm     text49       005DB8
__end_of_vscp_getBufferSize              text48       005DB6
__end_of_vscp_getEvent                   text72       005A86
__end_of_vscp_getFamilyCode              text40       005D8A
__end_of_vscp_getFamilyType              text39       005D80
__end_of_vscp_getGUID                    text53       005CF6
__end_of_vscp_getMDF_URL                 text52       005C8A
__end_of_vscp_getMajorVersion            text56       005DBE
__end_of_vscp_getManufacturerId          text50       005CCE
__end_of_vscp_getMatrixInfo              text64       005C42
__end_of_vscp_getMinorVersion            text55       005DBC
__end_of_vscp_getRegisterPagesUsed       text47       005DB4
__end_of_vscp_getSegmentCRC              text81       005D9E
__end_of_vscp_getSubMinorVersion         text54       005DBA
__end_of_vscp_getSubzone                 text23       005D6C
__end_of_vscp_getUserID                  text51       005CE2
__end_of_vscp_getZone                    text24       005D76
__end_of_vscp_goActiveState              text66       005BF0
__end_of_vscp_goBootloaderMode           text63       005CA2
__end_of_vscp_handleDropNickname         text58       0059DC
__end_of_vscp_handleHeartbeat            text62       005850
__end_of_vscp_handleProbeState           text65       004AE2
__end_of_vscp_handleProtocolEvent        text33       003806
__end_of_vscp_handleSetNickname          text61       005B6A
__end_of_vscp_init                       text59       005788
__end_of_vscp_newNodeOnline              text57       005A5C
__end_of_vscp_readAppReg                 text98       0031DE
__end_of_vscp_readNicknamePermanent      text60       005D94
__end_of_vscp_readRegister               text45       005C28
__end_of_vscp_readStdReg                 text46       004948
__end_of_vscp_restoreDefaults            text37       005DA6
__end_of_vscp_sendEvent                  text67       005AD6
__end_of_vscp_sendHeartBeat              text22       005AFC
__end_of_vscp_setControlByte             text79       005D08
__end_of_vscp_setGUID                    text43       005BD2
__end_of_vscp_setManufacturerId          text41       005C5A
__end_of_vscp_setSegmentCRC              text80       005D1A
__end_of_vscp_setUserID                  text42       005C72
__end_of_vscp_writeAppReg                text44       001870
__end_of_vscp_writeNicknamePermanent     text83       005D3E
__end_of_vscp_writeRegister              text35       005BB0
__end_of_vscp_writeStdReg                text36       003FCC
__end_of_writeCoeffs2Ram                 text91       00506C
__end_of_writeEEPROM                     text84       005B22
__end_ofexp@coeff                        smallconst   000B48
__end_ofi1_ConvertADC                    text101      005DB2
__end_ofi1_WriteTimer0                   text100      005D62
__end_oflog@coeff                        smallconst   000B6C
__initialization                         cinit        0057D0
__mediumconst                            mediumconst  000000
__pbssBANK0                              bssBANK0     0000B3
__pbssBANK1                              bssBANK1     000100
__pbssBIGRAM                             bssBIGRAM    00019C
__pbssCOMRAM                             bssCOMRAM    000046
__pcinit                                 cinit        0057D0
__pcstackBANK0                           cstackBANK0  000060
__pcstackBANK1                           cstackBANK1  000166
__pcstackCOMRAM                          cstackCOMRAM 000001
__pintcodelo                             intcodelo    000818
__psmallconst                            smallconst   000B00
__ptext0                                 text0        004770
__ptext1                                 text1        001870
__ptext10                                text10       004F28
__ptext100                               text100      005D50
__ptext101                               text101      005DAE
__ptext102                               text102      000000
__ptext11                                text11       004AE2
__ptext12                                text12       004674
__ptext13                                text13       00506C
__ptext14                                text14       0051A0
__ptext15                                text15       005538
__ptext16                                text16       0056F8
__ptext17                                text17       0054EA
__ptext18                                text18       005850
__ptext19                                text19       005584
__ptext2                                 text2        005A08
__ptext20                                text20       004E80
__ptext21                                text21       0055D0
__ptext22                                text22       005AD6
__ptext23                                text23       005D62
__ptext24                                text24       005D6C
__ptext25                                text25       003A14
__ptext26                                text26       005DA6
__ptext27                                text27       0052AA
__ptext28                                text28       005226
__ptext29                                text29       004DD0
__ptext3                                 text3        00561C
__ptext30                                text30       00541A
__ptext31                                text31       004296
__ptext32                                text32       005978
__ptext33                                text33       0031DE
__ptext34                                text34       005A86
__ptext35                                text35       005B8E
__ptext36                                text36       003E00
__ptext37                                text37       005D9E
__ptext38                                text38       002318
__ptext39                                text39       005D76
__ptext4                                 text4        005666
__ptext40                                text40       005D80
__ptext41                                text41       005C42
__ptext42                                text42       005C5A
__ptext43                                text43       005BB0
__ptext44                                text44       000B6E
__ptext45                                text45       005C0E
__ptext46                                text46       004864
__ptext47                                text47       005DB2
__ptext48                                text48       005DB4
__ptext49                                text49       005DB6
__ptext5                                 text5        004C62
__ptext50                                text50       005CBA
__ptext51                                text51       005CCE
__ptext52                                text52       005C72
__ptext53                                text53       005CE2
__ptext54                                text54       005DB8
__ptext55                                text55       005DBA
__ptext56                                text56       005DBC
__ptext57                                text57       005A32
__ptext58                                text58       0059AC
__ptext59                                text59       005740
__ptext6                                 text6        0056B0
__ptext60                                text60       005D8A
__ptext61                                text61       005B46
__ptext62                                text62       005812
__ptext63                                text63       005C8A
__ptext64                                text64       005C28
__ptext65                                text65       004A1E
__ptext66                                text66       005BD2
__ptext67                                text67       005AAE
__ptext68                                text68       004D1E
__ptext69                                text69       00588C
__ptext7                                 text7        004546
__ptext70                                text70       003FCC
__ptext71                                text71       0043F6
__ptext72                                text72       005A5C
__ptext73                                text73       00532C
__ptext74                                text74       0059DC
__ptext75                                text75       003806
__ptext76                                text76       004132
__ptext77                                text77       0053A4
__ptext78                                text78       005B6A
__ptext79                                text79       005CF6
__ptext8                                 text8        003C1C
__ptext80                                text80       005D08
__ptext81                                text81       005D94
__ptext82                                text82       005D1A
__ptext83                                text83       005D2C
__ptext84                                text84       005AFC
__ptext85                                text85       0058C8
__ptext86                                text86       00510A
__ptext87                                text87       005CA2
__ptext88                                text88       00548E
__ptext89                                text89       005BF0
__ptext9                                 text9        005B22
__ptext90                                text90       005788
__ptext91                                text91       004FCC
__ptext92                                text92       005904
__ptext93                                text93       005DAA
__ptext94                                text94       005D3E
__ptext95                                text95       00593E
__ptext96                                text96       004948
__ptext97                                text97       004BA2
__ptext98                                text98       002AB6
__ramtop                                 ramtop       000600
__size_of_Celsius2Fahrenheit             (abs)        000000
__size_of_Celsius2Kelvin                 (abs)        000000
__size_of_ConvertADC                     (abs)        000000
__size_of_ECANInitialize                 (abs)        000000
__size_of_ECANReceiveMessage             (abs)        000000
__size_of_ECANSendMessage                (abs)        000000
__size_of_ECANSetOperationMode           (abs)        000000
__size_of_OpenADC                        (abs)        000000
__size_of_OpenTimer0                     (abs)        000000
__size_of_WriteTimer0                    (abs)        000000
__size_of__CANIDToRegs                   (abs)        000000
__size_of__ECANPointBuffer               (abs)        000000
__size_of__RegsToCANID                   (abs)        000000
__size_of___aldiv                        (abs)        000000
__size_of___altofl                       (abs)        000000
__size_of___asfladd                      (abs)        000000
__size_of___asfldiv                      (abs)        000000
__size_of___asflmul                      (abs)        000000
__size_of___asflsub                      (abs)        000000
__size_of___awtofl                       (abs)        000000
__size_of___fladd                        (abs)        000000
__size_of___fldiv                        (abs)        000000
__size_of___flge                         (abs)        000000
__size_of___flmul                        (abs)        000000
__size_of___flneg                        (abs)        000000
__size_of___flpack                       (abs)        000000
__size_of___flsub                        (abs)        000000
__size_of___fltol                        (abs)        000000
__size_of___lbmod                        (abs)        000000
__size_of___lwtofl                       (abs)        000000
__size_of___wmul                         (abs)        000000
__size_of_doOneSecondWork                (abs)        000000
__size_of_doWork                         (abs)        000000
__size_of_eval_poly                      (abs)        000000
__size_of_exp                            (abs)        000000
__size_of_floor                          (abs)        000000
__size_of_frexp                          (abs)        000000
__size_of_getCANFrame                    (abs)        000000
__size_of_getCalibrationValue            (abs)        000000
__size_of_getVSCPFrame                   (abs)        000000
__size_of_handle_sync                    (abs)        000000
__size_of_init                           (abs)        000000
__size_of_init_app_eeprom                (abs)        000000
__size_of_init_app_ram                   (abs)        000000
__size_of_interrupt_at_low_vector        (abs)        000000
__size_of_ldexp                          (abs)        000000
__size_of_log                            (abs)        000000
__size_of_main                           (abs)        000000
__size_of_readEEPROM                     (abs)        000000
__size_of_sendCANFrame                   (abs)        000000
__size_of_sendTempEvent                  (abs)        000000
__size_of_sendVSCPFrame                  (abs)        000000
__size_of_setEventData                   (abs)        000000
__size_of_vscp_check_pstorage            (abs)        000000
__size_of_vscp_doOneSecondWork           (abs)        000000
__size_of_vscp_error                     (abs)        000000
__size_of_vscp_getBootLoaderAlgorithm    (abs)        000000
__size_of_vscp_getBufferSize             (abs)        000000
__size_of_vscp_getEvent                  (abs)        000000
__size_of_vscp_getFamilyCode             (abs)        000000
__size_of_vscp_getFamilyType             (abs)        000000
__size_of_vscp_getGUID                   (abs)        000000
__size_of_vscp_getMDF_URL                (abs)        000000
__size_of_vscp_getMajorVersion           (abs)        000000
__size_of_vscp_getManufacturerId         (abs)        000000
__size_of_vscp_getMatrixInfo             (abs)        000000
__size_of_vscp_getMinorVersion           (abs)        000000
__size_of_vscp_getRegisterPagesUsed      (abs)        000000
__size_of_vscp_getSegmentCRC             (abs)        000000
__size_of_vscp_getSubMinorVersion        (abs)        000000
__size_of_vscp_getSubzone                (abs)        000000
__size_of_vscp_getUserID                 (abs)        000000
__size_of_vscp_getZone                   (abs)        000000
__size_of_vscp_goActiveState             (abs)        000000
__size_of_vscp_goBootloaderMode          (abs)        000000
__size_of_vscp_handleDropNickname        (abs)        000000
__size_of_vscp_handleHeartbeat           (abs)        000000
__size_of_vscp_handleProbeState          (abs)        000000
__size_of_vscp_handleProtocolEvent       (abs)        000000
__size_of_vscp_handleSetNickname         (abs)        000000
__size_of_vscp_init                      (abs)        000000
__size_of_vscp_newNodeOnline             (abs)        000000
__size_of_vscp_readAppReg                (abs)        000000
__size_of_vscp_readNicknamePermanent     (abs)        000000
__size_of_vscp_readRegister              (abs)        000000
__size_of_vscp_readStdReg                (abs)        000000
__size_of_vscp_restoreDefaults           (abs)        000000
__size_of_vscp_sendEvent                 (abs)        000000
__size_of_vscp_sendHeartBeat             (abs)        000000
__size_of_vscp_setControlByte            (abs)        000000
__size_of_vscp_setGUID                   (abs)        000000
__size_of_vscp_setManufacturerId         (abs)        000000
__size_of_vscp_setSegmentCRC             (abs)        000000
__size_of_vscp_setUserID                 (abs)        000000
__size_of_vscp_writeAppReg               (abs)        000000
__size_of_vscp_writeNicknamePermanent    (abs)        000000
__size_of_vscp_writeRegister             (abs)        000000
__size_of_vscp_writeStdReg               (abs)        000000
__size_of_writeCoeffs2Ram                (abs)        000000
__size_of_writeEEPROM                    (abs)        000000
__size_ofi1_ConvertADC                   (abs)        000000
__size_ofi1_WriteTimer0                  (abs)        000000
__smallconst                             smallconst   000B00
_adc                                     bssBIGRAM    00019C
_adc_conversion_flags                    bssBANK0     0000B3
_adc_series_counter                      bssCOMRAM    000049
_current_temp                            bssBANK1     000100
_doOneSecondWork                         text25       003A14
_doWork                                  text1        001870
_doWork$2270                             cstackBANK1  00016E
_doWork$2271                             cstackBANK1  000172
_doWork$2272                             cstackBANK1  000176
_eval_poly                               text11       004AE2
_exp                                     text8        003C1C
_exp$2276                                cstackBANK0  00009D
_floor                                   text12       004674
_frexp                                   text14       0051A0
_getCANFrame                             text74       0059DC
_getCalibrationValue                     text6        0056B0
_getVSCPFrame                            text73       00532C
_handle_sync                             text27       0052AA
_high_alarm                              bssBANK0     0000B4
_init                                    text85       0058C8
_init_app_eeprom                         text38       002318
_init_app_ram                            text90       005788
_interrupt_at_low_vector                 intcodelo    000818
_ldexp                                   text10       004F28
_log                                     text7        004546
_low_alarm                               bssBANK0     0000B5
_main                                    text0        004770
_measurement_clock                       bssBANK1     000112
_readEEPROM                              text82       005D1A
_seconds                                 bssBANK0     0000B6
_seconds_temp                            bssBANK1     00010C
_sendCANFrame                            text69       00588C
_sendTempEvent                           text28       005226
_sendTimer                               bssCOMRAM    00004A
_sendVSCPFrame                           text68       004D1E
_setEventData                            text29       004DD0
_sh_coefficients                         bssBANK1     00011E
_timeout_clock                           bssBANK1     000116
_vscp_alarmstatus                        bssCOMRAM    00004B
_vscp_check_pstorage                     text78       005B6A
_vscp_configtimer                        bssBANK1     00011A
_vscp_deviceURL                          smallconst   000B00
_vscp_doOneSecondWork                    text21       0055D0
_vscp_error                              text26       005DA6
_vscp_getBootLoaderAlgorithm             text49       005DB6
_vscp_getBufferSize                      text48       005DB4
_vscp_getEvent                           text72       005A5C
_vscp_getFamilyCode                      text40       005D80
_vscp_getFamilyType                      text39       005D76
_vscp_getGUID                            text53       005CE2
_vscp_getMDF_URL                         text52       005C72
_vscp_getMajorVersion                    text56       005DBC
_vscp_getManufacturerId                  text50       005CBA
_vscp_getMatrixInfo                      text64       005C28
_vscp_getMinorVersion                    text55       005DBA
_vscp_getRegisterPagesUsed               text47       005DB2
_vscp_getSegmentCRC                      text81       005D94
_vscp_getSubMinorVersion                 text54       005DB8
_vscp_getSubzone                         text23       005D62
_vscp_getUserID                          text51       005CCE
_vscp_getZone                            text24       005D6C
_vscp_goActiveState                      text66       005BD2
_vscp_goBootloaderMode                   text63       005C8A
_vscp_guid_reset                         bssCOMRAM    00004C
_vscp_handleDropNickname                 text58       0059AC
_vscp_handleHeartbeat                    text62       005812
_vscp_handleProbeState                   text65       004A1E
_vscp_handleProtocolEvent                text33       0031DE
_vscp_handleSetNickname                  text61       005B46
_vscp_hour                               bssBANK0     0000B7
_vscp_imsg                               bssBANK0     0000BC
_vscp_init                               text59       005740
_vscp_initbtncnt                         bssBANK0     0000B8
_vscp_initledfunc                        bssCOMRAM    00004D
_vscp_minute                             bssBANK0     0000B9
_vscp_newNodeOnline                      text57       005A32
_vscp_nickname                           bssBANK0     0000BA
_vscp_node_state                         bssBANK0     0000BB
_vscp_node_substate                      bssCOMRAM    00004E
_vscp_omsg                               bssBANK0     0000CA
_vscp_page_select                        bssCOMRAM    000046
_vscp_probe_address                      bssCOMRAM    00004F
_vscp_probe_cnt                          bssCOMRAM    000050
_vscp_readAppReg                         text98       002AB6
_vscp_readNicknamePermanent              text60       005D8A
_vscp_readRegister                       text45       005C0E
_vscp_readStdReg                         text46       004864
_vscp_restoreDefaults                    text37       005D9E
_vscp_second                             bssCOMRAM    000051
_vscp_sendEvent                          text67       005AAE
_vscp_sendHeartBeat                      text22       005AD6
_vscp_setControlByte                     text79       005CF6
_vscp_setGUID                            text43       005BB0
_vscp_setManufacturerId                  text41       005C42
_vscp_setSegmentCRC                      text80       005D08
_vscp_setUserID                          text42       005C5A
_vscp_statuscnt                          bssCOMRAM    000052
_vscp_timer                              bssBANK1     00011C
_vscp_writeAppReg                        text44       000B6E
_vscp_writeNicknamePermanent             text83       005D2C
_vscp_writeRegister                      text35       005B8E
_vscp_writeStdReg                        text36       003E00
_writeCoeffs2Ram                         text91       004FCC
_writeEEPROM                             text84       005AFC
doOneSecondWork@i                        cstackBANK0  00008A
doOneSecondWork@tmp                      cstackBANK0  000089
doWork@B                                 cstackBANK1  00018A
doWork@Rinf                              cstackBANK1  000166
doWork@avarage                           cstackBANK1  000191
doWork@calVoltage                        cstackBANK1  00016A
doWork@i                                 cstackBANK1  00019B
doWork@j                                 cstackBANK1  000190
doWork@resistance                        cstackBANK1  00018C
doWork@setpoint                          cstackBANK1  000195
doWork@temp                              cstackBANK1  000197
doWork@v                                 cstackBANK1  000186
end_of_initialization                    cinit        005808
eval_poly@d                              cstackBANK0  00007A
eval_poly@n                              cstackBANK0  00007B
eval_poly@res                            cstackBANK0  00007D
eval_poly@x                              cstackBANK0  000076
exp@coeff                                smallconst   000B20
exp@exponent                             cstackBANK0  0000A1
exp@sign                                 cstackBANK0  0000A3
exp@x                                    cstackBANK0  000099
floor@expon                              cstackBANK0  000097
floor@i                                  cstackBANK0  000093
floor@x                                  cstackBANK0  00008F
frexp@eptr                               cstackCOMRAM 000012
frexp@value                              cstackCOMRAM 00000E
getCANFrame@flags                        cstackCOMRAM 000023
getCANFrame@pdata                        cstackCOMRAM 000021
getCANFrame@pdlc                         cstackCOMRAM 000020
getCANFrame@pid                          cstackCOMRAM 000022
getCalibrationValue@cal                  cstackCOMRAM 000017
getCalibrationValue@i                    cstackCOMRAM 000019
getVSCPFrame@id                          cstackCOMRAM 00002E
getVSCPFrame@pData                       cstackCOMRAM 000028
getVSCPFrame@pNodeId                     cstackCOMRAM 000025
getVSCPFrame@pPriority                   cstackCOMRAM 000026
getVSCPFrame@pSize                       cstackCOMRAM 000027
getVSCPFrame@pvscpclass                  cstackCOMRAM 00002D
getVSCPFrame@pvscptype                   cstackCOMRAM 000024
handle_sync@i                            cstackBANK0  000089
i1WriteTimer0@timer                      cstackCOMRAM 000003
i1WriteTimer0@timer0                     cstackCOMRAM 000001
i1_ConvertADC                            text101      005DAE
i1_WriteTimer0                           text100      005D50
init_app_eeprom@i                        cstackCOMRAM 000011
init_app_ram@i                           cstackCOMRAM 000021
intlevel0                                text         000000
intlevel1                                text         000000
intlevel2                                text         000000
intlevel3                                text         000000
ldexp@newexp                             cstackBANK0  000085
ldexp@value                              cstackBANK0  000081
log@coeff                                smallconst   000B48
log@exponent                             cstackCOMRAM 000043
log@x                                    cstackBANK0  000081
main@i                                   cstackBANK0  0000B2
readEEPROM@address                       cstackCOMRAM 00000E
readEEPROM@data                          cstackCOMRAM 000011
sendCANFrame@dlc                         cstackCOMRAM 000040
sendCANFrame@id                          cstackCOMRAM 00003C
sendCANFrame@pdata                       cstackCOMRAM 000041
sendCANFrame@rv                          cstackCOMRAM 000042
sendTempEvent@i                          cstackBANK0  000086
sendVSCPFrame@id                         cstackBANK0  00007B
sendVSCPFrame@nodeid                     cstackBANK0  000063
sendVSCPFrame@pData                      cstackBANK0  000066
sendVSCPFrame@priority                   cstackBANK0  000064
sendVSCPFrame@size                       cstackBANK0  000065
sendVSCPFrame@vscpclass                  cstackBANK0  000060
sendVSCPFrame@vscptype                   cstackBANK0  000062
setEventData@ival                        cstackBANK0  000083
setEventData@newval                      cstackBANK0  00007F
setEventData@unit                        cstackBANK0  00007E
setEventData@v                           cstackBANK0  00007C
start                                    init         000AB6
start_initialization                     cinit        0057D0
vscp_getEvent@rv                         cstackCOMRAM 000032
vscp_getGUID@idx                         cstackCOMRAM 000012
vscp_getMDF_URL@idx                      cstackCOMRAM 00000F
vscp_getManufacturerId@idx               cstackCOMRAM 000012
vscp_getMatrixInfo@i                     cstackCOMRAM 00000F
vscp_getMatrixInfo@pData                 cstackCOMRAM 00000E
vscp_getUserID@idx                       cstackCOMRAM 000012
vscp_goBootloaderMode@algorithm          cstackCOMRAM 000011
vscp_handleDropNickname@bytes            cstackCOMRAM 000012
vscp_handleProtocolEvent@byte            cstackBANK0  000096
vscp_handleProtocolEvent@bytes           cstackBANK0  00008C
vscp_handleProtocolEvent@bytes_1163      cstackBANK0  000094
vscp_handleProtocolEvent@bytes_this_time cstackBANK0  000090
vscp_handleProtocolEvent@cb              cstackBANK0  000091
vscp_handleProtocolEvent@i               cstackBANK0  000098
vscp_handleProtocolEvent@i_1155          cstackBANK0  000095
vscp_handleProtocolEvent@i_1158          cstackBANK0  000097
vscp_handleProtocolEvent@i_1166          cstackBANK0  000092
vscp_handleProtocolEvent@j               cstackBANK0  000099
vscp_handleProtocolEvent@k               cstackBANK0  000093
vscp_handleProtocolEvent@len             cstackBANK0  00008D
vscp_handleProtocolEvent@len_1157        cstackBANK0  00008F
vscp_handleProtocolEvent@offset          cstackBANK0  00008A
vscp_handleProtocolEvent@page_save       cstackBANK0  000086
vscp_handleProtocolEvent@page_save_1167  cstackBANK0  000088
vscp_handleProtocolEvent@pos             cstackBANK0  00008B
vscp_handleProtocolEvent@pos_1156        cstackBANK0  00008E
vscp_readAppReg@pos                      cstackCOMRAM 000012
vscp_readAppReg@reg                      cstackCOMRAM 000013
vscp_readAppReg@rv                       cstackCOMRAM 000014
vscp_readRegister@reg                    cstackCOMRAM 000015
vscp_readStdReg@reg                      cstackCOMRAM 000014
vscp_readStdReg@rv                       cstackCOMRAM 000013
vscp_sendEvent@rv                        cstackCOMRAM 000043
vscp_sendHeartBeat@subzone               cstackCOMRAM 000044
vscp_sendHeartBeat@zone                  cstackCOMRAM 000045
vscp_setControlByte@ctrl                 cstackCOMRAM 000011
vscp_setGUID@data                        cstackCOMRAM 000011
vscp_setGUID@idx                         cstackCOMRAM 000012
vscp_setManufacturerId@data              cstackCOMRAM 000011
vscp_setManufacturerId@idx               cstackCOMRAM 000012
vscp_setSegmentCRC@crc                   cstackCOMRAM 000011
vscp_setUserID@data                      cstackCOMRAM 000011
vscp_setUserID@idx                       cstackCOMRAM 000012
vscp_writeAppReg@pos                     cstackCOMRAM 000022
vscp_writeAppReg@reg                     cstackCOMRAM 000023
vscp_writeAppReg@rv                      cstackCOMRAM 000024
vscp_writeAppReg@val                     cstackCOMRAM 000021
vscp_writeNicknamePermanent@nickname     cstackCOMRAM 000011
vscp_writeRegister@reg                   cstackCOMRAM 000035
vscp_writeRegister@value                 cstackCOMRAM 000034
vscp_writeStdReg@code                    cstackCOMRAM 000028
vscp_writeStdReg@code_1147               cstackCOMRAM 00002C
vscp_writeStdReg@idx                     cstackCOMRAM 000030
vscp_writeStdReg@idx_1148                cstackCOMRAM 000031
vscp_writeStdReg@reg                     cstackCOMRAM 000033
vscp_writeStdReg@rv                      cstackCOMRAM 000032
vscp_writeStdReg@value                   cstackCOMRAM 000022
writeCoeffs2Ram@c                        cstackCOMRAM 00001A
writeCoeffs2Ram@i                        cstackCOMRAM 00001D
writeCoeffs2Ram@j                        cstackCOMRAM 00001F
writeEEPROM@address                      cstackCOMRAM 00000E
writeEEPROM@data                         cstackCOMRAM 000010


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 300 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   82[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    9
 This function calls:
		_init
		_vscp_check_pstorage
		_init_app_eeprom
		_vscp_init
		_writeEEPROM
		_vscp_getEvent
		_vscp_goActiveState
		_vscp_handleProbeState
		_vscp_handleProtocolEvent
		_handle_sync
		_vscp_error
		_doOneSecondWork
		_vscp_doOneSecondWork
		_doWork
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _doWork *****************
 Defined at:
		line 429 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temp            4   49[BANK1 ] unsigned char 
  avarage         4   43[BANK1 ] unsigned char 
  resistance      4   38[BANK1 ] unsigned char 
  v               4   32[BANK1 ] unsigned char 
  calVoltage      4    4[BANK1 ] unsigned char 
  Rinf            4    0[BANK1 ] unsigned char 
  setpoint        2   47[BANK1 ] int 
  B               2   36[BANK1 ] unsigned short 
  i               1   53[BANK1 ] unsigned char 
  j               1   42[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0      54       0       0       0       0
      Temps:          0      14       0       0       0       0       0
      Totals:         0      14      54       0       0       0       0
Total ram usage:       68 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_writeEEPROM
		_readEEPROM
		_exp
		_log
		_getCalibrationValue
		_vscp_sendEvent
		___aldiv
		___altofl
		___asfladd
		___fladd
		___asfldiv
		___fldiv
		___flmul
		___asflsub
		___flsub
		___fltol
		___lwtofl
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwtofl *****************
 Defined at:
		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwtofl.c"
 Parameters:    Size  Location     Type
  c               2   23[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   23[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function ___asfldiv *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfldiv.c"
 Parameters:    Size  Location     Type
  f1p             2    0[BANK0 ] PTR 
		 -> doWork@avarage(4), 
  f2              4    2[BANK0 ] PTR 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] PTR 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fldiv
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function ___asfladd *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfladd.c"
 Parameters:    Size  Location     Type
  f1p             2   43[COMRAM] PTR 
		 -> doWork@temp(4), doWork@avarage(4), 
  f2              4   45[COMRAM] PTR 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   43[COMRAM] PTR 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  dividend        4   28[BANK0 ] long 
  divisor         4   32[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   38[BANK0 ] long 
  sign            1   37[BANK0 ] unsigned char 
  counter         1   36[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   28[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       8       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      14       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function _getCalibrationValue *****************
 Defined at:
		line 872 in file "../main.c"
 Parameters:    Size  Location     Type
  i               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  i               1   24[COMRAM] unsigned char 
  cal             2   22[COMRAM] short 
 Return value:  Size  Location     Type
                  2   17[COMRAM] short 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function _log *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\log.c"
 Parameters:    Size  Location     Type
  x               4   33[BANK0 ] short 
 Auto vars:     Size  Location     Type
  exponent        2   66[COMRAM] int 
 Return value:  Size  Location     Type
                  4   33[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       4       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___fladd
		___flmul
		___awtofl
		_eval_poly
		_frexp
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function _exp *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\exp.c"
 Parameters:    Size  Location     Type
  x               4   57[BANK0 ] int 
 Auto vars:     Size  Location     Type
  exponent        2   65[BANK0 ] int 
  sign            1   67[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   57[BANK0 ] unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       7       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      11       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___fldiv
		___asflmul
		___asflsub
		___awtofl
		_floor
		_eval_poly
		_ldexp
		___flge
		___flneg
		___fltol
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function ___flneg *****************
 Defined at:
		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flneg.c"
 Parameters:    Size  Location     Type
  f1              4   13[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _ldexp *****************
 Defined at:
		line 278 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           4   33[BANK0 ] unsigned char 
  newexp          2   37[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   33[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         3       6       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _eval_poly *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\evalpoly.c"
 Parameters:    Size  Location     Type
  x               4   22[BANK0 ] int 
  d               1   26[BANK0 ] PTR const 
		 -> log@coeff(36), exp@coeff(40), 
  n               2   27[BANK0 ] int 
 Auto vars:     Size  Location     Type
  res             4   29[BANK0 ] int 
 Return value:  Size  Location     Type
                  4   22[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       7       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         1      11       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
		___flmul
 This function is called by:
		_exp
		_log
 This function uses a non-reentrant model


 *************** function _floor *****************
 Defined at:
		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\floor.c"
 Parameters:    Size  Location     Type
  x               4   47[BANK0 ] int 
 Auto vars:     Size  Location     Type
  i               4   51[BANK0 ] int 
  expon           2   55[BANK0 ] int 
 Return value:  Size  Location     Type
                  4   47[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      10       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___altofl
		___fladd
		___flge
		_frexp
		___fltol
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function ___fltol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fltol.c"
 Parameters:    Size  Location     Type
  f1              4   22[BANK0 ] int 
 Auto vars:     Size  Location     Type
  exp1            1   27[BANK0 ] unsigned char 
  sign1           1   26[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   22[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         4       6       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_doWork
		_setEventData
		_exp
		_floor
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 255 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           4   13[COMRAM] long 
  eptr            2   17[COMRAM] PTR int 
		 -> log@exponent(2), floor@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_floor
		_log
 This function uses a non-reentrant model


 *************** function ___flge *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flge.c"
 Parameters:    Size  Location     Type
  ff1             4   13[COMRAM] PTR int 
  ff2             4   17[COMRAM] PTR int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_exp
		_floor
 This function uses a non-reentrant model


 *************** function ___altofl *****************
 Defined at:
		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\altofl.c"
 Parameters:    Size  Location     Type
  c               4   42[BANK0 ] long 
 Auto vars:     Size  Location     Type
  sign            1   46[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   42[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       5       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
		_floor
 This function uses a non-reentrant model


 *************** function ___asflsub *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflsub.c"
 Parameters:    Size  Location     Type
  f1p             2   30[BANK0 ] PTR 
		 -> exp@x(4), doWork@temp(4), 
  f2              4   32[BANK0 ] PTR 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   30[BANK0 ] PTR 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___flsub
 This function is called by:
		_doWork
		_exp
 This function uses a non-reentrant model


 *************** function ___flsub *****************
 Defined at:
		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flsub.c"
 Parameters:    Size  Location     Type
  f1              4   22[BANK0 ] PTR 
  f2              4   26[BANK0 ] PTR 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   22[BANK0 ] PTR 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       8       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       8       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
 This function is called by:
		_doWork
		___asflsub
 This function uses a non-reentrant model


 *************** function ___asflmul *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflmul.c"
 Parameters:    Size  Location     Type
  mp              1    wreg     PTR 
		 -> exp@x(4), 
  multiplicand    4   22[BANK0 ] PTR 
 Auto vars:     Size  Location     Type
  mp              1   65[COMRAM] PTR 
		 -> exp@x(4), 
 Return value:  Size  Location     Type
                  4   22[BANK0 ] PTR 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       4       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___flmul
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function ___fldiv *****************
 Defined at:
		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fldiv.c"
 Parameters:    Size  Location     Type
  f1              4   43[COMRAM] PTR 
  f2              4   47[COMRAM] PTR 
 Auto vars:     Size  Location     Type
  f3              4   58[COMRAM] PTR 
  sign            1   64[COMRAM] unsigned char 
  exp             1   63[COMRAM] unsigned char 
  cntr            1   62[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   43[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:        14       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        22       0       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
		_Celsius2Fahrenheit
		___asfldiv
		_exp
 This function uses a non-reentrant model


 *************** function _vscp_doOneSecondWork *****************
 Defined at:
		line 516 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_vscp_getZone
		_vscp_getSubzone
		_vscp_sendHeartBeat
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vscp_sendHeartBeat *****************
 Defined at:
		line 370 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  zone            1    wreg     unsigned char 
  subzone         1   67[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  zone            1   68[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vscp_sendEvent
 This function is called by:
		_vscp_doOneSecondWork
 This function uses a non-reentrant model


 *************** function _vscp_getSubzone *****************
 Defined at:
		line 2734 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_doOneSecondWork
 This function uses a non-reentrant model


 *************** function _vscp_getZone *****************
 Defined at:
		line 2725 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_doOneSecondWork
 This function uses a non-reentrant model


 *************** function _doOneSecondWork *****************
 Defined at:
		line 702 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   42[BANK0 ] unsigned char 
  tmp             1   41[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_readEEPROM
		_vscp_sendEvent
		_sendTempEvent
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vscp_error *****************
 Defined at:
		line 191 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _handle_sync *****************
 Defined at:
		line 1253 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   41[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_readEEPROM
		_sendTempEvent
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sendTempEvent *****************
 Defined at:
		line 815 in file "../main.c"
 Parameters:    Size  Location     Type
  i               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  i               1   38[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_readEEPROM
		_vscp_sendEvent
		_setEventData
 This function is called by:
		_doOneSecondWork
		_handle_sync
 This function uses a non-reentrant model


 *************** function _setEventData *****************
 Defined at:
		line 844 in file "../main.c"
 Parameters:    Size  Location     Type
  v               2   28[BANK0 ] int 
  unit            1   30[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  newval          4   31[BANK0 ] unsigned char 
  ival            2   35[BANK0 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Celsius2Kelvin
		_Celsius2Fahrenheit
		___awtofl
		___fltol
 This function is called by:
		_sendTempEvent
 This function uses a non-reentrant model


 *************** function _Celsius2Fahrenheit *****************
 Defined at:
		line 42 in file "../ntc.c"
 Parameters:    Size  Location     Type
  tc              4   22[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   22[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
		___fldiv
		___flmul
 This function is called by:
		_setEventData
 This function uses a non-reentrant model


 *************** function ___fladd *****************
 Defined at:
		line 89 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fladd.c"
 Parameters:    Size  Location     Type
  f1              4   28[COMRAM] int 
  f2              4   32[COMRAM] int 
 Auto vars:     Size  Location     Type
  exp1            1   42[COMRAM] unsigned char 
  exp2            1   41[COMRAM] unsigned char 
  sign            1   40[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   28[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
		_Celsius2Fahrenheit
		_Celsius2Kelvin
		___asfladd
		_floor
		___flsub
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function _Celsius2Kelvin *****************
 Defined at:
		line 61 in file "../ntc.c"
 Parameters:    Size  Location     Type
  tc              4   43[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   43[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
 This function is called by:
		_setEventData
 This function uses a non-reentrant model


 *************** function _vscp_handleProtocolEvent *****************
 Defined at:
		line 786 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  bytes           1   44[BANK0 ] unsigned char 
  page_save       2   40[BANK0 ] unsigned short 
  i               1   50[BANK0 ] unsigned char 
  page_save       2   38[BANK0 ] unsigned short 
  byte            1   54[BANK0 ] unsigned char 
  bytes           1   52[BANK0 ] unsigned char 
  cb              1   49[BANK0 ] unsigned char 
  bytes_this_t    1   48[BANK0 ] unsigned char 
  j               1   57[BANK0 ] unsigned char 
  i               1   55[BANK0 ] unsigned char 
  k               1   51[BANK0 ] unsigned char 
  i               1   53[BANK0 ] unsigned char 
  len             1   47[BANK0 ] unsigned char 
  pos             1   46[BANK0 ] unsigned char 
  i               1   56[BANK0 ] unsigned char 
  len             1   45[BANK0 ] unsigned char 
  pos             1   43[BANK0 ] unsigned char 
  offset          1   42[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0      20       0       0       0       0       0
      Temps:          0       7       0       0       0       0       0
      Totals:         0      27       0       0       0       0       0
Total ram usage:       27 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_vscp_init
		_vscp_sendEvent
		_vscp_readAppReg
		_vscp_writeAppReg
		_vscp_getGUID
		_vscp_getMDF_URL
		_vscp_getMatrixInfo
		_vscp_goBootloaderMode
		_vscp_handleHeartbeat
		_vscp_handleSetNickname
		_vscp_handleDropNickname
		_vscp_newNodeOnline
		_vscp_readRegister
		_vscp_readStdReg
		_vscp_writeRegister
		_vscp_writeStdReg
		___lbmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   13[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   14[COMRAM] unsigned char 
  rem             1   16[COMRAM] unsigned char 
  counter         1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_writeRegister *****************
 Defined at:
		line 678 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
  value           1   51[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   52[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vscp_writeAppReg
		_vscp_writeStdReg
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_writeStdReg *****************
 Defined at:
		line 691 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
  value           1   33[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   50[COMRAM] unsigned char 
  code            4   43[COMRAM] unsigned long 
  idx             1   48[COMRAM] unsigned char 
  code            4   39[COMRAM] unsigned long 
  idx             1   47[COMRAM] unsigned char 
  rv              1   49[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:        12       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:        18       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_vscp_getGUID
		_vscp_setGUID
		_vscp_getUserID
		_vscp_setUserID
		_vscp_getManufacturerId
		_vscp_setManufacturerId
		_vscp_getFamilyCode
		_vscp_getFamilyType
		_vscp_restoreDefaults
 This function is called by:
		_vscp_writeRegister
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_restoreDefaults *****************
 Defined at:
		line 2834 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_init_app_eeprom
		_init_app_ram
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _init_app_eeprom *****************
 Defined at:
		line 1020 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_main
		_vscp_restoreDefaults
 This function uses a non-reentrant model


 *************** function _vscp_getFamilyType *****************
 Defined at:
		line 2825 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned long 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getFamilyCode *****************
 Defined at:
		line 2815 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned long 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_setManufacturerId *****************
 Defined at:
		line 2651 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
  data            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_setUserID *****************
 Defined at:
		line 2629 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
  data            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_setGUID *****************
 Defined at:
		line 2598 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
  data            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_writeAppReg *****************
 Defined at:
		line 1891 in file "../main.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
  val             1   32[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   34[COMRAM] unsigned char 
  pos             1   33[COMRAM] unsigned char 
  rv              1   35[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_writeEEPROM
		_readEEPROM
		_writeCoeffs2Ram
 This function is called by:
		_vscp_writeRegister
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_readRegister *****************
 Defined at:
		line 553 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_vscp_readAppReg
		_vscp_readStdReg
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_readStdReg *****************
 Defined at:
		line 566 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   19[COMRAM] unsigned char 
  rv              1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_getMajorVersion
		_vscp_getMinorVersion
		_vscp_getSubMinorVersion
		_vscp_getGUID
		_vscp_getMDF_URL
		_vscp_getUserID
		_vscp_getManufacturerId
		_vscp_getBootLoaderAlgorithm
		_vscp_getBufferSize
		_vscp_getRegisterPagesUsed
 This function is called by:
		_vscp_readRegister
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_getRegisterPagesUsed *****************
 Defined at:
		line 2716 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getBufferSize *****************
 Defined at:
		line 2669 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getBootLoaderAlgorithm *****************
 Defined at:
		line 2660 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getManufacturerId *****************
 Defined at:
		line 2640 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_readStdReg
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getUserID *****************
 Defined at:
		line 2620 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_readStdReg
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getMDF_URL *****************
 Defined at:
		line 2611 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_getGUID *****************
 Defined at:
		line 2588 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_readStdReg
		_vscp_writeStdReg
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_getSubMinorVersion *****************
 Defined at:
		line 2577 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getMinorVersion *****************
 Defined at:
		line 2568 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getMajorVersion *****************
 Defined at:
		line 2559 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_newNodeOnline *****************
 Defined at:
		line 494 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vscp_sendEvent
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_handleDropNickname *****************
 Defined at:
		line 430 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  bytes           1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_vscp_init
		_vscp_writeNicknamePermanent
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_init *****************
 Defined at:
		line 117 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_readNicknamePermanent
 This function is called by:
		_main
		_vscp_handleDropNickname
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_readNicknamePermanent *****************
 Defined at:
		line 2760 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_init
 This function uses a non-reentrant model


 *************** function _vscp_handleSetNickname *****************
 Defined at:
		line 414 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_writeNicknamePermanent
		_vscp_setSegmentCRC
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_handleHeartbeat *****************
 Defined at:
		line 388 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_writeNicknamePermanent
		_vscp_getSegmentCRC
		_vscp_setSegmentCRC
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_goBootloaderMode *****************
 Defined at:
		line 2743 in file "../main.c"
 Parameters:    Size  Location     Type
  algorithm       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  algorithm       1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_getMatrixInfo *****************
 Defined at:
		line 2678 in file "../main.c"
 Parameters:    Size  Location     Type
  pData           1    wreg     PTR unsigned char 
		 -> vscp_omsg(13), 
 Auto vars:     Size  Location     Type
  pData           1   13[COMRAM] PTR unsigned char 
		 -> vscp_omsg(13), 
  i               1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_handleProbeState *****************
 Defined at:
		line 200 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_vscp_goActiveState
		_vscp_sendEvent
		_vscp_writeNicknamePermanent
		_vscp_setSegmentCRC
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vscp_goActiveState *****************
 Defined at:
		line 350 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vscp_sendEvent
 This function is called by:
		_main
		_vscp_handleProbeState
 This function uses a non-reentrant model


 *************** function _vscp_sendEvent *****************
 Defined at:
		line 1270 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rv              1   66[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_sendVSCPFrame
 This function is called by:
		_doWork
		_doOneSecondWork
		_sendTempEvent
		_vscp_handleProbeState
		_vscp_goActiveState
		_vscp_sendHeartBeat
		_vscp_newNodeOnline
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _sendVSCPFrame *****************
 Defined at:
		line 2849 in file "../main.c"
 Parameters:    Size  Location     Type
  vscpclass       2    0[BANK0 ] unsigned short 
  vscptype        1    2[BANK0 ] unsigned char 
  nodeid          1    3[BANK0 ] unsigned char 
  priority        1    4[BANK0 ] unsigned char 
  size            1    5[BANK0 ] unsigned char 
  pData           1    6[BANK0 ] PTR unsigned char 
		 -> vscp_omsg(13), 
 Auto vars:     Size  Location     Type
  id              4   27[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       7       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0
      Temps:          0      20       0       0       0       0       0
      Totals:         0      31       0       0       0       0       0
Total ram usage:       31 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_sendCANFrame
 This function is called by:
		_vscp_sendEvent
 This function uses a non-reentrant model


 *************** function _sendCANFrame *****************
 Defined at:
		line 2896 in file "../main.c"
 Parameters:    Size  Location     Type
  id              4   59[COMRAM] unsigned long 
  dlc             1   63[COMRAM] unsigned char 
  pdata           1   64[COMRAM] PTR unsigned char 
		 -> vscp_omsg(13), 
 Auto vars:     Size  Location     Type
  rv              1   65[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ECANSendMessage
 This function is called by:
		_sendVSCPFrame
 This function uses a non-reentrant model


 *************** function _ECANSendMessage *****************
 Defined at:
		line 617 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  id              4   23[COMRAM] unsigned long 
  data            1   27[COMRAM] PTR unsigned char 
		 -> vscp_omsg(13), 
  dataLen         1   28[COMRAM] unsigned char 
  msgFlags        1   29[COMRAM] enum E16306
 Auto vars:     Size  Location     Type
  pb             18   31[COMRAM] PTR unsigned char [9]
		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
		 -> B0CON(1), 
  ptr             2   57[COMRAM] PTR unsigned char 
		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
		 -> B0CON(1), 
  tempPtr         2   53[COMRAM] PTR unsigned char 
		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
		 -> B0CON(1), 
  i               1   56[COMRAM] unsigned char 
  temp            1   55[COMRAM] unsigned char 
  tempBSEL0       1   52[COMRAM] struct .
  j               1   51[COMRAM] unsigned char 
  buffers         1   50[COMRAM] unsigned char 
  mode            1   49[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15660
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         7       0       0       0       0       0       0
      Locals:        28       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        36       0       0       0       0       0       0
Total ram usage:       36 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__CANIDToRegs
 This function is called by:
		_sendCANFrame
 This function uses a non-reentrant model


 *************** function __CANIDToRegs *****************
 Defined at:
		line 1099 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  ptr             2   13[COMRAM] PTR unsigned char 
		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
		 -> B0CON(1), 
  val             4   15[COMRAM] unsigned long 
  type            1   19[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Value           1   22[COMRAM] PTR struct _CAN_MESSAGE_
		 -> _CANIDToRegs@val(4), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         7       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ECANSendMessage
 This function uses a non-reentrant model


 *************** function _vscp_getEvent *****************
 Defined at:
		line 1290 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rv              1   49[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_getVSCPFrame
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _getVSCPFrame *****************
 Defined at:
		line 2875 in file "../main.c"
 Parameters:    Size  Location     Type
  pvscpclass      1    wreg     PTR unsigned short 
		 -> vscp_imsg(14), 
  pvscptype       1   35[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pNodeId         1   36[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pPriority       1   37[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pSize           1   38[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pData           1   39[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
 Auto vars:     Size  Location     Type
  pvscpclass      1   44[COMRAM] PTR unsigned short 
		 -> vscp_imsg(14), 
  id              4   45[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_getCANFrame
 This function is called by:
		_vscp_getEvent
 This function uses a non-reentrant model


 *************** function _getCANFrame *****************
 Defined at:
		line 2917 in file "../main.c"
 Parameters:    Size  Location     Type
  pid             1    wreg     PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  pdlc            1   31[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pdata           1   32[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
 Auto vars:     Size  Location     Type
  pid             1   33[COMRAM] PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  flags           1   34[COMRAM] enum E16409
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ECANReceiveMessage
 This function is called by:
		_getVSCPFrame
 This function uses a non-reentrant model


 *************** function _ECANReceiveMessage *****************
 Defined at:
		line 803 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  id              1    wreg     PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  data            1   20[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  dataLen         1   21[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  msgFlags        1   22[COMRAM] PTR enum E16324
		 -> getCANFrame@flags(1), 
 Auto vars:     Size  Location     Type
  id              1   25[COMRAM] PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  ptr             2   29[COMRAM] PTR unsigned char 
		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
  savedPtr        2   23[COMRAM] PTR unsigned char 
		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
  temp            1   28[COMRAM] struct .
  mode            1   27[COMRAM] unsigned char 
  i               1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15660
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__ECANPointBuffer
		__RegsToCANID
 This function is called by:
		_getCANFrame
 This function uses a non-reentrant model


 *************** function __RegsToCANID *****************
 Defined at:
		line 1156 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  ptr             2   13[COMRAM] PTR unsigned char 
		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
  val             1   15[COMRAM] PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  type            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Value           1   19[COMRAM] PTR struct _CAN_MESSAGE_
		 -> getVSCPFrame@id(4), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ECANReceiveMessage
 This function uses a non-reentrant model


 *************** function __ECANPointBuffer *****************
 Defined at:
		line 1207 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  b               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  b               1   16[COMRAM] unsigned char 
  pt              2   17[COMRAM] PTR unsigned char 
		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 Return value:  Size  Location     Type
                  2   13[COMRAM] PTR unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ECANReceiveMessage
 This function uses a non-reentrant model


 *************** function _vscp_check_pstorage *****************
 Defined at:
		line 166 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_writeNicknamePermanent
		_vscp_getSegmentCRC
		_vscp_setSegmentCRC
		_vscp_setControlByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vscp_setControlByte *****************
 Defined at:
		line 2796 in file "../main.c"
 Parameters:    Size  Location     Type
  ctrl            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ctrl            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_check_pstorage
 This function uses a non-reentrant model


 *************** function _vscp_setSegmentCRC *****************
 Defined at:
		line 2787 in file "../main.c"
 Parameters:    Size  Location     Type
  crc             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  crc             1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_check_pstorage
		_vscp_handleProbeState
		_vscp_handleHeartbeat
		_vscp_handleSetNickname
 This function uses a non-reentrant model


 *************** function _vscp_getSegmentCRC *****************
 Defined at:
		line 2778 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_check_pstorage
		_vscp_handleHeartbeat
 This function uses a non-reentrant model


 *************** function _readEEPROM *****************
 Defined at:
		line 92 in file "../../vscp_firmware/pic/common/eeprom.c"
 Parameters:    Size  Location     Type
  address         2   13[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
  data            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_doWork
		_doOneSecondWork
		_sendTempEvent
		_getCalibrationValue
		_writeCoeffs2Ram
		_handle_sync
		_vscp_readAppReg
		_vscp_writeAppReg
		_vscp_getGUID
		_vscp_getUserID
		_vscp_getManufacturerId
		_vscp_getZone
		_vscp_getSubzone
		_vscp_readNicknamePermanent
		_vscp_getSegmentCRC
 This function uses a non-reentrant model


 *************** function _vscp_writeNicknamePermanent *****************
 Defined at:
		line 2769 in file "../main.c"
 Parameters:    Size  Location     Type
  nickname        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  nickname        1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_check_pstorage
		_vscp_handleProbeState
		_vscp_handleHeartbeat
		_vscp_handleSetNickname
		_vscp_handleDropNickname
 This function uses a non-reentrant model


 *************** function _writeEEPROM *****************
 Defined at:
		line 23 in file "../../vscp_firmware/pic/common/eeprom.c"
 Parameters:    Size  Location     Type
  address         2   13[COMRAM] unsigned short 
  data            1   15[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_doWork
		_init_app_eeprom
		_vscp_writeAppReg
		_vscp_setGUID
		_vscp_setUserID
		_vscp_setManufacturerId
		_vscp_goBootloaderMode
		_vscp_writeNicknamePermanent
		_vscp_setSegmentCRC
		_vscp_setControlByte
 This function uses a non-reentrant model


 *************** function _init *****************
 Defined at:
		line 886 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_WriteTimer0
		_ConvertADC
		_init_app_ram
		_OpenTimer0
		_OpenADC
		_ECANInitialize
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ECANInitialize *****************
 Defined at:
		line 168 in file "../ECAN.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ECANSetOperationMode
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function _ECANSetOperationMode *****************
 Defined at:
		line 1012 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     enum E16337
 Auto vars:     Size  Location     Type
  mode            1   13[COMRAM] enum E16337
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ECANInitialize
 This function uses a non-reentrant model


 *************** function _OpenADC *****************
 Defined at:
		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c"
 Parameters:    Size  Location     Type
  config          1    wreg     unsigned char 
  config2         1   13[COMRAM] unsigned char 
  portconfig      1   14[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  config          1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function _OpenTimer0 *****************
 Defined at:
		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
 Parameters:    Size  Location     Type
  config          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  config          1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function _init_app_ram *****************
 Defined at:
		line 985 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   32[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_writeCoeffs2Ram
 This function is called by:
		_init
		_vscp_restoreDefaults
 This function uses a non-reentrant model


 *************** function _writeCoeffs2Ram *****************
 Defined at:
		line 967 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  c               3   25[COMRAM] unsigned char [3]
  j               2   30[COMRAM] int 
  i               2   28[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
		___wmul
 This function is called by:
		_init_app_ram
		_vscp_writeAppReg
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c"
 Parameters:    Size  Location     Type
  multiplier      2   17[COMRAM] unsigned int 
  multiplicand    2   19[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   21[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   17[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_doWork
		_writeCoeffs2Ram
 This function uses a non-reentrant model


 *************** function _ConvertADC *****************
 Defined at:
		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function _WriteTimer0 *****************
 Defined at:
		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 Parameters:    Size  Location     Type
  timer0          2   13[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  timer           2   15[COMRAM] struct Timers
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function ___awtofl *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awtofl.c"
 Parameters:    Size  Location     Type
  c               2   23[COMRAM] int 
 Auto vars:     Size  Location     Type
  f1              4    0        int 
  sign            1   29[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   23[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_setEventData
		_exp
		_log
 This function uses a non-reentrant model


 *************** function ___flmul *****************
 Defined at:
		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flmul.c"
 Parameters:    Size  Location     Type
  f1              4    0[BANK0 ] unsigned char 
  f2              4    4[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  f3_as_produc    4   16[BANK0 ] unsigned long 
  sign            1   21[BANK0 ] unsigned char 
  cntr            1   20[BANK0 ] unsigned char 
  exp             1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       8       0       0       0       0       0
      Locals:         0      14       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      22       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
		_Celsius2Fahrenheit
		___asflmul
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___flpack *****************
 Defined at:
		line 64 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\double.c"
 Parameters:    Size  Location     Type
  arg             4   13[COMRAM] unsigned long 
  exp             1   17[COMRAM] unsigned char 
  sign            1   18[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		___altofl
		___awtofl
		___fladd
		___fldiv
		___flmul
		___lwtofl
 This function uses a non-reentrant model


 *************** function _vscp_readAppReg *****************
 Defined at:
		line 1278 in file "../main.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   18[COMRAM] unsigned char 
  pos             1   17[COMRAM] unsigned char 
  rv              1   19[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_readRegister
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _interrupt_at_low_vector *****************
 Defined at:
		line 134 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          9       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_ConvertADC
		i1_WriteTimer0
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1_WriteTimer0 *****************
 Defined at:
		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 Parameters:    Size  Location     Type
  timer0          2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  WriteTimer0     2    2[COMRAM] struct Timers
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_interrupt_at_low_vector
 This function uses a non-reentrant model


 *************** function i1_ConvertADC *****************
 Defined at:
		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_interrupt_at_low_vector
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\altofl.c
		___altofl      		CODE           	56F8	0000	72

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\altofl.c estimated size: 72

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfladd.c
		___asfladd     		CODE           	5666	0000	74

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfladd.c estimated size: 74

../main.c
		_vscp_getBootLo		CODE           	5DB6	0000	2
		_vscp_getZone  		CODE           	5D6C	0000	10
		_init          		CODE           	58C8	0000	60
		_vscp_setManufa		CODE           	5C42	0000	24
		_vscp_setGUID  		CODE           	5BB0	0000	34
		_sendTempEvent 		CODE           	5226	0000	132
		_getVSCPFrame  		CODE           	532C	0000	120
		_vscp_setContro		CODE           	5CF6	0000	18
		_vscp_getUserID		CODE           	5CCE	0000	20
		_setEventData  		CODE           	4DD0	0000	176
		_doWork        		CODE           	1870	0000	2728
		_vscp_getSegmen		CODE           	5D94	0000	10
		_getCalibration		CODE           	56B0	0000	72
		_vscp_restoreDe		CODE           	5D9E	0000	8
		_vscp_readAppRe		CODE           	2AB6	0000	1832
		_vscp_getFamily		CODE           	5D80	0000	10
		_vscp_setUserID		CODE           	5C5A	0000	24
		_getCANFrame   		CODE           	59DC	0000	44
		_main          		CODE           	4770	0000	244
		_handle_sync   		CODE           	52AA	0000	130
		_vscp_getRegist		CODE           	5DB2	0000	2
		_vscp_setSegmen		CODE           	5D08	0000	18
		_doOneSecondWor		CODE           	3A14	0000	520
		_sendVSCPFrame 		CODE           	4D1E	0000	178
		_vscp_getMDF_UR		CODE           	5C72	0000	24
		_init_app_eepro		CODE           	2318	0000	1950
		_sendCANFrame  		CODE           	588C	0000	60
		_vscp_writeAppR		CODE           	0B6E	0000	3330
		_vscp_getFamily		CODE           	5D76	0000	10
		_vscp_getBuffer		CODE           	5DB4	0000	2
		_vscp_getSubzon		CODE           	5D62	0000	10
		_vscp_getMatrix		CODE           	5C28	0000	26
		_vscp_goBootloa		CODE           	5C8A	0000	24
		_writeCoeffs2Ra		CODE           	4FCC	0000	160
		_vscp_readNickn		CODE           	5D8A	0000	10
		_interrupt_at_l		CODE           	0818	0000	670
		_vscp_getMajorV		CODE           	5DBC	0000	2
		_vscp_getMinorV		CODE           	5DBA	0000	2
		_vscp_writeNick		CODE           	5D2C	0000	18
		_init_app_ram  		CODE           	5788	0000	72
		_vscp_getManufa		CODE           	5CBA	0000	20
		_vscp_getSubMin		CODE           	5DB8	0000	2
		_vscp_getGUID  		CODE           	5CE2	0000	20

../main.c estimated size: 12828

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awtofl.c
		___awtofl      		CODE           	593E	0000	58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awtofl.c estimated size: 58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c
		_WriteTimer0   		CODE           	5D3E	0000	18

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c estimated size: 18

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flge.c
		___flge        		CODE           	5538	0000	76

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flge.c estimated size: 76

../../vscp_firmware/pic/common/eeprom.c
		_readEEPROM    		CODE           	5D1A	0000	18
		_writeEEPROM   		CODE           	5AFC	0000	38

../../vscp_firmware/pic/common/eeprom.c estimated size: 56

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\frexp.c
		_ldexp         		CODE           	4F28	0000	164
		_frexp         		CODE           	51A0	0000	134

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\frexp.c estimated size: 298

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c
		___wmul        		CODE           	5904	0000	58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c estimated size: 58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\exp.c
		_exp           		CODE           	3C1C	0000	484

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\exp.c estimated size: 484

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\evalpoly.c
		_eval_poly     		CODE           	4AE2	0000	192

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\evalpoly.c estimated size: 192

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwtofl.c
		___lwtofl      		CODE           	5A08	0000	42

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwtofl.c estimated size: 42

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c
		_OpenADC       		CODE           	548E	0000	92

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c estimated size: 92

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\log.c
		_log           		CODE           	4546	0000	302

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\log.c estimated size: 302

../ECAN.c
		_ECANReceiveMes		CODE           	3806	0000	526
		__RegsToCANID  		CODE           	4132	0000	356
		__ECANPointBuff		CODE           	53A4	0000	118
		_ECANInitialize		CODE           	510A	0000	150
		__CANIDToRegs  		CODE           	43F6	0000	336
		_ECANSetOperati		CODE           	5CA2	0000	24
		_ECANSendMessag		CODE           	3FCC	0000	358

../ECAN.c estimated size: 1868

shared
		exp@coeff      		SMALLCONST     	0B20	0000	40
		_vscp_deviceURL		SMALLCONST     	0B00	0000	32
		i1_ConvertADC  		CODE           	5DAE	0000	4
		__initializatio		CODE           	57D0	0000	56
		i1_WriteTimer0 		CODE           	5D50	0000	18
		log@coeff      		SMALLCONST     	0B48	0000	36

shared estimated size: 186

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lbmod.c
		___lbmod       		CODE           	5A86	0000	40

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lbmod.c estimated size: 40

../ntc.c
		_Celsius2Kelvin		CODE           	5978	0000	52
		_Celsius2Fahren		CODE           	541A	0000	116

../ntc.c estimated size: 168

../../vscp_firmware/common/vscp_firmware.c
		_vscp_getEvent 		CODE           	5A5C	0000	42
		_vscp_handleHea		CODE           	5812	0000	62
		_vscp_readRegis		CODE           	5C0E	0000	26
		_vscp_writeRegi		CODE           	5B8E	0000	34
		_vscp_error    		CODE           	5DA6	0000	4
		_vscp_readStdRe		CODE           	4864	0000	228
		_vscp_goActiveS		CODE           	5BD2	0000	30
		_vscp_doOneSeco		CODE           	55D0	0000	76
		_vscp_sendEvent		CODE           	5AAE	0000	40
		_vscp_check_pst		CODE           	5B6A	0000	36
		_vscp_writeStdR		CODE           	3E00	0000	460
		_vscp_handlePro		CODE           	31DE	0000	1576
		_vscp_handleDro		CODE           	59AC	0000	48
		_vscp_handleSet		CODE           	5B46	0000	36
		_vscp_handlePro		CODE           	4A1E	0000	196
		_vscp_sendHeart		CODE           	5AD6	0000	38
		_vscp_newNodeOn		CODE           	5A32	0000	42
		_vscp_init     		CODE           	5740	0000	72

../../vscp_firmware/common/vscp_firmware.c estimated size: 3046

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\aldiv.c
		___aldiv       		CODE           	4C62	0000	188

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\aldiv.c estimated size: 188

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fldiv.c
		___fldiv       		CODE           	4E80	0000	168

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fldiv.c estimated size: 168

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flsub.c
		___flsub       		CODE           	5850	0000	60

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flsub.c estimated size: 60

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flneg.c
		___flneg       		CODE           	5B22	0000	36

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flneg.c estimated size: 36

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c
		_OpenTimer0    		CODE           	5BF0	0000	30

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c estimated size: 30

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfldiv.c
		___asfldiv     		CODE           	561C	0000	74

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfldiv.c estimated size: 74

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflsub.c
		___asflsub     		CODE           	54EA	0000	78

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflsub.c estimated size: 78

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flmul.c
		___flmul       		CODE           	4948	0000	214

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flmul.c estimated size: 214

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fltol.c
		___fltol       		CODE           	506C	0000	158

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fltol.c estimated size: 158

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\double.c
		___flpack      		CODE           	4BA2	0000	192

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\double.c estimated size: 192

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c
		_ConvertADC    		CODE           	5DAA	0000	4

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c estimated size: 4

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflmul.c
		___asflmul     		CODE           	5584	0000	76

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflmul.c estimated size: 76

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\floor.c
		_floor         		CODE           	4674	0000	252

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\floor.c estimated size: 252

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fladd.c
		___fladd       		CODE           	4296	0000	352

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fladd.c estimated size: 352

