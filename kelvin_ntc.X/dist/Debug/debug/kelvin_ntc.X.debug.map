Microchip MPLAB XC8 Compiler V1.21 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.21\dat\en_msgs.txt \
  --UDF=html\kelvin_ntc.X.debug.link.html -cs \
  -h+dist/Debug/debug\kelvin_ntc.X.debug.sym \
  --cmf=dist/Debug/debug\kelvin_ntc.X.debug.cmf -z -Q18F2580 \
  -oC:\Users\GRODAN~1\AppData\Local\Temp\s9io.6 \
  -Mdist/Debug/debug/kelvin_ntc.X.debug.map -E1 -ver=XC8 -ACODE=072h-07CFFh \
  -ACONST=072h-07CFFh -ASMALLCONST=0600h-06FFhx119 \
  -AMEDIUMCONST=0600h-07CFFh -ACOMRAM=01h-05Fh -AABS1=00h-05EEh \
  -ABIGRAM=01h-05EEh -ARAM=060h-0FFh,0100h-01FFhx4,0500h-05EEh \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05EEh \
  -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0F9Bh,0F9Dh-0FD3h,0FD5h-0FDAh,0FE0h-0FE2h,0FE8h-0FEAh,0FF0h-0FFBh \
  -preset_vec=00h,intcode,intcodelo=018h,powerup,init,end_init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE \
  C:\Users\GRODAN~1\AppData\Local\Temp\s9io.obj \
  dist/Debug/debug\kelvin_ntc.X.debug.obj \
  C:\Program Files (x86)\Microchip\xc8\v1.21\lib\pic18-trace-obj.lib 

Object code version is 3.11

Machine type is 18F2580

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\GRODAN~1\AppData\Local\Temp\s9io.obj
                end_init                            2BA      2BA        4        C       0
                reset_vec                             0        0        6        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/Debug/debug\kelvin_ntc.X.debug.obj
                intcodelo                            18       18      2A2        C       0
                smallconst                          600      600       6E      300       0
                text101                            5508     5508        4      337       0
                text100                            54AA     54AA       12      337       0
                text98                             1368     1368      7AC      337       0
                text97                             42B0     42B0       BC      337       0
                text96                             506C     506C       3A      337       0
                text95                             406A     406A       C6      337       0
                text94                             5498     5498       12      337       0
                text93                             5504     5504        4      337       0
                text92                             4FB8     4FB8       3E      337       0
                text91                             5360     5360       1E      337       0
                text90                             4BF8     4BF8       5C      337       0
                text89                             53FA     53FA       18      337       0
                text88                             4818     4818       96      337       0
                text87                             4FF6     4FF6       3C      337       0
                text86                             5272     5272       26      337       0
                text85                             5486     5486       12      337       0
                text84                             54EE     54EE        A      337       0
                text83                             5474     5474       12      337       0
                text82                             5462     5462       12      337       0
                text81                             52BC     52BC       24      337       0
                text80                             4B26     4B26       76      337       0
                text79                             3B1C     3B1C      11E      337       0
                text78                             319E     319E      210      337       0
                text77                             5110     5110       34      337       0
                text76                             4934     4934       84      337       0
                text75                             4EF4     4EF4       44      337       0
                text74                             3D50     3D50      114      337       0
                text73                             3732     3732      166      337       0
                text72                             4EAC     4EAC       48      337       0
                text71                             4420     4420       B2      337       0
                text70                             51FA     51FA       2A      337       0
                text69                             5342     5342       1E      337       0
                text68                             4130     4130       C4      337       0
                text67                             5398     5398       1A      337       0
                text66                             5324     5324       1E      337       0
                text65                             4F7A     4F7A       3E      337       0
                text64                             51D0     51D0       2A      337       0
                text63                             544E     544E       14      337       0
                text62                             54E4     54E4        A      337       0
                text61                             4D84     4D84       4C      337       0
                text60                             50A6     50A6       36      337       0
                text59                             5176     5176       30      337       0
                text58                             5516     5516        2      337       0
                text57                             5514     5514        2      337       0
                text56                             5512     5512        2      337       0
                text55                             543A     543A       14      337       0
                text54                             53E2     53E2       18      337       0
                text53                             5426     5426       14      337       0
                text52                             5412     5412       14      337       0
                text51                             5510     5510        2      337       0
                text50                             550E     550E        2      337       0
                text49                             550C     550C        2      337       0
                text48                             54DA     54DA        A      337       0
                text47                             54D0     54D0        A      337       0
                text46                             3594     3594      19E      337       0
                text45                             537E     537E       1A      337       0
                text44                             5144     5144       32      337       0
                text43                             4778     4778       A0      337       0
                text42                              66E      66E      CFA      337       0
                text41                             5302     5302       22      337       0
                text40                             53CA     53CA       18      337       0
                text39                             53B2     53B2       18      337       0
                text38                             2798     2798      5C8      337       0
                text37                             54F8     54F8        8      337       0
                text36                             3E64     3E64      10A      337       0
                text35                             52E0     52E0       22      337       0
                text34                             5224     5224       28      337       0
                text33                             1B14     1B14      6A4      337       0
                text32                             50DC     50DC       34      337       0
                text31                             3898     3898      156      337       0
                text30                             4AB0     4AB0       76      337       0
                text29                             4582     4582       B0      337       0
                text28                             4A3A     4A3A       76      337       0
                text27                             49B8     49B8       82      337       0
                text26                             5500     5500        4      337       0
                text25                             21B8     21B8      5E0      337       0
                text24                             54C6     54C6        A      337       0
                text23                             54BC     54BC        A      337       0
                text22                             524C     524C       26      337       0
                text21                             4D38     4D38       4C      337       0
                text20                             44D2     44D2       B0      337       0
                text19                             4CEC     4CEC       4C      337       0
                text18                             5032     5032       3A      337       0
                text17                             4E1A     4E1A       4A      337       0
                text16                             4E64     4E64       48      337       0
                text15                             4CA0     4CA0       4C      337       0
                text14                             48AE     48AE       86      337       0
                text13                             46D6     46D6       A2      337       0
                text12                             3F6E     3F6E       FC      337       0
                text11                             436C     436C       B4      337       0
                text10                             4632     4632       A4      337       0
                text9                              5298     5298       24      337       0
                text8                              33AE     33AE      1E6      337       0
                text7                              39EE     39EE      12E      337       0
                text6                              4B9C     4B9C       5C      337       0
                text5                              41F4     41F4       BC      337       0
                text4                              4DD0     4DD0       4A      337       0
                text3                              4C54     4C54       4C      337       0
                text2                              51A6     51A6       2A      337       0
                text1                              2D60     2D60      43E      337       0
                text0                              3C3A     3C3A      116      337       0
                cstackCOMRAM                          1        1       45        1       1
                cstackBANK0                          60       60       5F       60       1
                cstackBANK1                         176      176       34      100       1
                bssBIGRAM                           1AB      1AB      3C0      1AB       1
                bssBANK1                            100      100       76      100       1
                bssBANK0                             BF       BF       1A       60       1
                bssCOMRAM                            46       46        D        1       1
                cinit                              4F38     4F38       42      337       0
                nvBANK1                             1AA      1AA        1      100       1

C:\Program Files (x86)\Microchip\xc8\v1.21\lib\pic18-trace-obj.lib

TOTAL           Name                               Link     Load   Length     Space
        CLASS   CODE           
                end_init                            2BA      2BA        4         0
                intcodelo                            18       18      2A2         0
                reset_vec                             0        0        6         0
                text101                            5508     5508        4         0
                text100                            54AA     54AA       12         0
                text98                             1368     1368      7AC         0
                text97                             42B0     42B0       BC         0
                text96                             506C     506C       3A         0
                text95                             406A     406A       C6         0
                text94                             5498     5498       12         0
                text93                             5504     5504        4         0
                text92                             4FB8     4FB8       3E         0
                text91                             5360     5360       1E         0
                text90                             4BF8     4BF8       5C         0
                text89                             53FA     53FA       18         0
                text88                             4818     4818       96         0
                text87                             4FF6     4FF6       3C         0
                text86                             5272     5272       26         0
                text85                             5486     5486       12         0
                text84                             54EE     54EE        A         0
                text83                             5474     5474       12         0
                text82                             5462     5462       12         0
                text81                             52BC     52BC       24         0
                text80                             4B26     4B26       76         0
                text79                             3B1C     3B1C      11E         0
                text78                             319E     319E      210         0
                text77                             5110     5110       34         0
                text76                             4934     4934       84         0
                text75                             4EF4     4EF4       44         0
                text74                             3D50     3D50      114         0
                text73                             3732     3732      166         0
                text72                             4EAC     4EAC       48         0
                text71                             4420     4420       B2         0
                text70                             51FA     51FA       2A         0
                text69                             5342     5342       1E         0
                text68                             4130     4130       C4         0
                text67                             5398     5398       1A         0
                text66                             5324     5324       1E         0
                text65                             4F7A     4F7A       3E         0
                text64                             51D0     51D0       2A         0
                text63                             544E     544E       14         0
                text62                             54E4     54E4        A         0
                text61                             4D84     4D84       4C         0
                text60                             50A6     50A6       36         0
                text59                             5176     5176       30         0
                text58                             5516     5516        2         0
                text57                             5514     5514        2         0
                text56                             5512     5512        2         0
                text55                             543A     543A       14         0
                text54                             53E2     53E2       18         0
                text53                             5426     5426       14         0
                text52                             5412     5412       14         0
                text51                             5510     5510        2         0
                text50                             550E     550E        2         0
                text49                             550C     550C        2         0
                text48                             54DA     54DA        A         0
                text47                             54D0     54D0        A         0
                text46                             3594     3594      19E         0
                text45                             537E     537E       1A         0
                text44                             5144     5144       32         0
                text43                             4778     4778       A0         0
                text42                              66E      66E      CFA         0
                text41                             5302     5302       22         0
                text40                             53CA     53CA       18         0
                text39                             53B2     53B2       18         0
                text38                             2798     2798      5C8         0
                text37                             54F8     54F8        8         0
                text36                             3E64     3E64      10A         0
                text35                             52E0     52E0       22         0
                text34                             5224     5224       28         0
                text33                             1B14     1B14      6A4         0
                text32                             50DC     50DC       34         0
                text31                             3898     3898      156         0
                text30                             4AB0     4AB0       76         0
                text29                             4582     4582       B0         0
                text28                             4A3A     4A3A       76         0
                text27                             49B8     49B8       82         0
                text26                             5500     5500        4         0
                text25                             21B8     21B8      5E0         0
                text24                             54C6     54C6        A         0
                text23                             54BC     54BC        A         0
                text22                             524C     524C       26         0
                text21                             4D38     4D38       4C         0
                text20                             44D2     44D2       B0         0
                text19                             4CEC     4CEC       4C         0
                text18                             5032     5032       3A         0
                text17                             4E1A     4E1A       4A         0
                text16                             4E64     4E64       48         0
                text15                             4CA0     4CA0       4C         0
                text14                             48AE     48AE       86         0
                text13                             46D6     46D6       A2         0
                text12                             3F6E     3F6E       FC         0
                text11                             436C     436C       B4         0
                text10                             4632     4632       A4         0
                text9                              5298     5298       24         0
                text8                              33AE     33AE      1E6         0
                text7                              39EE     39EE      12E         0
                text6                              4B9C     4B9C       5C         0
                text5                              41F4     41F4       BC         0
                text4                              4DD0     4DD0       4A         0
                text3                              4C54     4C54       4C         0
                text2                              51A6     51A6       2A         0
                text1                              2D60     2D60      43E         0
                text0                              3C3A     3C3A      116         0
                cinit                              4F38     4F38       42         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       6E         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       45         1
                bssCOMRAM                            46       46        D         1

        CLASS   ABS1           

        CLASS   BIGRAM         
                bssBIGRAM                           1AB      1AB      3C0         1

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       5F         1
                bssBANK0                             BF       BF       1A         1

        CLASS   BANK1          
                cstackBANK1                         176      176       34         1
                bssBANK1                            100      100       76         1
                nvBANK1                             1AA      1AA        1         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000006  000006         0       0  CODE    
                cstackCOMRAM                   000001  000052  000053         1       1  COMRAM  
                intcodelo                      000018  0002A6  0002BE         C       0  CODE    
                cstackBANK0                    000060  000079  0000D9        60       1  BANK0   
                bssBANK1                       000100  0000AB  0001AB       100       1  BANK1   
                bssBIGRAM                      0001AB  0003C0  00056B       1AB       1  BIGRAM  
                smallconst                     000600  00006E  00066E       300       0  SMALLCON
                text42                         00066E  004EAA  005518       337       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000D9-0000FF               27
        BANK5            00056B-0005EE               84
        BIGRAM           000053-00005F                D
                         0000D9-0000FF               27
                         00056B-0005EE               84
        CODE             0002BE-0005FF              342
                         005518-007CFF             27E8
        COMRAM           000053-00005F                D
        CONST            0002BE-0005FF              342
                         005518-007CFF             27E8
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      005518-007CFF             27E8
        RAM              0000D9-0000FF               27
                         00056B-0005EE               84
        SFR              000D00-000F9B              100
                         000F9D-000FD3               37
                         000FD5-000FDA                6
                         000FE0-000FE2                3
                         000FE8-000FEA                3
                         000FF0-000FFB                C
        SMALLCONST       005518-007CFF              100

                                  Symbol Table

?_Celsius2Fahrenheit                     cstackBANK0  00007E
?_Celsius2Kelvin                         cstackCOMRAM 00002D
?_ECANReceiveMessage                     cstackCOMRAM 000015
?_ECANSendMessage                        cstackCOMRAM 000018
?_OpenADC                                cstackCOMRAM 00000E
?_WriteTimer0                            cstackCOMRAM 00000E
?__CANIDToRegs                           cstackCOMRAM 00000E
?__ECANPointBuffer                       cstackCOMRAM 00000E
?__RegsToCANID                           cstackCOMRAM 00000E
?___aldiv                                cstackBANK0  000086
?___altofl                               cstackBANK0  000094
?___asfladd                              cstackCOMRAM 00002D
?___asfldiv                              cstackBANK0  000068
?___asflmul                              cstackBANK0  00007E
?___asflsub                              cstackCOMRAM 000035
?___awtofl                               cstackCOMRAM 000018
?___fladd                                cstackCOMRAM 00001E
?___fldiv                                cstackBANK0  000060
?___flge                                 cstackCOMRAM 00000E
?___flmul                                cstackBANK0  000068
?___flneg                                cstackCOMRAM 00000E
?___flpack                               cstackCOMRAM 00000E
?___flsub                                cstackCOMRAM 00002D
?___fltol                                cstackBANK0  00007E
?___lbmod                                cstackCOMRAM 00000E
?___lwtofl                               cstackCOMRAM 00001A
?___wmul                                 cstackCOMRAM 00000E
?_eval_poly                              cstackBANK0  00007E
?_exp                                    cstackBANK0  0000A2
?_floor                                  cstackBANK0  000098
?_frexp                                  cstackCOMRAM 00000E
?_getCANFrame                            cstackCOMRAM 000022
?_getCalibrationValue                    cstackCOMRAM 00001A
?_getVSCPFrame                           cstackCOMRAM 000028
?_ldexp                                  cstackBANK0  000089
?_log                                    cstackBANK0  000089
?_readEEPROM                             cstackCOMRAM 000016
?_sendCANFrame                           cstackCOMRAM 00003C
?_sendVSCPFrame                          cstackBANK0  000060
?_setEventData                           cstackBANK0  000086
?_vscp_getFamilyCode                     cstackCOMRAM 00000E
?_vscp_getFamilyType                     cstackCOMRAM 00000E
?_vscp_sendHeartBeat                     cstackCOMRAM 000044
?_vscp_setGUID                           cstackCOMRAM 000011
?_vscp_setManufacturerId                 cstackCOMRAM 000011
?_vscp_setUserID                         cstackCOMRAM 000011
?_vscp_writeAppReg                       cstackCOMRAM 000023
?_vscp_writeRegister                     cstackCOMRAM 000027
?_vscp_writeStdReg                       cstackCOMRAM 00001B
?_writeEEPROM                            cstackCOMRAM 00000E
?i1_WriteTimer0                          cstackCOMRAM 000001
Celsius2Fahrenheit@tc                    cstackBANK0  00007E
Celsius2Kelvin@tc                        cstackCOMRAM 00002D
ECANReceiveMessage@data                  cstackCOMRAM 000015
ECANReceiveMessage@dataLen               cstackCOMRAM 000017
ECANReceiveMessage@i                     cstackCOMRAM 00001D
ECANReceiveMessage@id                    cstackCOMRAM 00001C
ECANReceiveMessage@mode                  cstackCOMRAM 00001E
ECANReceiveMessage@msgFlags              cstackCOMRAM 000019
ECANReceiveMessage@ptr                   cstackCOMRAM 000020
ECANReceiveMessage@savedPtr              cstackCOMRAM 00001A
ECANReceiveMessage@temp                  cstackCOMRAM 00001F
ECANSendMessage@buffers                  cstackCOMRAM 000033
ECANSendMessage@data                     cstackCOMRAM 00001C
ECANSendMessage@dataLen                  cstackCOMRAM 00001D
ECANSendMessage@i                        cstackCOMRAM 000039
ECANSendMessage@id                       cstackCOMRAM 000018
ECANSendMessage@j                        cstackCOMRAM 000034
ECANSendMessage@mode                     cstackCOMRAM 000032
ECANSendMessage@msgFlags                 cstackCOMRAM 00001E
ECANSendMessage@pb                       cstackCOMRAM 000020
ECANSendMessage@ptr                      cstackCOMRAM 00003A
ECANSendMessage@temp                     cstackCOMRAM 000038
ECANSendMessage@tempBSEL0                cstackCOMRAM 000035
ECANSendMessage@tempPtr                  cstackCOMRAM 000036
ECANSetOperationMode@mode                cstackCOMRAM 00000E
OpenADC@config                           cstackCOMRAM 000012
OpenADC@config2                          cstackCOMRAM 00000E
OpenADC@portconfig                       cstackCOMRAM 00000F
OpenTimer0@config                        cstackCOMRAM 00000E
PL10                                     text25       0026CE
PL12                                     text25       0026DC
PL14                                     text74       003E10
PL16                                     text79       003BE0
PL18                                     text25       0026EC
PL2                                      text25       00266E
PL20                                     text33       002172
PL22                                     text74       003E24
PL24                                     text74       003E34
PL26                                     text25       002706
PL28                                     text46       003712
PL30                                     text79       003BEE
PL32                                     text33       00218C
PL34                                     text11       00440C
PL36                                     text25       00271E
PL38                                     text79       003C02
PL4                                      text25       00267C
PL40                                     text79       003C14
PL42                                     text25       002732
PL44                                     text74       003E46
PL46                                     text31       0039DC
PL48                                     text79       003C28
PL50                                     text25       002746
PL52                                     text1        00318C
PL54                                     text44       005166
PL56                                     text42       001358
PL58                                     text95       004112
PL6                                      text25       00269A
PL60                                     text78       0033A0
PL62                                     text25       002758
PL64                                     text28       004AA2
PL66                                     text27       004A2C
PL68                                     text95       004122
PL70                                     text33       0021A0
PL72                                     text25       002766
PL74                                     text25       002774
PL76                                     text74       003E5A
PL78                                     text46       003726
PL8                                      text25       0026B2
PL80                                     text97       004360
PL82                                     text33       0021AE
PL84                                     text25       002782
PL86                                     text25       00278A
PL88                                     text25       002790
WriteTimer0@timer                        cstackCOMRAM 000010
WriteTimer0@timer0                       cstackCOMRAM 00000E
_ADCON0                                  (abs)        000FC2
_ADCON0bits                              (abs)        000FC2
_ADCON1                                  (abs)        000FC1
_ADCON2                                  (abs)        000FC0
_ADRESH                                  (abs)        000FC4
_ADRESL                                  (abs)        000FC3
_B0CON                                   (abs)        000E20
_B0RXFUL                                 (abs)        007107
_B0TXEN                                  (abs)        006FC2
_B1CON                                   (abs)        000E30
_B1RXFUL                                 (abs)        007187
_B1TXEN                                  (abs)        006FC3
_B2CON                                   (abs)        000E40
_B2RXFUL                                 (abs)        007207
_B2TXEN                                  (abs)        006FC4
_B3CON                                   (abs)        000E50
_B3RXFUL                                 (abs)        007287
_B3TXEN                                  (abs)        006FC5
_B4CON                                   (abs)        000E60
_B4RXFUL                                 (abs)        007307
_B4TXEN                                  (abs)        006FC6
_B5CON                                   (abs)        000E70
_B5RXFUL                                 (abs)        007387
_B5TXEN                                  (abs)        006FC7
_BRGCON1                                 (abs)        000F70
_BRGCON2                                 (abs)        000F71
_BRGCON3                                 (abs)        000F72
_BSEL0                                   (abs)        000DF8
_CANCON                                  (abs)        000F6F
_CIOCON                                  (abs)        000F73
_Celsius2Fahrenheit                      text30       004AB0
_Celsius2Kelvin                          text32       0050DC
_ConvertADC                              text93       005504
_ECANCON                                 (abs)        000F77
_ECANInitialize                          text88       004818
_ECANReceiveMessage                      text78       00319E
_ECANSendMessage                         text73       003732
_ECANSetOperationMode                    text89       0053FA
_EEADR                                   (abs)        000FA9
_EECON1bits                              (abs)        000FA6
_EECON2                                  (abs)        000FA7
_EEDATA                                  (abs)        000FA8
_FIFOEMPTY                               (abs)        007BA7
_INTCONbits                              (abs)        000FF2
_IRXIF                                   (abs)        007D27
_MDSEL0                                  (abs)        007BBE
_MDSEL1                                  (abs)        007BBF
_MSEL0                                   (abs)        000DF0
_MSEL1                                   (abs)        000DF1
_MSEL2                                   (abs)        000DF2
_OpenADC                                 text90       004BF8
_OpenTimer0                              text91       005360
_PIE1bits                                (abs)        000F9D
_PIR1bits                                (abs)        000F9E
_PIR2bits                                (abs)        000FA1
_PORTC                                   (abs)        000F82
_RXB0CON                                 (abs)        000F60
_RXB0FILHIT0                             (abs)        007B00
_RXB0FUL                                 (abs)        007B07
_RXB0IF                                  (abs)        007D20
_RXB0OVFL                                (abs)        007BA7
_RXB1CON                                 (abs)        000F50
_RXB1CONbits                             (abs)        000F50
_RXB1IF                                  (abs)        007D21
_RXB1OVFL                                (abs)        007BA6
_RXF0EIDH                                (abs)        000F02
_RXF0EIDL                                (abs)        000F03
_RXF0SIDH                                (abs)        000F00
_RXF0SIDL                                (abs)        000F01
_RXF1EIDH                                (abs)        000F06
_RXF1EIDL                                (abs)        000F07
_RXF1SIDH                                (abs)        000F04
_RXF1SIDL                                (abs)        000F05
_RXFBCON0                                (abs)        000DE0
_RXFBCON1                                (abs)        000DE1
_RXFBCON2                                (abs)        000DE2
_RXFBCON3                                (abs)        000DE3
_RXFBCON4                                (abs)        000DE4
_RXFBCON5                                (abs)        000DE5
_RXFBCON6                                (abs)        000DE6
_RXFBCON7                                (abs)        000DE7
_RXFCON0                                 (abs)        000DD4
_RXFCON1                                 (abs)        000DD5
_RXM0EIDH                                (abs)        000F1A
_RXM0EIDL                                (abs)        000F1B
_RXM0EXIDM                               (abs)        0078CB
_RXM0SIDH                                (abs)        000F18
_RXM0SIDL                                (abs)        000F19
_RXM1EIDH                                (abs)        000F1E
_RXM1EIDL                                (abs)        000F1F
_RXM1EXIDEN                              (abs)        0078EB
_RXM1SIDH                                (abs)        000F1C
_RXM1SIDL                                (abs)        000F1D
_T0CON                                   (abs)        000FD5
_T0CONbits                               (abs)        000FD5
_TMR0H                                   (abs)        000FD7
_TMR0L                                   (abs)        000FD6
_TRISA                                   (abs)        000F92
_TRISB                                   (abs)        000F93
_TRISC                                   (abs)        000F94
_TXB0CON                                 (abs)        000F40
_TXB1CON                                 (abs)        000F30
_TXB2CON                                 (abs)        000F20
_WriteTimer0                             text94       005498
__CANIDToRegs                            text74       003D50
__CANIDToRegs@Value                      cstackCOMRAM 000017
__CANIDToRegs@ptr                        cstackCOMRAM 00000E
__CANIDToRegs@type                       cstackCOMRAM 000014
__CANIDToRegs@val                        cstackCOMRAM 000010
__CFG_BOREN$BOACTIVE                     (abs)        000000
__CFG_BORV$3                             (abs)        000000
__CFG_CPB$OFF                            (abs)        000000
__CFG_EBTR0$OFF                          (abs)        000000
__CFG_EBTR1$OFF                          (abs)        000000
__CFG_EBTR2$OFF                          (abs)        000000
__CFG_EBTR3$OFF                          (abs)        000000
__CFG_EBTRB$OFF                          (abs)        000000
__CFG_LVP$OFF                            (abs)        000000
__CFG_OSC$HSPLL                          (abs)        000000
__CFG_PWRT$ON                            (abs)        000000
__CFG_STVREN$ON                          (abs)        000000
__CFG_WDT$OFF                            (abs)        000000
__CFG_WRTD$OFF                           (abs)        000000
__ECANPointBuffer                        text80       004B26
__ECANPointBuffer@b                      cstackCOMRAM 000011
__ECANPointBuffer@pt                     cstackCOMRAM 000012
__ECANRxFilterHitInfo                    bssCOMRAM    000048
__HRAM                                   (abs)        000000
__Habs1                                  abs1         000000
__Hbank0                                 bank0        000000
__Hbank1                                 bank1        000000
__Hbank2                                 bank2        000000
__Hbank3                                 bank3        000000
__Hbank4                                 bank4        000000
__Hbank5                                 bank5        000000
__Hbigbss                                bigbss       000000
__Hbigdata                               bigdata      000000
__Hbigram                                bigram       000000
__Hbss                                   bss          000000
__HbssBANK0                              bssBANK0     000000
__HbssBANK1                              bssBANK1     000000
__HbssBIGRAM                             bssBIGRAM    000000
__HbssCOMRAM                             bssCOMRAM    000000
__Hcinit                                 cinit        000000
__Hclrtext                               clrtext      000000
__Hcomram                                comram       000000
__Hconfig                                config       30000E
__Hconst                                 const        000000
__HcstackBANK0                           cstackBANK0  000000
__HcstackBANK1                           cstackBANK1  000000
__HcstackCOMRAM                          cstackCOMRAM 000000
__Hdata                                  data         000000
__Heeprom_data                           eeprom_data  000000
__Hend_init                              end_init     0002BE
__Hfarbss                                farbss       000000
__Hfardata                               fardata      000000
__Hibigdata                              ibigdata     000000
__Hidata                                 idata        000000
__Hidloc                                 idloc        200008
__Hifardata                              ifardata     000000
__Hinit                                  init         0002BA
__Hintcode                               intcode      000006
__Hintcode_body                          intcode_body 000000
__Hintcodelo                             intcodelo    0002BA
__Hintentry                              intentry     000000
__Hintret                                intret       000000
__Hintsave_regs                          intsave_regs 000000
__Hirdata                                irdata       000000
__Hmediumconst                           mediumconst  000000
__HnvBANK1                               nvBANK1      000000
__HnvFARRAM                              nvFARRAM     000000
__Hnvbit                                 nvbit        000000
__Hnvrram                                nvrram       000000
__Hpa_nodes                              pa_nodes     000000
__Hparam                                 rparam       000000
__Hpowerup                               powerup      0002BA
__Hram                                   ram          000000
__Hramtop                                ramtop       000600
__Hrbit                                  rbit         000000
__Hrbss                                  rbss         000000
__Hrdata                                 rdata        000000
__Hreset_vec                             reset_vec    000006
__Hrparam                                rparam       000000
__Hsfr                                   sfr          000000
__Hsmallconst                            smallconst   00066E
__Hstruct                                struct       000000
__Htemp                                  temp         000000
__Htext                                  text         000000
__Htext0                                 text0        000000
__Htext1                                 text1        000000
__Htext10                                text10       000000
__Htext100                               text100      000000
__Htext101                               text101      000000
__Htext102                               text102      000000
__Htext11                                text11       000000
__Htext12                                text12       000000
__Htext13                                text13       000000
__Htext14                                text14       000000
__Htext15                                text15       000000
__Htext16                                text16       000000
__Htext17                                text17       000000
__Htext18                                text18       000000
__Htext19                                text19       000000
__Htext2                                 text2        000000
__Htext20                                text20       000000
__Htext21                                text21       000000
__Htext22                                text22       000000
__Htext23                                text23       000000
__Htext24                                text24       000000
__Htext25                                text25       000000
__Htext26                                text26       000000
__Htext27                                text27       000000
__Htext28                                text28       000000
__Htext29                                text29       000000
__Htext3                                 text3        000000
__Htext30                                text30       000000
__Htext31                                text31       000000
__Htext32                                text32       000000
__Htext33                                text33       000000
__Htext34                                text34       000000
__Htext35                                text35       000000
__Htext36                                text36       000000
__Htext37                                text37       000000
__Htext38                                text38       000000
__Htext39                                text39       000000
__Htext4                                 text4        000000
__Htext40                                text40       000000
__Htext41                                text41       000000
__Htext42                                text42       000000
__Htext43                                text43       000000
__Htext44                                text44       000000
__Htext45                                text45       000000
__Htext46                                text46       000000
__Htext47                                text47       000000
__Htext48                                text48       000000
__Htext49                                text49       000000
__Htext5                                 text5        000000
__Htext50                                text50       000000
__Htext51                                text51       000000
__Htext52                                text52       000000
__Htext53                                text53       000000
__Htext54                                text54       000000
__Htext55                                text55       000000
__Htext56                                text56       000000
__Htext57                                text57       000000
__Htext58                                text58       000000
__Htext59                                text59       000000
__Htext6                                 text6        000000
__Htext60                                text60       000000
__Htext61                                text61       000000
__Htext62                                text62       000000
__Htext63                                text63       000000
__Htext64                                text64       000000
__Htext65                                text65       000000
__Htext66                                text66       000000
__Htext67                                text67       000000
__Htext68                                text68       000000
__Htext69                                text69       000000
__Htext7                                 text7        000000
__Htext70                                text70       000000
__Htext71                                text71       000000
__Htext72                                text72       000000
__Htext73                                text73       000000
__Htext74                                text74       000000
__Htext75                                text75       000000
__Htext76                                text76       000000
__Htext77                                text77       000000
__Htext78                                text78       000000
__Htext79                                text79       000000
__Htext8                                 text8        000000
__Htext80                                text80       000000
__Htext81                                text81       000000
__Htext82                                text82       000000
__Htext83                                text83       000000
__Htext84                                text84       000000
__Htext85                                text85       000000
__Htext86                                text86       000000
__Htext87                                text87       000000
__Htext88                                text88       000000
__Htext89                                text89       000000
__Htext9                                 text9        000000
__Htext90                                text90       000000
__Htext91                                text91       000000
__Htext92                                text92       000000
__Htext93                                text93       000000
__Htext94                                text94       000000
__Htext95                                text95       000000
__Htext96                                text96       000000
__Htext97                                text97       000000
__Htext98                                text98       000000
__IT_INT_MASK                            bssBANK0     0000BF
__IT_SAVE_BSR                            bssBANK0     0000C0
__IT_SAVE_STATUS                         bssBANK0     0000C1
__IT_SAVE_WREG                           bssBANK0     0000C2
__LRAM                                   (abs)        000001
__Labs1                                  abs1         000000
__Lbank0                                 bank0        000000
__Lbank1                                 bank1        000000
__Lbank2                                 bank2        000000
__Lbank3                                 bank3        000000
__Lbank4                                 bank4        000000
__Lbank5                                 bank5        000000
__Lbigbss                                bigbss       000000
__Lbigdata                               bigdata      000000
__Lbigram                                bigram       000000
__Lbss                                   bss          000000
__LbssBANK0                              bssBANK0     000000
__LbssBANK1                              bssBANK1     000000
__LbssBIGRAM                             bssBIGRAM    000000
__LbssCOMRAM                             bssCOMRAM    000000
__Lcinit                                 cinit        000000
__Lclrtext                               clrtext      000000
__Lcomram                                comram       000000
__Lconfig                                config       300000
__Lconst                                 const        000000
__LcstackBANK0                           cstackBANK0  000000
__LcstackBANK1                           cstackBANK1  000000
__LcstackCOMRAM                          cstackCOMRAM 000000
__Ldata                                  data         000000
__Leeprom_data                           eeprom_data  000000
__Lend_init                              end_init     0002BA
__Lfarbss                                farbss       000000
__Lfardata                               fardata      000000
__Libigdata                              ibigdata     000000
__Lidata                                 idata        000000
__Lidloc                                 idloc        200000
__Lifardata                              ifardata     000000
__Linit                                  init         0002BA
__Lintcode                               intcode      000006
__Lintcode_body                          intcode_body 000000
__Lintcodelo                             intcodelo    000018
__Lintentry                              intentry     000000
__Lintret                                intret       000000
__Lintsave_regs                          intsave_regs 000000
__Lirdata                                irdata       000000
__Lmediumconst                           mediumconst  000000
__LnvBANK1                               nvBANK1      000000
__LnvFARRAM                              nvFARRAM     000000
__Lnvbit                                 nvbit        000000
__Lnvrram                                nvrram       000000
__Lpa_nodes                              pa_nodes     000000
__Lparam                                 rparam       000000
__Lpowerup                               powerup      0002BA
__Lram                                   ram          000000
__Lramtop                                ramtop       000600
__Lrbit                                  rbit         000000
__Lrbss                                  rbss         000000
__Lrdata                                 rdata        000000
__Lreset_vec                             reset_vec    000000
__Lrparam                                rparam       000000
__Lsfr                                   sfr          000000
__Lsmallconst                            smallconst   000600
__Lstruct                                struct       000000
__Ltemp                                  temp         000000
__Ltext                                  text         000000
__Ltext0                                 text0        000000
__Ltext1                                 text1        000000
__Ltext10                                text10       000000
__Ltext100                               text100      000000
__Ltext101                               text101      000000
__Ltext102                               text102      000000
__Ltext11                                text11       000000
__Ltext12                                text12       000000
__Ltext13                                text13       000000
__Ltext14                                text14       000000
__Ltext15                                text15       000000
__Ltext16                                text16       000000
__Ltext17                                text17       000000
__Ltext18                                text18       000000
__Ltext19                                text19       000000
__Ltext2                                 text2        000000
__Ltext20                                text20       000000
__Ltext21                                text21       000000
__Ltext22                                text22       000000
__Ltext23                                text23       000000
__Ltext24                                text24       000000
__Ltext25                                text25       000000
__Ltext26                                text26       000000
__Ltext27                                text27       000000
__Ltext28                                text28       000000
__Ltext29                                text29       000000
__Ltext3                                 text3        000000
__Ltext30                                text30       000000
__Ltext31                                text31       000000
__Ltext32                                text32       000000
__Ltext33                                text33       000000
__Ltext34                                text34       000000
__Ltext35                                text35       000000
__Ltext36                                text36       000000
__Ltext37                                text37       000000
__Ltext38                                text38       000000
__Ltext39                                text39       000000
__Ltext4                                 text4        000000
__Ltext40                                text40       000000
__Ltext41                                text41       000000
__Ltext42                                text42       000000
__Ltext43                                text43       000000
__Ltext44                                text44       000000
__Ltext45                                text45       000000
__Ltext46                                text46       000000
__Ltext47                                text47       000000
__Ltext48                                text48       000000
__Ltext49                                text49       000000
__Ltext5                                 text5        000000
__Ltext50                                text50       000000
__Ltext51                                text51       000000
__Ltext52                                text52       000000
__Ltext53                                text53       000000
__Ltext54                                text54       000000
__Ltext55                                text55       000000
__Ltext56                                text56       000000
__Ltext57                                text57       000000
__Ltext58                                text58       000000
__Ltext59                                text59       000000
__Ltext6                                 text6        000000
__Ltext60                                text60       000000
__Ltext61                                text61       000000
__Ltext62                                text62       000000
__Ltext63                                text63       000000
__Ltext64                                text64       000000
__Ltext65                                text65       000000
__Ltext66                                text66       000000
__Ltext67                                text67       000000
__Ltext68                                text68       000000
__Ltext69                                text69       000000
__Ltext7                                 text7        000000
__Ltext70                                text70       000000
__Ltext71                                text71       000000
__Ltext72                                text72       000000
__Ltext73                                text73       000000
__Ltext74                                text74       000000
__Ltext75                                text75       000000
__Ltext76                                text76       000000
__Ltext77                                text77       000000
__Ltext78                                text78       000000
__Ltext79                                text79       000000
__Ltext8                                 text8        000000
__Ltext80                                text80       000000
__Ltext81                                text81       000000
__Ltext82                                text82       000000
__Ltext83                                text83       000000
__Ltext84                                text84       000000
__Ltext85                                text85       000000
__Ltext86                                text86       000000
__Ltext87                                text87       000000
__Ltext88                                text88       000000
__Ltext89                                text89       000000
__Ltext9                                 text9        000000
__Ltext90                                text90       000000
__Ltext91                                text91       000000
__Ltext92                                text92       000000
__Ltext93                                text93       000000
__Ltext94                                text94       000000
__Ltext95                                text95       000000
__Ltext96                                text96       000000
__Ltext97                                text97       000000
__Ltext98                                text98       000000
__RegsToCANID                            text79       003B1C
__RegsToCANID@Value                      cstackCOMRAM 000014
__RegsToCANID@ptr                        cstackCOMRAM 00000E
__RegsToCANID@type                       cstackCOMRAM 000011
__RegsToCANID@val                        cstackCOMRAM 000010
__S0                                     (abs)        30000E
__S1                                     (abs)        00056B
___DCByte                                bssBANK0     0000C3
___DCDelay                               nvBANK1      0001AA
___IT                                    (abs)        000101
___aldiv                                 text5        0041F4
___aldiv@counter                         cstackBANK0  00008E
___aldiv@dividend                        cstackBANK0  000086
___aldiv@divisor                         cstackBANK0  00008A
___aldiv@quotient                        cstackBANK0  000090
___aldiv@sign                            cstackBANK0  00008F
___altofl                                text16       004E64
___altofl@c                              cstackBANK0  000094
___altofl@sign                           cstackCOMRAM 000045
___asfladd                               text4        004DD0
___asfladd@f1p                           cstackCOMRAM 00002D
___asfladd@f2                            cstackCOMRAM 00002F
___asfldiv                               text3        004C54
___asfldiv@f1p                           cstackBANK0  000068
___asfldiv@f2                            cstackBANK0  00006A
___asflmul                               text19       004CEC
___asflmul@mp                            cstackCOMRAM 000043
___asflmul@multiplicand                  cstackBANK0  00007E
___asflsub                               text17       004E1A
___asflsub@f1p                           cstackCOMRAM 000035
___asflsub@f2                            cstackCOMRAM 000037
___awtofl                                text96       00506C
___awtofl@c                              cstackCOMRAM 000018
___awtofl@sign                           cstackCOMRAM 00001D
___fladd                                 text31       003898
___fladd@exp1                            cstackCOMRAM 00002C
___fladd@exp2                            cstackCOMRAM 00002B
___fladd@f1                              cstackCOMRAM 00001E
___fladd@f2                              cstackCOMRAM 000022
___fladd@sign                            cstackCOMRAM 00002A
___fldiv                                 text20       0044D2
___fldiv@cntr                            cstackCOMRAM 000040
___fldiv@exp                             cstackCOMRAM 000041
___fldiv@f1                              cstackBANK0  000060
___fldiv@f2                              cstackBANK0  000064
___fldiv@f3                              cstackCOMRAM 00003C
___fldiv@sign                            cstackCOMRAM 000042
___flge                                  text15       004CA0
___flge@ff1                              cstackCOMRAM 00000E
___flge@ff2                              cstackCOMRAM 000012
___flmul                                 text95       00406A
___flmul@cntr                            cstackBANK0  00007C
___flmul@exp                             cstackBANK0  000077
___flmul@f1                              cstackBANK0  000068
___flmul@f2                              cstackBANK0  00006C
___flmul@f3_as_product                   cstackBANK0  000078
___flmul@sign                            cstackBANK0  00007D
___flneg                                 text9        005298
___flneg@f1                              cstackCOMRAM 00000E
___flpack                                text97       0042B0
___flpack@arg                            cstackCOMRAM 00000E
___flpack@exp                            cstackCOMRAM 000012
___flpack@sign                           cstackCOMRAM 000013
___flsub                                 text18       005032
___flsub@f1                              cstackCOMRAM 00002D
___flsub@f2                              cstackCOMRAM 000031
___fltol                                 text13       0046D6
___fltol@exp1                            cstackCOMRAM 000044
___fltol@f1                              cstackBANK0  00007E
___fltol@sign1                           cstackCOMRAM 000043
___lbmod                                 text34       005224
___lbmod@counter                         cstackCOMRAM 000010
___lbmod@dividend                        cstackCOMRAM 00000F
___lbmod@divisor                         cstackCOMRAM 00000E
___lbmod@rem                             cstackCOMRAM 000011
___lwtofl                                text2        0051A6
___lwtofl@c                              cstackCOMRAM 00001A
___wmul                                  text44       005144
___wmul@multiplicand                     cstackCOMRAM 000010
___wmul@multiplier                       cstackCOMRAM 00000E
___wmul@product                          cstackCOMRAM 000014
__accesstop                              (abs)        000060
__activetblptr                           (abs)        000002
__end_ofPL10                             text25       0026DC
__end_ofPL12                             text25       0026EC
__end_ofPL14                             text74       003E24
__end_ofPL16                             text79       003BEE
__end_ofPL18                             text25       002706
__end_ofPL2                              text25       00267C
__end_ofPL20                             text33       00218C
__end_ofPL22                             text74       003E34
__end_ofPL24                             text74       003E46
__end_ofPL26                             text25       00271E
__end_ofPL28                             text46       003726
__end_ofPL30                             text79       003C02
__end_ofPL32                             text33       0021A0
__end_ofPL34                             text11       004420
__end_ofPL36                             text25       002732
__end_ofPL38                             text79       003C14
__end_ofPL4                              text25       00269A
__end_ofPL40                             text79       003C28
__end_ofPL42                             text25       002746
__end_ofPL44                             text74       003E5A
__end_ofPL46                             text31       0039EE
__end_ofPL48                             text79       003C3A
__end_ofPL50                             text25       002758
__end_ofPL52                             text1        00319E
__end_ofPL54                             text44       005176
__end_ofPL56                             text42       001368
__end_ofPL58                             text95       004122
__end_ofPL6                              text25       0026B2
__end_ofPL60                             text78       0033AE
__end_ofPL62                             text25       002766
__end_ofPL64                             text28       004AB0
__end_ofPL66                             text27       004A3A
__end_ofPL68                             text95       004130
__end_ofPL70                             text33       0021AE
__end_ofPL72                             text25       002774
__end_ofPL74                             text25       002782
__end_ofPL76                             text74       003E64
__end_ofPL78                             text46       003732
__end_ofPL8                              text25       0026CE
__end_ofPL80                             text97       00436C
__end_ofPL82                             text33       0021B8
__end_ofPL84                             text25       00278A
__end_ofPL86                             text25       002790
__end_ofPL88                             text25       002798
__end_of_Celsius2Fahrenheit              text30       004B26
__end_of_Celsius2Kelvin                  text32       005110
__end_of_ConvertADC                      text93       005508
__end_of_ECANInitialize                  text88       0048AE
__end_of_ECANReceiveMessage              text78       0033A0
__end_of_ECANSendMessage                 text73       003898
__end_of_ECANSetOperationMode            text89       005412
__end_of_OpenADC                         text90       004C54
__end_of_OpenTimer0                      text91       00537E
__end_of_WriteTimer0                     text94       0054AA
__end_of__CANIDToRegs                    text74       003E10
__end_of__ECANPointBuffer                text80       004B9C
__end_of__RegsToCANID                    text79       003BE0
__end_of___aldiv                         text5        0042B0
__end_of___altofl                        text16       004EAC
__end_of___asfladd                       text4        004E1A
__end_of___asfldiv                       text3        004CA0
__end_of___asflmul                       text19       004D38
__end_of___asflsub                       text17       004E64
__end_of___awtofl                        text96       0050A6
__end_of___fladd                         text31       0039DC
__end_of___fldiv                         text20       004582
__end_of___flge                          text15       004CEC
__end_of___flmul                         text95       004112
__end_of___flneg                         text9        0052BC
__end_of___flpack                        text97       004360
__end_of___flsub                         text18       00506C
__end_of___fltol                         text13       004778
__end_of___lbmod                         text34       00524C
__end_of___lwtofl                        text2        0051D0
__end_of___wmul                          text44       005166
__end_of__initialization                 cinit        004F70
__end_of_doOneSecondWork                 text25       00266E
__end_of_doWork                          text1        00318C
__end_of_eval_poly                       text11       00440C
__end_of_exp                             text8        003594
__end_of_floor                           text12       00406A
__end_of_frexp                           text14       004934
__end_of_getCANFrame                     text77       005144
__end_of_getCalibrationValue             text6        004BF8
__end_of_getVSCPFrame                    text76       0049B8
__end_of_handle_sync                     text27       004A2C
__end_of_init                            text87       005032
__end_of_init_app_eeprom                 text38       002D60
__end_of_init_app_ram                    text92       004FF6
__end_of_interrupt_at_low_vector         intcodelo    0002BA
__end_of_ldexp                           text10       0046D6
__end_of_log                             text7        003B1C
__end_of_main                            text0        003D50
__end_of_readEEPROM                      text63       005462
__end_of_sendCANFrame                    text72       004EF4
__end_of_sendTempEvent                   text28       004AA2
__end_of_sendVSCPFrame                   text71       0044D2
__end_of_setEventData                    text29       004632
__end_of_vscp_check_pstorage             text81       0052E0
__end_of_vscp_deviceURL                  smallconst   000620
__end_of_vscp_doOneSecondWork            text21       004D84
__end_of_vscp_error                      text26       005504
__end_of_vscp_getBootLoaderAlgorithm     text51       005512
__end_of_vscp_getBufferSize              text50       005510
__end_of_vscp_getEvent                   text75       004F38
__end_of_vscp_getFamilyCode              text48       0054E4
__end_of_vscp_getFamilyType              text47       0054DA
__end_of_vscp_getGUID                    text55       00544E
__end_of_vscp_getMDF_URL                 text54       0053FA
__end_of_vscp_getMajorVersion            text58       005518
__end_of_vscp_getManufacturerId          text52       005426
__end_of_vscp_getMatrixInfo              text67       0053B2
__end_of_vscp_getMinorVersion            text57       005516
__end_of_vscp_getRegisterPagesUsed       text49       00550E
__end_of_vscp_getSegmentCRC              text84       0054F8
__end_of_vscp_getSubMinorVersion         text56       005514
__end_of_vscp_getSubzone                 text23       0054C6
__end_of_vscp_getUserID                  text53       00543A
__end_of_vscp_getZone                    text24       0054D0
__end_of_vscp_goActiveState              text69       005360
__end_of_vscp_goBootloaderMode           text66       005342
__end_of_vscp_handleDropNickname         text60       0050DC
__end_of_vscp_handleHeartbeat            text65       004FB8
__end_of_vscp_handleProbeState           text68       0041F4
__end_of_vscp_handleProtocolEvent        text33       002172
__end_of_vscp_handleSetNickname          text64       0051FA
__end_of_vscp_init                       text61       004DD0
__end_of_vscp_newNodeOnline              text59       0051A6
__end_of_vscp_readAppReg                 text98       001B14
__end_of_vscp_readNicknamePermanent      text62       0054EE
__end_of_vscp_readRegister               text45       005398
__end_of_vscp_readStdReg                 text46       003712
__end_of_vscp_restoreDefaults            text37       005500
__end_of_vscp_sendEvent                  text70       005224
__end_of_vscp_sendHeartBeat              text22       005272
__end_of_vscp_setControlByte             text82       005474
__end_of_vscp_setGUID                    text41       005324
__end_of_vscp_setManufacturerId          text39       0053CA
__end_of_vscp_setSegmentCRC              text83       005486
__end_of_vscp_setUserID                  text40       0053E2
__end_of_vscp_writeAppReg                text42       001358
__end_of_vscp_writeNicknamePermanent     text85       005498
__end_of_vscp_writeRegister              text35       005302
__end_of_vscp_writeStdReg                text36       003F6E
__end_of_writeCoeffs2Ram                 text43       004818
__end_of_writeEEPROM                     text86       005298
__end_ofexp@coeff                        smallconst   000648
__end_ofi1_ConvertADC                    text101      00550C
__end_ofi1_WriteTimer0                   text100      0054BC
__end_oflog@coeff                        smallconst   00066C
__initialization                         cinit        004F38
__mediumconst                            mediumconst  000000
__pbssBANK0                              bssBANK0     0000BF
__pbssBANK1                              bssBANK1     000100
__pbssBIGRAM                             bssBIGRAM    0001AB
__pbssCOMRAM                             bssCOMRAM    000046
__pcinit                                 cinit        004F38
__pcstackBANK0                           cstackBANK0  000060
__pcstackBANK1                           cstackBANK1  000176
__pcstackCOMRAM                          cstackCOMRAM 000001
__pintcodelo                             intcodelo    000018
__pnvBANK1                               nvBANK1      0001AA
__psmallconst                            smallconst   000600
__ptext0                                 text0        003C3A
__ptext1                                 text1        002D60
__ptext10                                text10       004632
__ptext100                               text100      0054AA
__ptext101                               text101      005508
__ptext102                               text102      000000
__ptext11                                text11       00436C
__ptext12                                text12       003F6E
__ptext13                                text13       0046D6
__ptext14                                text14       0048AE
__ptext15                                text15       004CA0
__ptext16                                text16       004E64
__ptext17                                text17       004E1A
__ptext18                                text18       005032
__ptext19                                text19       004CEC
__ptext2                                 text2        0051A6
__ptext20                                text20       0044D2
__ptext21                                text21       004D38
__ptext22                                text22       00524C
__ptext23                                text23       0054BC
__ptext24                                text24       0054C6
__ptext25                                text25       0021B8
__ptext26                                text26       005500
__ptext27                                text27       0049B8
__ptext28                                text28       004A3A
__ptext29                                text29       004582
__ptext3                                 text3        004C54
__ptext30                                text30       004AB0
__ptext31                                text31       003898
__ptext32                                text32       0050DC
__ptext33                                text33       001B14
__ptext34                                text34       005224
__ptext35                                text35       0052E0
__ptext36                                text36       003E64
__ptext37                                text37       0054F8
__ptext38                                text38       002798
__ptext39                                text39       0053B2
__ptext4                                 text4        004DD0
__ptext40                                text40       0053CA
__ptext41                                text41       005302
__ptext42                                text42       00066E
__ptext43                                text43       004778
__ptext44                                text44       005144
__ptext45                                text45       00537E
__ptext46                                text46       003594
__ptext47                                text47       0054D0
__ptext48                                text48       0054DA
__ptext49                                text49       00550C
__ptext5                                 text5        0041F4
__ptext50                                text50       00550E
__ptext51                                text51       005510
__ptext52                                text52       005412
__ptext53                                text53       005426
__ptext54                                text54       0053E2
__ptext55                                text55       00543A
__ptext56                                text56       005512
__ptext57                                text57       005514
__ptext58                                text58       005516
__ptext59                                text59       005176
__ptext6                                 text6        004B9C
__ptext60                                text60       0050A6
__ptext61                                text61       004D84
__ptext62                                text62       0054E4
__ptext63                                text63       00544E
__ptext64                                text64       0051D0
__ptext65                                text65       004F7A
__ptext66                                text66       005324
__ptext67                                text67       005398
__ptext68                                text68       004130
__ptext69                                text69       005342
__ptext7                                 text7        0039EE
__ptext70                                text70       0051FA
__ptext71                                text71       004420
__ptext72                                text72       004EAC
__ptext73                                text73       003732
__ptext74                                text74       003D50
__ptext75                                text75       004EF4
__ptext76                                text76       004934
__ptext77                                text77       005110
__ptext78                                text78       00319E
__ptext79                                text79       003B1C
__ptext8                                 text8        0033AE
__ptext80                                text80       004B26
__ptext81                                text81       0052BC
__ptext82                                text82       005462
__ptext83                                text83       005474
__ptext84                                text84       0054EE
__ptext85                                text85       005486
__ptext86                                text86       005272
__ptext87                                text87       004FF6
__ptext88                                text88       004818
__ptext89                                text89       0053FA
__ptext9                                 text9        005298
__ptext90                                text90       004BF8
__ptext91                                text91       005360
__ptext92                                text92       004FB8
__ptext93                                text93       005504
__ptext94                                text94       005498
__ptext95                                text95       00406A
__ptext96                                text96       00506C
__ptext97                                text97       0042B0
__ptext98                                text98       001368
__ramtop                                 ramtop       000600
__size_of_Celsius2Fahrenheit             (abs)        000000
__size_of_Celsius2Kelvin                 (abs)        000000
__size_of_ConvertADC                     (abs)        000000
__size_of_ECANInitialize                 (abs)        000000
__size_of_ECANReceiveMessage             (abs)        000000
__size_of_ECANSendMessage                (abs)        000000
__size_of_ECANSetOperationMode           (abs)        000000
__size_of_OpenADC                        (abs)        000000
__size_of_OpenTimer0                     (abs)        000000
__size_of_WriteTimer0                    (abs)        000000
__size_of__CANIDToRegs                   (abs)        000000
__size_of__ECANPointBuffer               (abs)        000000
__size_of__RegsToCANID                   (abs)        000000
__size_of___aldiv                        (abs)        000000
__size_of___altofl                       (abs)        000000
__size_of___asfladd                      (abs)        000000
__size_of___asfldiv                      (abs)        000000
__size_of___asflmul                      (abs)        000000
__size_of___asflsub                      (abs)        000000
__size_of___awtofl                       (abs)        000000
__size_of___fladd                        (abs)        000000
__size_of___fldiv                        (abs)        000000
__size_of___flge                         (abs)        000000
__size_of___flmul                        (abs)        000000
__size_of___flneg                        (abs)        000000
__size_of___flpack                       (abs)        000000
__size_of___flsub                        (abs)        000000
__size_of___fltol                        (abs)        000000
__size_of___lbmod                        (abs)        000000
__size_of___lwtofl                       (abs)        000000
__size_of___wmul                         (abs)        000000
__size_of_doOneSecondWork                (abs)        000000
__size_of_doWork                         (abs)        000000
__size_of_eval_poly                      (abs)        000000
__size_of_exp                            (abs)        000000
__size_of_floor                          (abs)        000000
__size_of_frexp                          (abs)        000000
__size_of_getCANFrame                    (abs)        000000
__size_of_getCalibrationValue            (abs)        000000
__size_of_getVSCPFrame                   (abs)        000000
__size_of_handle_sync                    (abs)        000000
__size_of_init                           (abs)        000000
__size_of_init_app_eeprom                (abs)        000000
__size_of_init_app_ram                   (abs)        000000
__size_of_interrupt_at_low_vector        (abs)        000000
__size_of_ldexp                          (abs)        000000
__size_of_log                            (abs)        000000
__size_of_main                           (abs)        000000
__size_of_readEEPROM                     (abs)        000000
__size_of_sendCANFrame                   (abs)        000000
__size_of_sendTempEvent                  (abs)        000000
__size_of_sendVSCPFrame                  (abs)        000000
__size_of_setEventData                   (abs)        000000
__size_of_vscp_check_pstorage            (abs)        000000
__size_of_vscp_doOneSecondWork           (abs)        000000
__size_of_vscp_error                     (abs)        000000
__size_of_vscp_getBootLoaderAlgorithm    (abs)        000000
__size_of_vscp_getBufferSize             (abs)        000000
__size_of_vscp_getEvent                  (abs)        000000
__size_of_vscp_getFamilyCode             (abs)        000000
__size_of_vscp_getFamilyType             (abs)        000000
__size_of_vscp_getGUID                   (abs)        000000
__size_of_vscp_getMDF_URL                (abs)        000000
__size_of_vscp_getMajorVersion           (abs)        000000
__size_of_vscp_getManufacturerId         (abs)        000000
__size_of_vscp_getMatrixInfo             (abs)        000000
__size_of_vscp_getMinorVersion           (abs)        000000
__size_of_vscp_getRegisterPagesUsed      (abs)        000000
__size_of_vscp_getSegmentCRC             (abs)        000000
__size_of_vscp_getSubMinorVersion        (abs)        000000
__size_of_vscp_getSubzone                (abs)        000000
__size_of_vscp_getUserID                 (abs)        000000
__size_of_vscp_getZone                   (abs)        000000
__size_of_vscp_goActiveState             (abs)        000000
__size_of_vscp_goBootloaderMode          (abs)        000000
__size_of_vscp_handleDropNickname        (abs)        000000
__size_of_vscp_handleHeartbeat           (abs)        000000
__size_of_vscp_handleProbeState          (abs)        000000
__size_of_vscp_handleProtocolEvent       (abs)        000000
__size_of_vscp_handleSetNickname         (abs)        000000
__size_of_vscp_init                      (abs)        000000
__size_of_vscp_newNodeOnline             (abs)        000000
__size_of_vscp_readAppReg                (abs)        000000
__size_of_vscp_readNicknamePermanent     (abs)        000000
__size_of_vscp_readRegister              (abs)        000000
__size_of_vscp_readStdReg                (abs)        000000
__size_of_vscp_restoreDefaults           (abs)        000000
__size_of_vscp_sendEvent                 (abs)        000000
__size_of_vscp_sendHeartBeat             (abs)        000000
__size_of_vscp_setControlByte            (abs)        000000
__size_of_vscp_setGUID                   (abs)        000000
__size_of_vscp_setManufacturerId         (abs)        000000
__size_of_vscp_setSegmentCRC             (abs)        000000
__size_of_vscp_setUserID                 (abs)        000000
__size_of_vscp_writeAppReg               (abs)        000000
__size_of_vscp_writeNicknamePermanent    (abs)        000000
__size_of_vscp_writeRegister             (abs)        000000
__size_of_vscp_writeStdReg               (abs)        000000
__size_of_writeCoeffs2Ram                (abs)        000000
__size_of_writeEEPROM                    (abs)        000000
__size_ofi1_ConvertADC                   (abs)        000000
__size_ofi1_WriteTimer0                  (abs)        000000
__smallconst                             smallconst   000600
_adc                                     bssBIGRAM    0001AB
_adc_conversion_flags                    bssBANK0     0000C4
_adc_series_counter                      bssCOMRAM    000049
_current_temp                            bssBANK1     000100
_doOneSecondWork                         text25       0021B8
_doWork                                  text1        002D60
_doWork$2288                             cstackBANK1  00017E
_doWork$2289                             cstackBANK1  000182
_doWork$2290                             cstackBANK1  000186
_eval_poly                               text11       00436C
_exp                                     text8        0033AE
_exp$2294                                cstackBANK0  0000A6
_floor                                   text12       003F6E
_frexp                                   text14       0048AE
_getCANFrame                             text77       005110
_getCalibrationValue                     text6        004B9C
_getVSCPFrame                            text76       004934
_handle_sync                             text27       0049B8
_high_alarm                              bssBANK0     0000C5
_init                                    text87       004FF6
_init_app_eeprom                         text38       002798
_init_app_ram                            text92       004FB8
_interrupt_at_low_vector                 intcodelo    000018
_ldexp                                   text10       004632
_log                                     text7        0039EE
_low_alarm                               bssBANK0     0000C6
_main                                    text0        003C3A
_measurement_clock                       bssBANK1     000112
_readEEPROM                              text63       00544E
_seconds                                 bssBANK0     0000C7
_seconds_temp                            bssBANK1     00010C
_sendCANFrame                            text72       004EAC
_sendTempEvent                           text28       004A3A
_sendTimer                               bssBANK1     00011A
_sendVSCPFrame                           text71       004420
_setEventData                            text29       004582
_sh_coefficients                         bssBANK1     000120
_timeout_clock                           bssBANK1     000116
_vscp_alarmstatus                        bssCOMRAM    00004A
_vscp_check_pstorage                     text81       0052BC
_vscp_configtimer                        bssBANK1     00011C
_vscp_deviceURL                          smallconst   000600
_vscp_doOneSecondWork                    text21       004D38
_vscp_error                              text26       005500
_vscp_getBootLoaderAlgorithm             text51       005510
_vscp_getBufferSize                      text50       00550E
_vscp_getEvent                           text75       004EF4
_vscp_getFamilyCode                      text48       0054DA
_vscp_getFamilyType                      text47       0054D0
_vscp_getGUID                            text55       00543A
_vscp_getMDF_URL                         text54       0053E2
_vscp_getMajorVersion                    text58       005516
_vscp_getManufacturerId                  text52       005412
_vscp_getMatrixInfo                      text67       005398
_vscp_getMinorVersion                    text57       005514
_vscp_getRegisterPagesUsed               text49       00550C
_vscp_getSegmentCRC                      text84       0054EE
_vscp_getSubMinorVersion                 text56       005512
_vscp_getSubzone                         text23       0054BC
_vscp_getUserID                          text53       005426
_vscp_getZone                            text24       0054C6
_vscp_goActiveState                      text69       005342
_vscp_goBootloaderMode                   text66       005324
_vscp_guid_reset                         bssCOMRAM    00004B
_vscp_handleDropNickname                 text60       0050A6
_vscp_handleHeartbeat                    text65       004F7A
_vscp_handleProbeState                   text68       004130
_vscp_handleProtocolEvent                text33       001B14
_vscp_handleSetNickname                  text64       0051D0
_vscp_hour                               bssBANK0     0000C8
_vscp_imsg                               bssBANK1     000168
_vscp_init                               text61       004D84
_vscp_initbtncnt                         bssBANK0     0000C9
_vscp_initledfunc                        bssCOMRAM    00004C
_vscp_minute                             bssCOMRAM    00004D
_vscp_newNodeOnline                      text59       005176
_vscp_nickname                           bssBANK0     0000CA
_vscp_node_state                         bssBANK0     0000CB
_vscp_node_substate                      bssCOMRAM    00004E
_vscp_omsg                               bssBANK0     0000CC
_vscp_page_select                        bssCOMRAM    000046
_vscp_probe_address                      bssCOMRAM    00004F
_vscp_probe_cnt                          bssCOMRAM    000050
_vscp_readAppReg                         text98       001368
_vscp_readNicknamePermanent              text62       0054E4
_vscp_readRegister                       text45       00537E
_vscp_readStdReg                         text46       003594
_vscp_restoreDefaults                    text37       0054F8
_vscp_second                             bssCOMRAM    000051
_vscp_sendEvent                          text70       0051FA
_vscp_sendHeartBeat                      text22       00524C
_vscp_setControlByte                     text82       005462
_vscp_setGUID                            text41       005302
_vscp_setManufacturerId                  text39       0053B2
_vscp_setSegmentCRC                      text83       005474
_vscp_setUserID                          text40       0053CA
_vscp_statuscnt                          bssCOMRAM    000052
_vscp_timer                              bssBANK1     00011E
_vscp_writeAppReg                        text42       00066E
_vscp_writeNicknamePermanent             text85       005486
_vscp_writeRegister                      text35       0052E0
_vscp_writeStdReg                        text36       003E64
_writeCoeffs2Ram                         text43       004778
_writeEEPROM                             text86       005272
doOneSecondWork@i                        cstackBANK0  00009A
doOneSecondWork@setpoint                 cstackBANK0  000098
doOneSecondWork@tmp                      cstackBANK0  000097
doWork@B                                 cstackBANK1  00019A
doWork@Rinf                              cstackBANK1  000176
doWork@avarage                           cstackBANK1  0001A1
doWork@calVoltage                        cstackBANK1  00017A
doWork@i                                 cstackBANK1  0001A9
doWork@j                                 cstackBANK1  0001A0
doWork@resistance                        cstackBANK1  00019C
doWork@temp                              cstackBANK1  0001A5
doWork@v                                 cstackBANK1  000196
end_of_initialization                    cinit        004F70
eval_poly@d                              cstackBANK0  000082
eval_poly@n                              cstackBANK0  000083
eval_poly@res                            cstackBANK0  000085
eval_poly@x                              cstackBANK0  00007E
exp@coeff                                smallconst   000620
exp@exponent                             cstackBANK0  0000AA
exp@sign                                 cstackBANK0  0000AC
exp@x                                    cstackBANK0  0000A2
floor@expon                              cstackBANK0  0000A0
floor@i                                  cstackBANK0  00009C
floor@x                                  cstackBANK0  000098
frexp@eptr                               cstackCOMRAM 000012
frexp@value                              cstackCOMRAM 00000E
getCANFrame@flags                        cstackCOMRAM 000027
getCANFrame@pdata                        cstackCOMRAM 000024
getCANFrame@pdlc                         cstackCOMRAM 000022
getCANFrame@pid                          cstackCOMRAM 000026
getCalibrationValue@cal                  cstackCOMRAM 000021
getCalibrationValue@i                    cstackCOMRAM 000023
getVSCPFrame@id                          cstackCOMRAM 000038
getVSCPFrame@pData                       cstackCOMRAM 000032
getVSCPFrame@pNodeId                     cstackCOMRAM 00002C
getVSCPFrame@pPriority                   cstackCOMRAM 00002E
getVSCPFrame@pSize                       cstackCOMRAM 000030
getVSCPFrame@pvscpclass                  cstackCOMRAM 000028
getVSCPFrame@pvscptype                   cstackCOMRAM 00002A
handle_sync@i                            cstackBANK0  000092
i1WriteTimer0@timer                      cstackCOMRAM 000003
i1WriteTimer0@timer0                     cstackCOMRAM 000001
i1_ConvertADC                            text101      005508
i1_WriteTimer0                           text100      0054AA
init_app_ram@i                           cstackCOMRAM 00000E
intlevel0                                text         000000
intlevel1                                text         000000
intlevel2                                text         000000
intlevel3                                text         000000
ldexp@newexp                             cstackBANK0  00008D
ldexp@value                              cstackBANK0  000089
log@coeff                                smallconst   000648
log@exponent                             cstackCOMRAM 000044
log@x                                    cstackBANK0  000089
main@i                                   cstackBANK0  0000BB
readEEPROM@address                       cstackCOMRAM 000016
readEEPROM@data                          cstackCOMRAM 000019
sendCANFrame@dlc                         cstackCOMRAM 000040
sendCANFrame@id                          cstackCOMRAM 00003C
sendCANFrame@pdata                       cstackCOMRAM 000041
sendCANFrame@rv                          cstackCOMRAM 000042
sendTempEvent@i                          cstackBANK0  00008F
sendVSCPFrame@id                         cstackBANK0  00007B
sendVSCPFrame@nodeid                     cstackBANK0  000063
sendVSCPFrame@pData                      cstackBANK0  000066
sendVSCPFrame@priority                   cstackBANK0  000064
sendVSCPFrame@size                       cstackBANK0  000065
sendVSCPFrame@vscpclass                  cstackBANK0  000060
sendVSCPFrame@vscptype                   cstackBANK0  000062
setEventData@ival                        cstackBANK0  00008D
setEventData@newval                      cstackBANK0  000089
setEventData@unit                        cstackBANK0  000088
setEventData@v                           cstackBANK0  000086
start                                    init         0002BA
start_initialization                     cinit        004F38
vscp_getEvent@rv                         cstackCOMRAM 00003C
vscp_getGUID@idx                         cstackCOMRAM 00001A
vscp_getMDF_URL@idx                      cstackCOMRAM 00000F
vscp_getManufacturerId@idx               cstackCOMRAM 00001A
vscp_getMatrixInfo@i                     cstackCOMRAM 00000F
vscp_getMatrixInfo@pData                 cstackCOMRAM 00000E
vscp_getUserID@idx                       cstackCOMRAM 00001A
vscp_goBootloaderMode@algorithm          cstackCOMRAM 000011
vscp_handleDropNickname@bytes            cstackCOMRAM 00001A
vscp_handleProtocolEvent@byte            cstackBANK0  000095
vscp_handleProtocolEvent@bytes           cstackBANK0  00008C
vscp_handleProtocolEvent@bytes_1169      cstackBANK0  000096
vscp_handleProtocolEvent@bytes_this_time cstackBANK0  000090
vscp_handleProtocolEvent@cb              cstackBANK0  000091
vscp_handleProtocolEvent@i               cstackBANK0  000099
vscp_handleProtocolEvent@i_1162          cstackBANK0  000094
vscp_handleProtocolEvent@i_1165          cstackBANK0  000098
vscp_handleProtocolEvent@i_1173          cstackBANK0  000092
vscp_handleProtocolEvent@j               cstackBANK0  00009A
vscp_handleProtocolEvent@k               cstackBANK0  000093
vscp_handleProtocolEvent@len             cstackBANK0  00008D
vscp_handleProtocolEvent@len_1164        cstackBANK0  00008F
vscp_handleProtocolEvent@offset          cstackBANK0  00008A
vscp_handleProtocolEvent@page_save       cstackBANK0  000086
vscp_handleProtocolEvent@page_save_1174  cstackBANK0  000088
vscp_handleProtocolEvent@pos             cstackBANK0  00008B
vscp_handleProtocolEvent@pos_1163        cstackBANK0  00008E
vscp_readAppReg@pos                      cstackCOMRAM 00001A
vscp_readAppReg@reg                      cstackCOMRAM 00001B
vscp_readAppReg@rv                       cstackCOMRAM 00001C
vscp_readRegister@reg                    cstackCOMRAM 00002C
vscp_readStdReg@code                     cstackCOMRAM 000020
vscp_readStdReg@code_1147                cstackCOMRAM 000024
vscp_readStdReg@idx                      cstackCOMRAM 000028
vscp_readStdReg@idx_1148                 cstackCOMRAM 000029
vscp_readStdReg@reg                      cstackCOMRAM 00002B
vscp_readStdReg@rv                       cstackCOMRAM 00002A
vscp_sendEvent@rv                        cstackCOMRAM 000043
vscp_sendHeartBeat@subzone               cstackCOMRAM 000044
vscp_sendHeartBeat@zone                  cstackCOMRAM 000045
vscp_setControlByte@ctrl                 cstackCOMRAM 000011
vscp_setGUID@data                        cstackCOMRAM 000011
vscp_setGUID@idx                         cstackCOMRAM 000012
vscp_setManufacturerId@data              cstackCOMRAM 000011
vscp_setManufacturerId@idx               cstackCOMRAM 000012
vscp_setSegmentCRC@crc                   cstackCOMRAM 000011
vscp_setUserID@data                      cstackCOMRAM 000011
vscp_setUserID@idx                       cstackCOMRAM 000012
vscp_writeAppReg@pos                     cstackCOMRAM 000024
vscp_writeAppReg@reg                     cstackCOMRAM 000025
vscp_writeAppReg@rv                      cstackCOMRAM 000026
vscp_writeAppReg@val                     cstackCOMRAM 000023
vscp_writeNicknamePermanent@nickname     cstackCOMRAM 000011
vscp_writeRegister@reg                   cstackCOMRAM 000028
vscp_writeRegister@value                 cstackCOMRAM 000027
vscp_writeStdReg@reg                     cstackCOMRAM 000021
vscp_writeStdReg@rv                      cstackCOMRAM 000020
vscp_writeStdReg@value                   cstackCOMRAM 00001B
writeCoeffs2Ram@c                        cstackCOMRAM 00001C
writeCoeffs2Ram@i                        cstackCOMRAM 00001F
writeCoeffs2Ram@j                        cstackCOMRAM 000021
writeEEPROM@address                      cstackCOMRAM 00000E
writeEEPROM@data                         cstackCOMRAM 000010


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 301 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               4   91[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    9
 This function calls:
		_init
		_vscp_check_pstorage
		_init_app_eeprom
		_vscp_init
		_writeEEPROM
		_vscp_getEvent
		_vscp_goActiveState
		_vscp_handleProbeState
		_vscp_handleProtocolEvent
		_handle_sync
		_vscp_error
		_doOneSecondWork
		_vscp_doOneSecondWork
		_doWork
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _doWork *****************
 Defined at:
		line 432 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temp            4   47[BANK1 ] unsigned long 
  avarage         4   43[BANK1 ] unsigned long 
  resistance      4   38[BANK1 ] unsigned long 
  v               4   32[BANK1 ] unsigned long 
  calVoltage      4    4[BANK1 ] unsigned long 
  Rinf            4    0[BANK1 ] unsigned long 
  B               2   36[BANK1 ] unsigned short 
  i               1   51[BANK1 ] unsigned char 
  j               1   42[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0      52       0       0       0       0
      Temps:          0      14       0       0       0       0       0
      Totals:         0      14      52       0       0       0       0
Total ram usage:       66 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_readEEPROM
		_exp
		_log
		_getCalibrationValue
		___aldiv
		___altofl
		___asfladd
		___fladd
		___asfldiv
		___fldiv
		___flmul
		___asflsub
		___flsub
		___fltol
		___lwtofl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwtofl *****************
 Defined at:
		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwtofl.c"
 Parameters:    Size  Location     Type
  c               2   25[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   25[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function ___asfldiv *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfldiv.c"
 Parameters:    Size  Location     Type
  f1p             2    8[BANK0 ] PTR 
		 -> doWork@avarage(4), 
  f2              4   10[BANK0 ] PTR 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    8[BANK0 ] PTR 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fldiv
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function ___asfladd *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfladd.c"
 Parameters:    Size  Location     Type
  f1p             2   44[COMRAM] PTR 
		 -> doWork@temp(4), doWork@avarage(4), 
  f2              4   46[COMRAM] PTR 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   44[COMRAM] PTR 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  dividend        4   38[BANK0 ] long 
  divisor         4   42[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   48[BANK0 ] long 
  sign            1   47[BANK0 ] unsigned char 
  counter         1   46[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   38[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       8       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      14       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function _getCalibrationValue *****************
 Defined at:
		line 878 in file "../main.c"
 Parameters:    Size  Location     Type
  i               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  i               1   34[COMRAM] unsigned char 
  cal             2   32[COMRAM] short 
 Return value:  Size  Location     Type
                  2   25[COMRAM] short 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function _log *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\log.c"
 Parameters:    Size  Location     Type
  x               4   41[BANK0 ] short 
 Auto vars:     Size  Location     Type
  exponent        2   67[COMRAM] int 
 Return value:  Size  Location     Type
                  4   41[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       4       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___fladd
		___flmul
		___awtofl
		_eval_poly
		_frexp
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function _exp *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\exp.c"
 Parameters:    Size  Location     Type
  x               4   66[BANK0 ] int 
 Auto vars:     Size  Location     Type
  exponent        2   74[BANK0 ] int 
  sign            1   76[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   66[BANK0 ] unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       7       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      11       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___fldiv
		___asflmul
		___asflsub
		___awtofl
		_floor
		_eval_poly
		_ldexp
		___flge
		___flneg
		___fltol
 This function is called by:
		_doWork
 This function uses a non-reentrant model


 *************** function ___flneg *****************
 Defined at:
		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flneg.c"
 Parameters:    Size  Location     Type
  f1              4   13[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _ldexp *****************
 Defined at:
		line 278 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           4   41[BANK0 ] unsigned char 
  newexp          2   45[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   41[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _eval_poly *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\evalpoly.c"
 Parameters:    Size  Location     Type
  x               4   30[BANK0 ] int 
  d               1   34[BANK0 ] PTR const 
		 -> log@coeff(36), exp@coeff(40), 
  n               2   35[BANK0 ] int 
 Auto vars:     Size  Location     Type
  res             4   37[BANK0 ] int 
 Return value:  Size  Location     Type
                  4   30[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       7       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         1      11       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
		___flmul
 This function is called by:
		_exp
		_log
 This function uses a non-reentrant model


 *************** function _floor *****************
 Defined at:
		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\floor.c"
 Parameters:    Size  Location     Type
  x               4   56[BANK0 ] int 
 Auto vars:     Size  Location     Type
  i               4   60[BANK0 ] int 
  expon           2   64[BANK0 ] int 
 Return value:  Size  Location     Type
                  4   56[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      10       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___altofl
		___fladd
		___flge
		_frexp
		___fltol
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function ___fltol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fltol.c"
 Parameters:    Size  Location     Type
  f1              4   30[BANK0 ] int 
 Auto vars:     Size  Location     Type
  exp1            1   67[COMRAM] unsigned char 
  sign1           1   66[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   30[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       4       0       0       0       0       0
      Totals:         2       8       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_doWork
		_setEventData
		_exp
		_floor
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 255 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           4   13[COMRAM] long 
  eptr            2   17[COMRAM] PTR int 
		 -> log@exponent(2), floor@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_floor
		_log
 This function uses a non-reentrant model


 *************** function ___flge *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flge.c"
 Parameters:    Size  Location     Type
  ff1             4   13[COMRAM] PTR int 
  ff2             4   17[COMRAM] PTR int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_exp
		_floor
 This function uses a non-reentrant model


 *************** function ___altofl *****************
 Defined at:
		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\altofl.c"
 Parameters:    Size  Location     Type
  c               4   52[BANK0 ] long 
 Auto vars:     Size  Location     Type
  sign            1   68[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   52[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       4       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
		_floor
 This function uses a non-reentrant model


 *************** function ___asflsub *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflsub.c"
 Parameters:    Size  Location     Type
  f1p             2   52[COMRAM] PTR 
		 -> exp@x(4), doWork@temp(4), 
  f2              4   54[COMRAM] PTR 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   52[COMRAM] PTR 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___flsub
 This function is called by:
		_doWork
		_exp
 This function uses a non-reentrant model


 *************** function ___flsub *****************
 Defined at:
		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flsub.c"
 Parameters:    Size  Location     Type
  f1              4   44[COMRAM] PTR 
  f2              4   48[COMRAM] PTR 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   44[COMRAM] PTR 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
 This function is called by:
		_doWork
		___asflsub
 This function uses a non-reentrant model


 *************** function ___asflmul *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflmul.c"
 Parameters:    Size  Location     Type
  mp              1    wreg     PTR 
		 -> exp@x(4), 
  multiplicand    4   30[BANK0 ] PTR 
 Auto vars:     Size  Location     Type
  mp              1   66[COMRAM] PTR 
		 -> exp@x(4), 
 Return value:  Size  Location     Type
                  4   30[BANK0 ] PTR 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       4       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___flmul
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function ___fldiv *****************
 Defined at:
		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fldiv.c"
 Parameters:    Size  Location     Type
  f1              4    0[BANK0 ] PTR 
  f2              4    4[BANK0 ] PTR 
 Auto vars:     Size  Location     Type
  f3              4   59[COMRAM] PTR 
  sign            1   65[COMRAM] unsigned char 
  exp             1   64[COMRAM] unsigned char 
  cntr            1   63[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       8       0       0       0       0       0
      Locals:        14       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        14       8       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
		_Celsius2Fahrenheit
		___asfldiv
		_exp
 This function uses a non-reentrant model


 *************** function _vscp_doOneSecondWork *****************
 Defined at:
		line 524 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_vscp_getZone
		_vscp_getSubzone
		_vscp_sendHeartBeat
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vscp_sendHeartBeat *****************
 Defined at:
		line 378 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  zone            1    wreg     unsigned char 
  subzone         1   67[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  zone            1   68[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vscp_sendEvent
 This function is called by:
		_vscp_doOneSecondWork
 This function uses a non-reentrant model


 *************** function _vscp_getSubzone *****************
 Defined at:
		line 2747 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_doOneSecondWork
 This function uses a non-reentrant model


 *************** function _vscp_getZone *****************
 Defined at:
		line 2738 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_doOneSecondWork
 This function uses a non-reentrant model


 *************** function _doOneSecondWork *****************
 Defined at:
		line 530 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  setpoint        2   56[BANK0 ] short 
  i               1   58[BANK0 ] unsigned char 
  tmp             1   55[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0
      Temps:          0       7       0       0       0       0       0
      Totals:         0      11       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_writeEEPROM
		_readEEPROM
		_sendTempEvent
		_vscp_sendEvent
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vscp_error *****************
 Defined at:
		line 193 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _handle_sync *****************
 Defined at:
		line 1262 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   50[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_readEEPROM
		_sendTempEvent
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sendTempEvent *****************
 Defined at:
		line 821 in file "../main.c"
 Parameters:    Size  Location     Type
  i               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  i               1   47[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         1       1       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_readEEPROM
		_vscp_sendEvent
		_setEventData
 This function is called by:
		_doOneSecondWork
		_handle_sync
 This function uses a non-reentrant model


 *************** function _setEventData *****************
 Defined at:
		line 850 in file "../main.c"
 Parameters:    Size  Location     Type
  v               2   38[BANK0 ] int 
  unit            1   40[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  newval          4   41[BANK0 ] unsigned char 
  ival            2   45[BANK0 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Celsius2Kelvin
		_Celsius2Fahrenheit
		___awtofl
		___fltol
 This function is called by:
		_sendTempEvent
 This function uses a non-reentrant model


 *************** function _Celsius2Fahrenheit *****************
 Defined at:
		line 42 in file "../ntc.c"
 Parameters:    Size  Location     Type
  tc              4   30[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   30[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
		___fldiv
		___flmul
 This function is called by:
		_setEventData
 This function uses a non-reentrant model


 *************** function ___fladd *****************
 Defined at:
		line 89 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fladd.c"
 Parameters:    Size  Location     Type
  f1              4   29[COMRAM] int 
  f2              4   33[COMRAM] int 
 Auto vars:     Size  Location     Type
  exp1            1   43[COMRAM] unsigned char 
  exp2            1   42[COMRAM] unsigned char 
  sign            1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   29[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
		_Celsius2Fahrenheit
		_Celsius2Kelvin
		___asfladd
		_floor
		___flsub
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function _Celsius2Kelvin *****************
 Defined at:
		line 61 in file "../ntc.c"
 Parameters:    Size  Location     Type
  tc              4   44[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   44[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___fladd
 This function is called by:
		_setEventData
 This function uses a non-reentrant model


 *************** function _vscp_handleProtocolEvent *****************
 Defined at:
		line 797 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  bytes           1   44[BANK0 ] unsigned char 
  page_save       2   40[BANK0 ] unsigned short 
  i               1   50[BANK0 ] unsigned char 
  bytes           2   54[BANK0 ] unsigned short 
  page_save       2   38[BANK0 ] unsigned short 
  byte            1   53[BANK0 ] unsigned char 
  cb              1   49[BANK0 ] unsigned char 
  bytes_this_t    1   48[BANK0 ] unsigned char 
  j               1   58[BANK0 ] unsigned char 
  i               1   56[BANK0 ] unsigned char 
  k               1   51[BANK0 ] unsigned char 
  i               1   52[BANK0 ] unsigned char 
  len             1   47[BANK0 ] unsigned char 
  pos             1   46[BANK0 ] unsigned char 
  i               1   57[BANK0 ] unsigned char 
  len             1   45[BANK0 ] unsigned char 
  pos             1   43[BANK0 ] unsigned char 
  offset          1   42[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0      21       0       0       0       0       0
      Temps:          0       7       0       0       0       0       0
      Totals:         0      28       0       0       0       0       0
Total ram usage:       28 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_vscp_init
		_vscp_sendEvent
		_vscp_readAppReg
		_vscp_writeAppReg
		_vscp_getGUID
		_vscp_getMDF_URL
		_vscp_getMatrixInfo
		_vscp_goBootloaderMode
		_vscp_handleHeartbeat
		_vscp_handleSetNickname
		_vscp_handleDropNickname
		_vscp_newNodeOnline
		_vscp_readRegister
		_vscp_readStdReg
		_vscp_writeRegister
		_vscp_writeStdReg
		___lbmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   13[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   14[COMRAM] unsigned char 
  rem             1   16[COMRAM] unsigned char 
  counter         1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_writeRegister *****************
 Defined at:
		line 701 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
  value           1   38[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   39[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_vscp_writeAppReg
		_vscp_writeStdReg
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_writeStdReg *****************
 Defined at:
		line 715 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
  value           1   26[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   32[COMRAM] unsigned char 
  rv              1   31[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_vscp_getGUID
		_vscp_setGUID
		_vscp_getUserID
		_vscp_setUserID
		_vscp_getManufacturerId
		_vscp_setManufacturerId
		_vscp_restoreDefaults
 This function is called by:
		_vscp_writeRegister
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_restoreDefaults *****************
 Defined at:
		line 2849 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_init_app_eeprom
		_init_app_ram
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _init_app_eeprom *****************
 Defined at:
		line 1026 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_main
		_vscp_restoreDefaults
 This function uses a non-reentrant model


 *************** function _vscp_setManufacturerId *****************
 Defined at:
		line 2664 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
  data            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_setUserID *****************
 Defined at:
		line 2642 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
  data            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_setGUID *****************
 Defined at:
		line 2611 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
  data            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_writeAppReg *****************
 Defined at:
		line 1902 in file "../main.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
  val             1   34[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   36[COMRAM] unsigned char 
  pos             1   35[COMRAM] unsigned char 
  rv              1   37[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_writeEEPROM
		_readEEPROM
		_writeCoeffs2Ram
 This function is called by:
		_vscp_writeRegister
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _writeCoeffs2Ram *****************
 Defined at:
		line 973 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  c               3   27[COMRAM] unsigned char [3]
  j               2   32[COMRAM] int 
  i               2   30[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
		___wmul
 This function is called by:
		_vscp_writeAppReg
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c"
 Parameters:    Size  Location     Type
  multiplier      2   13[COMRAM] unsigned int 
  multiplicand    2   15[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   19[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   13[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_doOneSecondWork
		_writeCoeffs2Ram
 This function uses a non-reentrant model


 *************** function _vscp_readRegister *****************
 Defined at:
		line 561 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   43[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_vscp_readAppReg
		_vscp_readStdReg
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_readStdReg *****************
 Defined at:
		line 575 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   42[COMRAM] unsigned char 
  code            4   35[COMRAM] unsigned long 
  idx             1   40[COMRAM] unsigned char 
  code            4   31[COMRAM] unsigned long 
  idx             1   39[COMRAM] unsigned char 
  rv              1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:        12       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:        17       0       0       0       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_getMajorVersion
		_vscp_getMinorVersion
		_vscp_getSubMinorVersion
		_vscp_getGUID
		_vscp_getMDF_URL
		_vscp_getUserID
		_vscp_getManufacturerId
		_vscp_getBootLoaderAlgorithm
		_vscp_getBufferSize
		_vscp_getRegisterPagesUsed
		_vscp_getFamilyCode
		_vscp_getFamilyType
 This function is called by:
		_vscp_readRegister
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_getFamilyType *****************
 Defined at:
		line 2840 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned long 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getFamilyCode *****************
 Defined at:
		line 2830 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned long 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getRegisterPagesUsed *****************
 Defined at:
		line 2729 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getBufferSize *****************
 Defined at:
		line 2682 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getBootLoaderAlgorithm *****************
 Defined at:
		line 2673 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getManufacturerId *****************
 Defined at:
		line 2653 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   25[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_readStdReg
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getUserID *****************
 Defined at:
		line 2633 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   25[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_readStdReg
		_vscp_writeStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getMDF_URL *****************
 Defined at:
		line 2624 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_getGUID *****************
 Defined at:
		line 2601 in file "../main.c"
 Parameters:    Size  Location     Type
  idx             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  idx             1   25[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_readStdReg
		_vscp_writeStdReg
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_getSubMinorVersion *****************
 Defined at:
		line 2590 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getMinorVersion *****************
 Defined at:
		line 2581 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_getMajorVersion *****************
 Defined at:
		line 2572 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_readStdReg
 This function uses a non-reentrant model


 *************** function _vscp_newNodeOnline *****************
 Defined at:
		line 502 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vscp_sendEvent
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_handleDropNickname *****************
 Defined at:
		line 438 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  bytes           1   25[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_vscp_init
		_vscp_writeNicknamePermanent
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_init *****************
 Defined at:
		line 119 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_readNicknamePermanent
 This function is called by:
		_main
		_vscp_handleDropNickname
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_readNicknamePermanent *****************
 Defined at:
		line 2775 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_init
 This function uses a non-reentrant model


 *************** function _readEEPROM *****************
 Defined at:
		line 94 in file "../../vscp_firmware/pic/common/eeprom.c"
 Parameters:    Size  Location     Type
  address         2   21[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
  data            1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_doWork
		_doOneSecondWork
		_sendTempEvent
		_getCalibrationValue
		_writeCoeffs2Ram
		_handle_sync
		_vscp_readAppReg
		_vscp_writeAppReg
		_vscp_getGUID
		_vscp_getUserID
		_vscp_getManufacturerId
		_vscp_getZone
		_vscp_getSubzone
		_vscp_readNicknamePermanent
		_vscp_getSegmentCRC
 This function uses a non-reentrant model


 *************** function _vscp_handleSetNickname *****************
 Defined at:
		line 422 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_writeNicknamePermanent
		_vscp_setSegmentCRC
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_handleHeartbeat *****************
 Defined at:
		line 396 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_writeNicknamePermanent
		_vscp_getSegmentCRC
		_vscp_setSegmentCRC
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_goBootloaderMode *****************
 Defined at:
		line 2756 in file "../main.c"
 Parameters:    Size  Location     Type
  algorithm       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  algorithm       1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
		_ECANSetOperationMode
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_getMatrixInfo *****************
 Defined at:
		line 2691 in file "../main.c"
 Parameters:    Size  Location     Type
  pData           1    wreg     PTR unsigned char 
		 -> vscp_omsg(13), 
 Auto vars:     Size  Location     Type
  pData           1   13[COMRAM] PTR unsigned char 
		 -> vscp_omsg(13), 
  i               1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _vscp_handleProbeState *****************
 Defined at:
		line 202 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_vscp_goActiveState
		_vscp_sendEvent
		_vscp_writeNicknamePermanent
		_vscp_setSegmentCRC
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vscp_goActiveState *****************
 Defined at:
		line 358 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vscp_sendEvent
 This function is called by:
		_main
		_vscp_handleProbeState
 This function uses a non-reentrant model


 *************** function _vscp_sendEvent *****************
 Defined at:
		line 1288 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rv              1   66[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_sendVSCPFrame
 This function is called by:
		_doOneSecondWork
		_sendTempEvent
		_vscp_handleProbeState
		_vscp_goActiveState
		_vscp_sendHeartBeat
		_vscp_newNodeOnline
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _sendVSCPFrame *****************
 Defined at:
		line 2864 in file "../main.c"
 Parameters:    Size  Location     Type
  vscpclass       2    0[BANK0 ] unsigned short 
  vscptype        1    2[BANK0 ] unsigned char 
  nodeid          1    3[BANK0 ] unsigned char 
  priority        1    4[BANK0 ] unsigned char 
  size            1    5[BANK0 ] unsigned char 
  pData           1    6[BANK0 ] PTR unsigned char 
		 -> vscp_omsg(13), 
 Auto vars:     Size  Location     Type
  id              4   27[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       7       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0
      Temps:          0      20       0       0       0       0       0
      Totals:         0      31       0       0       0       0       0
Total ram usage:       31 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_sendCANFrame
 This function is called by:
		_vscp_sendEvent
 This function uses a non-reentrant model


 *************** function _sendCANFrame *****************
 Defined at:
		line 2911 in file "../main.c"
 Parameters:    Size  Location     Type
  id              4   59[COMRAM] unsigned long 
  dlc             1   63[COMRAM] unsigned char 
  pdata           1   64[COMRAM] PTR unsigned char 
		 -> vscp_omsg(13), 
 Auto vars:     Size  Location     Type
  rv              1   65[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ECANSendMessage
 This function is called by:
		_sendVSCPFrame
 This function uses a non-reentrant model


 *************** function _ECANSendMessage *****************
 Defined at:
		line 617 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  id              4   23[COMRAM] unsigned long 
  data            1   27[COMRAM] PTR unsigned char 
		 -> vscp_omsg(13), 
  dataLen         1   28[COMRAM] unsigned char 
  msgFlags        1   29[COMRAM] enum E16315
 Auto vars:     Size  Location     Type
  pb             18   31[COMRAM] PTR unsigned char [9]
		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
		 -> B0CON(1), 
  ptr             2   57[COMRAM] PTR unsigned char 
		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
		 -> B0CON(1), 
  tempPtr         2   53[COMRAM] PTR unsigned char 
		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
		 -> B0CON(1), 
  i               1   56[COMRAM] unsigned char 
  temp            1   55[COMRAM] unsigned char 
  tempBSEL0       1   52[COMRAM] struct .
  j               1   51[COMRAM] unsigned char 
  buffers         1   50[COMRAM] unsigned char 
  mode            1   49[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15660
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         7       0       0       0       0       0       0
      Locals:        28       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        36       0       0       0       0       0       0
Total ram usage:       36 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__CANIDToRegs
 This function is called by:
		_sendCANFrame
 This function uses a non-reentrant model


 *************** function __CANIDToRegs *****************
 Defined at:
		line 1099 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  ptr             2   13[COMRAM] PTR unsigned char 
		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
		 -> B0CON(1), 
  val             4   15[COMRAM] unsigned long 
  type            1   19[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Value           1   22[COMRAM] PTR struct _CAN_MESSAGE_
		 -> _CANIDToRegs@val(4), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         7       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ECANSendMessage
 This function uses a non-reentrant model


 *************** function _vscp_getEvent *****************
 Defined at:
		line 1308 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rv              1   59[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_getVSCPFrame
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _getVSCPFrame *****************
 Defined at:
		line 2890 in file "../main.c"
 Parameters:    Size  Location     Type
  pvscpclass      2   39[COMRAM] PTR unsigned short 
		 -> vscp_imsg(14), 
  pvscptype       2   41[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pNodeId         2   43[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pPriority       2   45[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pSize           2   47[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pData           2   49[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
 Auto vars:     Size  Location     Type
  id              4   55[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:        12       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        20       0       0       0       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_getCANFrame
 This function is called by:
		_vscp_getEvent
 This function uses a non-reentrant model


 *************** function _getCANFrame *****************
 Defined at:
		line 2932 in file "../main.c"
 Parameters:    Size  Location     Type
  pid             1    wreg     PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  pdlc            2   33[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  pdata           2   35[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
 Auto vars:     Size  Location     Type
  pid             1   37[COMRAM] PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  flags           1   38[COMRAM] enum E16418
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ECANReceiveMessage
 This function is called by:
		_getVSCPFrame
 This function uses a non-reentrant model


 *************** function _ECANReceiveMessage *****************
 Defined at:
		line 803 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  id              1    wreg     PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  data            2   20[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  dataLen         2   22[COMRAM] PTR unsigned char 
		 -> vscp_imsg(14), 
  msgFlags        1   24[COMRAM] PTR enum E16333
		 -> getCANFrame@flags(1), 
 Auto vars:     Size  Location     Type
  id              1   27[COMRAM] PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  ptr             2   31[COMRAM] PTR unsigned char 
		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
  savedPtr        2   25[COMRAM] PTR unsigned char 
		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
  temp            1   30[COMRAM] struct .
  mode            1   29[COMRAM] unsigned char 
  i               1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15660
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__ECANPointBuffer
		__RegsToCANID
 This function is called by:
		_getCANFrame
 This function uses a non-reentrant model


 *************** function __RegsToCANID *****************
 Defined at:
		line 1156 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  ptr             2   13[COMRAM] PTR unsigned char 
		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
  val             1   15[COMRAM] PTR unsigned long 
		 -> getVSCPFrame@id(4), 
  type            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Value           1   19[COMRAM] PTR struct _CAN_MESSAGE_
		 -> getVSCPFrame@id(4), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ECANReceiveMessage
 This function uses a non-reentrant model


 *************** function __ECANPointBuffer *****************
 Defined at:
		line 1207 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  b               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  b               1   16[COMRAM] unsigned char 
  pt              2   17[COMRAM] PTR unsigned char 
		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 Return value:  Size  Location     Type
                  2   13[COMRAM] PTR unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ECANReceiveMessage
 This function uses a non-reentrant model


 *************** function _vscp_check_pstorage *****************
 Defined at:
		line 168 in file "../../vscp_firmware/common/vscp_firmware.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vscp_writeNicknamePermanent
		_vscp_getSegmentCRC
		_vscp_setSegmentCRC
		_vscp_setControlByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _vscp_setControlByte *****************
 Defined at:
		line 2811 in file "../main.c"
 Parameters:    Size  Location     Type
  ctrl            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ctrl            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_check_pstorage
 This function uses a non-reentrant model


 *************** function _vscp_setSegmentCRC *****************
 Defined at:
		line 2802 in file "../main.c"
 Parameters:    Size  Location     Type
  crc             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  crc             1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_check_pstorage
		_vscp_handleProbeState
		_vscp_handleHeartbeat
		_vscp_handleSetNickname
 This function uses a non-reentrant model


 *************** function _vscp_getSegmentCRC *****************
 Defined at:
		line 2793 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_check_pstorage
		_vscp_handleHeartbeat
 This function uses a non-reentrant model


 *************** function _vscp_writeNicknamePermanent *****************
 Defined at:
		line 2784 in file "../main.c"
 Parameters:    Size  Location     Type
  nickname        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  nickname        1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_writeEEPROM
 This function is called by:
		_vscp_check_pstorage
		_vscp_handleProbeState
		_vscp_handleHeartbeat
		_vscp_handleSetNickname
		_vscp_handleDropNickname
 This function uses a non-reentrant model


 *************** function _writeEEPROM *****************
 Defined at:
		line 24 in file "../../vscp_firmware/pic/common/eeprom.c"
 Parameters:    Size  Location     Type
  address         2   13[COMRAM] unsigned short 
  data            1   15[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_doOneSecondWork
		_init_app_eeprom
		_vscp_writeAppReg
		_vscp_setGUID
		_vscp_setUserID
		_vscp_setManufacturerId
		_vscp_goBootloaderMode
		_vscp_writeNicknamePermanent
		_vscp_setSegmentCRC
		_vscp_setControlByte
 This function uses a non-reentrant model


 *************** function _init *****************
 Defined at:
		line 892 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_WriteTimer0
		_ConvertADC
		_init_app_ram
		_OpenTimer0
		_OpenADC
		_ECANInitialize
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ECANInitialize *****************
 Defined at:
		line 168 in file "../ECAN.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ECANSetOperationMode
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function _ECANSetOperationMode *****************
 Defined at:
		line 1012 in file "../ECAN.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     enum E16346
 Auto vars:     Size  Location     Type
  mode            1   13[COMRAM] enum E16346
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_vscp_goBootloaderMode
		_ECANInitialize
 This function uses a non-reentrant model


 *************** function _OpenADC *****************
 Defined at:
		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c"
 Parameters:    Size  Location     Type
  config          1    wreg     unsigned char 
  config2         1   13[COMRAM] unsigned char 
  portconfig      1   14[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  config          1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function _OpenTimer0 *****************
 Defined at:
		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
 Parameters:    Size  Location     Type
  config          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  config          1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function _init_app_ram *****************
 Defined at:
		line 991 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
		_vscp_restoreDefaults
 This function uses a non-reentrant model


 *************** function _ConvertADC *****************
 Defined at:
		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function _WriteTimer0 *****************
 Defined at:
		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 Parameters:    Size  Location     Type
  timer0          2   13[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  timer           2   15[COMRAM] struct Timers
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_init
 This function uses a non-reentrant model


 *************** function ___flmul *****************
 Defined at:
		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flmul.c"
 Parameters:    Size  Location     Type
  f1              4    8[BANK0 ] struct Timers
  f2              4   12[BANK0 ] struct Timers
 Auto vars:     Size  Location     Type
  f3_as_produc    4   24[BANK0 ] unsigned long 
  sign            1   29[BANK0 ] unsigned char 
  cntr            1   28[BANK0 ] unsigned char 
  exp             1   23[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    8[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       8       0       0       0       0       0
      Locals:         0      14       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      22       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_doWork
		_Celsius2Fahrenheit
		___asflmul
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___awtofl *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awtofl.c"
 Parameters:    Size  Location     Type
  c               2   23[COMRAM] int 
 Auto vars:     Size  Location     Type
  f1              4    0        int 
  sign            1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   23[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___flpack
 This function is called by:
		_setEventData
		_exp
		_log
 This function uses a non-reentrant model


 *************** function ___flpack *****************
 Defined at:
		line 64 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\double.c"
 Parameters:    Size  Location     Type
  arg             4   13[COMRAM] unsigned long 
  exp             1   17[COMRAM] unsigned char 
  sign            1   18[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		___altofl
		___awtofl
		___fladd
		___fldiv
		___flmul
		___lwtofl
 This function uses a non-reentrant model


 *************** function _vscp_readAppReg *****************
 Defined at:
		line 1286 in file "../main.c"
 Parameters:    Size  Location     Type
  reg             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  reg             1   26[COMRAM] unsigned char 
  pos             1   25[COMRAM] unsigned char 
  rv              1   27[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_readEEPROM
 This function is called by:
		_vscp_readRegister
		_vscp_handleProtocolEvent
 This function uses a non-reentrant model


 *************** function _interrupt_at_low_vector *****************
 Defined at:
		line 134 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          9       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_ConvertADC
		i1_WriteTimer0
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1_WriteTimer0 *****************
 Defined at:
		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 Parameters:    Size  Location     Type
  timer0          2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  WriteTimer0     2    2[COMRAM] struct Timers
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_interrupt_at_low_vector
 This function uses a non-reentrant model


 *************** function i1_ConvertADC *****************
 Defined at:
		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_interrupt_at_low_vector
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\altofl.c
		___altofl      		CODE           	4E64	0000	72

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\altofl.c estimated size: 72

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfladd.c
		___asfladd     		CODE           	4DD0	0000	74

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfladd.c estimated size: 74

../main.c
		_vscp_getBootLo		CODE           	5510	0000	2
		_vscp_getZone  		CODE           	54C6	0000	10
		_init          		CODE           	4FF6	0000	60
		_vscp_setManufa		CODE           	53B2	0000	24
		_vscp_setGUID  		CODE           	5302	0000	34
		_sendTempEvent 		CODE           	4A3A	0000	104
		_getVSCPFrame  		CODE           	4934	0000	132
		_vscp_setContro		CODE           	5462	0000	18
		_vscp_getUserID		CODE           	5426	0000	20
		_setEventData  		CODE           	4582	0000	176
		_doWork        		CODE           	2D60	0000	1068
		_vscp_getSegmen		CODE           	54EE	0000	10
		_getCalibration		CODE           	4B9C	0000	92
		_vscp_restoreDe		CODE           	54F8	0000	8
		_vscp_readAppRe		CODE           	1368	0000	1964
		_vscp_getFamily		CODE           	54DA	0000	10
		_vscp_setUserID		CODE           	53CA	0000	24
		_getCANFrame   		CODE           	5110	0000	52
		_main          		CODE           	3C3A	0000	278
		_handle_sync   		CODE           	49B8	0000	116
		_vscp_getRegist		CODE           	550C	0000	2
		_vscp_setSegmen		CODE           	5474	0000	18
		_doOneSecondWor		CODE           	21B8	0000	1206
		_sendVSCPFrame 		CODE           	4420	0000	178
		_vscp_getMDF_UR		CODE           	53E2	0000	24
		_init_app_eepro		CODE           	2798	0000	1480
		_sendCANFrame  		CODE           	4EAC	0000	72
		_vscp_writeAppR		CODE           	066E	0000	3306
		_vscp_getFamily		CODE           	54D0	0000	10
		_vscp_getBuffer		CODE           	550E	0000	2
		_vscp_getSubzon		CODE           	54BC	0000	10
		_vscp_getMatrix		CODE           	5398	0000	26
		_vscp_goBootloa		CODE           	5324	0000	30
		_writeCoeffs2Ra		CODE           	4778	0000	160
		_vscp_readNickn		CODE           	54E4	0000	10
		_interrupt_at_l		CODE           	0018	0000	674
		_vscp_getMajorV		CODE           	5516	0000	2
		_vscp_getMinorV		CODE           	5514	0000	2
		_vscp_writeNick		CODE           	5486	0000	18
		_init_app_ram  		CODE           	4FB8	0000	62
		_vscp_getManufa		CODE           	5412	0000	20
		_vscp_getSubMin		CODE           	5512	0000	2
		_vscp_getGUID  		CODE           	543A	0000	20

../main.c estimated size: 11536

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awtofl.c
		___awtofl      		CODE           	506C	0000	58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awtofl.c estimated size: 58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c
		_WriteTimer0   		CODE           	5498	0000	18

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c estimated size: 18

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flge.c
		___flge        		CODE           	4CA0	0000	76

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flge.c estimated size: 76

../../vscp_firmware/pic/common/eeprom.c
		_readEEPROM    		CODE           	544E	0000	20
		_writeEEPROM   		CODE           	5272	0000	38

../../vscp_firmware/pic/common/eeprom.c estimated size: 58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\frexp.c
		_ldexp         		CODE           	4632	0000	164
		_frexp         		CODE           	48AE	0000	134

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\frexp.c estimated size: 298

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c
		___wmul        		CODE           	5144	0000	34

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c estimated size: 34

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\exp.c
		_exp           		CODE           	33AE	0000	486

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\exp.c estimated size: 486

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\evalpoly.c
		_eval_poly     		CODE           	436C	0000	160

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\evalpoly.c estimated size: 160

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwtofl.c
		___lwtofl      		CODE           	51A6	0000	42

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwtofl.c estimated size: 42

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c
		_OpenADC       		CODE           	4BF8	0000	92

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c estimated size: 92

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\log.c
		_log           		CODE           	39EE	0000	302

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\log.c estimated size: 302

../ECAN.c
		_ECANReceiveMes		CODE           	319E	0000	514
		__RegsToCANID  		CODE           	3B1C	0000	196
		__ECANPointBuff		CODE           	4B26	0000	118
		_ECANInitialize		CODE           	4818	0000	150
		__CANIDToRegs  		CODE           	3D50	0000	192
		_ECANSetOperati		CODE           	53FA	0000	24
		_ECANSendMessag		CODE           	3732	0000	358

../ECAN.c estimated size: 1552

shared
		PL12           		CODE           	26DC	0000	16
		PL50           		CODE           	2746	0000	18
		PL8            		CODE           	26B2	0000	28
		PL22           		CODE           	3E24	0000	16
		PL60           		CODE           	33A0	0000	14
		PL32           		CODE           	218C	0000	20
		PL70           		CODE           	21A0	0000	14
		PL42           		CODE           	2732	0000	20
		PL80           		CODE           	4360	0000	12
		exp@coeff      		SMALLCONST     	0620	0000	40
		PL14           		CODE           	3E10	0000	20
		PL52           		CODE           	318C	0000	18
		PL24           		CODE           	3E34	0000	18
		PL62           		CODE           	2758	0000	14
		PL34           		CODE           	440C	0000	20
		PL72           		CODE           	2766	0000	14
		_vscp_deviceURL		SMALLCONST     	0600	0000	32
		PL44           		CODE           	3E46	0000	20
		PL82           		CODE           	21AE	0000	10
		i1_ConvertADC  		CODE           	5508	0000	4
		PL16           		CODE           	3BE0	0000	14
		PL54           		CODE           	5166	0000	16
		PL26           		CODE           	2706	0000	24
		PL64           		CODE           	4AA2	0000	14
		PL36           		CODE           	271E	0000	20
		PL74           		CODE           	2774	0000	14
		PL46           		CODE           	39DC	0000	18
		PL84           		CODE           	2782	0000	8
		PL18           		CODE           	26EC	0000	26
		PL56           		CODE           	1358	0000	16
		PL28           		CODE           	3712	0000	20
		PL66           		CODE           	4A2C	0000	14
		PL38           		CODE           	3C02	0000	18
		PL76           		CODE           	3E5A	0000	10
		PL48           		CODE           	3C28	0000	18
		PL86           		CODE           	278A	0000	6
		PL58           		CODE           	4112	0000	16
		PL68           		CODE           	4122	0000	14
		PL78           		CODE           	3726	0000	12
		PL88           		CODE           	2790	0000	8
		__initializatio		CODE           	4F38	0000	56
		i1_WriteTimer0 		CODE           	54AA	0000	18
		log@coeff      		SMALLCONST     	0648	0000	36
		PL2            		CODE           	266E	0000	14
		PL10           		CODE           	26CE	0000	14
		PL4            		CODE           	267C	0000	30
		PL20           		CODE           	2172	0000	26
		PL30           		CODE           	3BEE	0000	20
		PL6            		CODE           	269A	0000	24
		PL40           		CODE           	3C14	0000	20

shared estimated size: 932

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lbmod.c
		___lbmod       		CODE           	5224	0000	40

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lbmod.c estimated size: 40

../ntc.c
		_Celsius2Kelvin		CODE           	50DC	0000	52
		_Celsius2Fahren		CODE           	4AB0	0000	118

../ntc.c estimated size: 170

../../vscp_firmware/common/vscp_firmware.c
		_vscp_getEvent 		CODE           	4EF4	0000	68
		_vscp_handleHea		CODE           	4F7A	0000	62
		_vscp_readRegis		CODE           	537E	0000	26
		_vscp_writeRegi		CODE           	52E0	0000	34
		_vscp_error    		CODE           	5500	0000	4
		_vscp_readStdRe		CODE           	3594	0000	382
		_vscp_goActiveS		CODE           	5342	0000	30
		_vscp_doOneSeco		CODE           	4D38	0000	76
		_vscp_sendEvent		CODE           	51FA	0000	42
		_vscp_check_pst		CODE           	52BC	0000	36
		_vscp_writeStdR		CODE           	3E64	0000	266
		_vscp_handlePro		CODE           	1B14	0000	1630
		_vscp_handleDro		CODE           	50A6	0000	54
		_vscp_handleSet		CODE           	51D0	0000	42
		_vscp_handlePro		CODE           	4130	0000	196
		_vscp_sendHeart		CODE           	524C	0000	38
		_vscp_newNodeOn		CODE           	5176	0000	48
		_vscp_init     		CODE           	4D84	0000	76

../../vscp_firmware/common/vscp_firmware.c estimated size: 3110

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\aldiv.c
		___aldiv       		CODE           	41F4	0000	188

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\aldiv.c estimated size: 188

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fldiv.c
		___fldiv       		CODE           	44D2	0000	176

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fldiv.c estimated size: 176

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flsub.c
		___flsub       		CODE           	5032	0000	58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flsub.c estimated size: 58

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flneg.c
		___flneg       		CODE           	5298	0000	36

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flneg.c estimated size: 36

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c
		_OpenTimer0    		CODE           	5360	0000	30

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c estimated size: 30

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfldiv.c
		___asfldiv     		CODE           	4C54	0000	76

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asfldiv.c estimated size: 76

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflsub.c
		___asflsub     		CODE           	4E1A	0000	74

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflsub.c estimated size: 74

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flmul.c
		___flmul       		CODE           	406A	0000	168

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\flmul.c estimated size: 168

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fltol.c
		___fltol       		CODE           	46D6	0000	162

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fltol.c estimated size: 162

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\double.c
		___flpack      		CODE           	42B0	0000	176

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\double.c estimated size: 176

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c
		_ConvertADC    		CODE           	5504	0000	4

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c estimated size: 4

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflmul.c
		___asflmul     		CODE           	4CEC	0000	76

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\asflmul.c estimated size: 76

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\floor.c
		_floor         		CODE           	3F6E	0000	252

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\floor.c estimated size: 252

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fladd.c
		___fladd       		CODE           	3898	0000	324

C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\fladd.c estimated size: 324

